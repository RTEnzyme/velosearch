<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="23979"><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (3 samples, 0.01%)</title><rect x="0.0083%" y="949" width="0.0125%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.2583%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="0.0375%" y="949" width="0.0250%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="6"/><text x="0.2875%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.07%)</title><rect x="0.0626%" y="949" width="0.0667%" height="15" fill="rgb(221,193,54)" fg:x="15" fg:w="16"/><text x="0.3126%" y="959.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="0.1376%" y="949" width="0.0125%" height="15" fill="rgb(248,212,6)" fg:x="33" fg:w="3"/><text x="0.3876%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="0.1585%" y="949" width="0.0209%" height="15" fill="rgb(208,68,35)" fg:x="38" fg:w="5"/><text x="0.4085%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="0.1793%" y="949" width="0.0209%" height="15" fill="rgb(232,128,0)" fg:x="43" fg:w="5"/><text x="0.4293%" y="959.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="0.2002%" y="949" width="0.0167%" height="15" fill="rgb(207,160,47)" fg:x="48" fg:w="4"/><text x="0.4502%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="0.2252%" y="949" width="0.0125%" height="15" fill="rgb(228,23,34)" fg:x="54" fg:w="3"/><text x="0.4752%" y="959.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.02%)</title><rect x="0.2502%" y="933" width="0.0167%" height="15" fill="rgb(218,30,26)" fg:x="60" fg:w="4"/><text x="0.5002%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.05%)</title><rect x="0.2752%" y="933" width="0.0459%" height="15" fill="rgb(220,122,19)" fg:x="66" fg:w="11"/><text x="0.5252%" y="943.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4 samples, 0.02%)</title><rect x="0.3336%" y="933" width="0.0167%" height="15" fill="rgb(250,228,42)" fg:x="80" fg:w="4"/><text x="0.5836%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="0.3545%" y="933" width="0.0125%" height="15" fill="rgb(240,193,28)" fg:x="85" fg:w="3"/><text x="0.6045%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="0.3670%" y="933" width="0.0334%" height="15" fill="rgb(216,20,37)" fg:x="88" fg:w="8"/><text x="0.6170%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.04%)</title><rect x="0.4087%" y="933" width="0.0417%" height="15" fill="rgb(206,188,39)" fg:x="98" fg:w="10"/><text x="0.6587%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.05%)</title><rect x="0.4504%" y="933" width="0.0500%" height="15" fill="rgb(217,207,13)" fg:x="108" fg:w="12"/><text x="0.7004%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.15%)</title><rect x="0.5004%" y="933" width="0.1460%" height="15" fill="rgb(231,73,38)" fg:x="120" fg:w="35"/><text x="0.7504%" y="943.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.6464%" y="933" width="0.0167%" height="15" fill="rgb(225,20,46)" fg:x="155" fg:w="4"/><text x="0.8964%" y="943.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="0.6714%" y="933" width="0.0292%" height="15" fill="rgb(210,31,41)" fg:x="161" fg:w="7"/><text x="0.9214%" y="943.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (5 samples, 0.02%)</title><rect x="0.7006%" y="933" width="0.0209%" height="15" fill="rgb(221,200,47)" fg:x="168" fg:w="5"/><text x="0.9506%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="0.7298%" y="933" width="0.0250%" height="15" fill="rgb(226,26,5)" fg:x="175" fg:w="6"/><text x="0.9798%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (4 samples, 0.02%)</title><rect x="0.7715%" y="933" width="0.0167%" height="15" fill="rgb(249,33,26)" fg:x="185" fg:w="4"/><text x="1.0215%" y="943.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.01%)</title><rect x="0.8049%" y="933" width="0.0125%" height="15" fill="rgb(235,183,28)" fg:x="193" fg:w="3"/><text x="1.0549%" y="943.50"></text></g><g><title>&lt;datafusion_physical_expr::expressions::column::Column as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (4 samples, 0.02%)</title><rect x="0.8341%" y="933" width="0.0167%" height="15" fill="rgb(221,5,38)" fg:x="200" fg:w="4"/><text x="1.0841%" y="943.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (6 samples, 0.03%)</title><rect x="0.8591%" y="933" width="0.0250%" height="15" fill="rgb(247,18,42)" fg:x="206" fg:w="6"/><text x="1.1091%" y="943.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (6 samples, 0.03%)</title><rect x="0.8841%" y="933" width="0.0250%" height="15" fill="rgb(241,131,45)" fg:x="212" fg:w="6"/><text x="1.1341%" y="943.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (4 samples, 0.02%)</title><rect x="0.9091%" y="933" width="0.0167%" height="15" fill="rgb(249,31,29)" fg:x="218" fg:w="4"/><text x="1.1591%" y="943.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (4 samples, 0.02%)</title><rect x="0.9258%" y="933" width="0.0167%" height="15" fill="rgb(225,111,53)" fg:x="222" fg:w="4"/><text x="1.1758%" y="943.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (4 samples, 0.02%)</title><rect x="0.9508%" y="933" width="0.0167%" height="15" fill="rgb(238,160,17)" fg:x="228" fg:w="4"/><text x="1.2008%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.05%)</title><rect x="0.9759%" y="933" width="0.0542%" height="15" fill="rgb(214,148,48)" fg:x="234" fg:w="13"/><text x="1.2259%" y="943.50"></text></g><g><title>&lt;str as arrow_array::types::bytes::ByteArrayNativeType&gt;::from_bytes_unchecked (29 samples, 0.12%)</title><rect x="1.0301%" y="933" width="0.1209%" height="15" fill="rgb(232,36,49)" fg:x="247" fg:w="29"/><text x="1.2801%" y="943.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilter as tantivy::tokenizer::tokenizer::TokenFilter&gt;::transform (3 samples, 0.01%)</title><rect x="1.1593%" y="933" width="0.0125%" height="15" fill="rgb(209,103,24)" fg:x="278" fg:w="3"/><text x="1.4093%" y="943.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (3 samples, 0.01%)</title><rect x="1.1844%" y="933" width="0.0125%" height="15" fill="rgb(229,88,8)" fg:x="284" fg:w="3"/><text x="1.4344%" y="943.50"></text></g><g><title>[do_query] (3 samples, 0.01%)</title><rect x="1.2052%" y="933" width="0.0125%" height="15" fill="rgb(213,181,19)" fg:x="289" fg:w="3"/><text x="1.4552%" y="943.50"></text></g><g><title>__GI___libc_free (14 samples, 0.06%)</title><rect x="1.2177%" y="933" width="0.0584%" height="15" fill="rgb(254,191,54)" fg:x="292" fg:w="14"/><text x="1.4677%" y="943.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.10%)</title><rect x="1.2761%" y="933" width="0.0959%" height="15" fill="rgb(241,83,37)" fg:x="306" fg:w="23"/><text x="1.5261%" y="943.50"></text></g><g><title>__calloc (7 samples, 0.03%)</title><rect x="1.3720%" y="933" width="0.0292%" height="15" fill="rgb(233,36,39)" fg:x="329" fg:w="7"/><text x="1.6220%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="1.4096%" y="933" width="0.0167%" height="15" fill="rgb(226,3,54)" fg:x="338" fg:w="4"/><text x="1.6596%" y="943.50"></text></g><g><title>__posix_memalign (3 samples, 0.01%)</title><rect x="1.4262%" y="933" width="0.0125%" height="15" fill="rgb(245,192,40)" fg:x="342" fg:w="3"/><text x="1.6762%" y="943.50"></text></g><g><title>__rdl_alloc (19 samples, 0.08%)</title><rect x="1.4388%" y="933" width="0.0792%" height="15" fill="rgb(238,167,29)" fg:x="345" fg:w="19"/><text x="1.6888%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.03%)</title><rect x="1.4888%" y="917" width="0.0292%" height="15" fill="rgb(232,182,51)" fg:x="357" fg:w="7"/><text x="1.7388%" y="927.50"></text></g><g><title>_int_free (50 samples, 0.21%)</title><rect x="1.5305%" y="933" width="0.2085%" height="15" fill="rgb(231,60,39)" fg:x="367" fg:w="50"/><text x="1.7805%" y="943.50"></text></g><g><title>_int_malloc (16 samples, 0.07%)</title><rect x="1.7390%" y="933" width="0.0667%" height="15" fill="rgb(208,69,12)" fg:x="417" fg:w="16"/><text x="1.9890%" y="943.50"></text></g><g><title>_int_memalign (7 samples, 0.03%)</title><rect x="1.8057%" y="933" width="0.0292%" height="15" fill="rgb(235,93,37)" fg:x="433" fg:w="7"/><text x="2.0557%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="1.8433%" y="933" width="0.0167%" height="15" fill="rgb(213,116,39)" fg:x="442" fg:w="4"/><text x="2.0933%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="1.8600%" y="933" width="0.0125%" height="15" fill="rgb(222,207,29)" fg:x="446" fg:w="3"/><text x="2.1100%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="1.8725%" y="933" width="0.0250%" height="15" fill="rgb(206,96,30)" fg:x="449" fg:w="6"/><text x="2.1225%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.07%)</title><rect x="1.9058%" y="933" width="0.0667%" height="15" fill="rgb(218,138,4)" fg:x="457" fg:w="16"/><text x="2.1558%" y="943.50"></text></g><g><title>arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt;::from_value (5 samples, 0.02%)</title><rect x="1.9767%" y="933" width="0.0209%" height="15" fill="rgb(250,191,14)" fg:x="474" fg:w="5"/><text x="2.2267%" y="943.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (4 samples, 0.02%)</title><rect x="2.0059%" y="933" width="0.0167%" height="15" fill="rgb(239,60,40)" fg:x="481" fg:w="4"/><text x="2.2559%" y="943.50"></text></g><g><title>arrow_schema::schema::Schema::new (3 samples, 0.01%)</title><rect x="2.0309%" y="933" width="0.0125%" height="15" fill="rgb(206,27,48)" fg:x="487" fg:w="3"/><text x="2.2809%" y="943.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (10 samples, 0.04%)</title><rect x="2.0435%" y="933" width="0.0417%" height="15" fill="rgb(225,35,8)" fg:x="490" fg:w="10"/><text x="2.2935%" y="943.50"></text></g><g><title>art_tree::keys::ByteString::new (3 samples, 0.01%)</title><rect x="2.0852%" y="933" width="0.0125%" height="15" fill="rgb(250,213,24)" fg:x="500" fg:w="3"/><text x="2.3352%" y="943.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_add_epi64 (6 samples, 0.03%)</title><rect x="2.1060%" y="933" width="0.0250%" height="15" fill="rgb(247,123,22)" fg:x="505" fg:w="6"/><text x="2.3560%" y="943.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (14 samples, 0.06%)</title><rect x="2.1310%" y="933" width="0.0584%" height="15" fill="rgb(231,138,38)" fg:x="511" fg:w="14"/><text x="2.3810%" y="943.50"></text></g><g><title>core::core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64 (7 samples, 0.03%)</title><rect x="2.2061%" y="933" width="0.0292%" height="15" fill="rgb(231,145,46)" fg:x="529" fg:w="7"/><text x="2.4561%" y="943.50"></text></g><g><title>core::core_arch::x86_64::bmi2::_pext_u64 (4 samples, 0.02%)</title><rect x="2.2395%" y="933" width="0.0167%" height="15" fill="rgb(251,118,11)" fg:x="537" fg:w="4"/><text x="2.4895%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="2.2561%" y="933" width="0.0125%" height="15" fill="rgb(217,147,25)" fg:x="541" fg:w="3"/><text x="2.5061%" y="943.50"></text></g><g><title>core::fmt::write (3 samples, 0.01%)</title><rect x="2.2937%" y="933" width="0.0125%" height="15" fill="rgb(247,81,37)" fg:x="550" fg:w="3"/><text x="2.5437%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="2.3062%" y="933" width="0.0209%" height="15" fill="rgb(209,12,38)" fg:x="553" fg:w="5"/><text x="2.5562%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.02%)</title><rect x="2.3270%" y="933" width="0.0209%" height="15" fill="rgb(227,1,9)" fg:x="558" fg:w="5"/><text x="2.5770%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (3 samples, 0.01%)</title><rect x="2.3479%" y="933" width="0.0125%" height="15" fill="rgb(248,47,43)" fg:x="563" fg:w="3"/><text x="2.5979%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (3 samples, 0.01%)</title><rect x="2.3729%" y="933" width="0.0125%" height="15" fill="rgb(221,10,30)" fg:x="569" fg:w="3"/><text x="2.6229%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (13 samples, 0.05%)</title><rect x="2.3854%" y="933" width="0.0542%" height="15" fill="rgb(210,229,1)" fg:x="572" fg:w="13"/><text x="2.6354%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (4 samples, 0.02%)</title><rect x="2.4521%" y="933" width="0.0167%" height="15" fill="rgb(222,148,37)" fg:x="588" fg:w="4"/><text x="2.7021%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::signature::Signature&gt; (4 samples, 0.02%)</title><rect x="2.4938%" y="933" width="0.0167%" height="15" fill="rgb(234,67,33)" fg:x="598" fg:w="4"/><text x="2.7438%" y="943.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (3 samples, 0.01%)</title><rect x="2.5230%" y="933" width="0.0125%" height="15" fill="rgb(247,98,35)" fg:x="605" fg:w="3"/><text x="2.7730%" y="943.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::new (4 samples, 0.02%)</title><rect x="2.5689%" y="933" width="0.0167%" height="15" fill="rgb(247,138,52)" fg:x="616" fg:w="4"/><text x="2.8189%" y="943.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (6 samples, 0.03%)</title><rect x="2.5856%" y="933" width="0.0250%" height="15" fill="rgb(213,79,30)" fg:x="620" fg:w="6"/><text x="2.8356%" y="943.50"></text></g><g><title>datafusion::physical_plan::metrics::baseline::BaselineMetrics::new (5 samples, 0.02%)</title><rect x="2.6106%" y="933" width="0.0209%" height="15" fill="rgb(246,177,23)" fg:x="626" fg:w="5"/><text x="2.8606%" y="943.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (10 samples, 0.04%)</title><rect x="2.6482%" y="933" width="0.0417%" height="15" fill="rgb(230,62,27)" fg:x="635" fg:w="10"/><text x="2.8982%" y="943.50"></text></g><g><title>datafusion_common::column::Column::flat_name (4 samples, 0.02%)</title><rect x="2.6940%" y="933" width="0.0167%" height="15" fill="rgb(216,154,8)" fg:x="646" fg:w="4"/><text x="2.9440%" y="943.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (3 samples, 0.01%)</title><rect x="2.7482%" y="933" width="0.0125%" height="15" fill="rgb(244,35,45)" fg:x="659" fg:w="3"/><text x="2.9982%" y="943.50"></text></g><g><title>datafusion_physical_expr::expressions::column::Column::bounds_check (4 samples, 0.02%)</title><rect x="2.7691%" y="933" width="0.0167%" height="15" fill="rgb(251,115,12)" fg:x="664" fg:w="4"/><text x="3.0191%" y="943.50"></text></g><g><title>datafusion_physical_expr::expressions::column::Column::new (5 samples, 0.02%)</title><rect x="2.7858%" y="933" width="0.0209%" height="15" fill="rgb(240,54,50)" fg:x="668" fg:w="5"/><text x="3.0358%" y="943.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::boolean_with_provider (3 samples, 0.01%)</title><rect x="2.8108%" y="933" width="0.0125%" height="15" fill="rgb(233,84,52)" fg:x="674" fg:w="3"/><text x="3.0608%" y="943.50"></text></g><g><title>fastfull_search::datasources::posting_table::PostingExec::try_new (3 samples, 0.01%)</title><rect x="2.8233%" y="933" width="0.0125%" height="15" fill="rgb(207,117,47)" fg:x="677" fg:w="3"/><text x="3.0733%" y="943.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (4 samples, 0.02%)</title><rect x="2.8483%" y="933" width="0.0167%" height="15" fill="rgb(249,43,39)" fg:x="683" fg:w="4"/><text x="3.0983%" y="943.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (4 samples, 0.02%)</title><rect x="2.8650%" y="933" width="0.0167%" height="15" fill="rgb(209,38,44)" fg:x="687" fg:w="4"/><text x="3.1150%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="2.8942%" y="933" width="0.0125%" height="15" fill="rgb(236,212,23)" fg:x="694" fg:w="3"/><text x="3.1442%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="2.9109%" y="933" width="0.0167%" height="15" fill="rgb(242,79,21)" fg:x="698" fg:w="4"/><text x="3.1609%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.02%)</title><rect x="2.9484%" y="933" width="0.0167%" height="15" fill="rgb(211,96,35)" fg:x="707" fg:w="4"/><text x="3.1984%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="2.9651%" y="933" width="0.0125%" height="15" fill="rgb(253,215,40)" fg:x="711" fg:w="3"/><text x="3.2151%" y="943.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TextAnalyzer::token_stream (9 samples, 0.04%)</title><rect x="2.9859%" y="933" width="0.0375%" height="15" fill="rgb(211,81,21)" fg:x="716" fg:w="9"/><text x="3.2359%" y="943.50"></text></g><g><title>[[heap]] (673 samples, 2.81%)</title><rect x="0.2502%" y="949" width="2.8066%" height="15" fill="rgb(208,190,38)" fg:x="60" fg:w="673"/><text x="0.5002%" y="959.50">[[..</text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.03%)</title><rect x="3.0235%" y="933" width="0.0334%" height="15" fill="rgb(235,213,38)" fg:x="725" fg:w="8"/><text x="3.2735%" y="943.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.13%)</title><rect x="3.0568%" y="949" width="0.1335%" height="15" fill="rgb(237,122,38)" fg:x="733" fg:w="32"/><text x="3.3068%" y="959.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (10 samples, 0.04%)</title><rect x="3.1903%" y="933" width="0.0417%" height="15" fill="rgb(244,218,35)" fg:x="765" fg:w="10"/><text x="3.4403%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="3.3112%" y="837" width="0.0375%" height="15" fill="rgb(240,68,47)" fg:x="794" fg:w="9"/><text x="3.5612%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="3.3112%" y="821" width="0.0375%" height="15" fill="rgb(210,16,53)" fg:x="794" fg:w="9"/><text x="3.5612%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.17%)</title><rect x="3.2320%" y="933" width="0.1668%" height="15" fill="rgb(235,124,12)" fg:x="775" fg:w="40"/><text x="3.4820%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.09%)</title><rect x="3.3112%" y="917" width="0.0876%" height="15" fill="rgb(224,169,11)" fg:x="794" fg:w="21"/><text x="3.5612%" y="927.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.09%)</title><rect x="3.3112%" y="901" width="0.0876%" height="15" fill="rgb(250,166,2)" fg:x="794" fg:w="21"/><text x="3.5612%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.09%)</title><rect x="3.3112%" y="885" width="0.0876%" height="15" fill="rgb(242,216,29)" fg:x="794" fg:w="21"/><text x="3.5612%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.09%)</title><rect x="3.3112%" y="869" width="0.0876%" height="15" fill="rgb(230,116,27)" fg:x="794" fg:w="21"/><text x="3.5612%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.09%)</title><rect x="3.3112%" y="853" width="0.0876%" height="15" fill="rgb(228,99,48)" fg:x="794" fg:w="21"/><text x="3.5612%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.05%)</title><rect x="3.3488%" y="837" width="0.0500%" height="15" fill="rgb(253,11,6)" fg:x="803" fg:w="12"/><text x="3.5988%" y="847.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (4 samples, 0.02%)</title><rect x="3.4030%" y="933" width="0.0167%" height="15" fill="rgb(247,143,39)" fg:x="816" fg:w="4"/><text x="3.6530%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.05%)</title><rect x="3.4280%" y="933" width="0.0542%" height="15" fill="rgb(236,97,10)" fg:x="822" fg:w="13"/><text x="3.6780%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="3.4614%" y="917" width="0.0209%" height="15" fill="rgb(233,208,19)" fg:x="830" fg:w="5"/><text x="3.7114%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="3.4614%" y="901" width="0.0209%" height="15" fill="rgb(216,164,2)" fg:x="830" fg:w="5"/><text x="3.7114%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="3.4614%" y="885" width="0.0209%" height="15" fill="rgb(220,129,5)" fg:x="830" fg:w="5"/><text x="3.7114%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="3.4614%" y="869" width="0.0209%" height="15" fill="rgb(242,17,10)" fg:x="830" fg:w="5"/><text x="3.7114%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.01%)</title><rect x="3.4697%" y="853" width="0.0125%" height="15" fill="rgb(242,107,0)" fg:x="832" fg:w="3"/><text x="3.7197%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="3.4697%" y="837" width="0.0125%" height="15" fill="rgb(251,28,31)" fg:x="832" fg:w="3"/><text x="3.7197%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="3.4822%" y="933" width="0.0125%" height="15" fill="rgb(233,223,10)" fg:x="835" fg:w="3"/><text x="3.7322%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="3.4947%" y="933" width="0.0334%" height="15" fill="rgb(215,21,27)" fg:x="838" fg:w="8"/><text x="3.7447%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="3.5281%" y="933" width="0.0250%" height="15" fill="rgb(232,23,21)" fg:x="846" fg:w="6"/><text x="3.7781%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.10%)</title><rect x="3.5531%" y="933" width="0.1043%" height="15" fill="rgb(244,5,23)" fg:x="852" fg:w="25"/><text x="3.8031%" y="943.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (5 samples, 0.02%)</title><rect x="3.6740%" y="933" width="0.0209%" height="15" fill="rgb(226,81,46)" fg:x="881" fg:w="5"/><text x="3.9240%" y="943.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="3.6949%" y="933" width="0.0250%" height="15" fill="rgb(247,70,30)" fg:x="886" fg:w="6"/><text x="3.9449%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.05%)</title><rect x="3.7408%" y="933" width="0.0542%" height="15" fill="rgb(212,68,19)" fg:x="897" fg:w="13"/><text x="3.9908%" y="943.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (3 samples, 0.01%)</title><rect x="3.7950%" y="933" width="0.0125%" height="15" fill="rgb(240,187,13)" fg:x="910" fg:w="3"/><text x="4.0450%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::children (7 samples, 0.03%)</title><rect x="3.8075%" y="933" width="0.0292%" height="15" fill="rgb(223,113,26)" fg:x="913" fg:w="7"/><text x="4.0575%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (3 samples, 0.01%)</title><rect x="3.8367%" y="933" width="0.0125%" height="15" fill="rgb(206,192,2)" fg:x="920" fg:w="3"/><text x="4.0867%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.01%)</title><rect x="3.8492%" y="933" width="0.0125%" height="15" fill="rgb(241,108,4)" fg:x="923" fg:w="3"/><text x="4.0992%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (4 samples, 0.02%)</title><rect x="3.8617%" y="933" width="0.0167%" height="15" fill="rgb(247,173,49)" fg:x="926" fg:w="4"/><text x="4.1117%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="3.8784%" y="933" width="0.0167%" height="15" fill="rgb(224,114,35)" fg:x="930" fg:w="4"/><text x="4.1284%" y="943.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::state_fields (7 samples, 0.03%)</title><rect x="3.9034%" y="933" width="0.0292%" height="15" fill="rgb(245,159,27)" fg:x="936" fg:w="7"/><text x="4.1534%" y="943.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="3.9326%" y="933" width="0.0334%" height="15" fill="rgb(245,172,44)" fg:x="943" fg:w="8"/><text x="4.1826%" y="943.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (4 samples, 0.02%)</title><rect x="3.9660%" y="933" width="0.0167%" height="15" fill="rgb(236,23,11)" fg:x="951" fg:w="4"/><text x="4.2160%" y="943.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (4 samples, 0.02%)</title><rect x="3.9827%" y="933" width="0.0167%" height="15" fill="rgb(205,117,38)" fg:x="955" fg:w="4"/><text x="4.2327%" y="943.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (4 samples, 0.02%)</title><rect x="4.0077%" y="933" width="0.0167%" height="15" fill="rgb(237,72,25)" fg:x="961" fg:w="4"/><text x="4.2577%" y="943.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (7 samples, 0.03%)</title><rect x="4.0535%" y="933" width="0.0292%" height="15" fill="rgb(244,70,9)" fg:x="972" fg:w="7"/><text x="4.3035%" y="943.50"></text></g><g><title>&lt;fastfull_search::physical_expr::count_udf::CountValid as datafusion_expr::accumulator::Accumulator&gt;::state (5 samples, 0.02%)</title><rect x="4.0827%" y="933" width="0.0209%" height="15" fill="rgb(217,125,39)" fg:x="979" fg:w="5"/><text x="4.3327%" y="943.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.05%)</title><rect x="4.1119%" y="933" width="0.0500%" height="15" fill="rgb(235,36,10)" fg:x="986" fg:w="12"/><text x="4.3619%" y="943.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="4.1787%" y="933" width="0.0209%" height="15" fill="rgb(251,123,47)" fg:x="1002" fg:w="5"/><text x="4.4287%" y="943.50"></text></g><g><title>__GI___libc_free (10 samples, 0.04%)</title><rect x="4.2120%" y="933" width="0.0417%" height="15" fill="rgb(221,13,13)" fg:x="1010" fg:w="10"/><text x="4.4620%" y="943.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.06%)</title><rect x="4.2537%" y="933" width="0.0584%" height="15" fill="rgb(238,131,9)" fg:x="1020" fg:w="14"/><text x="4.5037%" y="943.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.05%)</title><rect x="4.3163%" y="933" width="0.0500%" height="15" fill="rgb(211,50,8)" fg:x="1035" fg:w="12"/><text x="4.5663%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="4.3747%" y="933" width="0.0292%" height="15" fill="rgb(245,182,24)" fg:x="1049" fg:w="7"/><text x="4.6247%" y="943.50"></text></g><g><title>__rdl_alloc (25 samples, 0.10%)</title><rect x="4.4080%" y="933" width="0.1043%" height="15" fill="rgb(242,14,37)" fg:x="1057" fg:w="25"/><text x="4.6580%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.04%)</title><rect x="4.4747%" y="917" width="0.0375%" height="15" fill="rgb(246,228,12)" fg:x="1073" fg:w="9"/><text x="4.7247%" y="927.50"></text></g><g><title>_int_free (22 samples, 0.09%)</title><rect x="4.5123%" y="933" width="0.0917%" height="15" fill="rgb(213,55,15)" fg:x="1082" fg:w="22"/><text x="4.7623%" y="943.50"></text></g><g><title>_int_malloc (7 samples, 0.03%)</title><rect x="4.6040%" y="933" width="0.0292%" height="15" fill="rgb(209,9,3)" fg:x="1104" fg:w="7"/><text x="4.8540%" y="943.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (8 samples, 0.03%)</title><rect x="4.6416%" y="933" width="0.0334%" height="15" fill="rgb(230,59,30)" fg:x="1113" fg:w="8"/><text x="4.8916%" y="943.50"></text></g><g><title>alloc::fmt::format::format_inner (8 samples, 0.03%)</title><rect x="4.6874%" y="933" width="0.0334%" height="15" fill="rgb(209,121,21)" fg:x="1124" fg:w="8"/><text x="4.9374%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.08%)</title><rect x="4.7208%" y="933" width="0.0751%" height="15" fill="rgb(220,109,13)" fg:x="1132" fg:w="18"/><text x="4.9708%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="4.7792%" y="917" width="0.0167%" height="15" fill="rgb(232,18,1)" fg:x="1146" fg:w="4"/><text x="5.0292%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.02%)</title><rect x="4.7792%" y="901" width="0.0167%" height="15" fill="rgb(215,41,42)" fg:x="1146" fg:w="4"/><text x="5.0292%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.02%)</title><rect x="4.7792%" y="885" width="0.0167%" height="15" fill="rgb(224,123,36)" fg:x="1146" fg:w="4"/><text x="5.0292%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.08%)</title><rect x="4.7959%" y="933" width="0.0834%" height="15" fill="rgb(240,125,3)" fg:x="1150" fg:w="20"/><text x="5.0459%" y="943.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.02%)</title><rect x="4.8834%" y="933" width="0.0209%" height="15" fill="rgb(205,98,50)" fg:x="1171" fg:w="5"/><text x="5.1334%" y="943.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (7 samples, 0.03%)</title><rect x="4.9293%" y="933" width="0.0292%" height="15" fill="rgb(205,185,37)" fg:x="1182" fg:w="7"/><text x="5.1793%" y="943.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (4 samples, 0.02%)</title><rect x="4.9668%" y="933" width="0.0167%" height="15" fill="rgb(238,207,15)" fg:x="1191" fg:w="4"/><text x="5.2168%" y="943.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (5 samples, 0.02%)</title><rect x="5.0002%" y="933" width="0.0209%" height="15" fill="rgb(213,199,42)" fg:x="1199" fg:w="5"/><text x="5.2502%" y="943.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (4 samples, 0.02%)</title><rect x="5.0211%" y="933" width="0.0167%" height="15" fill="rgb(235,201,11)" fg:x="1204" fg:w="4"/><text x="5.2711%" y="943.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.01%)</title><rect x="5.0419%" y="933" width="0.0125%" height="15" fill="rgb(207,46,11)" fg:x="1209" fg:w="3"/><text x="5.2919%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="5.0544%" y="933" width="0.0209%" height="15" fill="rgb(241,35,35)" fg:x="1212" fg:w="5"/><text x="5.3044%" y="943.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (3 samples, 0.01%)</title><rect x="5.0878%" y="933" width="0.0125%" height="15" fill="rgb(243,32,47)" fg:x="1220" fg:w="3"/><text x="5.3378%" y="943.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.01%)</title><rect x="5.1003%" y="933" width="0.0125%" height="15" fill="rgb(247,202,23)" fg:x="1223" fg:w="3"/><text x="5.3503%" y="943.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (10 samples, 0.04%)</title><rect x="5.1128%" y="933" width="0.0417%" height="15" fill="rgb(219,102,11)" fg:x="1226" fg:w="10"/><text x="5.3628%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.01%)</title><rect x="5.1420%" y="917" width="0.0125%" height="15" fill="rgb(243,110,44)" fg:x="1233" fg:w="3"/><text x="5.3920%" y="927.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (3 samples, 0.01%)</title><rect x="5.1420%" y="901" width="0.0125%" height="15" fill="rgb(222,74,54)" fg:x="1233" fg:w="3"/><text x="5.3920%" y="911.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.01%)</title><rect x="5.1420%" y="885" width="0.0125%" height="15" fill="rgb(216,99,12)" fg:x="1233" fg:w="3"/><text x="5.3920%" y="895.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (6 samples, 0.03%)</title><rect x="5.1545%" y="933" width="0.0250%" height="15" fill="rgb(226,22,26)" fg:x="1236" fg:w="6"/><text x="5.4045%" y="943.50"></text></g><g><title>core::fmt::write (19 samples, 0.08%)</title><rect x="5.1795%" y="933" width="0.0792%" height="15" fill="rgb(217,163,10)" fg:x="1242" fg:w="19"/><text x="5.4295%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.05%)</title><rect x="5.2713%" y="933" width="0.0459%" height="15" fill="rgb(213,25,53)" fg:x="1264" fg:w="11"/><text x="5.5213%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}}&gt; (8 samples, 0.03%)</title><rect x="5.3172%" y="933" width="0.0334%" height="15" fill="rgb(252,105,26)" fg:x="1275" fg:w="8"/><text x="5.5672%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="5.3505%" y="933" width="0.0125%" height="15" fill="rgb(220,39,43)" fg:x="1283" fg:w="3"/><text x="5.6005%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (10 samples, 0.04%)</title><rect x="5.3672%" y="933" width="0.0417%" height="15" fill="rgb(229,68,48)" fg:x="1287" fg:w="10"/><text x="5.6172%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::AggregateExec&gt; (4 samples, 0.02%)</title><rect x="5.4172%" y="933" width="0.0167%" height="15" fill="rgb(252,8,32)" fg:x="1299" fg:w="4"/><text x="5.6672%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::collect::{{closure}}&gt; (4 samples, 0.02%)</title><rect x="5.4423%" y="933" width="0.0167%" height="15" fill="rgb(223,20,43)" fg:x="1305" fg:w="4"/><text x="5.6923%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (5 samples, 0.02%)</title><rect x="5.4673%" y="933" width="0.0209%" height="15" fill="rgb(229,81,49)" fg:x="1311" fg:w="5"/><text x="5.7173%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream&gt; (4 samples, 0.02%)</title><rect x="5.5006%" y="933" width="0.0167%" height="15" fill="rgb(236,28,36)" fg:x="1319" fg:w="4"/><text x="5.7506%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (3 samples, 0.01%)</title><rect x="5.5173%" y="933" width="0.0125%" height="15" fill="rgb(249,185,26)" fg:x="1323" fg:w="3"/><text x="5.7673%" y="943.50"></text></g><g><title>core::str::converts::from_utf8 (4 samples, 0.02%)</title><rect x="5.5465%" y="933" width="0.0167%" height="15" fill="rgb(249,174,33)" fg:x="1330" fg:w="4"/><text x="5.7965%" y="943.50"></text></g><g><title>core::str::pattern::StrSearcher::new (4 samples, 0.02%)</title><rect x="5.5632%" y="933" width="0.0167%" height="15" fill="rgb(233,201,37)" fg:x="1334" fg:w="4"/><text x="5.8132%" y="943.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (6 samples, 0.03%)</title><rect x="5.5882%" y="933" width="0.0250%" height="15" fill="rgb(221,78,26)" fg:x="1340" fg:w="6"/><text x="5.8382%" y="943.50"></text></g><g><title>datafusion_common::cast::as_int64_array (3 samples, 0.01%)</title><rect x="5.6258%" y="933" width="0.0125%" height="15" fill="rgb(250,127,30)" fg:x="1349" fg:w="3"/><text x="5.8758%" y="943.50"></text></g><g><title>datafusion_expr::expr::Expr::boolean_and (4 samples, 0.02%)</title><rect x="5.6591%" y="933" width="0.0167%" height="15" fill="rgb(230,49,44)" fg:x="1357" fg:w="4"/><text x="5.9091%" y="943.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (4 samples, 0.02%)</title><rect x="5.6841%" y="933" width="0.0167%" height="15" fill="rgb(229,67,23)" fg:x="1363" fg:w="4"/><text x="5.9341%" y="943.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (6 samples, 0.03%)</title><rect x="5.7050%" y="933" width="0.0250%" height="15" fill="rgb(249,83,47)" fg:x="1368" fg:w="6"/><text x="5.9550%" y="943.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::expressions (5 samples, 0.02%)</title><rect x="5.7300%" y="933" width="0.0209%" height="15" fill="rgb(215,43,3)" fg:x="1374" fg:w="5"/><text x="5.9800%" y="943.50"></text></g><g><title>datafusion_optimizer::optimizer::log_plan (8 samples, 0.03%)</title><rect x="5.7592%" y="933" width="0.0334%" height="15" fill="rgb(238,154,13)" fg:x="1381" fg:w="8"/><text x="6.0092%" y="943.50"></text></g><g><title>do_query::main_inner::{{closure}} (17 samples, 0.07%)</title><rect x="5.8009%" y="933" width="0.0709%" height="15" fill="rgb(219,56,2)" fg:x="1391" fg:w="17"/><text x="6.0509%" y="943.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (3 samples, 0.01%)</title><rect x="5.8801%" y="933" width="0.0125%" height="15" fill="rgb(233,0,4)" fg:x="1410" fg:w="3"/><text x="6.1301%" y="943.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (9 samples, 0.04%)</title><rect x="5.9177%" y="933" width="0.0375%" height="15" fill="rgb(235,30,7)" fg:x="1419" fg:w="9"/><text x="6.1677%" y="943.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::count_agg (4 samples, 0.02%)</title><rect x="5.9677%" y="933" width="0.0167%" height="15" fill="rgb(250,79,13)" fg:x="1431" fg:w="4"/><text x="6.2177%" y="943.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::count_agg::{{closure}} (4 samples, 0.02%)</title><rect x="5.9844%" y="933" width="0.0167%" height="15" fill="rgb(211,146,34)" fg:x="1435" fg:w="4"/><text x="6.2344%" y="943.50"></text></g><g><title>futures_executor::enter::enter (6 samples, 0.03%)</title><rect x="6.0094%" y="933" width="0.0250%" height="15" fill="rgb(228,22,38)" fg:x="1441" fg:w="6"/><text x="6.2594%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (74 samples, 0.31%)</title><rect x="6.0386%" y="933" width="0.3086%" height="15" fill="rgb(235,168,5)" fg:x="1448" fg:w="74"/><text x="6.2886%" y="943.50"></text></g><g><title>std::io::stdio::_print (5 samples, 0.02%)</title><rect x="6.3639%" y="933" width="0.0209%" height="15" fill="rgb(221,155,16)" fg:x="1526" fg:w="5"/><text x="6.6139%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="6.3848%" y="933" width="0.0125%" height="15" fill="rgb(215,215,53)" fg:x="1531" fg:w="3"/><text x="6.6348%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="6.3973%" y="933" width="0.0209%" height="15" fill="rgb(223,4,10)" fg:x="1534" fg:w="5"/><text x="6.6473%" y="943.50"></text></g><g><title>[[stack]] (778 samples, 3.24%)</title><rect x="3.1903%" y="949" width="3.2445%" height="15" fill="rgb(234,103,6)" fg:x="765" fg:w="778"/><text x="3.4403%" y="959.50">[[s..</text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (3 samples, 0.01%)</title><rect x="6.4223%" y="933" width="0.0125%" height="15" fill="rgb(227,97,0)" fg:x="1540" fg:w="3"/><text x="6.6723%" y="943.50"></text></g><g><title>[[vdso]] (94 samples, 0.39%)</title><rect x="6.4348%" y="949" width="0.3920%" height="15" fill="rgb(234,150,53)" fg:x="1543" fg:w="94"/><text x="6.6848%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="6.8393%" y="933" width="0.0209%" height="15" fill="rgb(228,201,54)" fg:x="1640" fg:w="5"/><text x="7.0893%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="6.8727%" y="933" width="0.0167%" height="15" fill="rgb(222,22,37)" fg:x="1648" fg:w="4"/><text x="7.1227%" y="943.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.03%)</title><rect x="6.8935%" y="933" width="0.0292%" height="15" fill="rgb(237,53,32)" fg:x="1653" fg:w="7"/><text x="7.1435%" y="943.50"></text></g><g><title>BLAKE3_IV_3 (3 samples, 0.01%)</title><rect x="6.9352%" y="933" width="0.0125%" height="15" fill="rgb(233,25,53)" fg:x="1663" fg:w="3"/><text x="7.1852%" y="943.50"></text></g><g><title>[do_query] (7 samples, 0.03%)</title><rect x="6.9477%" y="933" width="0.0292%" height="15" fill="rgb(210,40,34)" fg:x="1666" fg:w="7"/><text x="7.1977%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="6.9811%" y="933" width="0.0334%" height="15" fill="rgb(241,220,44)" fg:x="1674" fg:w="8"/><text x="7.2311%" y="943.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="7.0145%" y="933" width="0.0125%" height="15" fill="rgb(235,28,35)" fg:x="1682" fg:w="3"/><text x="7.2645%" y="943.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="7.0270%" y="933" width="0.0459%" height="15" fill="rgb(210,56,17)" fg:x="1685" fg:w="11"/><text x="7.2770%" y="943.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="7.0729%" y="933" width="0.0125%" height="15" fill="rgb(224,130,29)" fg:x="1696" fg:w="3"/><text x="7.3229%" y="943.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.02%)</title><rect x="7.0854%" y="933" width="0.0167%" height="15" fill="rgb(235,212,8)" fg:x="1699" fg:w="4"/><text x="7.3354%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="7.1187%" y="933" width="0.0125%" height="15" fill="rgb(223,33,50)" fg:x="1707" fg:w="3"/><text x="7.3687%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (3 samples, 0.01%)</title><rect x="7.1312%" y="933" width="0.0125%" height="15" fill="rgb(219,149,13)" fg:x="1710" fg:w="3"/><text x="7.3812%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="7.1479%" y="933" width="0.0125%" height="15" fill="rgb(250,156,29)" fg:x="1714" fg:w="3"/><text x="7.3979%" y="943.50"></text></g><g><title>arrow_schema::field::Field::new (3 samples, 0.01%)</title><rect x="7.1646%" y="933" width="0.0125%" height="15" fill="rgb(216,193,19)" fg:x="1718" fg:w="3"/><text x="7.4146%" y="943.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.03%)</title><rect x="7.2021%" y="933" width="0.0250%" height="15" fill="rgb(216,135,14)" fg:x="1727" fg:w="6"/><text x="7.4521%" y="943.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (3 samples, 0.01%)</title><rect x="7.2313%" y="933" width="0.0125%" height="15" fill="rgb(241,47,5)" fg:x="1734" fg:w="3"/><text x="7.4813%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.03%)</title><rect x="7.2480%" y="933" width="0.0250%" height="15" fill="rgb(233,42,35)" fg:x="1738" fg:w="6"/><text x="7.4980%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (3 samples, 0.01%)</title><rect x="7.2730%" y="933" width="0.0125%" height="15" fill="rgb(231,13,6)" fg:x="1744" fg:w="3"/><text x="7.5230%" y="943.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (3 samples, 0.01%)</title><rect x="7.2939%" y="933" width="0.0125%" height="15" fill="rgb(207,181,40)" fg:x="1749" fg:w="3"/><text x="7.5439%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="7.3481%" y="933" width="0.0125%" height="15" fill="rgb(254,173,49)" fg:x="1762" fg:w="3"/><text x="7.5981%" y="943.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (3 samples, 0.01%)</title><rect x="7.3606%" y="933" width="0.0125%" height="15" fill="rgb(221,1,38)" fg:x="1765" fg:w="3"/><text x="7.6106%" y="943.50"></text></g><g><title>[do_query] (132 samples, 0.55%)</title><rect x="6.8310%" y="949" width="0.5505%" height="15" fill="rgb(206,124,46)" fg:x="1638" fg:w="132"/><text x="7.0810%" y="959.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="7.3940%" y="933" width="0.0917%" height="15" fill="rgb(249,21,11)" fg:x="1773" fg:w="22"/><text x="7.6440%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.05%)</title><rect x="7.4857%" y="933" width="0.0542%" height="15" fill="rgb(222,201,40)" fg:x="1795" fg:w="13"/><text x="7.7357%" y="943.50"></text></g><g><title>__rdl_alloc (9 samples, 0.04%)</title><rect x="7.5399%" y="933" width="0.0375%" height="15" fill="rgb(235,61,29)" fg:x="1808" fg:w="9"/><text x="7.7899%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.03%)</title><rect x="7.5524%" y="917" width="0.0250%" height="15" fill="rgb(219,207,3)" fg:x="1811" fg:w="6"/><text x="7.8024%" y="927.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (3 samples, 0.01%)</title><rect x="7.5816%" y="933" width="0.0125%" height="15" fill="rgb(222,56,46)" fg:x="1818" fg:w="3"/><text x="7.8316%" y="943.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.23%)</title><rect x="7.3815%" y="949" width="0.2294%" height="15" fill="rgb(239,76,54)" fg:x="1770" fg:w="55"/><text x="7.6315%" y="959.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (4 samples, 0.02%)</title><rect x="7.5941%" y="933" width="0.0167%" height="15" fill="rgb(231,124,27)" fg:x="1821" fg:w="4"/><text x="7.8441%" y="943.50"></text></g><g><title>[perf-2314307.map] (115 samples, 0.48%)</title><rect x="7.6108%" y="949" width="0.4796%" height="15" fill="rgb(249,195,6)" fg:x="1825" fg:w="115"/><text x="7.8608%" y="959.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.02%)</title><rect x="8.0904%" y="933" width="0.0209%" height="15" fill="rgb(237,174,47)" fg:x="1940" fg:w="5"/><text x="8.3404%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (4 samples, 0.02%)</title><rect x="8.1113%" y="933" width="0.0167%" height="15" fill="rgb(206,201,31)" fg:x="1945" fg:w="4"/><text x="8.3613%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.04%)</title><rect x="8.1279%" y="933" width="0.0417%" height="15" fill="rgb(231,57,52)" fg:x="1949" fg:w="10"/><text x="8.3779%" y="943.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6 samples, 0.03%)</title><rect x="8.1696%" y="933" width="0.0250%" height="15" fill="rgb(248,177,22)" fg:x="1959" fg:w="6"/><text x="8.4196%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (25 samples, 0.10%)</title><rect x="8.2030%" y="933" width="0.1043%" height="15" fill="rgb(215,211,37)" fg:x="1967" fg:w="25"/><text x="8.4530%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.04%)</title><rect x="8.3073%" y="933" width="0.0417%" height="15" fill="rgb(241,128,51)" fg:x="1992" fg:w="10"/><text x="8.5573%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="8.3490%" y="933" width="0.0125%" height="15" fill="rgb(227,165,31)" fg:x="2002" fg:w="3"/><text x="8.5990%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.18%)</title><rect x="8.3615%" y="933" width="0.1793%" height="15" fill="rgb(228,167,24)" fg:x="2005" fg:w="43"/><text x="8.6115%" y="943.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (6 samples, 0.03%)</title><rect x="8.5533%" y="933" width="0.0250%" height="15" fill="rgb(228,143,12)" fg:x="2051" fg:w="6"/><text x="8.8033%" y="943.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="8.5783%" y="933" width="0.0250%" height="15" fill="rgb(249,149,8)" fg:x="2057" fg:w="6"/><text x="8.8283%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="8.6159%" y="933" width="0.0167%" height="15" fill="rgb(243,35,44)" fg:x="2066" fg:w="4"/><text x="8.8659%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="8.6326%" y="933" width="0.0250%" height="15" fill="rgb(246,89,9)" fg:x="2070" fg:w="6"/><text x="8.8826%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.16%)</title><rect x="8.6576%" y="933" width="0.1585%" height="15" fill="rgb(233,213,13)" fg:x="2076" fg:w="38"/><text x="8.9076%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="8.8160%" y="933" width="0.0334%" height="15" fill="rgb(233,141,41)" fg:x="2114" fg:w="8"/><text x="9.0660%" y="943.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::fmt::Display&gt;::fmt (4 samples, 0.02%)</title><rect x="8.8744%" y="933" width="0.0167%" height="15" fill="rgb(239,167,4)" fg:x="2128" fg:w="4"/><text x="9.1244%" y="943.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="8.8911%" y="933" width="0.0250%" height="15" fill="rgb(209,217,16)" fg:x="2132" fg:w="6"/><text x="9.1411%" y="943.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.03%)</title><rect x="8.9412%" y="933" width="0.0292%" height="15" fill="rgb(219,88,35)" fg:x="2144" fg:w="7"/><text x="9.1912%" y="943.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (4 samples, 0.02%)</title><rect x="8.9703%" y="933" width="0.0167%" height="15" fill="rgb(220,193,23)" fg:x="2151" fg:w="4"/><text x="9.2203%" y="943.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="9.0162%" y="933" width="0.0167%" height="15" fill="rgb(230,90,52)" fg:x="2162" fg:w="4"/><text x="9.2662%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="9.0412%" y="933" width="0.0292%" height="15" fill="rgb(252,106,19)" fg:x="2168" fg:w="7"/><text x="9.2912%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="9.0704%" y="933" width="0.0417%" height="15" fill="rgb(206,74,20)" fg:x="2175" fg:w="10"/><text x="9.3204%" y="943.50"></text></g><g><title>[do_query] (8 samples, 0.03%)</title><rect x="9.1121%" y="933" width="0.0334%" height="15" fill="rgb(230,138,44)" fg:x="2185" fg:w="8"/><text x="9.3621%" y="943.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (6 samples, 0.03%)</title><rect x="9.1497%" y="917" width="0.0250%" height="15" fill="rgb(235,182,43)" fg:x="2194" fg:w="6"/><text x="9.3997%" y="927.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.03%)</title><rect x="9.1455%" y="933" width="0.0334%" height="15" fill="rgb(242,16,51)" fg:x="2193" fg:w="8"/><text x="9.3955%" y="943.50"></text></g><g><title>__GI___libc_free (7 samples, 0.03%)</title><rect x="9.1789%" y="933" width="0.0292%" height="15" fill="rgb(248,9,4)" fg:x="2201" fg:w="7"/><text x="9.4289%" y="943.50"></text></g><g><title>__GI___libc_malloc (42 samples, 0.18%)</title><rect x="9.2081%" y="933" width="0.1752%" height="15" fill="rgb(210,31,22)" fg:x="2208" fg:w="42"/><text x="9.4581%" y="943.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.03%)</title><rect x="9.3832%" y="933" width="0.0292%" height="15" fill="rgb(239,54,39)" fg:x="2250" fg:w="7"/><text x="9.6332%" y="943.50"></text></g><g><title>__calloc (10 samples, 0.04%)</title><rect x="9.4124%" y="933" width="0.0417%" height="15" fill="rgb(230,99,41)" fg:x="2257" fg:w="10"/><text x="9.6624%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.05%)</title><rect x="9.4583%" y="933" width="0.0542%" height="15" fill="rgb(253,106,12)" fg:x="2268" fg:w="13"/><text x="9.7083%" y="943.50"></text></g><g><title>__posix_memalign (8 samples, 0.03%)</title><rect x="9.5125%" y="933" width="0.0334%" height="15" fill="rgb(213,46,41)" fg:x="2281" fg:w="8"/><text x="9.7625%" y="943.50"></text></g><g><title>__rdl_alloc (46 samples, 0.19%)</title><rect x="9.5459%" y="933" width="0.1918%" height="15" fill="rgb(215,133,35)" fg:x="2289" fg:w="46"/><text x="9.7959%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.10%)</title><rect x="9.6334%" y="917" width="0.1043%" height="15" fill="rgb(213,28,5)" fg:x="2310" fg:w="25"/><text x="9.8834%" y="927.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (4 samples, 0.02%)</title><rect x="9.7210%" y="901" width="0.0167%" height="15" fill="rgb(215,77,49)" fg:x="2331" fg:w="4"/><text x="9.9710%" y="911.50"></text></g><g><title>_int_free (80 samples, 0.33%)</title><rect x="9.7502%" y="933" width="0.3336%" height="15" fill="rgb(248,100,22)" fg:x="2338" fg:w="80"/><text x="10.0002%" y="943.50"></text></g><g><title>_int_malloc (25 samples, 0.10%)</title><rect x="10.0838%" y="933" width="0.1043%" height="15" fill="rgb(208,67,9)" fg:x="2418" fg:w="25"/><text x="10.3338%" y="943.50"></text></g><g><title>_int_memalign (9 samples, 0.04%)</title><rect x="10.1881%" y="933" width="0.0375%" height="15" fill="rgb(219,133,21)" fg:x="2443" fg:w="9"/><text x="10.4381%" y="943.50"></text></g><g><title>_int_realloc (11 samples, 0.05%)</title><rect x="10.2256%" y="933" width="0.0459%" height="15" fill="rgb(246,46,29)" fg:x="2452" fg:w="11"/><text x="10.4756%" y="943.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.02%)</title><rect x="10.2757%" y="933" width="0.0209%" height="15" fill="rgb(246,185,52)" fg:x="2464" fg:w="5"/><text x="10.5257%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="10.2965%" y="933" width="0.0125%" height="15" fill="rgb(252,136,11)" fg:x="2469" fg:w="3"/><text x="10.5465%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="10.2965%" y="917" width="0.0125%" height="15" fill="rgb(219,138,53)" fg:x="2469" fg:w="3"/><text x="10.5465%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.01%)</title><rect x="10.2965%" y="901" width="0.0125%" height="15" fill="rgb(211,51,23)" fg:x="2469" fg:w="3"/><text x="10.5465%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.01%)</title><rect x="10.2965%" y="885" width="0.0125%" height="15" fill="rgb(247,221,28)" fg:x="2469" fg:w="3"/><text x="10.5465%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="10.3090%" y="933" width="0.0209%" height="15" fill="rgb(251,222,45)" fg:x="2472" fg:w="5"/><text x="10.5590%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.05%)</title><rect x="10.3299%" y="933" width="0.0542%" height="15" fill="rgb(217,162,53)" fg:x="2477" fg:w="13"/><text x="10.5799%" y="943.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3 samples, 0.01%)</title><rect x="10.3841%" y="933" width="0.0125%" height="15" fill="rgb(229,93,14)" fg:x="2490" fg:w="3"/><text x="10.6341%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.04%)</title><rect x="10.4049%" y="933" width="0.0375%" height="15" fill="rgb(209,67,49)" fg:x="2495" fg:w="9"/><text x="10.6549%" y="943.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="10.4508%" y="933" width="0.0167%" height="15" fill="rgb(213,87,29)" fg:x="2506" fg:w="4"/><text x="10.7008%" y="943.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::column (3 samples, 0.01%)</title><rect x="10.4800%" y="933" width="0.0125%" height="15" fill="rgb(205,151,52)" fg:x="2513" fg:w="3"/><text x="10.7300%" y="943.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (4 samples, 0.02%)</title><rect x="10.4925%" y="933" width="0.0167%" height="15" fill="rgb(253,215,39)" fg:x="2516" fg:w="4"/><text x="10.7425%" y="943.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (5 samples, 0.02%)</title><rect x="10.5092%" y="933" width="0.0209%" height="15" fill="rgb(221,220,41)" fg:x="2520" fg:w="5"/><text x="10.7592%" y="943.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (5 samples, 0.02%)</title><rect x="10.5509%" y="933" width="0.0209%" height="15" fill="rgb(218,133,21)" fg:x="2530" fg:w="5"/><text x="10.8009%" y="943.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (4 samples, 0.02%)</title><rect x="10.5926%" y="933" width="0.0167%" height="15" fill="rgb(221,193,43)" fg:x="2540" fg:w="4"/><text x="10.8426%" y="943.50"></text></g><g><title>chrono::offset::utc::Utc::now (4 samples, 0.02%)</title><rect x="10.6135%" y="933" width="0.0167%" height="15" fill="rgb(240,128,52)" fg:x="2545" fg:w="4"/><text x="10.8635%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="10.6343%" y="933" width="0.0125%" height="15" fill="rgb(253,114,12)" fg:x="2550" fg:w="3"/><text x="10.8843%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (4 samples, 0.02%)</title><rect x="10.6468%" y="933" width="0.0167%" height="15" fill="rgb(215,223,47)" fg:x="2553" fg:w="4"/><text x="10.8968%" y="943.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.03%)</title><rect x="10.6635%" y="933" width="0.0250%" height="15" fill="rgb(248,225,23)" fg:x="2557" fg:w="6"/><text x="10.9135%" y="943.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (3 samples, 0.01%)</title><rect x="10.7010%" y="933" width="0.0125%" height="15" fill="rgb(250,108,0)" fg:x="2566" fg:w="3"/><text x="10.9510%" y="943.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.01%)</title><rect x="10.7010%" y="917" width="0.0125%" height="15" fill="rgb(228,208,7)" fg:x="2566" fg:w="3"/><text x="10.9510%" y="927.50"></text></g><g><title>core::fmt::write (19 samples, 0.08%)</title><rect x="10.7135%" y="933" width="0.0792%" height="15" fill="rgb(244,45,10)" fg:x="2569" fg:w="19"/><text x="10.9635%" y="943.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="10.7803%" y="917" width="0.0125%" height="15" fill="rgb(207,125,25)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="927.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="10.7803%" y="901" width="0.0125%" height="15" fill="rgb(210,195,18)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="911.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="10.7803%" y="885" width="0.0125%" height="15" fill="rgb(249,80,12)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="895.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.01%)</title><rect x="10.7803%" y="869" width="0.0125%" height="15" fill="rgb(221,65,9)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="879.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.01%)</title><rect x="10.7803%" y="853" width="0.0125%" height="15" fill="rgb(235,49,36)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="863.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (3 samples, 0.01%)</title><rect x="10.7803%" y="837" width="0.0125%" height="15" fill="rgb(225,32,20)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="847.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.01%)</title><rect x="10.7803%" y="821" width="0.0125%" height="15" fill="rgb(215,141,46)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="831.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.01%)</title><rect x="10.7803%" y="805" width="0.0125%" height="15" fill="rgb(250,160,47)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="815.50"></text></g><g><title>__libc_write (3 samples, 0.01%)</title><rect x="10.7803%" y="789" width="0.0125%" height="15" fill="rgb(216,222,40)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="799.50"></text></g><g><title>__libc_write (3 samples, 0.01%)</title><rect x="10.7803%" y="773" width="0.0125%" height="15" fill="rgb(234,217,39)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="10.7803%" y="757" width="0.0125%" height="15" fill="rgb(207,178,40)" fg:x="2585" fg:w="3"/><text x="11.0303%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="10.7928%" y="933" width="0.0167%" height="15" fill="rgb(221,136,13)" fg:x="2588" fg:w="4"/><text x="11.0428%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (9 samples, 0.04%)</title><rect x="10.8303%" y="933" width="0.0375%" height="15" fill="rgb(249,199,10)" fg:x="2597" fg:w="9"/><text x="11.0803%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (7 samples, 0.03%)</title><rect x="10.8678%" y="933" width="0.0292%" height="15" fill="rgb(249,222,13)" fg:x="2606" fg:w="7"/><text x="11.1178%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (7 samples, 0.03%)</title><rect x="10.9054%" y="933" width="0.0292%" height="15" fill="rgb(244,185,38)" fg:x="2615" fg:w="7"/><text x="11.1554%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr&gt; (3 samples, 0.01%)</title><rect x="10.9721%" y="933" width="0.0125%" height="15" fill="rgb(236,202,9)" fg:x="2631" fg:w="3"/><text x="11.2221%" y="943.50"></text></g><g><title>datafusion::execution::memory_pool::MemoryPool::register (3 samples, 0.01%)</title><rect x="11.0138%" y="933" width="0.0125%" height="15" fill="rgb(250,229,37)" fg:x="2641" fg:w="3"/><text x="11.2638%" y="943.50"></text></g><g><title>datafusion::physical_plan::aggregates::AggregateExec::try_new (7 samples, 0.03%)</title><rect x="11.0263%" y="933" width="0.0292%" height="15" fill="rgb(206,174,23)" fg:x="2644" fg:w="7"/><text x="11.2763%" y="943.50"></text></g><g><title>datafusion::physical_plan::aggregates::PhysicalGroupBy::new_single (4 samples, 0.02%)</title><rect x="11.0555%" y="933" width="0.0167%" height="15" fill="rgb(211,33,43)" fg:x="2651" fg:w="4"/><text x="11.3055%" y="943.50"></text></g><g><title>datafusion::physical_plan::aggregates::no_grouping::aggregate_batch (3 samples, 0.01%)</title><rect x="11.0722%" y="933" width="0.0125%" height="15" fill="rgb(245,58,50)" fg:x="2655" fg:w="3"/><text x="11.3222%" y="943.50"></text></g><g><title>datafusion::physical_plan::execute_stream (3 samples, 0.01%)</title><rect x="11.0847%" y="933" width="0.0125%" height="15" fill="rgb(244,68,36)" fg:x="2658" fg:w="3"/><text x="11.3347%" y="943.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::output_rows (3 samples, 0.01%)</title><rect x="11.1014%" y="933" width="0.0125%" height="15" fill="rgb(232,229,15)" fg:x="2662" fg:w="3"/><text x="11.3514%" y="943.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::start_timestamp (4 samples, 0.02%)</title><rect x="11.1181%" y="933" width="0.0167%" height="15" fill="rgb(254,30,23)" fg:x="2666" fg:w="4"/><text x="11.3681%" y="943.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (4 samples, 0.02%)</title><rect x="11.1389%" y="933" width="0.0167%" height="15" fill="rgb(235,160,14)" fg:x="2671" fg:w="4"/><text x="11.3889%" y="943.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (6 samples, 0.03%)</title><rect x="11.1723%" y="933" width="0.0250%" height="15" fill="rgb(212,155,44)" fg:x="2679" fg:w="6"/><text x="11.4223%" y="943.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (3 samples, 0.01%)</title><rect x="11.2473%" y="933" width="0.0125%" height="15" fill="rgb(226,2,50)" fg:x="2697" fg:w="3"/><text x="11.4973%" y="943.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::build (6 samples, 0.03%)</title><rect x="11.2599%" y="933" width="0.0250%" height="15" fill="rgb(234,177,6)" fg:x="2700" fg:w="6"/><text x="11.5099%" y="943.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (7 samples, 0.03%)</title><rect x="11.3182%" y="933" width="0.0292%" height="15" fill="rgb(217,24,9)" fg:x="2714" fg:w="7"/><text x="11.5682%" y="943.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (7 samples, 0.03%)</title><rect x="11.3725%" y="933" width="0.0292%" height="15" fill="rgb(220,13,46)" fg:x="2727" fg:w="7"/><text x="11.6225%" y="943.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="11.5268%" y="837" width="0.0125%" height="15" fill="rgb(239,221,27)" fg:x="2764" fg:w="3"/><text x="11.7768%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange&gt; (10 samples, 0.04%)</title><rect x="11.5184%" y="853" width="0.0417%" height="15" fill="rgb(222,198,25)" fg:x="2762" fg:w="10"/><text x="11.7684%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (5 samples, 0.02%)</title><rect x="11.5393%" y="837" width="0.0209%" height="15" fill="rgb(211,99,13)" fg:x="2767" fg:w="5"/><text x="11.7893%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="821" width="0.0125%" height="15" fill="rgb(232,111,31)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="805" width="0.0125%" height="15" fill="rgb(245,82,37)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="789" width="0.0125%" height="15" fill="rgb(227,149,46)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="773" width="0.0125%" height="15" fill="rgb(218,36,50)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="757" width="0.0125%" height="15" fill="rgb(226,80,48)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="741" width="0.0125%" height="15" fill="rgb(238,224,15)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="725" width="0.0125%" height="15" fill="rgb(241,136,10)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="709" width="0.0125%" height="15" fill="rgb(208,32,45)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="693" width="0.0125%" height="15" fill="rgb(207,135,9)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="677" width="0.0125%" height="15" fill="rgb(206,86,44)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="11.5851%" y="661" width="0.0125%" height="15" fill="rgb(245,177,15)" fg:x="2778" fg:w="3"/><text x="11.8351%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="11.5976%" y="821" width="0.0125%" height="15" fill="rgb(206,64,50)" fg:x="2781" fg:w="3"/><text x="11.8476%" y="831.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (23 samples, 0.10%)</title><rect x="11.5184%" y="869" width="0.0959%" height="15" fill="rgb(234,36,40)" fg:x="2762" fg:w="23"/><text x="11.7684%" y="879.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (13 samples, 0.05%)</title><rect x="11.5601%" y="853" width="0.0542%" height="15" fill="rgb(213,64,8)" fg:x="2772" fg:w="13"/><text x="11.8101%" y="863.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::children (8 samples, 0.03%)</title><rect x="11.5810%" y="837" width="0.0334%" height="15" fill="rgb(210,75,36)" fg:x="2777" fg:w="8"/><text x="11.8310%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::children (5 samples, 0.02%)</title><rect x="11.6227%" y="837" width="0.0209%" height="15" fill="rgb(229,88,21)" fg:x="2787" fg:w="5"/><text x="11.8727%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="11.6310%" y="821" width="0.0125%" height="15" fill="rgb(252,204,47)" fg:x="2789" fg:w="3"/><text x="11.8810%" y="831.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (13 samples, 0.05%)</title><rect x="11.6185%" y="869" width="0.0542%" height="15" fill="rgb(208,77,27)" fg:x="2786" fg:w="13"/><text x="11.8685%" y="879.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (13 samples, 0.05%)</title><rect x="11.6185%" y="853" width="0.0542%" height="15" fill="rgb(221,76,26)" fg:x="2786" fg:w="13"/><text x="11.8685%" y="863.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (7 samples, 0.03%)</title><rect x="11.6435%" y="837" width="0.0292%" height="15" fill="rgb(225,139,18)" fg:x="2792" fg:w="7"/><text x="11.8935%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="11.6811%" y="869" width="0.0125%" height="15" fill="rgb(230,137,11)" fg:x="2801" fg:w="3"/><text x="11.9311%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.04%)</title><rect x="11.7061%" y="869" width="0.0417%" height="15" fill="rgb(212,28,1)" fg:x="2807" fg:w="10"/><text x="11.9561%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="11.7228%" y="853" width="0.0250%" height="15" fill="rgb(248,164,17)" fg:x="2811" fg:w="6"/><text x="11.9728%" y="863.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="11.7311%" y="837" width="0.0167%" height="15" fill="rgb(222,171,42)" fg:x="2813" fg:w="4"/><text x="11.9811%" y="847.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (89 samples, 0.37%)</title><rect x="11.4100%" y="901" width="0.3712%" height="15" fill="rgb(243,84,45)" fg:x="2736" fg:w="89"/><text x="11.6600%" y="911.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (89 samples, 0.37%)</title><rect x="11.4100%" y="885" width="0.3712%" height="15" fill="rgb(252,49,23)" fg:x="2736" fg:w="89"/><text x="11.6600%" y="895.50"></text></g><g><title>datafusion::execution::context::SessionState::physical_optimizers (8 samples, 0.03%)</title><rect x="11.7478%" y="869" width="0.0334%" height="15" fill="rgb(215,19,7)" fg:x="2817" fg:w="8"/><text x="11.9978%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="11.8771%" y="837" width="0.0125%" height="15" fill="rgb(238,81,41)" fg:x="2848" fg:w="3"/><text x="12.1271%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="11.8771%" y="821" width="0.0125%" height="15" fill="rgb(210,199,37)" fg:x="2848" fg:w="3"/><text x="12.1271%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (22 samples, 0.09%)</title><rect x="11.9063%" y="837" width="0.0917%" height="15" fill="rgb(244,192,49)" fg:x="2855" fg:w="22"/><text x="12.1563%" y="847.50"></text></g><g><title>_int_free (15 samples, 0.06%)</title><rect x="11.9980%" y="837" width="0.0626%" height="15" fill="rgb(226,211,11)" fg:x="2877" fg:w="15"/><text x="12.2480%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.01%)</title><rect x="12.0480%" y="821" width="0.0125%" height="15" fill="rgb(236,162,54)" fg:x="2889" fg:w="3"/><text x="12.2980%" y="831.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="12.0689%" y="789" width="0.0125%" height="15" fill="rgb(220,229,9)" fg:x="2894" fg:w="3"/><text x="12.3189%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="12.0689%" y="805" width="0.0167%" height="15" fill="rgb(250,87,22)" fg:x="2894" fg:w="4"/><text x="12.3189%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.03%)</title><rect x="12.0606%" y="837" width="0.0292%" height="15" fill="rgb(239,43,17)" fg:x="2892" fg:w="7"/><text x="12.3106%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::schema::Schema&gt; (5 samples, 0.02%)</title><rect x="12.0689%" y="821" width="0.0209%" height="15" fill="rgb(231,177,25)" fg:x="2894" fg:w="5"/><text x="12.3189%" y="831.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="12.1273%" y="789" width="0.0167%" height="15" fill="rgb(219,179,1)" fg:x="2908" fg:w="4"/><text x="12.3773%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (19 samples, 0.08%)</title><rect x="12.0939%" y="837" width="0.0792%" height="15" fill="rgb(238,219,53)" fg:x="2900" fg:w="19"/><text x="12.3439%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.06%)</title><rect x="12.1106%" y="821" width="0.0626%" height="15" fill="rgb(232,167,36)" fg:x="2904" fg:w="15"/><text x="12.3606%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (14 samples, 0.06%)</title><rect x="12.1148%" y="805" width="0.0584%" height="15" fill="rgb(244,19,51)" fg:x="2905" fg:w="14"/><text x="12.3648%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream&gt; (7 samples, 0.03%)</title><rect x="12.1773%" y="837" width="0.0292%" height="15" fill="rgb(224,6,22)" fg:x="2920" fg:w="7"/><text x="12.4273%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics as core::ops::drop::Drop&gt;::drop (9 samples, 0.04%)</title><rect x="12.2357%" y="821" width="0.0375%" height="15" fill="rgb(224,145,5)" fg:x="2934" fg:w="9"/><text x="12.4857%" y="831.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="12.2816%" y="821" width="0.0500%" height="15" fill="rgb(234,130,49)" fg:x="2945" fg:w="12"/><text x="12.5316%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics&gt; (33 samples, 0.14%)</title><rect x="12.2065%" y="837" width="0.1376%" height="15" fill="rgb(254,6,2)" fg:x="2927" fg:w="33"/><text x="12.4565%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="12.3316%" y="821" width="0.0125%" height="15" fill="rgb(208,96,46)" fg:x="2957" fg:w="3"/><text x="12.5816%" y="831.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (140 samples, 0.58%)</title><rect x="11.7811%" y="901" width="0.5838%" height="15" fill="rgb(239,3,39)" fg:x="2825" fg:w="140"/><text x="12.0311%" y="911.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream as futures_core::stream::Stream&gt;::poll_next (140 samples, 0.58%)</title><rect x="11.7811%" y="885" width="0.5838%" height="15" fill="rgb(233,210,1)" fg:x="2825" fg:w="140"/><text x="12.0311%" y="895.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (140 samples, 0.58%)</title><rect x="11.7811%" y="869" width="0.5838%" height="15" fill="rgb(244,137,37)" fg:x="2825" fg:w="140"/><text x="12.0311%" y="879.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (140 samples, 0.58%)</title><rect x="11.7811%" y="853" width="0.5838%" height="15" fill="rgb(240,136,2)" fg:x="2825" fg:w="140"/><text x="12.0311%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.05%)</title><rect x="12.4234%" y="869" width="0.0459%" height="15" fill="rgb(239,18,37)" fg:x="2979" fg:w="11"/><text x="12.6734%" y="879.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (32 samples, 0.13%)</title><rect x="12.3650%" y="901" width="0.1335%" height="15" fill="rgb(218,185,22)" fg:x="2965" fg:w="32"/><text x="12.6150%" y="911.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (32 samples, 0.13%)</title><rect x="12.3650%" y="885" width="0.1335%" height="15" fill="rgb(225,218,4)" fg:x="2965" fg:w="32"/><text x="12.6150%" y="895.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::schema (4 samples, 0.02%)</title><rect x="12.4818%" y="869" width="0.0167%" height="15" fill="rgb(230,182,32)" fg:x="2993" fg:w="4"/><text x="12.7318%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.11%)</title><rect x="12.5777%" y="869" width="0.1084%" height="15" fill="rgb(242,56,43)" fg:x="3016" fg:w="26"/><text x="12.8277%" y="879.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.10%)</title><rect x="12.5902%" y="853" width="0.0959%" height="15" fill="rgb(233,99,24)" fg:x="3019" fg:w="23"/><text x="12.8402%" y="863.50"></text></g><g><title>_int_malloc (22 samples, 0.09%)</title><rect x="12.5944%" y="837" width="0.0917%" height="15" fill="rgb(234,209,42)" fg:x="3020" fg:w="22"/><text x="12.8444%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.04%)</title><rect x="12.7028%" y="869" width="0.0375%" height="15" fill="rgb(227,7,12)" fg:x="3046" fg:w="9"/><text x="12.9528%" y="879.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="12.7403%" y="869" width="0.0125%" height="15" fill="rgb(245,203,43)" fg:x="3055" fg:w="3"/><text x="12.9903%" y="879.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="12.7904%" y="837" width="0.0209%" height="15" fill="rgb(238,205,33)" fg:x="3067" fg:w="5"/><text x="13.0404%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (20 samples, 0.08%)</title><rect x="12.7570%" y="869" width="0.0834%" height="15" fill="rgb(231,56,7)" fg:x="3059" fg:w="20"/><text x="13.0070%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (14 samples, 0.06%)</title><rect x="12.7820%" y="853" width="0.0584%" height="15" fill="rgb(244,186,29)" fg:x="3065" fg:w="14"/><text x="13.0320%" y="863.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="12.8154%" y="837" width="0.0250%" height="15" fill="rgb(234,111,31)" fg:x="3073" fg:w="6"/><text x="13.0654%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::create_accumulator (7 samples, 0.03%)</title><rect x="12.8571%" y="837" width="0.0292%" height="15" fill="rgb(241,149,10)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="847.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::count_agg::{{closure}} (7 samples, 0.03%)</title><rect x="12.8571%" y="821" width="0.0292%" height="15" fill="rgb(249,206,44)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="831.50"></text></g><g><title>__rdl_alloc (7 samples, 0.03%)</title><rect x="12.8571%" y="805" width="0.0292%" height="15" fill="rgb(251,153,30)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.03%)</title><rect x="12.8571%" y="789" width="0.0292%" height="15" fill="rgb(239,152,38)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="773" width="0.0292%" height="15" fill="rgb(249,139,47)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="757" width="0.0292%" height="15" fill="rgb(244,64,35)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="741" width="0.0292%" height="15" fill="rgb(216,46,15)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="725" width="0.0292%" height="15" fill="rgb(250,74,19)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="709" width="0.0292%" height="15" fill="rgb(249,42,33)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="693" width="0.0292%" height="15" fill="rgb(242,149,17)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="677" width="0.0292%" height="15" fill="rgb(244,29,21)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="661" width="0.0292%" height="15" fill="rgb(220,130,37)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="645" width="0.0292%" height="15" fill="rgb(211,67,2)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="629" width="0.0292%" height="15" fill="rgb(235,68,52)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="613" width="0.0292%" height="15" fill="rgb(246,142,3)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="597" width="0.0292%" height="15" fill="rgb(241,25,7)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="12.8571%" y="581" width="0.0292%" height="15" fill="rgb(242,119,39)" fg:x="3083" fg:w="7"/><text x="13.1071%" y="591.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="12.8863%" y="837" width="0.0167%" height="15" fill="rgb(241,98,45)" fg:x="3090" fg:w="4"/><text x="13.1363%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 0.07%)</title><rect x="12.8404%" y="869" width="0.0667%" height="15" fill="rgb(254,28,30)" fg:x="3079" fg:w="16"/><text x="13.0904%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.07%)</title><rect x="12.8404%" y="853" width="0.0667%" height="15" fill="rgb(241,142,54)" fg:x="3079" fg:w="16"/><text x="13.0904%" y="863.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (3 samples, 0.01%)</title><rect x="12.9405%" y="837" width="0.0125%" height="15" fill="rgb(222,85,15)" fg:x="3103" fg:w="3"/><text x="13.1905%" y="847.50"></text></g><g><title>chrono::offset::utc::Utc::now (6 samples, 0.03%)</title><rect x="12.9321%" y="853" width="0.0250%" height="15" fill="rgb(210,85,47)" fg:x="3101" fg:w="6"/><text x="13.1821%" y="863.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="12.9697%" y="837" width="0.0250%" height="15" fill="rgb(224,206,25)" fg:x="3110" fg:w="6"/><text x="13.2197%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::elapsed_compute (14 samples, 0.06%)</title><rect x="12.9572%" y="853" width="0.0584%" height="15" fill="rgb(243,201,19)" fg:x="3107" fg:w="14"/><text x="13.2072%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (5 samples, 0.02%)</title><rect x="12.9947%" y="837" width="0.0209%" height="15" fill="rgb(236,59,4)" fg:x="3116" fg:w="5"/><text x="13.2447%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="13.0156%" y="837" width="0.0125%" height="15" fill="rgb(254,179,45)" fg:x="3121" fg:w="3"/><text x="13.2656%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::end_timestamp (11 samples, 0.05%)</title><rect x="13.0156%" y="853" width="0.0459%" height="15" fill="rgb(226,14,10)" fg:x="3121" fg:w="11"/><text x="13.2656%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (8 samples, 0.03%)</title><rect x="13.0281%" y="837" width="0.0334%" height="15" fill="rgb(244,27,41)" fg:x="3124" fg:w="8"/><text x="13.2781%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="13.0739%" y="837" width="0.0125%" height="15" fill="rgb(235,35,32)" fg:x="3135" fg:w="3"/><text x="13.3239%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::mem_used (26 samples, 0.11%)</title><rect x="13.0614%" y="853" width="0.1084%" height="15" fill="rgb(218,68,31)" fg:x="3132" fg:w="26"/><text x="13.3114%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (20 samples, 0.08%)</title><rect x="13.0865%" y="837" width="0.0834%" height="15" fill="rgb(207,120,37)" fg:x="3138" fg:w="20"/><text x="13.3365%" y="847.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="13.1699%" y="837" width="0.0167%" height="15" fill="rgb(227,98,0)" fg:x="3158" fg:w="4"/><text x="13.4199%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::output_rows (13 samples, 0.05%)</title><rect x="13.1699%" y="853" width="0.0542%" height="15" fill="rgb(207,7,3)" fg:x="3158" fg:w="13"/><text x="13.4199%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (8 samples, 0.03%)</title><rect x="13.1907%" y="837" width="0.0334%" height="15" fill="rgb(206,98,19)" fg:x="3163" fg:w="8"/><text x="13.4407%" y="847.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="13.2366%" y="837" width="0.0167%" height="15" fill="rgb(217,5,26)" fg:x="3174" fg:w="4"/><text x="13.4866%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::spill_count (11 samples, 0.05%)</title><rect x="13.2241%" y="853" width="0.0459%" height="15" fill="rgb(235,190,38)" fg:x="3171" fg:w="11"/><text x="13.4741%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (4 samples, 0.02%)</title><rect x="13.2533%" y="837" width="0.0167%" height="15" fill="rgb(247,86,24)" fg:x="3178" fg:w="4"/><text x="13.5033%" y="847.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.04%)</title><rect x="13.2699%" y="837" width="0.0417%" height="15" fill="rgb(205,101,16)" fg:x="3182" fg:w="10"/><text x="13.5199%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::spilled_bytes (20 samples, 0.08%)</title><rect x="13.2699%" y="853" width="0.0834%" height="15" fill="rgb(246,168,33)" fg:x="3182" fg:w="20"/><text x="13.5199%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (10 samples, 0.04%)</title><rect x="13.3116%" y="837" width="0.0417%" height="15" fill="rgb(231,114,1)" fg:x="3192" fg:w="10"/><text x="13.5616%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="13.3617%" y="837" width="0.0125%" height="15" fill="rgb(207,184,53)" fg:x="3204" fg:w="3"/><text x="13.6117%" y="847.50"></text></g><g><title>datafusion::physical_plan::execute_stream (215 samples, 0.90%)</title><rect x="12.4984%" y="901" width="0.8966%" height="15" fill="rgb(224,95,51)" fg:x="2997" fg:w="215"/><text x="12.7484%" y="911.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (215 samples, 0.90%)</title><rect x="12.4984%" y="885" width="0.8966%" height="15" fill="rgb(212,188,45)" fg:x="2997" fg:w="215"/><text x="12.7484%" y="895.50"></text></g><g><title>datafusion::physical_plan::metrics::baseline::BaselineMetrics::new (117 samples, 0.49%)</title><rect x="12.9071%" y="869" width="0.4879%" height="15" fill="rgb(223,154,38)" fg:x="3095" fg:w="117"/><text x="13.1571%" y="879.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::start_timestamp (10 samples, 0.04%)</title><rect x="13.3534%" y="853" width="0.0417%" height="15" fill="rgb(251,22,52)" fg:x="3202" fg:w="10"/><text x="13.6034%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (5 samples, 0.02%)</title><rect x="13.3742%" y="837" width="0.0209%" height="15" fill="rgb(229,209,22)" fg:x="3207" fg:w="5"/><text x="13.6242%" y="847.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (5 samples, 0.02%)</title><rect x="13.3951%" y="901" width="0.0209%" height="15" fill="rgb(234,138,34)" fg:x="3212" fg:w="5"/><text x="13.6451%" y="911.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new (4 samples, 0.02%)</title><rect x="13.3992%" y="885" width="0.0167%" height="15" fill="rgb(212,95,11)" fg:x="3213" fg:w="4"/><text x="13.6492%" y="895.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new_with_predicate (4 samples, 0.02%)</title><rect x="13.3992%" y="869" width="0.0167%" height="15" fill="rgb(240,179,47)" fg:x="3213" fg:w="4"/><text x="13.6492%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="13.4034%" y="853" width="0.0125%" height="15" fill="rgb(240,163,11)" fg:x="3214" fg:w="3"/><text x="13.6534%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.15%)</title><rect x="13.6244%" y="725" width="0.1460%" height="15" fill="rgb(236,37,12)" fg:x="3267" fg:w="35"/><text x="13.8744%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.15%)</title><rect x="13.6244%" y="709" width="0.1460%" height="15" fill="rgb(232,164,16)" fg:x="3267" fg:w="35"/><text x="13.8744%" y="719.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.15%)</title><rect x="13.6244%" y="693" width="0.1460%" height="15" fill="rgb(244,205,15)" fg:x="3267" fg:w="35"/><text x="13.8744%" y="703.50"></text></g><g><title>__GI___libc_malloc (35 samples, 0.15%)</title><rect x="13.6244%" y="677" width="0.1460%" height="15" fill="rgb(223,117,47)" fg:x="3267" fg:w="35"/><text x="13.8744%" y="687.50"></text></g><g><title>_int_malloc (27 samples, 0.11%)</title><rect x="13.6578%" y="661" width="0.1126%" height="15" fill="rgb(244,107,35)" fg:x="3275" fg:w="27"/><text x="13.9078%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="645" width="0.0125%" height="15" fill="rgb(205,140,8)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="629" width="0.0125%" height="15" fill="rgb(228,84,46)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="613" width="0.0125%" height="15" fill="rgb(254,188,9)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="597" width="0.0125%" height="15" fill="rgb(206,112,54)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="581" width="0.0125%" height="15" fill="rgb(216,84,49)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="565" width="0.0125%" height="15" fill="rgb(214,194,35)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="549" width="0.0125%" height="15" fill="rgb(249,28,3)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="533" width="0.0125%" height="15" fill="rgb(222,56,52)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="517" width="0.0125%" height="15" fill="rgb(245,217,50)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="501" width="0.0125%" height="15" fill="rgb(213,201,24)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7579%" y="485" width="0.0125%" height="15" fill="rgb(248,116,28)" fg:x="3299" fg:w="3"/><text x="14.0079%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.15%)</title><rect x="13.6203%" y="773" width="0.1543%" height="15" fill="rgb(219,72,43)" fg:x="3266" fg:w="37"/><text x="13.8703%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.15%)</title><rect x="13.6203%" y="757" width="0.1543%" height="15" fill="rgb(209,138,14)" fg:x="3266" fg:w="37"/><text x="13.8703%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.15%)</title><rect x="13.6203%" y="741" width="0.1543%" height="15" fill="rgb(222,18,33)" fg:x="3266" fg:w="37"/><text x="13.8703%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.16%)</title><rect x="13.6203%" y="837" width="0.1585%" height="15" fill="rgb(213,199,7)" fg:x="3266" fg:w="38"/><text x="13.8703%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.16%)</title><rect x="13.6203%" y="821" width="0.1585%" height="15" fill="rgb(250,110,10)" fg:x="3266" fg:w="38"/><text x="13.8703%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.16%)</title><rect x="13.6203%" y="805" width="0.1585%" height="15" fill="rgb(248,123,6)" fg:x="3266" fg:w="38"/><text x="13.8703%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.16%)</title><rect x="13.6203%" y="789" width="0.1585%" height="15" fill="rgb(206,91,31)" fg:x="3266" fg:w="38"/><text x="13.8703%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (77 samples, 0.32%)</title><rect x="13.4701%" y="853" width="0.3211%" height="15" fill="rgb(211,154,13)" fg:x="3230" fg:w="77"/><text x="13.7201%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7787%" y="837" width="0.0125%" height="15" fill="rgb(225,148,7)" fg:x="3304" fg:w="3"/><text x="14.0287%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7787%" y="821" width="0.0125%" height="15" fill="rgb(220,160,43)" fg:x="3304" fg:w="3"/><text x="14.0287%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7787%" y="805" width="0.0125%" height="15" fill="rgb(213,52,39)" fg:x="3304" fg:w="3"/><text x="14.0287%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7787%" y="789" width="0.0125%" height="15" fill="rgb(243,137,7)" fg:x="3304" fg:w="3"/><text x="14.0287%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7787%" y="773" width="0.0125%" height="15" fill="rgb(230,79,13)" fg:x="3304" fg:w="3"/><text x="14.0287%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="13.7787%" y="757" width="0.0125%" height="15" fill="rgb(247,105,23)" fg:x="3304" fg:w="3"/><text x="14.0287%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="13.7912%" y="853" width="0.0209%" height="15" fill="rgb(223,179,41)" fg:x="3307" fg:w="5"/><text x="14.0412%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="13.8121%" y="853" width="0.0167%" height="15" fill="rgb(218,9,34)" fg:x="3312" fg:w="4"/><text x="14.0621%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="13.8288%" y="837" width="0.0125%" height="15" fill="rgb(222,106,8)" fg:x="3316" fg:w="3"/><text x="14.0788%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="13.8413%" y="837" width="0.0167%" height="15" fill="rgb(211,220,0)" fg:x="3319" fg:w="4"/><text x="14.0913%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (107 samples, 0.45%)</title><rect x="13.4159%" y="885" width="0.4462%" height="15" fill="rgb(229,52,16)" fg:x="3217" fg:w="107"/><text x="13.6659%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (107 samples, 0.45%)</title><rect x="13.4159%" y="869" width="0.4462%" height="15" fill="rgb(212,155,18)" fg:x="3217" fg:w="107"/><text x="13.6659%" y="879.50"></text></g><g><title>datafusion_common::dfschema::DFField::from_qualified (8 samples, 0.03%)</title><rect x="13.8288%" y="853" width="0.0334%" height="15" fill="rgb(242,21,14)" fg:x="3316" fg:w="8"/><text x="14.0788%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="13.8621%" y="869" width="0.0292%" height="15" fill="rgb(222,19,48)" fg:x="3324" fg:w="7"/><text x="14.1121%" y="879.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="13.8913%" y="869" width="0.0125%" height="15" fill="rgb(232,45,27)" fg:x="3331" fg:w="3"/><text x="14.1413%" y="879.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="13.9414%" y="853" width="0.0167%" height="15" fill="rgb(249,103,42)" fg:x="3343" fg:w="4"/><text x="14.1914%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="13.9580%" y="853" width="0.0167%" height="15" fill="rgb(246,81,33)" fg:x="3347" fg:w="4"/><text x="14.2080%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="13.9789%" y="853" width="0.0125%" height="15" fill="rgb(252,33,42)" fg:x="3352" fg:w="3"/><text x="14.2289%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="13.9997%" y="805" width="0.0167%" height="15" fill="rgb(209,212,41)" fg:x="3357" fg:w="4"/><text x="14.2497%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="13.9997%" y="789" width="0.0167%" height="15" fill="rgb(207,154,6)" fg:x="3357" fg:w="4"/><text x="14.2497%" y="799.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.02%)</title><rect x="13.9997%" y="773" width="0.0167%" height="15" fill="rgb(223,64,47)" fg:x="3357" fg:w="4"/><text x="14.2497%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="13.9997%" y="757" width="0.0167%" height="15" fill="rgb(211,161,38)" fg:x="3357" fg:w="4"/><text x="14.2497%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="13.9997%" y="741" width="0.0167%" height="15" fill="rgb(219,138,40)" fg:x="3357" fg:w="4"/><text x="14.2497%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="13.9997%" y="725" width="0.0167%" height="15" fill="rgb(241,228,46)" fg:x="3357" fg:w="4"/><text x="14.2497%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="14.0039%" y="709" width="0.0125%" height="15" fill="rgb(223,209,38)" fg:x="3358" fg:w="3"/><text x="14.2539%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="14.0039%" y="693" width="0.0125%" height="15" fill="rgb(236,164,45)" fg:x="3358" fg:w="3"/><text x="14.2539%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="14.0039%" y="677" width="0.0125%" height="15" fill="rgb(231,15,5)" fg:x="3358" fg:w="3"/><text x="14.2539%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="14.0039%" y="661" width="0.0125%" height="15" fill="rgb(252,35,15)" fg:x="3358" fg:w="3"/><text x="14.2539%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.03%)</title><rect x="13.9914%" y="853" width="0.0292%" height="15" fill="rgb(248,181,18)" fg:x="3355" fg:w="7"/><text x="14.2414%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.03%)</title><rect x="13.9914%" y="837" width="0.0292%" height="15" fill="rgb(233,39,42)" fg:x="3355" fg:w="7"/><text x="14.2414%" y="847.50"></text></g><g><title>core::fmt::write (6 samples, 0.03%)</title><rect x="13.9956%" y="821" width="0.0250%" height="15" fill="rgb(238,110,33)" fg:x="3356" fg:w="6"/><text x="14.2456%" y="831.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="14.0289%" y="837" width="0.0209%" height="15" fill="rgb(233,195,10)" fg:x="3364" fg:w="5"/><text x="14.2789%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="14.0498%" y="837" width="0.0125%" height="15" fill="rgb(254,105,3)" fg:x="3369" fg:w="3"/><text x="14.2998%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="14.0623%" y="837" width="0.0167%" height="15" fill="rgb(221,225,9)" fg:x="3372" fg:w="4"/><text x="14.3123%" y="847.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (3 samples, 0.01%)</title><rect x="14.0790%" y="821" width="0.0125%" height="15" fill="rgb(224,227,45)" fg:x="3376" fg:w="3"/><text x="14.3290%" y="831.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.03%)</title><rect x="14.1123%" y="789" width="0.0250%" height="15" fill="rgb(229,198,43)" fg:x="3384" fg:w="6"/><text x="14.3623%" y="799.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (6 samples, 0.03%)</title><rect x="14.1457%" y="789" width="0.0250%" height="15" fill="rgb(206,209,35)" fg:x="3392" fg:w="6"/><text x="14.3957%" y="799.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (66 samples, 0.28%)</title><rect x="13.9038%" y="869" width="0.2752%" height="15" fill="rgb(245,195,53)" fg:x="3334" fg:w="66"/><text x="14.1538%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (38 samples, 0.16%)</title><rect x="14.0206%" y="853" width="0.1585%" height="15" fill="rgb(240,92,26)" fg:x="3362" fg:w="38"/><text x="14.2706%" y="863.50"></text></g><g><title>alloc::fmt::format::format_inner (24 samples, 0.10%)</title><rect x="14.0790%" y="837" width="0.1001%" height="15" fill="rgb(207,40,23)" fg:x="3376" fg:w="24"/><text x="14.3290%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (21 samples, 0.09%)</title><rect x="14.0915%" y="821" width="0.0876%" height="15" fill="rgb(223,111,35)" fg:x="3379" fg:w="21"/><text x="14.3415%" y="831.50"></text></g><g><title>core::fmt::write (18 samples, 0.08%)</title><rect x="14.1040%" y="805" width="0.0751%" height="15" fill="rgb(229,147,28)" fg:x="3382" fg:w="18"/><text x="14.3540%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.11%)</title><rect x="14.2208%" y="853" width="0.1084%" height="15" fill="rgb(211,29,28)" fg:x="3410" fg:w="26"/><text x="14.4708%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.08%)</title><rect x="14.2458%" y="837" width="0.0834%" height="15" fill="rgb(228,72,33)" fg:x="3416" fg:w="20"/><text x="14.4958%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="14.3667%" y="821" width="0.0125%" height="15" fill="rgb(205,214,31)" fg:x="3445" fg:w="3"/><text x="14.6167%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="14.3792%" y="821" width="0.0125%" height="15" fill="rgb(224,111,15)" fg:x="3448" fg:w="3"/><text x="14.6292%" y="831.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (243 samples, 1.01%)</title><rect x="13.4159%" y="901" width="1.0134%" height="15" fill="rgb(253,21,26)" fg:x="3217" fg:w="243"/><text x="13.6659%" y="911.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (136 samples, 0.57%)</title><rect x="13.8621%" y="885" width="0.5672%" height="15" fill="rgb(245,139,43)" fg:x="3324" fg:w="136"/><text x="14.1121%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (59 samples, 0.25%)</title><rect x="14.1832%" y="869" width="0.2460%" height="15" fill="rgb(252,170,7)" fg:x="3401" fg:w="59"/><text x="14.4332%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (24 samples, 0.10%)</title><rect x="14.3292%" y="853" width="0.1001%" height="15" fill="rgb(231,118,14)" fg:x="3436" fg:w="24"/><text x="14.5792%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.08%)</title><rect x="14.3459%" y="837" width="0.0834%" height="15" fill="rgb(238,83,0)" fg:x="3440" fg:w="20"/><text x="14.5959%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="14.4001%" y="821" width="0.0292%" height="15" fill="rgb(221,39,39)" fg:x="3453" fg:w="7"/><text x="14.6501%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="14.4084%" y="805" width="0.0209%" height="15" fill="rgb(222,119,46)" fg:x="3455" fg:w="5"/><text x="14.6584%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.03%)</title><rect x="14.4293%" y="837" width="0.0250%" height="15" fill="rgb(222,165,49)" fg:x="3460" fg:w="6"/><text x="14.6793%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="14.4335%" y="821" width="0.0209%" height="15" fill="rgb(219,113,52)" fg:x="3461" fg:w="5"/><text x="14.6835%" y="831.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="14.4335%" y="805" width="0.0209%" height="15" fill="rgb(214,7,15)" fg:x="3461" fg:w="5"/><text x="14.6835%" y="815.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="14.5377%" y="821" width="0.0167%" height="15" fill="rgb(235,32,4)" fg:x="3486" fg:w="4"/><text x="14.7877%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.02%)</title><rect x="14.5627%" y="821" width="0.0209%" height="15" fill="rgb(238,90,54)" fg:x="3492" fg:w="5"/><text x="14.8127%" y="831.50"></text></g><g><title>_int_free (14 samples, 0.06%)</title><rect x="14.5836%" y="821" width="0.0584%" height="15" fill="rgb(213,208,19)" fg:x="3497" fg:w="14"/><text x="14.8336%" y="831.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.08%)</title><rect x="14.6461%" y="805" width="0.0751%" height="15" fill="rgb(233,156,4)" fg:x="3512" fg:w="18"/><text x="14.8961%" y="815.50"></text></g><g><title>_int_malloc (11 samples, 0.05%)</title><rect x="14.6753%" y="789" width="0.0459%" height="15" fill="rgb(207,194,5)" fg:x="3519" fg:w="11"/><text x="14.9253%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (23 samples, 0.10%)</title><rect x="14.6420%" y="821" width="0.0959%" height="15" fill="rgb(206,111,30)" fg:x="3511" fg:w="23"/><text x="14.8920%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.03%)</title><rect x="14.7546%" y="789" width="0.0250%" height="15" fill="rgb(243,70,54)" fg:x="3538" fg:w="6"/><text x="15.0046%" y="799.50"></text></g><g><title>alloc::string::String::push (7 samples, 0.03%)</title><rect x="14.7546%" y="805" width="0.0292%" height="15" fill="rgb(242,28,8)" fg:x="3538" fg:w="7"/><text x="15.0046%" y="815.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (16 samples, 0.07%)</title><rect x="14.7379%" y="821" width="0.0667%" height="15" fill="rgb(219,106,18)" fg:x="3534" fg:w="16"/><text x="14.9879%" y="831.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5 samples, 0.02%)</title><rect x="14.7838%" y="805" width="0.0209%" height="15" fill="rgb(244,222,10)" fg:x="3545" fg:w="5"/><text x="15.0338%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (65 samples, 0.27%)</title><rect x="14.8046%" y="821" width="0.2711%" height="15" fill="rgb(236,179,52)" fg:x="3550" fg:w="65"/><text x="15.0546%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (28 samples, 0.12%)</title><rect x="14.9589%" y="805" width="0.1168%" height="15" fill="rgb(213,23,39)" fg:x="3587" fg:w="28"/><text x="15.2089%" y="815.50"></text></g><g><title>&lt;sqlparser::dialect::mssql::MsSqlDialect as sqlparser::dialect::Dialect&gt;::is_identifier_part (3 samples, 0.01%)</title><rect x="15.1341%" y="805" width="0.0125%" height="15" fill="rgb(238,48,10)" fg:x="3629" fg:w="3"/><text x="15.3841%" y="815.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="15.1549%" y="805" width="0.0125%" height="15" fill="rgb(251,196,23)" fg:x="3634" fg:w="3"/><text x="15.4049%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.05%)</title><rect x="15.1883%" y="805" width="0.0542%" height="15" fill="rgb(250,152,24)" fg:x="3642" fg:w="13"/><text x="15.4383%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.05%)</title><rect x="15.1925%" y="789" width="0.0500%" height="15" fill="rgb(209,150,17)" fg:x="3643" fg:w="12"/><text x="15.4425%" y="799.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.05%)</title><rect x="15.1966%" y="773" width="0.0459%" height="15" fill="rgb(234,202,34)" fg:x="3644" fg:w="11"/><text x="15.4466%" y="783.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (202 samples, 0.84%)</title><rect x="14.4293%" y="901" width="0.8424%" height="15" fill="rgb(253,148,53)" fg:x="3460" fg:w="202"/><text x="14.6793%" y="911.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (202 samples, 0.84%)</title><rect x="14.4293%" y="885" width="0.8424%" height="15" fill="rgb(218,129,16)" fg:x="3460" fg:w="202"/><text x="14.6793%" y="895.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (202 samples, 0.84%)</title><rect x="14.4293%" y="869" width="0.8424%" height="15" fill="rgb(216,85,19)" fg:x="3460" fg:w="202"/><text x="14.6793%" y="879.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_with_location (202 samples, 0.84%)</title><rect x="14.4293%" y="853" width="0.8424%" height="15" fill="rgb(235,228,7)" fg:x="3460" fg:w="202"/><text x="14.6793%" y="863.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (196 samples, 0.82%)</title><rect x="14.4543%" y="837" width="0.8174%" height="15" fill="rgb(245,175,0)" fg:x="3466" fg:w="196"/><text x="14.7043%" y="847.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (47 samples, 0.20%)</title><rect x="15.0757%" y="821" width="0.1960%" height="15" fill="rgb(208,168,36)" fg:x="3615" fg:w="47"/><text x="15.3257%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.03%)</title><rect x="15.2425%" y="805" width="0.0292%" height="15" fill="rgb(246,171,24)" fg:x="3655" fg:w="7"/><text x="15.4925%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="15.2508%" y="789" width="0.0209%" height="15" fill="rgb(215,142,24)" fg:x="3657" fg:w="5"/><text x="15.5008%" y="799.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (13 samples, 0.05%)</title><rect x="15.2717%" y="885" width="0.0542%" height="15" fill="rgb(250,187,7)" fg:x="3662" fg:w="13"/><text x="15.5217%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.03%)</title><rect x="15.2925%" y="869" width="0.0334%" height="15" fill="rgb(228,66,33)" fg:x="3667" fg:w="8"/><text x="15.5425%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.03%)</title><rect x="15.3009%" y="853" width="0.0250%" height="15" fill="rgb(234,215,21)" fg:x="3669" fg:w="6"/><text x="15.5509%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.01%)</title><rect x="15.3134%" y="837" width="0.0125%" height="15" fill="rgb(222,191,20)" fg:x="3672" fg:w="3"/><text x="15.5634%" y="847.50"></text></g><g><title>do_query::main::_{{closure}} (947 samples, 3.95%)</title><rect x="11.4100%" y="933" width="3.9493%" height="15" fill="rgb(245,79,54)" fg:x="2736" fg:w="947"/><text x="11.6600%" y="943.50">do_q..</text></g><g><title>do_query::main_inner::{{closure}} (947 samples, 3.95%)</title><rect x="11.4100%" y="917" width="3.9493%" height="15" fill="rgb(240,10,37)" fg:x="2736" fg:w="947"/><text x="11.6600%" y="927.50">do_q..</text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::count_agg (21 samples, 0.09%)</title><rect x="15.2717%" y="901" width="0.0876%" height="15" fill="rgb(214,192,32)" fg:x="3662" fg:w="21"/><text x="15.5217%" y="911.50"></text></g><g><title>datafusion_expr::expr_fn::create_udaf (8 samples, 0.03%)</title><rect x="15.3259%" y="885" width="0.0334%" height="15" fill="rgb(209,36,54)" fg:x="3675" fg:w="8"/><text x="15.5759%" y="895.50"></text></g><g><title>datafusion_expr::udaf::AggregateUDF::new (8 samples, 0.03%)</title><rect x="15.3259%" y="869" width="0.0334%" height="15" fill="rgb(220,10,11)" fg:x="3675" fg:w="8"/><text x="15.5759%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="15.3259%" y="853" width="0.0334%" height="15" fill="rgb(221,106,17)" fg:x="3675" fg:w="8"/><text x="15.5759%" y="863.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="15.3259%" y="837" width="0.0334%" height="15" fill="rgb(251,142,44)" fg:x="3675" fg:w="8"/><text x="15.5759%" y="847.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (6 samples, 0.03%)</title><rect x="15.3718%" y="837" width="0.0250%" height="15" fill="rgb(238,13,15)" fg:x="3686" fg:w="6"/><text x="15.6218%" y="847.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (9 samples, 0.04%)</title><rect x="15.3676%" y="853" width="0.0375%" height="15" fill="rgb(208,107,27)" fg:x="3685" fg:w="9"/><text x="15.6176%" y="863.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::children (20 samples, 0.08%)</title><rect x="15.4635%" y="789" width="0.0834%" height="15" fill="rgb(205,136,37)" fg:x="3708" fg:w="20"/><text x="15.7135%" y="799.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.08%)</title><rect x="15.4635%" y="773" width="0.0834%" height="15" fill="rgb(250,205,27)" fg:x="3708" fg:w="20"/><text x="15.7135%" y="783.50"></text></g><g><title>_int_malloc (14 samples, 0.06%)</title><rect x="15.4886%" y="757" width="0.0584%" height="15" fill="rgb(210,80,43)" fg:x="3714" fg:w="14"/><text x="15.7386%" y="767.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (4 samples, 0.02%)</title><rect x="15.5469%" y="789" width="0.0167%" height="15" fill="rgb(247,160,36)" fg:x="3728" fg:w="4"/><text x="15.7969%" y="799.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.05%)</title><rect x="15.6012%" y="709" width="0.0500%" height="15" fill="rgb(234,13,49)" fg:x="3741" fg:w="12"/><text x="15.8512%" y="719.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="15.6178%" y="693" width="0.0334%" height="15" fill="rgb(234,122,0)" fg:x="3745" fg:w="8"/><text x="15.8678%" y="703.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (15 samples, 0.06%)</title><rect x="15.6012%" y="725" width="0.0626%" height="15" fill="rgb(207,146,38)" fg:x="3741" fg:w="15"/><text x="15.8512%" y="735.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="15.6512%" y="709" width="0.0125%" height="15" fill="rgb(207,177,25)" fg:x="3753" fg:w="3"/><text x="15.9012%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="15.7054%" y="677" width="0.0167%" height="15" fill="rgb(211,178,42)" fg:x="3766" fg:w="4"/><text x="15.9554%" y="687.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="15.7221%" y="677" width="0.0125%" height="15" fill="rgb(230,69,54)" fg:x="3770" fg:w="3"/><text x="15.9721%" y="687.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="15.7346%" y="677" width="0.0125%" height="15" fill="rgb(214,135,41)" fg:x="3773" fg:w="3"/><text x="15.9846%" y="687.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (23 samples, 0.10%)</title><rect x="15.6637%" y="725" width="0.0959%" height="15" fill="rgb(237,67,25)" fg:x="3756" fg:w="23"/><text x="15.9137%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.08%)</title><rect x="15.6804%" y="709" width="0.0792%" height="15" fill="rgb(222,189,50)" fg:x="3760" fg:w="19"/><text x="15.9304%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (16 samples, 0.07%)</title><rect x="15.6929%" y="693" width="0.0667%" height="15" fill="rgb(245,148,34)" fg:x="3763" fg:w="16"/><text x="15.9429%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="15.7471%" y="677" width="0.0125%" height="15" fill="rgb(222,29,6)" fg:x="3776" fg:w="3"/><text x="15.9971%" y="687.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (18 samples, 0.08%)</title><rect x="15.7596%" y="725" width="0.0751%" height="15" fill="rgb(221,189,43)" fg:x="3779" fg:w="18"/><text x="16.0096%" y="735.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::predicate (6 samples, 0.03%)</title><rect x="15.8097%" y="709" width="0.0250%" height="15" fill="rgb(207,36,27)" fg:x="3791" fg:w="6"/><text x="16.0597%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="15.8138%" y="693" width="0.0209%" height="15" fill="rgb(217,90,24)" fg:x="3792" fg:w="5"/><text x="16.0638%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="15.8222%" y="677" width="0.0125%" height="15" fill="rgb(224,66,35)" fg:x="3794" fg:w="3"/><text x="16.0722%" y="687.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (5 samples, 0.02%)</title><rect x="15.9431%" y="645" width="0.0209%" height="15" fill="rgb(221,13,50)" fg:x="3823" fg:w="5"/><text x="16.1931%" y="655.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.13%)</title><rect x="16.0098%" y="629" width="0.1293%" height="15" fill="rgb(236,68,49)" fg:x="3839" fg:w="31"/><text x="16.2598%" y="639.50"></text></g><g><title>_int_malloc (22 samples, 0.09%)</title><rect x="16.0474%" y="613" width="0.0917%" height="15" fill="rgb(229,146,28)" fg:x="3848" fg:w="22"/><text x="16.2974%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 0.18%)</title><rect x="15.9640%" y="645" width="0.1835%" height="15" fill="rgb(225,31,38)" fg:x="3828" fg:w="44"/><text x="16.2140%" y="655.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="16.1516%" y="645" width="0.0167%" height="15" fill="rgb(250,208,3)" fg:x="3873" fg:w="4"/><text x="16.4016%" y="655.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="16.1558%" y="629" width="0.0125%" height="15" fill="rgb(246,54,23)" fg:x="3874" fg:w="3"/><text x="16.4058%" y="639.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (75 samples, 0.31%)</title><rect x="15.8681%" y="661" width="0.3128%" height="15" fill="rgb(243,76,11)" fg:x="3805" fg:w="75"/><text x="16.1181%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="16.4060%" y="581" width="0.0209%" height="15" fill="rgb(245,21,50)" fg:x="3934" fg:w="5"/><text x="16.6560%" y="591.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="16.4102%" y="565" width="0.0167%" height="15" fill="rgb(228,9,43)" fg:x="3935" fg:w="4"/><text x="16.6602%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="16.4060%" y="597" width="0.0250%" height="15" fill="rgb(208,100,47)" fg:x="3934" fg:w="6"/><text x="16.6560%" y="607.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (9 samples, 0.04%)</title><rect x="16.4019%" y="613" width="0.0375%" height="15" fill="rgb(232,26,8)" fg:x="3933" fg:w="9"/><text x="16.6519%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt; as arrow_array::array::Array&gt;::as_any (3 samples, 0.01%)</title><rect x="16.4394%" y="613" width="0.0125%" height="15" fill="rgb(216,166,38)" fg:x="3942" fg:w="3"/><text x="16.6894%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="16.4519%" y="613" width="0.0250%" height="15" fill="rgb(251,202,51)" fg:x="3945" fg:w="6"/><text x="16.7019%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.05%)</title><rect x="16.4978%" y="581" width="0.0459%" height="15" fill="rgb(254,216,34)" fg:x="3956" fg:w="11"/><text x="16.7478%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="565" width="0.0250%" height="15" fill="rgb(251,32,27)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="549" width="0.0250%" height="15" fill="rgb(208,127,28)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="533" width="0.0250%" height="15" fill="rgb(224,137,22)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="517" width="0.0250%" height="15" fill="rgb(254,70,32)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="501" width="0.0250%" height="15" fill="rgb(229,75,37)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="485" width="0.0250%" height="15" fill="rgb(252,64,23)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="469" width="0.0250%" height="15" fill="rgb(232,162,48)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="453" width="0.0250%" height="15" fill="rgb(246,160,12)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="437" width="0.0250%" height="15" fill="rgb(247,166,0)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="421" width="0.0250%" height="15" fill="rgb(249,219,21)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="405" width="0.0250%" height="15" fill="rgb(205,209,3)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="389" width="0.0250%" height="15" fill="rgb(243,44,1)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="16.5186%" y="373" width="0.0250%" height="15" fill="rgb(206,159,16)" fg:x="3961" fg:w="6"/><text x="16.7686%" y="383.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (16 samples, 0.07%)</title><rect x="16.4811%" y="597" width="0.0667%" height="15" fill="rgb(244,77,30)" fg:x="3952" fg:w="16"/><text x="16.7311%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="16.5478%" y="597" width="0.0125%" height="15" fill="rgb(218,69,12)" fg:x="3968" fg:w="3"/><text x="16.7978%" y="607.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="16.5687%" y="597" width="0.0209%" height="15" fill="rgb(212,87,7)" fg:x="3973" fg:w="5"/><text x="16.8187%" y="607.50"></text></g><g><title>_int_free (7 samples, 0.03%)</title><rect x="16.6562%" y="485" width="0.0292%" height="15" fill="rgb(245,114,25)" fg:x="3994" fg:w="7"/><text x="16.9062%" y="495.50"></text></g><g><title>__rdl_alloc (27 samples, 0.11%)</title><rect x="16.6145%" y="565" width="0.1126%" height="15" fill="rgb(210,61,42)" fg:x="3984" fg:w="27"/><text x="16.8645%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (27 samples, 0.11%)</title><rect x="16.6145%" y="549" width="0.1126%" height="15" fill="rgb(211,52,33)" fg:x="3984" fg:w="27"/><text x="16.8645%" y="559.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (27 samples, 0.11%)</title><rect x="16.6145%" y="533" width="0.1126%" height="15" fill="rgb(234,58,33)" fg:x="3984" fg:w="27"/><text x="16.8645%" y="543.50"></text></g><g><title>__posix_memalign (27 samples, 0.11%)</title><rect x="16.6145%" y="517" width="0.1126%" height="15" fill="rgb(220,115,36)" fg:x="3984" fg:w="27"/><text x="16.8645%" y="527.50"></text></g><g><title>_int_memalign (19 samples, 0.08%)</title><rect x="16.6479%" y="501" width="0.0792%" height="15" fill="rgb(243,153,54)" fg:x="3992" fg:w="19"/><text x="16.8979%" y="511.50"></text></g><g><title>_int_malloc (10 samples, 0.04%)</title><rect x="16.6854%" y="485" width="0.0417%" height="15" fill="rgb(251,47,18)" fg:x="4001" fg:w="10"/><text x="16.9354%" y="495.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (34 samples, 0.14%)</title><rect x="16.5895%" y="597" width="0.1418%" height="15" fill="rgb(242,102,42)" fg:x="3978" fg:w="34"/><text x="16.8395%" y="607.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (28 samples, 0.12%)</title><rect x="16.6145%" y="581" width="0.1168%" height="15" fill="rgb(234,31,38)" fg:x="3984" fg:w="28"/><text x="16.8645%" y="591.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (5 samples, 0.02%)</title><rect x="16.7313%" y="597" width="0.0209%" height="15" fill="rgb(221,117,51)" fg:x="4012" fg:w="5"/><text x="16.9813%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="16.7396%" y="581" width="0.0125%" height="15" fill="rgb(212,20,18)" fg:x="4014" fg:w="3"/><text x="16.9896%" y="591.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (68 samples, 0.28%)</title><rect x="16.4769%" y="613" width="0.2836%" height="15" fill="rgb(245,133,36)" fg:x="3951" fg:w="68"/><text x="16.7269%" y="623.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="16.8314%" y="469" width="0.0167%" height="15" fill="rgb(212,6,19)" fg:x="4036" fg:w="4"/><text x="17.0814%" y="479.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (15 samples, 0.06%)</title><rect x="16.8105%" y="581" width="0.0626%" height="15" fill="rgb(218,1,36)" fg:x="4031" fg:w="15"/><text x="17.0605%" y="591.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (12 samples, 0.05%)</title><rect x="16.8231%" y="565" width="0.0500%" height="15" fill="rgb(246,84,54)" fg:x="4034" fg:w="12"/><text x="17.0731%" y="575.50"></text></g><g><title>__rdl_alloc (12 samples, 0.05%)</title><rect x="16.8231%" y="549" width="0.0500%" height="15" fill="rgb(242,110,6)" fg:x="4034" fg:w="12"/><text x="17.0731%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.05%)</title><rect x="16.8231%" y="533" width="0.0500%" height="15" fill="rgb(214,47,5)" fg:x="4034" fg:w="12"/><text x="17.0731%" y="543.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (12 samples, 0.05%)</title><rect x="16.8231%" y="517" width="0.0500%" height="15" fill="rgb(218,159,25)" fg:x="4034" fg:w="12"/><text x="17.0731%" y="527.50"></text></g><g><title>__posix_memalign (12 samples, 0.05%)</title><rect x="16.8231%" y="501" width="0.0500%" height="15" fill="rgb(215,211,28)" fg:x="4034" fg:w="12"/><text x="17.0731%" y="511.50"></text></g><g><title>_int_memalign (10 samples, 0.04%)</title><rect x="16.8314%" y="485" width="0.0417%" height="15" fill="rgb(238,59,32)" fg:x="4036" fg:w="10"/><text x="17.0814%" y="495.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="16.8481%" y="469" width="0.0250%" height="15" fill="rgb(226,82,3)" fg:x="4040" fg:w="6"/><text x="17.0981%" y="479.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (26 samples, 0.11%)</title><rect x="16.7814%" y="597" width="0.1084%" height="15" fill="rgb(240,164,32)" fg:x="4024" fg:w="26"/><text x="17.0314%" y="607.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (3 samples, 0.01%)</title><rect x="16.8773%" y="581" width="0.0125%" height="15" fill="rgb(232,46,7)" fg:x="4047" fg:w="3"/><text x="17.1273%" y="591.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.04%)</title><rect x="16.8898%" y="597" width="0.0417%" height="15" fill="rgb(229,129,53)" fg:x="4050" fg:w="10"/><text x="17.1398%" y="607.50"></text></g><g><title>arrow_array::builder::buffer_builder::BufferBuilder&lt;T&gt;::len (3 samples, 0.01%)</title><rect x="17.0024%" y="565" width="0.0125%" height="15" fill="rgb(234,188,29)" fg:x="4077" fg:w="3"/><text x="17.2524%" y="575.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (12 samples, 0.05%)</title><rect x="17.0149%" y="565" width="0.0500%" height="15" fill="rgb(246,141,4)" fg:x="4080" fg:w="12"/><text x="17.2649%" y="575.50"></text></g><g><title>&lt;&amp;T as arrow_array::array::Array&gt;::as_any (5 samples, 0.02%)</title><rect x="17.0649%" y="549" width="0.0209%" height="15" fill="rgb(229,23,39)" fg:x="4092" fg:w="5"/><text x="17.3149%" y="559.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (83 samples, 0.35%)</title><rect x="16.7605%" y="613" width="0.3461%" height="15" fill="rgb(206,12,3)" fg:x="4019" fg:w="83"/><text x="17.0105%" y="623.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (38 samples, 0.16%)</title><rect x="16.9482%" y="597" width="0.1585%" height="15" fill="rgb(252,226,20)" fg:x="4064" fg:w="38"/><text x="17.1982%" y="607.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (36 samples, 0.15%)</title><rect x="16.9565%" y="581" width="0.1501%" height="15" fill="rgb(216,123,35)" fg:x="4066" fg:w="36"/><text x="17.2065%" y="591.50"></text></g><g><title>datafusion_common::cast::as_uint64_array (10 samples, 0.04%)</title><rect x="17.0649%" y="565" width="0.0417%" height="15" fill="rgb(212,68,40)" fg:x="4092" fg:w="10"/><text x="17.3149%" y="575.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="17.1066%" y="613" width="0.0125%" height="15" fill="rgb(254,125,32)" fg:x="4102" fg:w="3"/><text x="17.3566%" y="623.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="17.1191%" y="613" width="0.0292%" height="15" fill="rgb(253,97,22)" fg:x="4105" fg:w="7"/><text x="17.3691%" y="623.50"></text></g><g><title>__calloc (7 samples, 0.03%)</title><rect x="17.1483%" y="613" width="0.0292%" height="15" fill="rgb(241,101,14)" fg:x="4112" fg:w="7"/><text x="17.3983%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="17.1775%" y="613" width="0.0209%" height="15" fill="rgb(238,103,29)" fg:x="4119" fg:w="5"/><text x="17.4275%" y="623.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="17.2317%" y="581" width="0.0250%" height="15" fill="rgb(233,195,47)" fg:x="4132" fg:w="6"/><text x="17.4817%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.07%)</title><rect x="17.2067%" y="613" width="0.0667%" height="15" fill="rgb(246,218,30)" fg:x="4126" fg:w="16"/><text x="17.4567%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (14 samples, 0.06%)</title><rect x="17.2151%" y="597" width="0.0584%" height="15" fill="rgb(219,145,47)" fg:x="4128" fg:w="14"/><text x="17.4651%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (259 samples, 1.08%)</title><rect x="16.2517%" y="629" width="1.0801%" height="15" fill="rgb(243,12,26)" fg:x="3897" fg:w="259"/><text x="16.5017%" y="639.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (14 samples, 0.06%)</title><rect x="17.2734%" y="613" width="0.0584%" height="15" fill="rgb(214,87,16)" fg:x="4142" fg:w="14"/><text x="17.5234%" y="623.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (13 samples, 0.05%)</title><rect x="17.2776%" y="597" width="0.0542%" height="15" fill="rgb(208,99,42)" fg:x="4143" fg:w="13"/><text x="17.5276%" y="607.50"></text></g><g><title>arrow_array::array::Array::len (3 samples, 0.01%)</title><rect x="17.3193%" y="581" width="0.0125%" height="15" fill="rgb(253,99,2)" fg:x="4153" fg:w="3"/><text x="17.5693%" y="591.50"></text></g><g><title>__GI___libc_malloc (36 samples, 0.15%)</title><rect x="17.3318%" y="629" width="0.1501%" height="15" fill="rgb(220,168,23)" fg:x="4156" fg:w="36"/><text x="17.5818%" y="639.50"></text></g><g><title>_int_malloc (29 samples, 0.12%)</title><rect x="17.3610%" y="613" width="0.1209%" height="15" fill="rgb(242,38,24)" fg:x="4163" fg:w="29"/><text x="17.6110%" y="623.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="17.5362%" y="581" width="0.0125%" height="15" fill="rgb(225,182,9)" fg:x="4205" fg:w="3"/><text x="17.7862%" y="591.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.18%)</title><rect x="17.7238%" y="549" width="0.1793%" height="15" fill="rgb(243,178,37)" fg:x="4250" fg:w="43"/><text x="17.9738%" y="559.50"></text></g><g><title>_int_malloc (20 samples, 0.08%)</title><rect x="17.8198%" y="533" width="0.0834%" height="15" fill="rgb(232,139,19)" fg:x="4273" fg:w="20"/><text x="18.0698%" y="543.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.03%)</title><rect x="17.8781%" y="517" width="0.0250%" height="15" fill="rgb(225,201,24)" fg:x="4287" fg:w="6"/><text x="18.1281%" y="527.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (46 samples, 0.19%)</title><rect x="17.7197%" y="565" width="0.1918%" height="15" fill="rgb(221,47,46)" fg:x="4249" fg:w="46"/><text x="17.9697%" y="575.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="17.9115%" y="565" width="0.0209%" height="15" fill="rgb(249,23,13)" fg:x="4295" fg:w="5"/><text x="18.1615%" y="575.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.08%)</title><rect x="17.9324%" y="565" width="0.0834%" height="15" fill="rgb(219,9,5)" fg:x="4300" fg:w="20"/><text x="18.1824%" y="575.50"></text></g><g><title>_int_malloc (15 samples, 0.06%)</title><rect x="17.9532%" y="549" width="0.0626%" height="15" fill="rgb(254,171,16)" fg:x="4305" fg:w="15"/><text x="18.2032%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="18.0158%" y="565" width="0.0125%" height="15" fill="rgb(230,171,20)" fg:x="4320" fg:w="3"/><text x="18.2658%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="18.0283%" y="565" width="0.0209%" height="15" fill="rgb(210,71,41)" fg:x="4323" fg:w="5"/><text x="18.2783%" y="575.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="18.0491%" y="565" width="0.0167%" height="15" fill="rgb(206,173,20)" fg:x="4328" fg:w="4"/><text x="18.2991%" y="575.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (139 samples, 0.58%)</title><rect x="17.5529%" y="581" width="0.5797%" height="15" fill="rgb(233,88,34)" fg:x="4209" fg:w="139"/><text x="17.8029%" y="591.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (14 samples, 0.06%)</title><rect x="18.0741%" y="565" width="0.0584%" height="15" fill="rgb(223,209,46)" fg:x="4334" fg:w="14"/><text x="18.3241%" y="575.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (161 samples, 0.67%)</title><rect x="17.5278%" y="597" width="0.6714%" height="15" fill="rgb(250,43,18)" fg:x="4203" fg:w="161"/><text x="17.7778%" y="607.50"></text></g><g><title>art_tree::keys::ByteString::new (16 samples, 0.07%)</title><rect x="18.1325%" y="581" width="0.0667%" height="15" fill="rgb(208,13,10)" fg:x="4348" fg:w="16"/><text x="18.3825%" y="591.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.07%)</title><rect x="18.1325%" y="565" width="0.0667%" height="15" fill="rgb(212,200,36)" fg:x="4348" fg:w="16"/><text x="18.3825%" y="575.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="18.1784%" y="549" width="0.0209%" height="15" fill="rgb(225,90,30)" fg:x="4359" fg:w="5"/><text x="18.4284%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (532 samples, 2.22%)</title><rect x="16.2392%" y="645" width="2.2186%" height="15" fill="rgb(236,182,39)" fg:x="3894" fg:w="532"/><text x="16.4892%" y="655.50">&lt;..</text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (234 samples, 0.98%)</title><rect x="17.4820%" y="629" width="0.9759%" height="15" fill="rgb(212,144,35)" fg:x="4192" fg:w="234"/><text x="17.7320%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (231 samples, 0.96%)</title><rect x="17.4945%" y="613" width="0.9633%" height="15" fill="rgb(228,63,44)" fg:x="4195" fg:w="231"/><text x="17.7445%" y="623.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (62 samples, 0.26%)</title><rect x="18.1993%" y="597" width="0.2586%" height="15" fill="rgb(228,109,6)" fg:x="4364" fg:w="62"/><text x="18.4493%" y="607.50"></text></g><g><title>__GI___libc_malloc (58 samples, 0.24%)</title><rect x="18.2159%" y="581" width="0.2419%" height="15" fill="rgb(238,117,24)" fg:x="4368" fg:w="58"/><text x="18.4659%" y="591.50"></text></g><g><title>_int_malloc (49 samples, 0.20%)</title><rect x="18.2535%" y="565" width="0.2043%" height="15" fill="rgb(242,26,26)" fg:x="4377" fg:w="49"/><text x="18.5035%" y="575.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.05%)</title><rect x="18.4662%" y="645" width="0.0500%" height="15" fill="rgb(221,92,48)" fg:x="4428" fg:w="12"/><text x="18.7162%" y="655.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="18.4995%" y="629" width="0.0167%" height="15" fill="rgb(209,209,32)" fg:x="4436" fg:w="4"/><text x="18.7495%" y="639.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="18.5287%" y="645" width="0.0167%" height="15" fill="rgb(221,70,22)" fg:x="4443" fg:w="4"/><text x="18.7787%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (651 samples, 2.71%)</title><rect x="15.8347%" y="725" width="2.7149%" height="15" fill="rgb(248,145,5)" fg:x="3797" fg:w="651"/><text x="16.0847%" y="735.50">co..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (650 samples, 2.71%)</title><rect x="15.8389%" y="709" width="2.7107%" height="15" fill="rgb(226,116,26)" fg:x="3798" fg:w="650"/><text x="16.0889%" y="719.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (649 samples, 2.71%)</title><rect x="15.8430%" y="693" width="2.7065%" height="15" fill="rgb(244,5,17)" fg:x="3799" fg:w="649"/><text x="16.0930%" y="703.50">&lt;c..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (648 samples, 2.70%)</title><rect x="15.8472%" y="677" width="2.7024%" height="15" fill="rgb(252,159,33)" fg:x="3800" fg:w="648"/><text x="16.0972%" y="687.50">da..</text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (568 samples, 2.37%)</title><rect x="16.1808%" y="661" width="2.3687%" height="15" fill="rgb(206,71,0)" fg:x="3880" fg:w="568"/><text x="16.4308%" y="671.50">&lt;f..</text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (17 samples, 0.07%)</title><rect x="18.5579%" y="709" width="0.0709%" height="15" fill="rgb(233,118,54)" fg:x="4450" fg:w="17"/><text x="18.8079%" y="719.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.07%)</title><rect x="18.5579%" y="693" width="0.0709%" height="15" fill="rgb(234,83,48)" fg:x="4450" fg:w="17"/><text x="18.8079%" y="703.50"></text></g><g><title>_int_malloc (14 samples, 0.06%)</title><rect x="18.5704%" y="677" width="0.0584%" height="15" fill="rgb(228,3,54)" fg:x="4453" fg:w="14"/><text x="18.8204%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="18.6747%" y="677" width="0.0125%" height="15" fill="rgb(226,155,13)" fg:x="4478" fg:w="3"/><text x="18.9247%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="18.6663%" y="693" width="0.0250%" height="15" fill="rgb(241,28,37)" fg:x="4476" fg:w="6"/><text x="18.9163%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="18.6914%" y="693" width="0.0125%" height="15" fill="rgb(233,93,10)" fg:x="4482" fg:w="3"/><text x="18.9414%" y="703.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (20 samples, 0.08%)</title><rect x="18.6288%" y="709" width="0.0834%" height="15" fill="rgb(225,113,19)" fg:x="4467" fg:w="20"/><text x="18.8788%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (755 samples, 3.15%)</title><rect x="15.5720%" y="789" width="3.1486%" height="15" fill="rgb(241,2,18)" fg:x="3734" fg:w="755"/><text x="15.8220%" y="799.50">cor..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (753 samples, 3.14%)</title><rect x="15.5803%" y="773" width="3.1402%" height="15" fill="rgb(228,207,21)" fg:x="3736" fg:w="753"/><text x="15.8303%" y="783.50">all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (751 samples, 3.13%)</title><rect x="15.5886%" y="757" width="3.1319%" height="15" fill="rgb(213,211,35)" fg:x="3738" fg:w="751"/><text x="15.8386%" y="767.50">&lt;co..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (749 samples, 3.12%)</title><rect x="15.5970%" y="741" width="3.1236%" height="15" fill="rgb(209,83,10)" fg:x="3740" fg:w="749"/><text x="15.8470%" y="751.50">dat..</text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (41 samples, 0.17%)</title><rect x="18.5496%" y="725" width="0.1710%" height="15" fill="rgb(209,164,1)" fg:x="4448" fg:w="41"/><text x="18.7996%" y="735.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::children (3 samples, 0.01%)</title><rect x="18.7289%" y="773" width="0.0125%" height="15" fill="rgb(213,184,43)" fg:x="4491" fg:w="3"/><text x="18.9789%" y="783.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.18%)</title><rect x="18.8248%" y="741" width="0.1793%" height="15" fill="rgb(231,61,34)" fg:x="4514" fg:w="43"/><text x="19.0748%" y="751.50"></text></g><g><title>_int_malloc (31 samples, 0.13%)</title><rect x="18.8748%" y="725" width="0.1293%" height="15" fill="rgb(235,75,3)" fg:x="4526" fg:w="31"/><text x="19.1248%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.22%)</title><rect x="18.7998%" y="757" width="0.2169%" height="15" fill="rgb(220,106,47)" fg:x="4508" fg:w="52"/><text x="19.0498%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="19.0959%" y="741" width="0.0125%" height="15" fill="rgb(210,196,33)" fg:x="4579" fg:w="3"/><text x="19.3459%" y="751.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="19.0959%" y="725" width="0.0125%" height="15" fill="rgb(229,154,42)" fg:x="4579" fg:w="3"/><text x="19.3459%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="19.1084%" y="741" width="0.0209%" height="15" fill="rgb(228,114,26)" fg:x="4582" fg:w="5"/><text x="19.3584%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.16%)</title><rect x="19.1709%" y="517" width="0.1626%" height="15" fill="rgb(208,144,1)" fg:x="4597" fg:w="39"/><text x="19.4209%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.16%)</title><rect x="19.1709%" y="501" width="0.1626%" height="15" fill="rgb(239,112,37)" fg:x="4597" fg:w="39"/><text x="19.4209%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.16%)</title><rect x="19.1709%" y="485" width="0.1626%" height="15" fill="rgb(210,96,50)" fg:x="4597" fg:w="39"/><text x="19.4209%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.16%)</title><rect x="19.1709%" y="469" width="0.1626%" height="15" fill="rgb(222,178,2)" fg:x="4597" fg:w="39"/><text x="19.4209%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.16%)</title><rect x="19.1709%" y="453" width="0.1626%" height="15" fill="rgb(226,74,18)" fg:x="4597" fg:w="39"/><text x="19.4209%" y="463.50"></text></g><g><title>__GI___libc_malloc (39 samples, 0.16%)</title><rect x="19.1709%" y="437" width="0.1626%" height="15" fill="rgb(225,67,54)" fg:x="4597" fg:w="39"/><text x="19.4209%" y="447.50"></text></g><g><title>_int_malloc (35 samples, 0.15%)</title><rect x="19.1876%" y="421" width="0.1460%" height="15" fill="rgb(251,92,32)" fg:x="4601" fg:w="35"/><text x="19.4376%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (42 samples, 0.18%)</title><rect x="19.1626%" y="693" width="0.1752%" height="15" fill="rgb(228,149,22)" fg:x="4595" fg:w="42"/><text x="19.4126%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (41 samples, 0.17%)</title><rect x="19.1668%" y="677" width="0.1710%" height="15" fill="rgb(243,54,13)" fg:x="4596" fg:w="41"/><text x="19.4168%" y="687.50"></text></g><g><title>core::fmt::write (40 samples, 0.17%)</title><rect x="19.1709%" y="661" width="0.1668%" height="15" fill="rgb(243,180,28)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (40 samples, 0.17%)</title><rect x="19.1709%" y="645" width="0.1668%" height="15" fill="rgb(208,167,24)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (40 samples, 0.17%)</title><rect x="19.1709%" y="629" width="0.1668%" height="15" fill="rgb(245,73,45)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.17%)</title><rect x="19.1709%" y="613" width="0.1668%" height="15" fill="rgb(237,203,48)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.17%)</title><rect x="19.1709%" y="597" width="0.1668%" height="15" fill="rgb(211,197,16)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="607.50"></text></g><g><title>alloc::string::String::push_str (40 samples, 0.17%)</title><rect x="19.1709%" y="581" width="0.1668%" height="15" fill="rgb(243,99,51)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.17%)</title><rect x="19.1709%" y="565" width="0.1668%" height="15" fill="rgb(215,123,29)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.17%)</title><rect x="19.1709%" y="549" width="0.1668%" height="15" fill="rgb(239,186,37)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.17%)</title><rect x="19.1709%" y="533" width="0.1668%" height="15" fill="rgb(252,136,39)" fg:x="4597" fg:w="40"/><text x="19.4209%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.05%)</title><rect x="19.3419%" y="453" width="0.0542%" height="15" fill="rgb(223,213,32)" fg:x="4638" fg:w="13"/><text x="19.5919%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.05%)</title><rect x="19.3419%" y="437" width="0.0542%" height="15" fill="rgb(233,115,5)" fg:x="4638" fg:w="13"/><text x="19.5919%" y="447.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.05%)</title><rect x="19.3419%" y="421" width="0.0542%" height="15" fill="rgb(207,226,44)" fg:x="4638" fg:w="13"/><text x="19.5919%" y="431.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.05%)</title><rect x="19.3419%" y="405" width="0.0542%" height="15" fill="rgb(208,126,0)" fg:x="4638" fg:w="13"/><text x="19.5919%" y="415.50"></text></g><g><title>_int_realloc (9 samples, 0.04%)</title><rect x="19.3586%" y="389" width="0.0375%" height="15" fill="rgb(244,66,21)" fg:x="4642" fg:w="9"/><text x="19.6086%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.09%)</title><rect x="19.3419%" y="469" width="0.0917%" height="15" fill="rgb(222,97,12)" fg:x="4638" fg:w="22"/><text x="19.5919%" y="479.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.04%)</title><rect x="19.3961%" y="453" width="0.0375%" height="15" fill="rgb(219,213,19)" fg:x="4651" fg:w="9"/><text x="19.6461%" y="463.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="19.4003%" y="437" width="0.0334%" height="15" fill="rgb(252,169,30)" fg:x="4652" fg:w="8"/><text x="19.6503%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.10%)</title><rect x="19.3419%" y="533" width="0.0959%" height="15" fill="rgb(206,32,51)" fg:x="4638" fg:w="23"/><text x="19.5919%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.10%)</title><rect x="19.3419%" y="517" width="0.0959%" height="15" fill="rgb(250,172,42)" fg:x="4638" fg:w="23"/><text x="19.5919%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.10%)</title><rect x="19.3419%" y="501" width="0.0959%" height="15" fill="rgb(209,34,43)" fg:x="4638" fg:w="23"/><text x="19.5919%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.10%)</title><rect x="19.3419%" y="485" width="0.0959%" height="15" fill="rgb(223,11,35)" fg:x="4638" fg:w="23"/><text x="19.5919%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (24 samples, 0.10%)</title><rect x="19.3419%" y="629" width="0.1001%" height="15" fill="rgb(251,219,26)" fg:x="4638" fg:w="24"/><text x="19.5919%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.10%)</title><rect x="19.3419%" y="613" width="0.1001%" height="15" fill="rgb(231,119,3)" fg:x="4638" fg:w="24"/><text x="19.5919%" y="623.50"></text></g><g><title>alloc::string::String::push_str (24 samples, 0.10%)</title><rect x="19.3419%" y="597" width="0.1001%" height="15" fill="rgb(216,97,11)" fg:x="4638" fg:w="24"/><text x="19.5919%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.10%)</title><rect x="19.3419%" y="581" width="0.1001%" height="15" fill="rgb(223,59,9)" fg:x="4638" fg:w="24"/><text x="19.5919%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.10%)</title><rect x="19.3419%" y="565" width="0.1001%" height="15" fill="rgb(233,93,31)" fg:x="4638" fg:w="24"/><text x="19.5919%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.10%)</title><rect x="19.3419%" y="549" width="0.1001%" height="15" fill="rgb(239,81,33)" fg:x="4638" fg:w="24"/><text x="19.5919%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.30%)</title><rect x="19.1417%" y="709" width="0.3044%" height="15" fill="rgb(213,120,34)" fg:x="4590" fg:w="73"/><text x="19.3917%" y="719.50"></text></g><g><title>datafusion_physical_expr::expressions::format_state_name (26 samples, 0.11%)</title><rect x="19.3378%" y="693" width="0.1084%" height="15" fill="rgb(243,49,53)" fg:x="4637" fg:w="26"/><text x="19.5878%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (26 samples, 0.11%)</title><rect x="19.3378%" y="677" width="0.1084%" height="15" fill="rgb(247,216,33)" fg:x="4637" fg:w="26"/><text x="19.5878%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (26 samples, 0.11%)</title><rect x="19.3378%" y="661" width="0.1084%" height="15" fill="rgb(226,26,14)" fg:x="4637" fg:w="26"/><text x="19.5878%" y="671.50"></text></g><g><title>core::fmt::write (26 samples, 0.11%)</title><rect x="19.3378%" y="645" width="0.1084%" height="15" fill="rgb(215,49,53)" fg:x="4637" fg:w="26"/><text x="19.5878%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 0.31%)</title><rect x="19.1417%" y="725" width="0.3086%" height="15" fill="rgb(245,162,40)" fg:x="4590" fg:w="74"/><text x="19.3917%" y="735.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::state_fields (84 samples, 0.35%)</title><rect x="19.1292%" y="741" width="0.3503%" height="15" fill="rgb(229,68,17)" fg:x="4587" fg:w="84"/><text x="19.3792%" y="751.50"></text></g><g><title>datafusion_expr::expr_fn::create_udaf::{{closure}} (7 samples, 0.03%)</title><rect x="19.4504%" y="725" width="0.0292%" height="15" fill="rgb(213,182,10)" fg:x="4664" fg:w="7"/><text x="19.7004%" y="735.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="19.4879%" y="741" width="0.0167%" height="15" fill="rgb(245,125,30)" fg:x="4673" fg:w="4"/><text x="19.7379%" y="751.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (184 samples, 0.77%)</title><rect x="18.7414%" y="773" width="0.7673%" height="15" fill="rgb(232,202,2)" fg:x="4494" fg:w="184"/><text x="18.9914%" y="783.50"></text></g><g><title>datafusion::physical_plan::aggregates::AggregateExec::try_new (116 samples, 0.48%)</title><rect x="19.0250%" y="757" width="0.4838%" height="15" fill="rgb(237,140,51)" fg:x="4562" fg:w="116"/><text x="19.2750%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (986 samples, 4.11%)</title><rect x="15.4051%" y="853" width="4.1119%" height="15" fill="rgb(236,157,25)" fg:x="3694" fg:w="986"/><text x="15.6551%" y="863.50">core..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (982 samples, 4.10%)</title><rect x="15.4218%" y="837" width="4.0953%" height="15" fill="rgb(219,209,0)" fg:x="3698" fg:w="982"/><text x="15.6718%" y="847.50">allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (979 samples, 4.08%)</title><rect x="15.4343%" y="821" width="4.0827%" height="15" fill="rgb(240,116,54)" fg:x="3701" fg:w="979"/><text x="15.6843%" y="831.50">&lt;cor..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (974 samples, 4.06%)</title><rect x="15.4552%" y="805" width="4.0619%" height="15" fill="rgb(216,10,36)" fg:x="3706" fg:w="974"/><text x="15.7052%" y="815.50">data..</text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (191 samples, 0.80%)</title><rect x="18.7205%" y="789" width="0.7965%" height="15" fill="rgb(222,72,44)" fg:x="4489" fg:w="191"/><text x="18.9705%" y="799.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::children (3 samples, 0.01%)</title><rect x="19.5212%" y="837" width="0.0125%" height="15" fill="rgb(232,159,9)" fg:x="4681" fg:w="3"/><text x="19.7712%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="19.5504%" y="821" width="0.0125%" height="15" fill="rgb(210,39,32)" fg:x="4688" fg:w="3"/><text x="19.8004%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="19.5630%" y="821" width="0.0209%" height="15" fill="rgb(216,194,45)" fg:x="4691" fg:w="5"/><text x="19.8130%" y="831.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="19.6088%" y="805" width="0.0167%" height="15" fill="rgb(218,18,35)" fg:x="4702" fg:w="4"/><text x="19.8588%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.04%)</title><rect x="19.5921%" y="821" width="0.0417%" height="15" fill="rgb(207,83,51)" fg:x="4698" fg:w="10"/><text x="19.8421%" y="831.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::field (10 samples, 0.04%)</title><rect x="19.6881%" y="805" width="0.0417%" height="15" fill="rgb(225,63,43)" fg:x="4721" fg:w="10"/><text x="19.9381%" y="815.50"></text></g><g><title>arrow_schema::field::Field::new (10 samples, 0.04%)</title><rect x="19.6881%" y="789" width="0.0417%" height="15" fill="rgb(207,57,36)" fg:x="4721" fg:w="10"/><text x="19.9381%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="19.6964%" y="773" width="0.0334%" height="15" fill="rgb(216,99,33)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="19.6964%" y="757" width="0.0334%" height="15" fill="rgb(225,42,16)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.03%)</title><rect x="19.6964%" y="741" width="0.0334%" height="15" fill="rgb(220,201,45)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.03%)</title><rect x="19.6964%" y="725" width="0.0334%" height="15" fill="rgb(225,33,4)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.03%)</title><rect x="19.6964%" y="709" width="0.0334%" height="15" fill="rgb(224,33,50)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="19.6964%" y="693" width="0.0334%" height="15" fill="rgb(246,198,51)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="19.6964%" y="677" width="0.0334%" height="15" fill="rgb(205,22,4)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.03%)</title><rect x="19.6964%" y="661" width="0.0334%" height="15" fill="rgb(206,3,8)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="19.6964%" y="645" width="0.0334%" height="15" fill="rgb(251,23,15)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="19.6964%" y="629" width="0.0334%" height="15" fill="rgb(252,88,28)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="639.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="19.6964%" y="613" width="0.0334%" height="15" fill="rgb(212,127,14)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="623.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="19.6964%" y="597" width="0.0334%" height="15" fill="rgb(247,145,37)" fg:x="4723" fg:w="8"/><text x="19.9464%" y="607.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="19.7047%" y="581" width="0.0250%" height="15" fill="rgb(209,117,53)" fg:x="4725" fg:w="6"/><text x="19.9547%" y="591.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (51 samples, 0.21%)</title><rect x="19.5338%" y="837" width="0.2127%" height="15" fill="rgb(212,90,42)" fg:x="4684" fg:w="51"/><text x="19.7838%" y="847.50"></text></g><g><title>datafusion::physical_plan::aggregates::AggregateExec::try_new (27 samples, 0.11%)</title><rect x="19.6338%" y="821" width="0.1126%" height="15" fill="rgb(218,164,37)" fg:x="4708" fg:w="27"/><text x="19.8838%" y="831.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="19.8048%" y="805" width="0.0167%" height="15" fill="rgb(246,65,34)" fg:x="4749" fg:w="4"/><text x="20.0548%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="19.8299%" y="805" width="0.0250%" height="15" fill="rgb(231,100,33)" fg:x="4755" fg:w="6"/><text x="20.0799%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="19.9174%" y="773" width="0.0250%" height="15" fill="rgb(228,126,14)" fg:x="4776" fg:w="6"/><text x="20.1674%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="19.9299%" y="757" width="0.0125%" height="15" fill="rgb(215,173,21)" fg:x="4779" fg:w="3"/><text x="20.1799%" y="767.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="19.9466%" y="773" width="0.0167%" height="15" fill="rgb(210,6,40)" fg:x="4783" fg:w="4"/><text x="20.1966%" y="783.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="20.0008%" y="741" width="0.0167%" height="15" fill="rgb(212,48,18)" fg:x="4796" fg:w="4"/><text x="20.2508%" y="751.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="20.0342%" y="741" width="0.0209%" height="15" fill="rgb(230,214,11)" fg:x="4804" fg:w="5"/><text x="20.2842%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (51 samples, 0.21%)</title><rect x="19.8549%" y="805" width="0.2127%" height="15" fill="rgb(254,105,39)" fg:x="4761" fg:w="51"/><text x="20.1049%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (42 samples, 0.18%)</title><rect x="19.8924%" y="789" width="0.1752%" height="15" fill="rgb(245,158,5)" fg:x="4770" fg:w="42"/><text x="20.1424%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (25 samples, 0.10%)</title><rect x="19.9633%" y="773" width="0.1043%" height="15" fill="rgb(249,208,11)" fg:x="4787" fg:w="25"/><text x="20.2133%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (24 samples, 0.10%)</title><rect x="19.9675%" y="757" width="0.1001%" height="15" fill="rgb(210,39,28)" fg:x="4788" fg:w="24"/><text x="20.2175%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (3 samples, 0.01%)</title><rect x="20.0550%" y="741" width="0.0125%" height="15" fill="rgb(211,56,53)" fg:x="4809" fg:w="3"/><text x="20.3050%" y="751.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (1,131 samples, 4.72%)</title><rect x="15.3593%" y="885" width="4.7166%" height="15" fill="rgb(226,201,30)" fg:x="3683" fg:w="1131"/><text x="15.6093%" y="895.50">&lt;fast..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (1,131 samples, 4.72%)</title><rect x="15.3593%" y="869" width="4.7166%" height="15" fill="rgb(239,101,34)" fg:x="3683" fg:w="1131"/><text x="15.6093%" y="879.50">dataf..</text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (134 samples, 0.56%)</title><rect x="19.5171%" y="853" width="0.5588%" height="15" fill="rgb(226,209,5)" fg:x="4680" fg:w="134"/><text x="19.7671%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (79 samples, 0.33%)</title><rect x="19.7464%" y="837" width="0.3295%" height="15" fill="rgb(250,105,47)" fg:x="4735" fg:w="79"/><text x="19.9964%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::AggregateExec&gt; (72 samples, 0.30%)</title><rect x="19.7756%" y="821" width="0.3003%" height="15" fill="rgb(230,72,3)" fg:x="4742" fg:w="72"/><text x="20.0256%" y="831.50"></text></g><g><title>&lt;dashmap::iter_set::OwningIter&lt;K,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 samples, 3.30%)</title><rect x="20.2302%" y="725" width="3.2987%" height="15" fill="rgb(232,218,39)" fg:x="4851" fg:w="791"/><text x="20.4802%" y="735.50">&lt;da..</text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="709" width="0.0209%" height="15" fill="rgb(248,166,6)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="693" width="0.0209%" height="15" fill="rgb(247,89,20)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="677" width="0.0209%" height="15" fill="rgb(248,130,54)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="661" width="0.0209%" height="15" fill="rgb(234,196,4)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="645" width="0.0209%" height="15" fill="rgb(250,143,31)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="629" width="0.0209%" height="15" fill="rgb(211,110,34)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="613" width="0.0209%" height="15" fill="rgb(215,124,48)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="23.5081%" y="597" width="0.0209%" height="15" fill="rgb(216,46,13)" fg:x="5637" fg:w="5"/><text x="23.7581%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="23.5122%" y="581" width="0.0167%" height="15" fill="rgb(205,184,25)" fg:x="5638" fg:w="4"/><text x="23.7622%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="23.5122%" y="565" width="0.0167%" height="15" fill="rgb(228,1,10)" fg:x="5638" fg:w="4"/><text x="23.7622%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="23.5122%" y="549" width="0.0167%" height="15" fill="rgb(213,116,27)" fg:x="5638" fg:w="4"/><text x="23.7622%" y="559.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="23.5331%" y="725" width="0.0167%" height="15" fill="rgb(241,95,50)" fg:x="5643" fg:w="4"/><text x="23.7831%" y="735.50"></text></g><g><title>_int_free (8 samples, 0.03%)</title><rect x="23.5539%" y="725" width="0.0334%" height="15" fill="rgb(238,48,32)" fg:x="5648" fg:w="8"/><text x="23.8039%" y="735.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (7 samples, 0.03%)</title><rect x="23.5873%" y="725" width="0.0292%" height="15" fill="rgb(235,113,49)" fg:x="5656" fg:w="7"/><text x="23.8373%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.02%)</title><rect x="23.5998%" y="709" width="0.0167%" height="15" fill="rgb(205,127,43)" fg:x="5659" fg:w="4"/><text x="23.8498%" y="719.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="23.6332%" y="709" width="0.0167%" height="15" fill="rgb(250,162,2)" fg:x="5667" fg:w="4"/><text x="23.8832%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="23.6582%" y="709" width="0.0167%" height="15" fill="rgb(220,13,41)" fg:x="5673" fg:w="4"/><text x="23.9082%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="23.6749%" y="709" width="0.0125%" height="15" fill="rgb(249,221,25)" fg:x="5677" fg:w="3"/><text x="23.9249%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="23.6749%" y="693" width="0.0125%" height="15" fill="rgb(215,208,19)" fg:x="5677" fg:w="3"/><text x="23.9249%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="23.6749%" y="677" width="0.0125%" height="15" fill="rgb(236,175,2)" fg:x="5677" fg:w="3"/><text x="23.9249%" y="687.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (8 samples, 0.03%)</title><rect x="23.6874%" y="709" width="0.0334%" height="15" fill="rgb(241,52,2)" fg:x="5680" fg:w="8"/><text x="23.9374%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.03%)</title><rect x="23.6957%" y="693" width="0.0250%" height="15" fill="rgb(248,140,14)" fg:x="5682" fg:w="6"/><text x="23.9457%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="23.7041%" y="677" width="0.0167%" height="15" fill="rgb(253,22,42)" fg:x="5684" fg:w="4"/><text x="23.9541%" y="687.50"></text></g><g><title>__GI___libc_malloc (96 samples, 0.40%)</title><rect x="25.2137%" y="677" width="0.4004%" height="15" fill="rgb(234,61,47)" fg:x="6046" fg:w="96"/><text x="25.4637%" y="687.50"></text></g><g><title>_int_malloc (93 samples, 0.39%)</title><rect x="25.2262%" y="661" width="0.3878%" height="15" fill="rgb(208,226,15)" fg:x="6049" fg:w="93"/><text x="25.4762%" y="671.50"></text></g><g><title>malloc_consolidate (73 samples, 0.30%)</title><rect x="25.3096%" y="645" width="0.3044%" height="15" fill="rgb(217,221,4)" fg:x="6069" fg:w="73"/><text x="25.5596%" y="655.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.01%)</title><rect x="25.6016%" y="629" width="0.0125%" height="15" fill="rgb(212,174,34)" fg:x="6139" fg:w="3"/><text x="25.8516%" y="639.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (517 samples, 2.16%)</title><rect x="23.7208%" y="709" width="2.1561%" height="15" fill="rgb(253,83,4)" fg:x="5688" fg:w="517"/><text x="23.9708%" y="719.50">d..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (515 samples, 2.15%)</title><rect x="23.7291%" y="693" width="2.1477%" height="15" fill="rgb(250,195,49)" fg:x="5690" fg:w="515"/><text x="23.9791%" y="703.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (63 samples, 0.26%)</title><rect x="25.6141%" y="677" width="0.2627%" height="15" fill="rgb(241,192,25)" fg:x="6142" fg:w="63"/><text x="25.8641%" y="687.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::convert_predicate (3 samples, 0.01%)</title><rect x="25.9227%" y="693" width="0.0125%" height="15" fill="rgb(208,124,10)" fg:x="6216" fg:w="3"/><text x="26.1727%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (1,396 samples, 5.82%)</title><rect x="20.1176%" y="789" width="5.8218%" height="15" fill="rgb(222,33,0)" fg:x="4824" fg:w="1396"/><text x="20.3676%" y="799.50">core::i..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,395 samples, 5.82%)</title><rect x="20.1218%" y="773" width="5.8176%" height="15" fill="rgb(234,209,28)" fg:x="4825" fg:w="1395"/><text x="20.3718%" y="783.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,392 samples, 5.81%)</title><rect x="20.1343%" y="757" width="5.8051%" height="15" fill="rgb(224,11,23)" fg:x="4828" fg:w="1392"/><text x="20.3843%" y="767.50">&lt;core::..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (1,390 samples, 5.80%)</title><rect x="20.1426%" y="741" width="5.7967%" height="15" fill="rgb(232,99,1)" fg:x="4830" fg:w="1390"/><text x="20.3926%" y="751.50">datafus..</text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (557 samples, 2.32%)</title><rect x="23.6165%" y="725" width="2.3229%" height="15" fill="rgb(237,95,45)" fg:x="5663" fg:w="557"/><text x="23.8665%" y="735.50">f..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::new (15 samples, 0.06%)</title><rect x="25.8768%" y="709" width="0.0626%" height="15" fill="rgb(208,109,11)" fg:x="6205" fg:w="15"/><text x="26.1268%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (1,419 samples, 5.92%)</title><rect x="20.0759%" y="853" width="5.9177%" height="15" fill="rgb(216,190,48)" fg:x="4814" fg:w="1419"/><text x="20.3259%" y="863.50">core::it..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,417 samples, 5.91%)</title><rect x="20.0842%" y="837" width="5.9093%" height="15" fill="rgb(251,171,36)" fg:x="4816" fg:w="1417"/><text x="20.3342%" y="847.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,414 samples, 5.90%)</title><rect x="20.0968%" y="821" width="5.8968%" height="15" fill="rgb(230,62,22)" fg:x="4819" fg:w="1414"/><text x="20.3468%" y="831.50">&lt;core::..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (1,414 samples, 5.90%)</title><rect x="20.0968%" y="805" width="5.8968%" height="15" fill="rgb(225,114,35)" fg:x="4819" fg:w="1414"/><text x="20.3468%" y="815.50">datafus..</text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (13 samples, 0.05%)</title><rect x="25.9394%" y="789" width="0.0542%" height="15" fill="rgb(215,118,42)" fg:x="6220" fg:w="13"/><text x="26.1894%" y="799.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="25.9727%" y="773" width="0.0209%" height="15" fill="rgb(243,119,21)" fg:x="6228" fg:w="5"/><text x="26.2227%" y="783.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (1,420 samples, 5.92%)</title><rect x="20.0759%" y="885" width="5.9218%" height="15" fill="rgb(252,177,53)" fg:x="4814" fg:w="1420"/><text x="20.3259%" y="895.50">&lt;fastful..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (1,420 samples, 5.92%)</title><rect x="20.0759%" y="869" width="5.9218%" height="15" fill="rgb(237,209,29)" fg:x="4814" fg:w="1420"/><text x="20.3259%" y="879.50">datafusi..</text></g><g><title>__GI___libc_malloc (69 samples, 0.29%)</title><rect x="26.1187%" y="853" width="0.2878%" height="15" fill="rgb(212,65,23)" fg:x="6263" fg:w="69"/><text x="26.3687%" y="863.50"></text></g><g><title>_int_malloc (58 samples, 0.24%)</title><rect x="26.1646%" y="837" width="0.2419%" height="15" fill="rgb(230,222,46)" fg:x="6274" fg:w="58"/><text x="26.4146%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (77 samples, 0.32%)</title><rect x="26.1020%" y="869" width="0.3211%" height="15" fill="rgb(215,135,32)" fg:x="6259" fg:w="77"/><text x="26.3520%" y="879.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::PhysicalGroupBy as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="26.4231%" y="869" width="0.0250%" height="15" fill="rgb(246,101,22)" fg:x="6336" fg:w="6"/><text x="26.6731%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="26.4231%" y="853" width="0.0250%" height="15" fill="rgb(206,107,13)" fg:x="6336" fg:w="6"/><text x="26.6731%" y="863.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="26.4231%" y="837" width="0.0250%" height="15" fill="rgb(250,100,44)" fg:x="6336" fg:w="6"/><text x="26.6731%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::schema (3 samples, 0.01%)</title><rect x="26.4481%" y="869" width="0.0125%" height="15" fill="rgb(231,147,38)" fg:x="6342" fg:w="3"/><text x="26.6981%" y="879.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="26.4732%" y="869" width="0.0167%" height="15" fill="rgb(229,8,40)" fg:x="6348" fg:w="4"/><text x="26.7232%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="26.5065%" y="853" width="0.0125%" height="15" fill="rgb(221,135,30)" fg:x="6356" fg:w="3"/><text x="26.7565%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="26.5065%" y="869" width="0.0417%" height="15" fill="rgb(249,193,18)" fg:x="6356" fg:w="10"/><text x="26.7565%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="26.5190%" y="853" width="0.0292%" height="15" fill="rgb(209,133,39)" fg:x="6359" fg:w="7"/><text x="26.7690%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="26.5983%" y="773" width="0.0125%" height="15" fill="rgb(232,100,14)" fg:x="6378" fg:w="3"/><text x="26.8483%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.05%)</title><rect x="26.5858%" y="805" width="0.0459%" height="15" fill="rgb(224,185,1)" fg:x="6375" fg:w="11"/><text x="26.8358%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="26.5983%" y="789" width="0.0334%" height="15" fill="rgb(223,139,8)" fg:x="6378" fg:w="8"/><text x="26.8483%" y="799.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::create_physical_expr (5 samples, 0.02%)</title><rect x="26.6108%" y="773" width="0.0209%" height="15" fill="rgb(232,213,38)" fg:x="6381" fg:w="5"/><text x="26.8608%" y="783.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="26.7317%" y="773" width="0.0167%" height="15" fill="rgb(207,94,22)" fg:x="6410" fg:w="4"/><text x="26.9817%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.06%)</title><rect x="26.7150%" y="789" width="0.0626%" height="15" fill="rgb(219,183,54)" fg:x="6406" fg:w="15"/><text x="26.9650%" y="799.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="26.7484%" y="773" width="0.0292%" height="15" fill="rgb(216,185,54)" fg:x="6414" fg:w="7"/><text x="26.9984%" y="783.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="26.7818%" y="789" width="0.0167%" height="15" fill="rgb(254,217,39)" fg:x="6422" fg:w="4"/><text x="27.0318%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="26.7984%" y="789" width="0.0167%" height="15" fill="rgb(240,178,23)" fg:x="6426" fg:w="4"/><text x="27.0484%" y="799.50"></text></g><g><title>__rust_dealloc (3 samples, 0.01%)</title><rect x="26.8151%" y="789" width="0.0125%" height="15" fill="rgb(218,11,47)" fg:x="6430" fg:w="3"/><text x="27.0651%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.04%)</title><rect x="26.8527%" y="757" width="0.0375%" height="15" fill="rgb(218,51,51)" fg:x="6439" fg:w="9"/><text x="27.1027%" y="767.50"></text></g><g><title>&lt;datafusion_physical_expr::expressions::column::Column as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::data_type (5 samples, 0.02%)</title><rect x="26.8693%" y="741" width="0.0209%" height="15" fill="rgb(238,126,27)" fg:x="6443" fg:w="5"/><text x="27.1193%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 0.06%)</title><rect x="26.8318%" y="789" width="0.0626%" height="15" fill="rgb(249,202,22)" fg:x="6434" fg:w="15"/><text x="27.0818%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.05%)</title><rect x="26.8402%" y="773" width="0.0542%" height="15" fill="rgb(254,195,49)" fg:x="6436" fg:w="13"/><text x="27.0902%" y="783.50"></text></g><g><title>datafusion::physical_plan::udaf::create_aggregate_expr (64 samples, 0.27%)</title><rect x="26.6316%" y="805" width="0.2669%" height="15" fill="rgb(208,123,14)" fg:x="6386" fg:w="64"/><text x="26.8816%" y="815.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="26.9069%" y="789" width="0.0125%" height="15" fill="rgb(224,200,8)" fg:x="6452" fg:w="3"/><text x="27.1569%" y="799.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="26.9402%" y="789" width="0.0209%" height="15" fill="rgb(217,61,36)" fg:x="6460" fg:w="5"/><text x="27.1902%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.02%)</title><rect x="26.9819%" y="565" width="0.0209%" height="15" fill="rgb(206,35,45)" fg:x="6470" fg:w="5"/><text x="27.2319%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.02%)</title><rect x="26.9819%" y="549" width="0.0209%" height="15" fill="rgb(217,65,33)" fg:x="6470" fg:w="5"/><text x="27.2319%" y="559.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.02%)</title><rect x="26.9819%" y="533" width="0.0209%" height="15" fill="rgb(222,158,48)" fg:x="6470" fg:w="5"/><text x="27.2319%" y="543.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="26.9861%" y="517" width="0.0167%" height="15" fill="rgb(254,2,54)" fg:x="6471" fg:w="4"/><text x="27.2361%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.14%)</title><rect x="26.9819%" y="581" width="0.1376%" height="15" fill="rgb(250,143,38)" fg:x="6470" fg:w="33"/><text x="27.2319%" y="591.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.12%)</title><rect x="27.0028%" y="565" width="0.1168%" height="15" fill="rgb(248,25,0)" fg:x="6475" fg:w="28"/><text x="27.2528%" y="575.50"></text></g><g><title>_int_malloc (23 samples, 0.10%)</title><rect x="27.0236%" y="549" width="0.0959%" height="15" fill="rgb(206,152,27)" fg:x="6480" fg:w="23"/><text x="27.2736%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.14%)</title><rect x="26.9819%" y="645" width="0.1418%" height="15" fill="rgb(240,77,30)" fg:x="6470" fg:w="34"/><text x="27.2319%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.14%)</title><rect x="26.9819%" y="629" width="0.1418%" height="15" fill="rgb(231,5,3)" fg:x="6470" fg:w="34"/><text x="27.2319%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.14%)</title><rect x="26.9819%" y="613" width="0.1418%" height="15" fill="rgb(207,226,32)" fg:x="6470" fg:w="34"/><text x="27.2319%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.14%)</title><rect x="26.9819%" y="597" width="0.1418%" height="15" fill="rgb(222,207,47)" fg:x="6470" fg:w="34"/><text x="27.2319%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (36 samples, 0.15%)</title><rect x="26.9819%" y="741" width="0.1501%" height="15" fill="rgb(229,115,45)" fg:x="6470" fg:w="36"/><text x="27.2319%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36 samples, 0.15%)</title><rect x="26.9819%" y="725" width="0.1501%" height="15" fill="rgb(224,191,6)" fg:x="6470" fg:w="36"/><text x="27.2319%" y="735.50"></text></g><g><title>alloc::string::String::push_str (36 samples, 0.15%)</title><rect x="26.9819%" y="709" width="0.1501%" height="15" fill="rgb(230,227,24)" fg:x="6470" fg:w="36"/><text x="27.2319%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.15%)</title><rect x="26.9819%" y="693" width="0.1501%" height="15" fill="rgb(228,80,19)" fg:x="6470" fg:w="36"/><text x="27.2319%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.15%)</title><rect x="26.9819%" y="677" width="0.1501%" height="15" fill="rgb(247,229,0)" fg:x="6470" fg:w="36"/><text x="27.2319%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.15%)</title><rect x="26.9819%" y="661" width="0.1501%" height="15" fill="rgb(237,194,15)" fg:x="6470" fg:w="36"/><text x="27.2319%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (4 samples, 0.02%)</title><rect x="27.1321%" y="741" width="0.0167%" height="15" fill="rgb(219,203,20)" fg:x="6506" fg:w="4"/><text x="27.3821%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (47 samples, 0.20%)</title><rect x="26.9611%" y="789" width="0.1960%" height="15" fill="rgb(234,128,8)" fg:x="6465" fg:w="47"/><text x="27.2111%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (44 samples, 0.18%)</title><rect x="26.9736%" y="773" width="0.1835%" height="15" fill="rgb(248,202,8)" fg:x="6468" fg:w="44"/><text x="27.2236%" y="783.50"></text></g><g><title>core::fmt::write (44 samples, 0.18%)</title><rect x="26.9736%" y="757" width="0.1835%" height="15" fill="rgb(206,104,37)" fg:x="6468" fg:w="44"/><text x="27.2236%" y="767.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="27.1654%" y="773" width="0.0167%" height="15" fill="rgb(223,8,27)" fg:x="6514" fg:w="4"/><text x="27.4154%" y="783.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="27.1696%" y="757" width="0.0125%" height="15" fill="rgb(216,217,28)" fg:x="6515" fg:w="3"/><text x="27.4196%" y="767.50"></text></g><g><title>alloc::str::join_generic_copy (9 samples, 0.04%)</title><rect x="27.1571%" y="789" width="0.0375%" height="15" fill="rgb(249,199,1)" fg:x="6512" fg:w="9"/><text x="27.4071%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="27.1821%" y="773" width="0.0125%" height="15" fill="rgb(240,85,17)" fg:x="6518" fg:w="3"/><text x="27.4321%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="773" width="0.0125%" height="15" fill="rgb(206,108,45)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="757" width="0.0125%" height="15" fill="rgb(245,210,41)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="741" width="0.0125%" height="15" fill="rgb(206,13,37)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="725" width="0.0125%" height="15" fill="rgb(250,61,18)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="709" width="0.0125%" height="15" fill="rgb(235,172,48)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="693" width="0.0125%" height="15" fill="rgb(249,201,17)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="677" width="0.0125%" height="15" fill="rgb(219,208,6)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="661" width="0.0125%" height="15" fill="rgb(248,31,23)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="645" width="0.0125%" height="15" fill="rgb(245,15,42)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="629" width="0.0125%" height="15" fill="rgb(222,217,39)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="27.2155%" y="613" width="0.0125%" height="15" fill="rgb(210,219,27)" fg:x="6526" fg:w="3"/><text x="27.4655%" y="623.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="27.2280%" y="581" width="0.0917%" height="15" fill="rgb(252,166,36)" fg:x="6529" fg:w="22"/><text x="27.4780%" y="591.50"></text></g><g><title>_int_malloc (17 samples, 0.07%)</title><rect x="27.2488%" y="565" width="0.0709%" height="15" fill="rgb(245,132,34)" fg:x="6534" fg:w="17"/><text x="27.4988%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (184 samples, 0.77%)</title><rect x="26.5566%" y="837" width="0.7673%" height="15" fill="rgb(236,54,3)" fg:x="6368" fg:w="184"/><text x="26.8066%" y="847.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::create_aggregate_expr (182 samples, 0.76%)</title><rect x="26.5649%" y="821" width="0.7590%" height="15" fill="rgb(241,173,43)" fg:x="6370" fg:w="182"/><text x="26.8149%" y="831.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::create_physical_name (102 samples, 0.43%)</title><rect x="26.8985%" y="805" width="0.4254%" height="15" fill="rgb(215,190,9)" fg:x="6450" fg:w="102"/><text x="27.1485%" y="815.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::create_physical_name (31 samples, 0.13%)</title><rect x="27.1946%" y="789" width="0.1293%" height="15" fill="rgb(242,101,16)" fg:x="6521" fg:w="31"/><text x="27.4446%" y="799.50"></text></g><g><title>datafusion_common::column::Column::flat_name (23 samples, 0.10%)</title><rect x="27.2280%" y="773" width="0.0959%" height="15" fill="rgb(223,190,21)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (23 samples, 0.10%)</title><rect x="27.2280%" y="757" width="0.0959%" height="15" fill="rgb(215,228,25)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.10%)</title><rect x="27.2280%" y="741" width="0.0959%" height="15" fill="rgb(225,36,22)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.10%)</title><rect x="27.2280%" y="725" width="0.0959%" height="15" fill="rgb(251,106,46)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.10%)</title><rect x="27.2280%" y="709" width="0.0959%" height="15" fill="rgb(208,90,1)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.10%)</title><rect x="27.2280%" y="693" width="0.0959%" height="15" fill="rgb(243,10,4)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.10%)</title><rect x="27.2280%" y="677" width="0.0959%" height="15" fill="rgb(212,137,27)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.10%)</title><rect x="27.2280%" y="661" width="0.0959%" height="15" fill="rgb(231,220,49)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.10%)</title><rect x="27.2280%" y="645" width="0.0959%" height="15" fill="rgb(237,96,20)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.10%)</title><rect x="27.2280%" y="629" width="0.0959%" height="15" fill="rgb(239,229,30)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.10%)</title><rect x="27.2280%" y="613" width="0.0959%" height="15" fill="rgb(219,65,33)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="623.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.10%)</title><rect x="27.2280%" y="597" width="0.0959%" height="15" fill="rgb(243,134,7)" fg:x="6529" fg:w="23"/><text x="27.4780%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (187 samples, 0.78%)</title><rect x="26.5482%" y="869" width="0.7798%" height="15" fill="rgb(216,177,54)" fg:x="6366" fg:w="187"/><text x="26.7982%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (186 samples, 0.78%)</title><rect x="26.5524%" y="853" width="0.7757%" height="15" fill="rgb(211,160,20)" fg:x="6367" fg:w="186"/><text x="26.8024%" y="863.50"></text></g><g><title>__rust_dealloc (3 samples, 0.01%)</title><rect x="27.4490%" y="837" width="0.0125%" height="15" fill="rgb(239,85,39)" fg:x="6582" fg:w="3"/><text x="27.6990%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.05%)</title><rect x="27.4323%" y="853" width="0.0459%" height="15" fill="rgb(232,125,22)" fg:x="6578" fg:w="11"/><text x="27.6823%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="27.4782%" y="853" width="0.0125%" height="15" fill="rgb(244,57,34)" fg:x="6589" fg:w="3"/><text x="27.7282%" y="863.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::schema (3 samples, 0.01%)</title><rect x="27.4907%" y="853" width="0.0125%" height="15" fill="rgb(214,203,32)" fg:x="6592" fg:w="3"/><text x="27.7407%" y="863.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="27.5032%" y="837" width="0.0167%" height="15" fill="rgb(207,58,43)" fg:x="6595" fg:w="4"/><text x="27.7532%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::field (11 samples, 0.05%)</title><rect x="27.5032%" y="853" width="0.0459%" height="15" fill="rgb(215,193,15)" fg:x="6595" fg:w="11"/><text x="27.7532%" y="863.50"></text></g><g><title>arrow_schema::field::Field::new (7 samples, 0.03%)</title><rect x="27.5199%" y="837" width="0.0292%" height="15" fill="rgb(232,15,44)" fg:x="6599" fg:w="7"/><text x="27.7699%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="27.5241%" y="821" width="0.0250%" height="15" fill="rgb(212,3,48)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="27.5241%" y="805" width="0.0250%" height="15" fill="rgb(218,128,7)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="27.5241%" y="789" width="0.0250%" height="15" fill="rgb(226,216,39)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="27.5241%" y="773" width="0.0250%" height="15" fill="rgb(243,47,51)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="27.5241%" y="757" width="0.0250%" height="15" fill="rgb(241,183,40)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="27.5241%" y="741" width="0.0250%" height="15" fill="rgb(231,217,32)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="27.5241%" y="725" width="0.0250%" height="15" fill="rgb(229,61,38)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.03%)</title><rect x="27.5241%" y="709" width="0.0250%" height="15" fill="rgb(225,210,5)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="27.5241%" y="693" width="0.0250%" height="15" fill="rgb(231,79,45)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="27.5241%" y="677" width="0.0250%" height="15" fill="rgb(224,100,7)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="687.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="27.5241%" y="661" width="0.0250%" height="15" fill="rgb(241,198,18)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="671.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="27.5241%" y="645" width="0.0250%" height="15" fill="rgb(252,97,53)" fg:x="6600" fg:w="6"/><text x="27.7741%" y="655.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="27.5324%" y="629" width="0.0167%" height="15" fill="rgb(220,88,7)" fg:x="6602" fg:w="4"/><text x="27.7824%" y="639.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="27.5908%" y="805" width="0.0125%" height="15" fill="rgb(213,176,14)" fg:x="6616" fg:w="3"/><text x="27.8408%" y="815.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.08%)</title><rect x="27.6200%" y="549" width="0.0751%" height="15" fill="rgb(246,73,7)" fg:x="6623" fg:w="18"/><text x="27.8700%" y="559.50"></text></g><g><title>_int_malloc (12 samples, 0.05%)</title><rect x="27.6450%" y="533" width="0.0500%" height="15" fill="rgb(245,64,36)" fg:x="6629" fg:w="12"/><text x="27.8950%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.09%)</title><rect x="27.6200%" y="725" width="0.0917%" height="15" fill="rgb(245,80,10)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.09%)</title><rect x="27.6200%" y="709" width="0.0917%" height="15" fill="rgb(232,107,50)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="719.50"></text></g><g><title>alloc::string::String::push_str (22 samples, 0.09%)</title><rect x="27.6200%" y="693" width="0.0917%" height="15" fill="rgb(253,3,0)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.09%)</title><rect x="27.6200%" y="677" width="0.0917%" height="15" fill="rgb(212,99,53)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.09%)</title><rect x="27.6200%" y="661" width="0.0917%" height="15" fill="rgb(249,111,54)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.09%)</title><rect x="27.6200%" y="645" width="0.0917%" height="15" fill="rgb(249,55,30)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.09%)</title><rect x="27.6200%" y="629" width="0.0917%" height="15" fill="rgb(237,47,42)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.09%)</title><rect x="27.6200%" y="613" width="0.0917%" height="15" fill="rgb(211,20,18)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.09%)</title><rect x="27.6200%" y="597" width="0.0917%" height="15" fill="rgb(231,203,46)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.09%)</title><rect x="27.6200%" y="581" width="0.0917%" height="15" fill="rgb(237,142,3)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.09%)</title><rect x="27.6200%" y="565" width="0.0917%" height="15" fill="rgb(241,107,1)" fg:x="6623" fg:w="22"/><text x="27.8700%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.02%)</title><rect x="27.6951%" y="549" width="0.0167%" height="15" fill="rgb(229,83,13)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="533" width="0.0167%" height="15" fill="rgb(241,91,40)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="517" width="0.0167%" height="15" fill="rgb(225,3,45)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="501" width="0.0167%" height="15" fill="rgb(244,223,14)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="485" width="0.0167%" height="15" fill="rgb(224,124,37)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="469" width="0.0167%" height="15" fill="rgb(251,171,30)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="453" width="0.0167%" height="15" fill="rgb(236,46,54)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="437" width="0.0167%" height="15" fill="rgb(245,213,5)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="421" width="0.0167%" height="15" fill="rgb(230,144,27)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="405" width="0.0167%" height="15" fill="rgb(220,86,6)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="389" width="0.0167%" height="15" fill="rgb(240,20,13)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="27.6951%" y="373" width="0.0167%" height="15" fill="rgb(217,89,34)" fg:x="6641" fg:w="4"/><text x="27.9451%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (27 samples, 0.11%)</title><rect x="27.6033%" y="805" width="0.1126%" height="15" fill="rgb(229,13,5)" fg:x="6619" fg:w="27"/><text x="27.8533%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (24 samples, 0.10%)</title><rect x="27.6158%" y="789" width="0.1001%" height="15" fill="rgb(244,67,35)" fg:x="6622" fg:w="24"/><text x="27.8658%" y="799.50"></text></g><g><title>core::fmt::write (24 samples, 0.10%)</title><rect x="27.6158%" y="773" width="0.1001%" height="15" fill="rgb(221,40,2)" fg:x="6622" fg:w="24"/><text x="27.8658%" y="783.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (24 samples, 0.10%)</title><rect x="27.6158%" y="757" width="0.1001%" height="15" fill="rgb(237,157,21)" fg:x="6622" fg:w="24"/><text x="27.8658%" y="767.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (24 samples, 0.10%)</title><rect x="27.6158%" y="741" width="0.1001%" height="15" fill="rgb(222,94,11)" fg:x="6622" fg:w="24"/><text x="27.8658%" y="751.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.02%)</title><rect x="27.7326%" y="741" width="0.0209%" height="15" fill="rgb(249,113,6)" fg:x="6650" fg:w="5"/><text x="27.9826%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.08%)</title><rect x="27.7535%" y="565" width="0.0792%" height="15" fill="rgb(238,137,36)" fg:x="6655" fg:w="19"/><text x="28.0035%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.08%)</title><rect x="27.7535%" y="549" width="0.0792%" height="15" fill="rgb(210,102,26)" fg:x="6655" fg:w="19"/><text x="28.0035%" y="559.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.08%)</title><rect x="27.7535%" y="533" width="0.0792%" height="15" fill="rgb(218,30,30)" fg:x="6655" fg:w="19"/><text x="28.0035%" y="543.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.08%)</title><rect x="27.7535%" y="517" width="0.0792%" height="15" fill="rgb(214,67,26)" fg:x="6655" fg:w="19"/><text x="28.0035%" y="527.50"></text></g><g><title>_int_realloc (14 samples, 0.06%)</title><rect x="27.7743%" y="501" width="0.0584%" height="15" fill="rgb(251,9,53)" fg:x="6660" fg:w="14"/><text x="28.0243%" y="511.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="27.8202%" y="485" width="0.0125%" height="15" fill="rgb(228,204,25)" fg:x="6671" fg:w="3"/><text x="28.0702%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.15%)</title><rect x="27.7535%" y="645" width="0.1460%" height="15" fill="rgb(207,153,8)" fg:x="6655" fg:w="35"/><text x="28.0035%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.15%)</title><rect x="27.7535%" y="629" width="0.1460%" height="15" fill="rgb(242,9,16)" fg:x="6655" fg:w="35"/><text x="28.0035%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.15%)</title><rect x="27.7535%" y="613" width="0.1460%" height="15" fill="rgb(217,211,10)" fg:x="6655" fg:w="35"/><text x="28.0035%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.15%)</title><rect x="27.7535%" y="597" width="0.1460%" height="15" fill="rgb(219,228,52)" fg:x="6655" fg:w="35"/><text x="28.0035%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.15%)</title><rect x="27.7535%" y="581" width="0.1460%" height="15" fill="rgb(231,92,29)" fg:x="6655" fg:w="35"/><text x="28.0035%" y="591.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.07%)</title><rect x="27.8327%" y="565" width="0.0667%" height="15" fill="rgb(232,8,23)" fg:x="6674" fg:w="16"/><text x="28.0827%" y="575.50"></text></g><g><title>_int_malloc (11 samples, 0.05%)</title><rect x="27.8535%" y="549" width="0.0459%" height="15" fill="rgb(216,211,34)" fg:x="6679" fg:w="11"/><text x="28.1035%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (81 samples, 0.34%)</title><rect x="27.5658%" y="821" width="0.3378%" height="15" fill="rgb(236,151,0)" fg:x="6610" fg:w="81"/><text x="27.8158%" y="831.50"></text></g><g><title>datafusion_physical_expr::expressions::format_state_name (45 samples, 0.19%)</title><rect x="27.7159%" y="805" width="0.1877%" height="15" fill="rgb(209,168,3)" fg:x="6646" fg:w="45"/><text x="27.9659%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (44 samples, 0.18%)</title><rect x="27.7201%" y="789" width="0.1835%" height="15" fill="rgb(208,129,28)" fg:x="6647" fg:w="44"/><text x="27.9701%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (41 samples, 0.17%)</title><rect x="27.7326%" y="773" width="0.1710%" height="15" fill="rgb(229,78,22)" fg:x="6650" fg:w="41"/><text x="27.9826%" y="783.50"></text></g><g><title>core::fmt::write (41 samples, 0.17%)</title><rect x="27.7326%" y="757" width="0.1710%" height="15" fill="rgb(228,187,13)" fg:x="6650" fg:w="41"/><text x="27.9826%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (36 samples, 0.15%)</title><rect x="27.7535%" y="741" width="0.1501%" height="15" fill="rgb(240,119,24)" fg:x="6655" fg:w="36"/><text x="28.0035%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36 samples, 0.15%)</title><rect x="27.7535%" y="725" width="0.1501%" height="15" fill="rgb(209,194,42)" fg:x="6655" fg:w="36"/><text x="28.0035%" y="735.50"></text></g><g><title>alloc::string::String::push_str (36 samples, 0.15%)</title><rect x="27.7535%" y="709" width="0.1501%" height="15" fill="rgb(247,200,46)" fg:x="6655" fg:w="36"/><text x="28.0035%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.15%)</title><rect x="27.7535%" y="693" width="0.1501%" height="15" fill="rgb(218,76,16)" fg:x="6655" fg:w="36"/><text x="28.0035%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.15%)</title><rect x="27.7535%" y="677" width="0.1501%" height="15" fill="rgb(225,21,48)" fg:x="6655" fg:w="36"/><text x="28.0035%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.15%)</title><rect x="27.7535%" y="661" width="0.1501%" height="15" fill="rgb(239,223,50)" fg:x="6655" fg:w="36"/><text x="28.0035%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (84 samples, 0.35%)</title><rect x="27.5574%" y="837" width="0.3503%" height="15" fill="rgb(244,45,21)" fg:x="6608" fg:w="84"/><text x="27.8074%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::state_fields (88 samples, 0.37%)</title><rect x="27.5491%" y="853" width="0.3670%" height="15" fill="rgb(232,33,43)" fg:x="6606" fg:w="88"/><text x="27.7991%" y="863.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.06%)</title><rect x="27.9203%" y="853" width="0.0584%" height="15" fill="rgb(209,8,3)" fg:x="6695" fg:w="14"/><text x="28.1703%" y="863.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="27.9536%" y="837" width="0.0250%" height="15" fill="rgb(214,25,53)" fg:x="6703" fg:w="6"/><text x="28.2036%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="27.9786%" y="853" width="0.0125%" height="15" fill="rgb(254,186,54)" fg:x="6709" fg:w="3"/><text x="28.2286%" y="863.50"></text></g><g><title>datafusion::physical_plan::aggregates::AggregateExec::try_new (168 samples, 0.70%)</title><rect x="27.3364%" y="869" width="0.7006%" height="15" fill="rgb(208,174,49)" fg:x="6555" fg:w="168"/><text x="27.5864%" y="879.50"></text></g><g><title>arrow_schema::schema::Schema::new (6 samples, 0.03%)</title><rect x="28.0120%" y="853" width="0.0250%" height="15" fill="rgb(233,191,51)" fg:x="6717" fg:w="6"/><text x="28.2620%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="837" width="0.0167%" height="15" fill="rgb(222,134,10)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="821" width="0.0167%" height="15" fill="rgb(230,226,20)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="805" width="0.0167%" height="15" fill="rgb(251,111,25)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="789" width="0.0167%" height="15" fill="rgb(224,40,46)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="773" width="0.0167%" height="15" fill="rgb(236,108,47)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="757" width="0.0167%" height="15" fill="rgb(234,93,0)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="741" width="0.0167%" height="15" fill="rgb(224,213,32)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="725" width="0.0167%" height="15" fill="rgb(251,11,48)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="709" width="0.0167%" height="15" fill="rgb(236,173,5)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="693" width="0.0167%" height="15" fill="rgb(230,95,12)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.0204%" y="677" width="0.0167%" height="15" fill="rgb(232,209,1)" fg:x="6719" fg:w="4"/><text x="28.2704%" y="687.50"></text></g><g><title>datafusion::physical_plan::aggregates::PhysicalGroupBy::new_single (4 samples, 0.02%)</title><rect x="28.0370%" y="869" width="0.0167%" height="15" fill="rgb(232,6,1)" fg:x="6723" fg:w="4"/><text x="28.2870%" y="879.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="28.0412%" y="853" width="0.0125%" height="15" fill="rgb(210,224,50)" fg:x="6724" fg:w="3"/><text x="28.2912%" y="863.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::schema (7 samples, 0.03%)</title><rect x="28.0537%" y="869" width="0.0292%" height="15" fill="rgb(228,127,35)" fg:x="6727" fg:w="7"/><text x="28.3037%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="28.2330%" y="837" width="0.0167%" height="15" fill="rgb(245,102,45)" fg:x="6770" fg:w="4"/><text x="28.4830%" y="847.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (14 samples, 0.06%)</title><rect x="28.2038%" y="853" width="0.0584%" height="15" fill="rgb(214,1,49)" fg:x="6763" fg:w="14"/><text x="28.4538%" y="863.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="28.2956%" y="837" width="0.0167%" height="15" fill="rgb(226,163,40)" fg:x="6785" fg:w="4"/><text x="28.5456%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.14%)</title><rect x="28.3123%" y="837" width="0.1376%" height="15" fill="rgb(239,212,28)" fg:x="6789" fg:w="33"/><text x="28.5623%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.14%)</title><rect x="28.3123%" y="821" width="0.1376%" height="15" fill="rgb(220,20,13)" fg:x="6789" fg:w="33"/><text x="28.5623%" y="831.50"></text></g><g><title>__GI___libc_realloc (33 samples, 0.14%)</title><rect x="28.3123%" y="805" width="0.1376%" height="15" fill="rgb(210,164,35)" fg:x="6789" fg:w="33"/><text x="28.5623%" y="815.50"></text></g><g><title>_int_realloc (32 samples, 0.13%)</title><rect x="28.3164%" y="789" width="0.1335%" height="15" fill="rgb(248,109,41)" fg:x="6790" fg:w="32"/><text x="28.5664%" y="799.50"></text></g><g><title>_int_malloc (32 samples, 0.13%)</title><rect x="28.3164%" y="773" width="0.1335%" height="15" fill="rgb(238,23,50)" fg:x="6790" fg:w="32"/><text x="28.5664%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.11%)</title><rect x="28.3415%" y="757" width="0.1084%" height="15" fill="rgb(211,48,49)" fg:x="6796" fg:w="26"/><text x="28.5915%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.10%)</title><rect x="28.3498%" y="741" width="0.1001%" height="15" fill="rgb(223,36,21)" fg:x="6798" fg:w="24"/><text x="28.5998%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.10%)</title><rect x="28.3498%" y="725" width="0.1001%" height="15" fill="rgb(207,123,46)" fg:x="6798" fg:w="24"/><text x="28.5998%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.10%)</title><rect x="28.3540%" y="709" width="0.0959%" height="15" fill="rgb(240,218,32)" fg:x="6799" fg:w="23"/><text x="28.6040%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (21 samples, 0.09%)</title><rect x="28.3623%" y="693" width="0.0876%" height="15" fill="rgb(252,5,43)" fg:x="6801" fg:w="21"/><text x="28.6123%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.07%)</title><rect x="28.3832%" y="677" width="0.0667%" height="15" fill="rgb(252,84,19)" fg:x="6806" fg:w="16"/><text x="28.6332%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.05%)</title><rect x="28.3957%" y="661" width="0.0542%" height="15" fill="rgb(243,152,39)" fg:x="6809" fg:w="13"/><text x="28.6457%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.04%)</title><rect x="28.4082%" y="645" width="0.0417%" height="15" fill="rgb(234,160,15)" fg:x="6812" fg:w="10"/><text x="28.6582%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="28.4165%" y="629" width="0.0334%" height="15" fill="rgb(237,34,20)" fg:x="6814" fg:w="8"/><text x="28.6665%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="28.4165%" y="613" width="0.0334%" height="15" fill="rgb(229,97,13)" fg:x="6814" fg:w="8"/><text x="28.6665%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="28.4165%" y="597" width="0.0334%" height="15" fill="rgb(234,71,50)" fg:x="6814" fg:w="8"/><text x="28.6665%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="28.4207%" y="581" width="0.0292%" height="15" fill="rgb(253,155,4)" fg:x="6815" fg:w="7"/><text x="28.6707%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="28.4332%" y="565" width="0.0167%" height="15" fill="rgb(222,185,37)" fg:x="6818" fg:w="4"/><text x="28.6832%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.20%)</title><rect x="28.2622%" y="853" width="0.1960%" height="15" fill="rgb(251,177,13)" fg:x="6777" fg:w="47"/><text x="28.5122%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="28.4791%" y="837" width="0.0209%" height="15" fill="rgb(250,179,40)" fg:x="6829" fg:w="5"/><text x="28.7291%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.02%)</title><rect x="28.4833%" y="821" width="0.0167%" height="15" fill="rgb(242,44,2)" fg:x="6830" fg:w="4"/><text x="28.7333%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (21 samples, 0.09%)</title><rect x="28.4624%" y="853" width="0.0876%" height="15" fill="rgb(216,177,13)" fg:x="6825" fg:w="21"/><text x="28.7124%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.05%)</title><rect x="28.4999%" y="837" width="0.0500%" height="15" fill="rgb(216,106,43)" fg:x="6834" fg:w="12"/><text x="28.7499%" y="847.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="28.5375%" y="821" width="0.0125%" height="15" fill="rgb(216,183,2)" fg:x="6843" fg:w="3"/><text x="28.7875%" y="831.50"></text></g><g><title>__GI___libc_free (8 samples, 0.03%)</title><rect x="28.5500%" y="853" width="0.0334%" height="15" fill="rgb(249,75,3)" fg:x="6846" fg:w="8"/><text x="28.8000%" y="863.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="28.5833%" y="853" width="0.0167%" height="15" fill="rgb(219,67,39)" fg:x="6854" fg:w="4"/><text x="28.8333%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="28.6000%" y="853" width="0.0250%" height="15" fill="rgb(253,228,2)" fg:x="6858" fg:w="6"/><text x="28.8500%" y="863.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="28.6250%" y="853" width="0.0125%" height="15" fill="rgb(235,138,27)" fg:x="6864" fg:w="3"/><text x="28.8750%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="28.6250%" y="837" width="0.0125%" height="15" fill="rgb(236,97,51)" fg:x="6864" fg:w="3"/><text x="28.8750%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="28.6417%" y="853" width="0.0167%" height="15" fill="rgb(240,80,30)" fg:x="6868" fg:w="4"/><text x="28.8917%" y="863.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="28.6876%" y="821" width="0.0209%" height="15" fill="rgb(230,178,19)" fg:x="6879" fg:w="5"/><text x="28.9376%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.07%)</title><rect x="28.6584%" y="853" width="0.0709%" height="15" fill="rgb(210,190,27)" fg:x="6872" fg:w="17"/><text x="28.9084%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (17 samples, 0.07%)</title><rect x="28.6584%" y="837" width="0.0709%" height="15" fill="rgb(222,107,31)" fg:x="6872" fg:w="17"/><text x="28.9084%" y="847.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="28.7085%" y="821" width="0.0209%" height="15" fill="rgb(216,127,34)" fg:x="6884" fg:w="5"/><text x="28.9585%" y="831.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="28.7418%" y="837" width="0.0167%" height="15" fill="rgb(234,116,52)" fg:x="6892" fg:w="4"/><text x="28.9918%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (9 samples, 0.04%)</title><rect x="28.7293%" y="853" width="0.0375%" height="15" fill="rgb(222,124,15)" fg:x="6889" fg:w="9"/><text x="28.9793%" y="863.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="28.8294%" y="821" width="0.0167%" height="15" fill="rgb(231,179,28)" fg:x="6913" fg:w="4"/><text x="29.0794%" y="831.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="28.9462%" y="773" width="0.0125%" height="15" fill="rgb(226,93,45)" fg:x="6941" fg:w="3"/><text x="29.1962%" y="783.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="30.1347%" y="741" width="0.0292%" height="15" fill="rgb(215,8,51)" fg:x="7226" fg:w="7"/><text x="30.3847%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (25 samples, 0.10%)</title><rect x="30.1639%" y="741" width="0.1043%" height="15" fill="rgb(223,106,5)" fg:x="7233" fg:w="25"/><text x="30.4139%" y="751.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (36 samples, 0.15%)</title><rect x="30.1222%" y="757" width="0.1501%" height="15" fill="rgb(250,191,5)" fg:x="7223" fg:w="36"/><text x="30.3722%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.11%)</title><rect x="30.2723%" y="757" width="0.1126%" height="15" fill="rgb(242,132,44)" fg:x="7259" fg:w="27"/><text x="30.5223%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.11%)</title><rect x="30.2765%" y="741" width="0.1084%" height="15" fill="rgb(251,152,29)" fg:x="7260" fg:w="26"/><text x="30.5265%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.11%)</title><rect x="30.2765%" y="725" width="0.1084%" height="15" fill="rgb(218,179,5)" fg:x="7260" fg:w="26"/><text x="30.5265%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.11%)</title><rect x="30.2765%" y="709" width="0.1084%" height="15" fill="rgb(227,67,19)" fg:x="7260" fg:w="26"/><text x="30.5265%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.11%)</title><rect x="30.2765%" y="693" width="0.1084%" height="15" fill="rgb(233,119,31)" fg:x="7260" fg:w="26"/><text x="30.5265%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.10%)</title><rect x="30.2807%" y="677" width="0.1043%" height="15" fill="rgb(241,120,22)" fg:x="7261" fg:w="25"/><text x="30.5307%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.10%)</title><rect x="30.2848%" y="661" width="0.1001%" height="15" fill="rgb(224,102,30)" fg:x="7262" fg:w="24"/><text x="30.5348%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.10%)</title><rect x="30.2890%" y="645" width="0.0959%" height="15" fill="rgb(210,164,37)" fg:x="7263" fg:w="23"/><text x="30.5390%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.08%)</title><rect x="30.3057%" y="629" width="0.0792%" height="15" fill="rgb(226,191,16)" fg:x="7267" fg:w="19"/><text x="30.5557%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (18 samples, 0.08%)</title><rect x="30.3099%" y="613" width="0.0751%" height="15" fill="rgb(214,40,45)" fg:x="7268" fg:w="18"/><text x="30.5599%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.07%)</title><rect x="30.3182%" y="597" width="0.0667%" height="15" fill="rgb(244,29,26)" fg:x="7270" fg:w="16"/><text x="30.5682%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.04%)</title><rect x="30.3474%" y="581" width="0.0375%" height="15" fill="rgb(216,16,5)" fg:x="7277" fg:w="9"/><text x="30.5974%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="30.3516%" y="565" width="0.0334%" height="15" fill="rgb(249,76,35)" fg:x="7278" fg:w="8"/><text x="30.6016%" y="575.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.04%)</title><rect x="30.3849%" y="757" width="0.0375%" height="15" fill="rgb(207,11,44)" fg:x="7286" fg:w="9"/><text x="30.6349%" y="767.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="30.4016%" y="741" width="0.0209%" height="15" fill="rgb(228,190,49)" fg:x="7290" fg:w="5"/><text x="30.6516%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="30.4225%" y="757" width="0.0125%" height="15" fill="rgb(214,173,12)" fg:x="7295" fg:w="3"/><text x="30.6725%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.04%)</title><rect x="30.4350%" y="757" width="0.0417%" height="15" fill="rgb(218,26,35)" fg:x="7298" fg:w="10"/><text x="30.6850%" y="767.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="30.4767%" y="757" width="0.0125%" height="15" fill="rgb(220,200,19)" fg:x="7308" fg:w="3"/><text x="30.7267%" y="767.50"></text></g><g><title>art_tree::common_prefix_len (3 samples, 0.01%)</title><rect x="30.4892%" y="757" width="0.0125%" height="15" fill="rgb(239,95,49)" fg:x="7311" fg:w="3"/><text x="30.7392%" y="767.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (442 samples, 1.84%)</title><rect x="28.9587%" y="773" width="1.8433%" height="15" fill="rgb(235,85,53)" fg:x="6944" fg:w="442"/><text x="29.2087%" y="783.50">a..</text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (72 samples, 0.30%)</title><rect x="30.5017%" y="757" width="0.3003%" height="15" fill="rgb(233,133,31)" fg:x="7314" fg:w="72"/><text x="30.7517%" y="767.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="30.8103%" y="757" width="0.0209%" height="15" fill="rgb(218,25,20)" fg:x="7388" fg:w="5"/><text x="31.0603%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="30.8311%" y="757" width="0.0125%" height="15" fill="rgb(252,210,38)" fg:x="7393" fg:w="3"/><text x="31.0811%" y="767.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (470 samples, 1.96%)</title><rect x="28.8878%" y="789" width="1.9600%" height="15" fill="rgb(242,134,21)" fg:x="6927" fg:w="470"/><text x="29.1378%" y="799.50">a..</text></g><g><title>art_tree::keys::ByteString::new (11 samples, 0.05%)</title><rect x="30.8020%" y="773" width="0.0459%" height="15" fill="rgb(213,28,48)" fg:x="7386" fg:w="11"/><text x="31.0520%" y="783.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.11%)</title><rect x="31.1356%" y="773" width="0.1084%" height="15" fill="rgb(250,196,2)" fg:x="7466" fg:w="26"/><text x="31.3856%" y="783.50"></text></g><g><title>_int_malloc (22 samples, 0.09%)</title><rect x="31.1523%" y="757" width="0.0917%" height="15" fill="rgb(227,5,17)" fg:x="7470" fg:w="22"/><text x="31.4023%" y="767.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (576 samples, 2.40%)</title><rect x="28.8461%" y="821" width="2.4021%" height="15" fill="rgb(221,226,24)" fg:x="6917" fg:w="576"/><text x="29.0961%" y="831.50">ad..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (574 samples, 2.39%)</title><rect x="28.8544%" y="805" width="2.3938%" height="15" fill="rgb(211,5,48)" fg:x="6919" fg:w="574"/><text x="29.1044%" y="815.50">st..</text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (96 samples, 0.40%)</title><rect x="30.8478%" y="789" width="0.4004%" height="15" fill="rgb(219,150,6)" fg:x="7397" fg:w="96"/><text x="31.0978%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="31.2482%" y="821" width="0.0125%" height="15" fill="rgb(251,46,16)" fg:x="7493" fg:w="3"/><text x="31.4982%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="31.2482%" y="805" width="0.0125%" height="15" fill="rgb(220,204,40)" fg:x="7493" fg:w="3"/><text x="31.4982%" y="815.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="31.2482%" y="789" width="0.0125%" height="15" fill="rgb(211,85,2)" fg:x="7493" fg:w="3"/><text x="31.4982%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.05%)</title><rect x="31.2899%" y="805" width="0.0542%" height="15" fill="rgb(229,17,7)" fg:x="7503" fg:w="13"/><text x="31.5399%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.03%)</title><rect x="31.3191%" y="789" width="0.0250%" height="15" fill="rgb(239,72,28)" fg:x="7510" fg:w="6"/><text x="31.5691%" y="799.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="31.4442%" y="773" width="0.0292%" height="15" fill="rgb(230,47,54)" fg:x="7540" fg:w="7"/><text x="31.6942%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (654 samples, 2.73%)</title><rect x="28.7668%" y="853" width="2.7274%" height="15" fill="rgb(214,50,8)" fg:x="6898" fg:w="654"/><text x="29.0168%" y="863.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (651 samples, 2.71%)</title><rect x="28.7793%" y="837" width="2.7149%" height="15" fill="rgb(216,198,43)" fg:x="6901" fg:w="651"/><text x="29.0293%" y="847.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (56 samples, 0.23%)</title><rect x="31.2607%" y="821" width="0.2335%" height="15" fill="rgb(234,20,35)" fg:x="7496" fg:w="56"/><text x="31.5107%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (36 samples, 0.15%)</title><rect x="31.3441%" y="805" width="0.1501%" height="15" fill="rgb(254,45,19)" fg:x="7516" fg:w="36"/><text x="31.5941%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.10%)</title><rect x="31.3941%" y="789" width="0.1001%" height="15" fill="rgb(219,14,44)" fg:x="7528" fg:w="24"/><text x="31.6441%" y="799.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (6 samples, 0.03%)</title><rect x="31.5026%" y="853" width="0.0250%" height="15" fill="rgb(217,220,26)" fg:x="7554" fg:w="6"/><text x="31.7526%" y="863.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::schema (4 samples, 0.02%)</title><rect x="31.5276%" y="853" width="0.0167%" height="15" fill="rgb(213,158,28)" fg:x="7560" fg:w="4"/><text x="31.7776%" y="863.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="31.6110%" y="805" width="0.0167%" height="15" fill="rgb(252,51,52)" fg:x="7580" fg:w="4"/><text x="31.8610%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="31.6027%" y="821" width="0.0334%" height="15" fill="rgb(246,89,16)" fg:x="7578" fg:w="8"/><text x="31.8527%" y="831.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="31.7778%" y="565" width="0.0167%" height="15" fill="rgb(216,158,49)" fg:x="7620" fg:w="4"/><text x="32.0278%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="31.7778%" y="661" width="0.0209%" height="15" fill="rgb(236,107,19)" fg:x="7620" fg:w="5"/><text x="32.0278%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="31.7778%" y="645" width="0.0209%" height="15" fill="rgb(228,185,30)" fg:x="7620" fg:w="5"/><text x="32.0278%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="31.7778%" y="629" width="0.0209%" height="15" fill="rgb(246,134,8)" fg:x="7620" fg:w="5"/><text x="32.0278%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="31.7778%" y="613" width="0.0209%" height="15" fill="rgb(214,143,50)" fg:x="7620" fg:w="5"/><text x="32.0278%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="31.7778%" y="597" width="0.0209%" height="15" fill="rgb(228,75,8)" fg:x="7620" fg:w="5"/><text x="32.0278%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="31.7778%" y="581" width="0.0209%" height="15" fill="rgb(207,175,4)" fg:x="7620" fg:w="5"/><text x="32.0278%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="31.7778%" y="741" width="0.0250%" height="15" fill="rgb(205,108,24)" fg:x="7620" fg:w="6"/><text x="32.0278%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="31.7778%" y="725" width="0.0250%" height="15" fill="rgb(244,120,49)" fg:x="7620" fg:w="6"/><text x="32.0278%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="31.7778%" y="709" width="0.0250%" height="15" fill="rgb(223,47,38)" fg:x="7620" fg:w="6"/><text x="32.0278%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="31.7778%" y="693" width="0.0250%" height="15" fill="rgb(229,179,11)" fg:x="7620" fg:w="6"/><text x="32.0278%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="31.7778%" y="677" width="0.0250%" height="15" fill="rgb(231,122,1)" fg:x="7620" fg:w="6"/><text x="32.0278%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.11%)</title><rect x="31.6986%" y="773" width="0.1126%" height="15" fill="rgb(245,119,9)" fg:x="7601" fg:w="27"/><text x="31.9486%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (16 samples, 0.07%)</title><rect x="31.7444%" y="757" width="0.0667%" height="15" fill="rgb(241,163,25)" fg:x="7612" fg:w="16"/><text x="31.9944%" y="767.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="31.8112%" y="773" width="0.0167%" height="15" fill="rgb(217,214,3)" fg:x="7628" fg:w="4"/><text x="32.0612%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.06%)</title><rect x="31.8278%" y="773" width="0.0584%" height="15" fill="rgb(240,86,28)" fg:x="7632" fg:w="14"/><text x="32.0778%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 0.23%)</title><rect x="31.6819%" y="789" width="0.2252%" height="15" fill="rgb(215,47,9)" fg:x="7597" fg:w="54"/><text x="31.9319%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="31.8862%" y="773" width="0.0209%" height="15" fill="rgb(252,25,45)" fg:x="7646" fg:w="5"/><text x="32.1362%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="31.8862%" y="757" width="0.0209%" height="15" fill="rgb(251,164,9)" fg:x="7646" fg:w="5"/><text x="32.1362%" y="767.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.02%)</title><rect x="31.8862%" y="741" width="0.0209%" height="15" fill="rgb(233,194,0)" fg:x="7646" fg:w="5"/><text x="32.1362%" y="751.50"></text></g><g><title>_int_realloc (5 samples, 0.02%)</title><rect x="31.8862%" y="725" width="0.0209%" height="15" fill="rgb(249,111,24)" fg:x="7646" fg:w="5"/><text x="32.1362%" y="735.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="31.8904%" y="709" width="0.0167%" height="15" fill="rgb(250,223,3)" fg:x="7647" fg:w="4"/><text x="32.1404%" y="719.50"></text></g><g><title>malloc_consolidate (3 samples, 0.01%)</title><rect x="31.8946%" y="693" width="0.0125%" height="15" fill="rgb(236,178,37)" fg:x="7648" fg:w="3"/><text x="32.1446%" y="703.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (81 samples, 0.34%)</title><rect x="31.5735%" y="837" width="0.3378%" height="15" fill="rgb(241,158,50)" fg:x="7571" fg:w="81"/><text x="31.8235%" y="847.50"></text></g><g><title>fastfull_search::datasources::posting_table::PostingExec::try_new (63 samples, 0.26%)</title><rect x="31.6485%" y="821" width="0.2627%" height="15" fill="rgb(213,121,41)" fg:x="7589" fg:w="63"/><text x="31.8985%" y="831.50"></text></g><g><title>datafusion::physical_plan::project_schema (59 samples, 0.25%)</title><rect x="31.6652%" y="805" width="0.2460%" height="15" fill="rgb(240,92,3)" fg:x="7593" fg:w="59"/><text x="31.9152%" y="815.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (91 samples, 0.38%)</title><rect x="31.5443%" y="853" width="0.3795%" height="15" fill="rgb(205,123,3)" fg:x="7564" fg:w="91"/><text x="31.7943%" y="863.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="31.9947%" y="805" width="0.0292%" height="15" fill="rgb(205,97,47)" fg:x="7672" fg:w="7"/><text x="32.2447%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.03%)</title><rect x="31.9947%" y="837" width="0.0334%" height="15" fill="rgb(247,152,14)" fg:x="7672" fg:w="8"/><text x="32.2447%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.03%)</title><rect x="31.9947%" y="821" width="0.0334%" height="15" fill="rgb(248,195,53)" fg:x="7672" fg:w="8"/><text x="32.2447%" y="831.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (6 samples, 0.03%)</title><rect x="32.0280%" y="837" width="0.0250%" height="15" fill="rgb(226,201,16)" fg:x="7680" fg:w="6"/><text x="32.2780%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="32.1031%" y="821" width="0.0125%" height="15" fill="rgb(205,98,0)" fg:x="7698" fg:w="3"/><text x="32.3531%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="32.1156%" y="821" width="0.0125%" height="15" fill="rgb(214,191,48)" fg:x="7701" fg:w="3"/><text x="32.3656%" y="831.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="32.1281%" y="821" width="0.0167%" height="15" fill="rgb(237,112,39)" fg:x="7704" fg:w="4"/><text x="32.3781%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.09%)</title><rect x="32.1448%" y="821" width="0.0917%" height="15" fill="rgb(247,203,27)" fg:x="7708" fg:w="22"/><text x="32.3948%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.06%)</title><rect x="32.1782%" y="805" width="0.0584%" height="15" fill="rgb(235,124,28)" fg:x="7716" fg:w="14"/><text x="32.4282%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="32.2616%" y="693" width="0.0167%" height="15" fill="rgb(208,207,46)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="32.2616%" y="677" width="0.0167%" height="15" fill="rgb(234,176,4)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="32.2616%" y="661" width="0.0167%" height="15" fill="rgb(230,133,28)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="32.2616%" y="645" width="0.0167%" height="15" fill="rgb(211,137,40)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="32.2616%" y="629" width="0.0167%" height="15" fill="rgb(254,35,13)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="32.2616%" y="613" width="0.0167%" height="15" fill="rgb(225,49,51)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="623.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="32.2616%" y="597" width="0.0167%" height="15" fill="rgb(251,10,15)" fg:x="7736" fg:w="4"/><text x="32.5116%" y="607.50"></text></g><g><title>datafusion_expr::expr::Expr::display_name (12 samples, 0.05%)</title><rect x="32.2365%" y="821" width="0.0500%" height="15" fill="rgb(228,207,15)" fg:x="7730" fg:w="12"/><text x="32.4865%" y="831.50"></text></g><g><title>datafusion_expr::expr::create_name (12 samples, 0.05%)</title><rect x="32.2365%" y="805" width="0.0500%" height="15" fill="rgb(241,99,19)" fg:x="7730" fg:w="12"/><text x="32.4865%" y="815.50"></text></g><g><title>datafusion_common::column::Column::flat_name (6 samples, 0.03%)</title><rect x="32.2616%" y="789" width="0.0250%" height="15" fill="rgb(207,104,49)" fg:x="7736" fg:w="6"/><text x="32.5116%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="32.2616%" y="773" width="0.0250%" height="15" fill="rgb(234,99,18)" fg:x="7736" fg:w="6"/><text x="32.5116%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="32.2616%" y="757" width="0.0250%" height="15" fill="rgb(213,191,49)" fg:x="7736" fg:w="6"/><text x="32.5116%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="32.2616%" y="741" width="0.0250%" height="15" fill="rgb(210,226,19)" fg:x="7736" fg:w="6"/><text x="32.5116%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="32.2616%" y="725" width="0.0250%" height="15" fill="rgb(229,97,18)" fg:x="7736" fg:w="6"/><text x="32.5116%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="32.2616%" y="709" width="0.0250%" height="15" fill="rgb(211,167,15)" fg:x="7736" fg:w="6"/><text x="32.5116%" y="719.50"></text></g><g><title>__GI___libc_malloc (49 samples, 0.20%)</title><rect x="32.2949%" y="805" width="0.2043%" height="15" fill="rgb(210,169,34)" fg:x="7744" fg:w="49"/><text x="32.5449%" y="815.50"></text></g><g><title>_int_malloc (42 samples, 0.18%)</title><rect x="32.3241%" y="789" width="0.1752%" height="15" fill="rgb(241,121,31)" fg:x="7751" fg:w="42"/><text x="32.5741%" y="799.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (139 samples, 0.58%)</title><rect x="31.9238%" y="853" width="0.5797%" height="15" fill="rgb(232,40,11)" fg:x="7655" fg:w="139"/><text x="32.1738%" y="863.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (108 samples, 0.45%)</title><rect x="32.0530%" y="837" width="0.4504%" height="15" fill="rgb(205,86,26)" fg:x="7686" fg:w="108"/><text x="32.3030%" y="847.50"></text></g><g><title>datafusion_physical_expr::expressions::column::Column::new (52 samples, 0.22%)</title><rect x="32.2866%" y="821" width="0.2169%" height="15" fill="rgb(231,126,28)" fg:x="7742" fg:w="52"/><text x="32.5366%" y="831.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="32.5034%" y="837" width="0.0250%" height="15" fill="rgb(219,221,18)" fg:x="7794" fg:w="6"/><text x="32.7534%" y="847.50"></text></g><g><title>malloc_consolidate (32 samples, 0.13%)</title><rect x="33.9422%" y="773" width="0.1335%" height="15" fill="rgb(211,40,0)" fg:x="8139" fg:w="32"/><text x="34.1922%" y="783.50"></text></g><g><title>__GI___libc_malloc (58 samples, 0.24%)</title><rect x="33.8546%" y="805" width="0.2419%" height="15" fill="rgb(239,85,43)" fg:x="8118" fg:w="58"/><text x="34.1046%" y="815.50"></text></g><g><title>_int_malloc (55 samples, 0.23%)</title><rect x="33.8671%" y="789" width="0.2294%" height="15" fill="rgb(231,55,21)" fg:x="8121" fg:w="55"/><text x="34.1171%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (5 samples, 0.02%)</title><rect x="34.0756%" y="773" width="0.0209%" height="15" fill="rgb(225,184,43)" fg:x="8171" fg:w="5"/><text x="34.3256%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (429 samples, 1.79%)</title><rect x="32.5326%" y="821" width="1.7891%" height="15" fill="rgb(251,158,41)" fg:x="7801" fg:w="429"/><text x="32.7826%" y="831.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (53 samples, 0.22%)</title><rect x="34.1007%" y="805" width="0.2210%" height="15" fill="rgb(234,159,37)" fg:x="8177" fg:w="53"/><text x="34.3507%" y="815.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (4,550 samples, 18.97%)</title><rect x="15.3593%" y="917" width="18.9749%" height="15" fill="rgb(216,204,22)" fg:x="3683" fg:w="4550"/><text x="15.6093%" y="927.50">&lt;fastfull_search::context::boo..</text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (4,550 samples, 18.97%)</title><rect x="15.3593%" y="901" width="18.9749%" height="15" fill="rgb(214,17,3)" fg:x="3683" fg:w="4550"/><text x="15.6093%" y="911.50">&lt;fastfull_search::optimizer::p..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (1,999 samples, 8.34%)</title><rect x="25.9977%" y="885" width="8.3365%" height="15" fill="rgb(212,111,17)" fg:x="6234" fg:w="1999"/><text x="26.2477%" y="895.50">fastfull_sea..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (1,499 samples, 6.25%)</title><rect x="28.0829%" y="869" width="6.2513%" height="15" fill="rgb(221,157,24)" fg:x="6734" fg:w="1499"/><text x="28.3329%" y="879.50">fastfull..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr::new (439 samples, 1.83%)</title><rect x="32.5034%" y="853" width="1.8308%" height="15" fill="rgb(252,16,13)" fg:x="7794" fg:w="439"/><text x="32.7534%" y="863.50">f..</text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (433 samples, 1.81%)</title><rect x="32.5285%" y="837" width="1.8057%" height="15" fill="rgb(221,62,2)" fg:x="7800" fg:w="433"/><text x="32.7785%" y="847.50">d..</text></g><g><title>&lt;datafusion::execution::memory_pool::pool::UnboundedMemoryPool as datafusion::execution::memory_pool::MemoryPool&gt;::try_grow (15 samples, 0.06%)</title><rect x="34.4718%" y="805" width="0.0626%" height="15" fill="rgb(247,87,22)" fg:x="8266" fg:w="15"/><text x="34.7218%" y="815.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="34.8722%" y="773" width="0.0334%" height="15" fill="rgb(215,73,9)" fg:x="8362" fg:w="8"/><text x="35.1222%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.14%)</title><rect x="34.7804%" y="789" width="0.1418%" height="15" fill="rgb(207,175,33)" fg:x="8340" fg:w="34"/><text x="35.0304%" y="799.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="34.9097%" y="773" width="0.0125%" height="15" fill="rgb(243,129,54)" fg:x="8371" fg:w="3"/><text x="35.1597%" y="783.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="34.9639%" y="757" width="0.0125%" height="15" fill="rgb(227,119,45)" fg:x="8384" fg:w="3"/><text x="35.2139%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="34.9764%" y="757" width="0.0334%" height="15" fill="rgb(205,109,36)" fg:x="8387" fg:w="8"/><text x="35.2264%" y="767.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (18 samples, 0.08%)</title><rect x="34.9514%" y="773" width="0.0751%" height="15" fill="rgb(205,6,39)" fg:x="8381" fg:w="18"/><text x="35.2014%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (4 samples, 0.02%)</title><rect x="35.0098%" y="757" width="0.0167%" height="15" fill="rgb(221,32,16)" fg:x="8395" fg:w="4"/><text x="35.2598%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (40 samples, 0.17%)</title><rect x="35.0348%" y="773" width="0.1668%" height="15" fill="rgb(228,144,50)" fg:x="8401" fg:w="40"/><text x="35.2848%" y="783.50"></text></g><g><title>_int_free (8 samples, 0.03%)</title><rect x="35.2058%" y="773" width="0.0334%" height="15" fill="rgb(229,201,53)" fg:x="8442" fg:w="8"/><text x="35.4558%" y="783.50"></text></g><g><title>_int_free (24 samples, 0.10%)</title><rect x="35.4685%" y="661" width="0.1001%" height="15" fill="rgb(249,153,27)" fg:x="8505" fg:w="24"/><text x="35.7185%" y="671.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (109 samples, 0.45%)</title><rect x="35.3142%" y="757" width="0.4546%" height="15" fill="rgb(227,106,25)" fg:x="8468" fg:w="109"/><text x="35.5642%" y="767.50"></text></g><g><title>__rdl_alloc (108 samples, 0.45%)</title><rect x="35.3184%" y="741" width="0.4504%" height="15" fill="rgb(230,65,29)" fg:x="8469" fg:w="108"/><text x="35.5684%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (108 samples, 0.45%)</title><rect x="35.3184%" y="725" width="0.4504%" height="15" fill="rgb(221,57,46)" fg:x="8469" fg:w="108"/><text x="35.5684%" y="735.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (108 samples, 0.45%)</title><rect x="35.3184%" y="709" width="0.4504%" height="15" fill="rgb(229,161,17)" fg:x="8469" fg:w="108"/><text x="35.5684%" y="719.50"></text></g><g><title>__posix_memalign (108 samples, 0.45%)</title><rect x="35.3184%" y="693" width="0.4504%" height="15" fill="rgb(222,213,11)" fg:x="8469" fg:w="108"/><text x="35.5684%" y="703.50"></text></g><g><title>_int_memalign (84 samples, 0.35%)</title><rect x="35.4185%" y="677" width="0.3503%" height="15" fill="rgb(235,35,13)" fg:x="8493" fg:w="84"/><text x="35.6685%" y="687.50"></text></g><g><title>_int_malloc (48 samples, 0.20%)</title><rect x="35.5686%" y="661" width="0.2002%" height="15" fill="rgb(233,158,34)" fg:x="8529" fg:w="48"/><text x="35.8186%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="35.7563%" y="645" width="0.0125%" height="15" fill="rgb(215,151,48)" fg:x="8574" fg:w="3"/><text x="36.0063%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="35.7563%" y="629" width="0.0125%" height="15" fill="rgb(229,84,14)" fg:x="8574" fg:w="3"/><text x="36.0063%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="35.7563%" y="613" width="0.0125%" height="15" fill="rgb(229,68,14)" fg:x="8574" fg:w="3"/><text x="36.0063%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="35.7563%" y="597" width="0.0125%" height="15" fill="rgb(243,106,26)" fg:x="8574" fg:w="3"/><text x="36.0063%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="35.7563%" y="581" width="0.0125%" height="15" fill="rgb(206,45,38)" fg:x="8574" fg:w="3"/><text x="36.0063%" y="591.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (128 samples, 0.53%)</title><rect x="35.2392%" y="773" width="0.5338%" height="15" fill="rgb(226,6,15)" fg:x="8450" fg:w="128"/><text x="35.4892%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="35.8022%" y="757" width="0.0334%" height="15" fill="rgb(232,22,54)" fg:x="8585" fg:w="8"/><text x="36.0522%" y="767.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (24 samples, 0.10%)</title><rect x="35.7730%" y="773" width="0.1001%" height="15" fill="rgb(229,222,32)" fg:x="8578" fg:w="24"/><text x="36.0230%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.04%)</title><rect x="35.8355%" y="757" width="0.0375%" height="15" fill="rgb(228,62,29)" fg:x="8593" fg:w="9"/><text x="36.0855%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="35.8564%" y="741" width="0.0167%" height="15" fill="rgb(251,103,34)" fg:x="8598" fg:w="4"/><text x="36.1064%" y="751.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (243 samples, 1.01%)</title><rect x="34.9222%" y="789" width="1.0134%" height="15" fill="rgb(233,12,30)" fg:x="8374" fg:w="243"/><text x="35.1722%" y="799.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (15 samples, 0.06%)</title><rect x="35.8731%" y="773" width="0.0626%" height="15" fill="rgb(238,52,0)" fg:x="8602" fg:w="15"/><text x="36.1231%" y="783.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.07%)</title><rect x="35.9398%" y="789" width="0.0667%" height="15" fill="rgb(223,98,5)" fg:x="8618" fg:w="16"/><text x="36.1898%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (25 samples, 0.10%)</title><rect x="36.0065%" y="789" width="0.1043%" height="15" fill="rgb(228,75,37)" fg:x="8634" fg:w="25"/><text x="36.2565%" y="799.50"></text></g><g><title>_int_free (10 samples, 0.04%)</title><rect x="36.1274%" y="789" width="0.0417%" height="15" fill="rgb(205,115,49)" fg:x="8663" fg:w="10"/><text x="36.3774%" y="799.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (24 samples, 0.10%)</title><rect x="36.1691%" y="789" width="0.1001%" height="15" fill="rgb(250,154,43)" fg:x="8673" fg:w="24"/><text x="36.4191%" y="799.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (14 samples, 0.06%)</title><rect x="36.2109%" y="773" width="0.0584%" height="15" fill="rgb(226,43,29)" fg:x="8683" fg:w="14"/><text x="36.4609%" y="783.50"></text></g><g><title>arrow_array::array::Array::len (3 samples, 0.01%)</title><rect x="36.2567%" y="757" width="0.0125%" height="15" fill="rgb(249,228,39)" fg:x="8694" fg:w="3"/><text x="36.5067%" y="767.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="36.3193%" y="773" width="0.0167%" height="15" fill="rgb(216,79,43)" fg:x="8709" fg:w="4"/><text x="36.5693%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="36.3360%" y="773" width="0.0125%" height="15" fill="rgb(228,95,12)" fg:x="8713" fg:w="3"/><text x="36.5860%" y="783.50"></text></g><g><title>arrow_schema::field::Field::new (23 samples, 0.10%)</title><rect x="36.2692%" y="789" width="0.0959%" height="15" fill="rgb(249,221,15)" fg:x="8697" fg:w="23"/><text x="36.5192%" y="799.50"></text></g><g><title>arrow_schema::schema::Schema::new (11 samples, 0.05%)</title><rect x="36.3652%" y="789" width="0.0459%" height="15" fill="rgb(233,34,13)" fg:x="8720" fg:w="11"/><text x="36.6152%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="757" width="0.0125%" height="15" fill="rgb(214,103,39)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="741" width="0.0125%" height="15" fill="rgb(251,126,39)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="725" width="0.0125%" height="15" fill="rgb(214,216,36)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="709" width="0.0125%" height="15" fill="rgb(220,221,8)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="693" width="0.0125%" height="15" fill="rgb(240,216,3)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="677" width="0.0125%" height="15" fill="rgb(232,218,17)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="661" width="0.0125%" height="15" fill="rgb(229,163,45)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="645" width="0.0125%" height="15" fill="rgb(231,110,42)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="629" width="0.0125%" height="15" fill="rgb(208,170,48)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="613" width="0.0125%" height="15" fill="rgb(239,116,25)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="41.4154%" y="597" width="0.0125%" height="15" fill="rgb(219,200,50)" fg:x="9931" fg:w="3"/><text x="41.6654%" y="607.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.04%)</title><rect x="41.4279%" y="757" width="0.0375%" height="15" fill="rgb(245,200,0)" fg:x="9934" fg:w="9"/><text x="41.6779%" y="767.50"></text></g><g><title>_int_free (65 samples, 0.27%)</title><rect x="41.8241%" y="677" width="0.2711%" height="15" fill="rgb(245,119,33)" fg:x="10029" fg:w="65"/><text x="42.0741%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="47.0287%" y="645" width="0.0334%" height="15" fill="rgb(231,125,12)" fg:x="11277" fg:w="8"/><text x="47.2787%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="47.0287%" y="629" width="0.0334%" height="15" fill="rgb(216,96,41)" fg:x="11277" fg:w="8"/><text x="47.2787%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="47.0287%" y="613" width="0.0334%" height="15" fill="rgb(248,43,45)" fg:x="11277" fg:w="8"/><text x="47.2787%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="47.0287%" y="597" width="0.0334%" height="15" fill="rgb(217,222,7)" fg:x="11277" fg:w="8"/><text x="47.2787%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="47.0287%" y="581" width="0.0334%" height="15" fill="rgb(233,28,6)" fg:x="11277" fg:w="8"/><text x="47.2787%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="47.0287%" y="565" width="0.0334%" height="15" fill="rgb(231,218,15)" fg:x="11277" fg:w="8"/><text x="47.2787%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="47.0328%" y="549" width="0.0292%" height="15" fill="rgb(226,171,48)" fg:x="11278" fg:w="7"/><text x="47.2828%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="47.0328%" y="533" width="0.0292%" height="15" fill="rgb(235,201,9)" fg:x="11278" fg:w="7"/><text x="47.2828%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="47.0370%" y="517" width="0.0250%" height="15" fill="rgb(217,80,15)" fg:x="11279" fg:w="6"/><text x="47.2870%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="47.0370%" y="501" width="0.0250%" height="15" fill="rgb(219,152,8)" fg:x="11279" fg:w="6"/><text x="47.2870%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="47.0370%" y="485" width="0.0250%" height="15" fill="rgb(243,107,38)" fg:x="11279" fg:w="6"/><text x="47.2870%" y="495.50"></text></g><g><title>malloc_consolidate (711 samples, 2.97%)</title><rect x="44.2637%" y="661" width="2.9651%" height="15" fill="rgb(231,17,5)" fg:x="10614" fg:w="711"/><text x="44.5137%" y="671.50">mal..</text></g><g><title>unlink_chunk.isra.0 (40 samples, 0.17%)</title><rect x="47.0620%" y="645" width="0.1668%" height="15" fill="rgb(209,25,54)" fg:x="11285" fg:w="40"/><text x="47.3120%" y="655.50"></text></g><g><title>__posix_memalign (1,419 samples, 5.92%)</title><rect x="41.4738%" y="709" width="5.9177%" height="15" fill="rgb(219,0,2)" fg:x="9945" fg:w="1419"/><text x="41.7238%" y="719.50">__posix_..</text></g><g><title>_int_memalign (1,362 samples, 5.68%)</title><rect x="41.7115%" y="693" width="5.6800%" height="15" fill="rgb(246,9,5)" fg:x="10002" fg:w="1362"/><text x="41.9615%" y="703.50">_int_me..</text></g><g><title>_int_malloc (1,270 samples, 5.30%)</title><rect x="42.0952%" y="677" width="5.2963%" height="15" fill="rgb(226,159,4)" fg:x="10094" fg:w="1270"/><text x="42.3452%" y="687.50">_int_m..</text></g><g><title>unlink_chunk.isra.0 (39 samples, 0.16%)</title><rect x="47.2288%" y="661" width="0.1626%" height="15" fill="rgb(219,175,34)" fg:x="11325" fg:w="39"/><text x="47.4788%" y="671.50"></text></g><g><title>__rdl_alloc (1,422 samples, 5.93%)</title><rect x="41.4654%" y="757" width="5.9302%" height="15" fill="rgb(236,10,46)" fg:x="9943" fg:w="1422"/><text x="41.7154%" y="767.50">__rdl_al..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,422 samples, 5.93%)</title><rect x="41.4654%" y="741" width="5.9302%" height="15" fill="rgb(240,211,16)" fg:x="9943" fg:w="1422"/><text x="41.7154%" y="751.50">std::sys..</text></g><g><title>std::sys::unix::alloc::aligned_malloc (1,420 samples, 5.92%)</title><rect x="41.4738%" y="725" width="5.9218%" height="15" fill="rgb(205,3,43)" fg:x="9945" fg:w="1420"/><text x="41.7238%" y="735.50">std::sys..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,474 samples, 6.15%)</title><rect x="41.2778%" y="773" width="6.1470%" height="15" fill="rgb(245,7,22)" fg:x="9898" fg:w="1474"/><text x="41.5278%" y="783.50">&lt;T as al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (5 samples, 0.02%)</title><rect x="47.4040%" y="757" width="0.0209%" height="15" fill="rgb(239,132,32)" fg:x="11367" fg:w="5"/><text x="47.6540%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="47.4248%" y="773" width="0.0459%" height="15" fill="rgb(228,202,34)" fg:x="11372" fg:w="11"/><text x="47.6748%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.04%)</title><rect x="47.4332%" y="757" width="0.0375%" height="15" fill="rgb(254,200,22)" fg:x="11374" fg:w="9"/><text x="47.6832%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.04%)</title><rect x="47.4332%" y="741" width="0.0375%" height="15" fill="rgb(219,10,39)" fg:x="11374" fg:w="9"/><text x="47.6832%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.04%)</title><rect x="47.4332%" y="725" width="0.0375%" height="15" fill="rgb(226,210,39)" fg:x="11374" fg:w="9"/><text x="47.6832%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.04%)</title><rect x="47.4332%" y="709" width="0.0375%" height="15" fill="rgb(208,219,16)" fg:x="11374" fg:w="9"/><text x="47.6832%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.04%)</title><rect x="47.4332%" y="693" width="0.0375%" height="15" fill="rgb(216,158,51)" fg:x="11374" fg:w="9"/><text x="47.6832%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="47.4415%" y="677" width="0.0292%" height="15" fill="rgb(233,14,44)" fg:x="11376" fg:w="7"/><text x="47.6915%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="47.4457%" y="661" width="0.0250%" height="15" fill="rgb(237,97,39)" fg:x="11377" fg:w="6"/><text x="47.6957%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="47.4457%" y="645" width="0.0250%" height="15" fill="rgb(218,198,43)" fg:x="11377" fg:w="6"/><text x="47.6957%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="47.4499%" y="629" width="0.0209%" height="15" fill="rgb(231,104,20)" fg:x="11378" fg:w="5"/><text x="47.6999%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="47.4540%" y="613" width="0.0167%" height="15" fill="rgb(254,36,13)" fg:x="11379" fg:w="4"/><text x="47.7040%" y="623.50"></text></g><g><title>__GI___libc_free (50 samples, 0.21%)</title><rect x="47.4707%" y="773" width="0.2085%" height="15" fill="rgb(248,14,50)" fg:x="11383" fg:w="50"/><text x="47.7207%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="48.8803%" y="757" width="0.0209%" height="15" fill="rgb(217,107,29)" fg:x="11721" fg:w="5"/><text x="49.1303%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="48.8803%" y="741" width="0.0209%" height="15" fill="rgb(251,169,33)" fg:x="11721" fg:w="5"/><text x="49.1303%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="48.8803%" y="725" width="0.0209%" height="15" fill="rgb(217,108,32)" fg:x="11721" fg:w="5"/><text x="49.1303%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="709" width="0.0167%" height="15" fill="rgb(219,66,42)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="693" width="0.0167%" height="15" fill="rgb(206,180,7)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="677" width="0.0167%" height="15" fill="rgb(208,226,31)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="661" width="0.0167%" height="15" fill="rgb(218,26,49)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="645" width="0.0167%" height="15" fill="rgb(233,197,48)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="629" width="0.0167%" height="15" fill="rgb(252,181,51)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="613" width="0.0167%" height="15" fill="rgb(253,90,19)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="48.8844%" y="597" width="0.0167%" height="15" fill="rgb(215,171,30)" fg:x="11722" fg:w="4"/><text x="49.1344%" y="607.50"></text></g><g><title>__calloc (443 samples, 1.85%)</title><rect x="47.6792%" y="773" width="1.8474%" height="15" fill="rgb(214,222,9)" fg:x="11433" fg:w="443"/><text x="47.9292%" y="783.50">_..</text></g><g><title>_int_malloc (150 samples, 0.63%)</title><rect x="48.9011%" y="757" width="0.6255%" height="15" fill="rgb(223,3,22)" fg:x="11726" fg:w="150"/><text x="49.1511%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.02%)</title><rect x="49.5100%" y="741" width="0.0167%" height="15" fill="rgb(225,196,46)" fg:x="11872" fg:w="4"/><text x="49.7600%" y="751.50"></text></g><g><title>__rdl_alloc_zeroed (5 samples, 0.02%)</title><rect x="49.5267%" y="773" width="0.0209%" height="15" fill="rgb(209,110,37)" fg:x="11876" fg:w="5"/><text x="49.7767%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (5 samples, 0.02%)</title><rect x="49.5267%" y="757" width="0.0209%" height="15" fill="rgb(249,89,12)" fg:x="11876" fg:w="5"/><text x="49.7767%" y="767.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="49.5475%" y="773" width="0.0125%" height="15" fill="rgb(226,27,33)" fg:x="11881" fg:w="3"/><text x="49.7975%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="49.5475%" y="757" width="0.0125%" height="15" fill="rgb(213,82,22)" fg:x="11881" fg:w="3"/><text x="49.7975%" y="767.50"></text></g><g><title>__rust_alloc_zeroed (4 samples, 0.02%)</title><rect x="49.5600%" y="773" width="0.0167%" height="15" fill="rgb(248,140,0)" fg:x="11884" fg:w="4"/><text x="49.8100%" y="783.50"></text></g><g><title>__rust_dealloc (4 samples, 0.02%)</title><rect x="49.5767%" y="773" width="0.0167%" height="15" fill="rgb(228,106,3)" fg:x="11888" fg:w="4"/><text x="49.8267%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="757" width="0.0250%" height="15" fill="rgb(209,23,37)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="741" width="0.0250%" height="15" fill="rgb(241,93,50)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="725" width="0.0250%" height="15" fill="rgb(253,46,43)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="709" width="0.0250%" height="15" fill="rgb(226,206,43)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="693" width="0.0250%" height="15" fill="rgb(217,54,7)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="677" width="0.0250%" height="15" fill="rgb(223,5,52)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="661" width="0.0250%" height="15" fill="rgb(206,52,46)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="645" width="0.0250%" height="15" fill="rgb(253,136,11)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="629" width="0.0250%" height="15" fill="rgb(208,106,33)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="613" width="0.0250%" height="15" fill="rgb(206,54,4)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="597" width="0.0250%" height="15" fill="rgb(213,3,15)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="50.7694%" y="581" width="0.0250%" height="15" fill="rgb(252,211,39)" fg:x="12174" fg:w="6"/><text x="51.0194%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="50.7736%" y="565" width="0.0209%" height="15" fill="rgb(223,6,36)" fg:x="12175" fg:w="5"/><text x="51.0236%" y="575.50"></text></g><g><title>_int_free (293 samples, 1.22%)</title><rect x="49.5934%" y="773" width="1.2219%" height="15" fill="rgb(252,169,45)" fg:x="11892" fg:w="293"/><text x="49.8434%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (5 samples, 0.02%)</title><rect x="50.7944%" y="757" width="0.0209%" height="15" fill="rgb(212,48,26)" fg:x="12180" fg:w="5"/><text x="51.0444%" y="767.50"></text></g><g><title>core::core_arch::x86::avx512bw::_mm512_loadu_epi8 (4 samples, 0.02%)</title><rect x="50.8153%" y="773" width="0.0167%" height="15" fill="rgb(251,102,48)" fg:x="12185" fg:w="4"/><text x="51.0653%" y="783.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_add_epi64 (102 samples, 0.43%)</title><rect x="50.8320%" y="773" width="0.4254%" height="15" fill="rgb(243,208,16)" fg:x="12189" fg:w="102"/><text x="51.0820%" y="783.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (240 samples, 1.00%)</title><rect x="51.2574%" y="773" width="1.0009%" height="15" fill="rgb(219,96,24)" fg:x="12291" fg:w="240"/><text x="51.5074%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="757" width="0.0334%" height="15" fill="rgb(219,33,29)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="741" width="0.0334%" height="15" fill="rgb(223,176,5)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="725" width="0.0334%" height="15" fill="rgb(228,140,14)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="709" width="0.0334%" height="15" fill="rgb(217,179,31)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="693" width="0.0334%" height="15" fill="rgb(230,9,30)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="677" width="0.0334%" height="15" fill="rgb(230,136,20)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="661" width="0.0334%" height="15" fill="rgb(215,210,22)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="645" width="0.0334%" height="15" fill="rgb(218,43,5)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="629" width="0.0334%" height="15" fill="rgb(216,11,5)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="613" width="0.0334%" height="15" fill="rgb(209,82,29)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="52.2249%" y="597" width="0.0334%" height="15" fill="rgb(244,115,12)" fg:x="12523" fg:w="8"/><text x="52.4749%" y="607.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_reduce_add_epi64 (17 samples, 0.07%)</title><rect x="52.2582%" y="773" width="0.0709%" height="15" fill="rgb(222,82,18)" fg:x="12531" fg:w="17"/><text x="52.5082%" y="783.50"></text></g><g><title>core::core_arch::x86::avx512vbmi2::_mm512_mask_compressstoreu_epi8 (30 samples, 0.13%)</title><rect x="52.3333%" y="773" width="0.1251%" height="15" fill="rgb(249,227,8)" fg:x="12549" fg:w="30"/><text x="52.5833%" y="783.50"></text></g><g><title>core::core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64 (120 samples, 0.50%)</title><rect x="52.4584%" y="773" width="0.5004%" height="15" fill="rgb(253,141,45)" fg:x="12579" fg:w="120"/><text x="52.7084%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.13%)</title><rect x="66.4123%" y="581" width="0.1335%" height="15" fill="rgb(234,184,4)" fg:x="15925" fg:w="32"/><text x="66.6623%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.12%)</title><rect x="66.4248%" y="565" width="0.1209%" height="15" fill="rgb(218,194,23)" fg:x="15928" fg:w="29"/><text x="66.6748%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.12%)</title><rect x="66.4290%" y="549" width="0.1168%" height="15" fill="rgb(235,66,41)" fg:x="15929" fg:w="28"/><text x="66.6790%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.12%)</title><rect x="66.4290%" y="533" width="0.1168%" height="15" fill="rgb(245,217,1)" fg:x="15929" fg:w="28"/><text x="66.6790%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.12%)</title><rect x="66.4290%" y="517" width="0.1168%" height="15" fill="rgb(229,91,1)" fg:x="15929" fg:w="28"/><text x="66.6790%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="66.5165%" y="501" width="0.0292%" height="15" fill="rgb(207,101,30)" fg:x="15950" fg:w="7"/><text x="66.7665%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="66.5165%" y="485" width="0.0292%" height="15" fill="rgb(223,82,49)" fg:x="15950" fg:w="7"/><text x="66.7665%" y="495.50"></text></g><g><title>__GI___libc_malloc (3,136 samples, 13.08%)</title><rect x="53.4718%" y="709" width="13.0781%" height="15" fill="rgb(218,167,17)" fg:x="12822" fg:w="3136"/><text x="53.7218%" y="719.50">__GI___libc_malloc</text></g><g><title>_int_malloc (2,574 samples, 10.73%)</title><rect x="55.8155%" y="693" width="10.7344%" height="15" fill="rgb(208,103,14)" fg:x="13384" fg:w="2574"/><text x="56.0655%" y="703.50">_int_malloc</text></g><g><title>[[kernel.kallsyms]] (49 samples, 0.20%)</title><rect x="66.3456%" y="677" width="0.2043%" height="15" fill="rgb(238,20,8)" fg:x="15909" fg:w="49"/><text x="66.5956%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (42 samples, 0.18%)</title><rect x="66.3747%" y="661" width="0.1752%" height="15" fill="rgb(218,80,54)" fg:x="15916" fg:w="42"/><text x="66.6247%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (42 samples, 0.18%)</title><rect x="66.3747%" y="645" width="0.1752%" height="15" fill="rgb(240,144,17)" fg:x="15916" fg:w="42"/><text x="66.6247%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (42 samples, 0.18%)</title><rect x="66.3747%" y="629" width="0.1752%" height="15" fill="rgb(245,27,50)" fg:x="15916" fg:w="42"/><text x="66.6247%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (40 samples, 0.17%)</title><rect x="66.3831%" y="613" width="0.1668%" height="15" fill="rgb(251,51,7)" fg:x="15918" fg:w="40"/><text x="66.6331%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (39 samples, 0.16%)</title><rect x="66.3873%" y="597" width="0.1626%" height="15" fill="rgb(245,217,29)" fg:x="15919" fg:w="39"/><text x="66.6373%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (38 samples, 0.16%)</title><rect x="66.5499%" y="709" width="0.1585%" height="15" fill="rgb(221,176,29)" fg:x="15958" fg:w="38"/><text x="66.7999%" y="719.50"></text></g><g><title>__rdl_alloc (20 samples, 0.08%)</title><rect x="66.7084%" y="709" width="0.0834%" height="15" fill="rgb(212,180,24)" fg:x="15996" fg:w="20"/><text x="66.9584%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (20 samples, 0.08%)</title><rect x="66.7084%" y="693" width="0.0834%" height="15" fill="rgb(254,24,2)" fg:x="15996" fg:w="20"/><text x="66.9584%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,288 samples, 13.71%)</title><rect x="53.1131%" y="725" width="13.7120%" height="15" fill="rgb(230,100,2)" fg:x="12736" fg:w="3288"/><text x="53.3631%" y="735.50">&lt;core::iter::adapters..</text></g><g><title>__rust_alloc (8 samples, 0.03%)</title><rect x="66.7918%" y="709" width="0.0334%" height="15" fill="rgb(219,142,25)" fg:x="16016" fg:w="8"/><text x="67.0418%" y="719.50"></text></g><g><title>_int_free (30 samples, 0.13%)</title><rect x="66.9628%" y="645" width="0.1251%" height="15" fill="rgb(240,73,43)" fg:x="16057" fg:w="30"/><text x="67.2128%" y="655.50"></text></g><g><title>malloc_consolidate (100 samples, 0.42%)</title><rect x="67.3423%" y="629" width="0.4170%" height="15" fill="rgb(214,114,15)" fg:x="16148" fg:w="100"/><text x="67.5923%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,528 samples, 14.71%)</title><rect x="53.0923%" y="741" width="14.7129%" height="15" fill="rgb(207,130,4)" fg:x="12731" fg:w="3528"/><text x="53.3423%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>__rdl_alloc (235 samples, 0.98%)</title><rect x="66.8251%" y="725" width="0.9800%" height="15" fill="rgb(221,25,40)" fg:x="16024" fg:w="235"/><text x="67.0751%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (235 samples, 0.98%)</title><rect x="66.8251%" y="709" width="0.9800%" height="15" fill="rgb(241,184,7)" fg:x="16024" fg:w="235"/><text x="67.0751%" y="719.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (235 samples, 0.98%)</title><rect x="66.8251%" y="693" width="0.9800%" height="15" fill="rgb(235,159,4)" fg:x="16024" fg:w="235"/><text x="67.0751%" y="703.50"></text></g><g><title>__posix_memalign (235 samples, 0.98%)</title><rect x="66.8251%" y="677" width="0.9800%" height="15" fill="rgb(214,87,48)" fg:x="16024" fg:w="235"/><text x="67.0751%" y="687.50"></text></g><g><title>_int_memalign (213 samples, 0.89%)</title><rect x="66.9169%" y="661" width="0.8883%" height="15" fill="rgb(246,198,24)" fg:x="16046" fg:w="213"/><text x="67.1669%" y="671.50"></text></g><g><title>_int_malloc (172 samples, 0.72%)</title><rect x="67.0879%" y="645" width="0.7173%" height="15" fill="rgb(209,66,40)" fg:x="16087" fg:w="172"/><text x="67.3379%" y="655.50"></text></g><g><title>unlink_chunk.isra.0 (11 samples, 0.05%)</title><rect x="67.7593%" y="629" width="0.0459%" height="15" fill="rgb(233,147,39)" fg:x="16248" fg:w="11"/><text x="68.0093%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="71.0538%" y="677" width="0.0125%" height="15" fill="rgb(231,145,52)" fg:x="17038" fg:w="3"/><text x="71.3038%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="71.0538%" y="661" width="0.0125%" height="15" fill="rgb(206,20,26)" fg:x="17038" fg:w="3"/><text x="71.3038%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="71.0538%" y="645" width="0.0125%" height="15" fill="rgb(238,220,4)" fg:x="17038" fg:w="3"/><text x="71.3038%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="71.0538%" y="629" width="0.0125%" height="15" fill="rgb(252,195,42)" fg:x="17038" fg:w="3"/><text x="71.3038%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="71.0538%" y="613" width="0.0125%" height="15" fill="rgb(209,10,6)" fg:x="17038" fg:w="3"/><text x="71.3038%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="71.0538%" y="597" width="0.0125%" height="15" fill="rgb(229,3,52)" fg:x="17038" fg:w="3"/><text x="71.3038%" y="607.50"></text></g><g><title>__GI___libc_free (75 samples, 0.31%)</title><rect x="71.0663%" y="677" width="0.3128%" height="15" fill="rgb(253,49,37)" fg:x="17041" fg:w="75"/><text x="71.3163%" y="687.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.11%)</title><rect x="71.3791%" y="677" width="0.1126%" height="15" fill="rgb(240,103,49)" fg:x="17116" fg:w="27"/><text x="71.6291%" y="687.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="71.4584%" y="661" width="0.0334%" height="15" fill="rgb(250,182,30)" fg:x="17135" fg:w="8"/><text x="71.7084%" y="671.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.02%)</title><rect x="71.5001%" y="677" width="0.0209%" height="15" fill="rgb(248,8,30)" fg:x="17145" fg:w="5"/><text x="71.7501%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.02%)</title><rect x="71.5001%" y="661" width="0.0209%" height="15" fill="rgb(237,120,30)" fg:x="17145" fg:w="5"/><text x="71.7501%" y="671.50"></text></g><g><title>__rust_dealloc (10 samples, 0.04%)</title><rect x="71.5251%" y="677" width="0.0417%" height="15" fill="rgb(221,146,34)" fg:x="17151" fg:w="10"/><text x="71.7751%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (728 samples, 3.04%)</title><rect x="69.3106%" y="693" width="3.0360%" height="15" fill="rgb(242,55,13)" fg:x="16620" fg:w="728"/><text x="69.5606%" y="703.50">&lt;al..</text></g><g><title>_int_free (187 samples, 0.78%)</title><rect x="71.5668%" y="677" width="0.7798%" height="15" fill="rgb(242,112,31)" fg:x="17161" fg:w="187"/><text x="71.8168%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,141 samples, 4.76%)</title><rect x="67.8093%" y="725" width="4.7583%" height="15" fill="rgb(249,192,27)" fg:x="16260" fg:w="1141"/><text x="68.0593%" y="735.50">&lt;core:..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512::_{{closure}} (917 samples, 3.82%)</title><rect x="68.7435%" y="709" width="3.8242%" height="15" fill="rgb(208,204,44)" fg:x="16484" fg:w="917"/><text x="68.9935%" y="719.50">fast..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (53 samples, 0.22%)</title><rect x="72.3466%" y="693" width="0.2210%" height="15" fill="rgb(208,93,54)" fg:x="17348" fg:w="53"/><text x="72.5966%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1,147 samples, 4.78%)</title><rect x="67.8052%" y="741" width="4.7834%" height="15" fill="rgb(242,1,31)" fg:x="16259" fg:w="1147"/><text x="68.0552%" y="751.50">alloc:..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512::_{{closure}} (5 samples, 0.02%)</title><rect x="72.5677%" y="725" width="0.0209%" height="15" fill="rgb(241,83,25)" fg:x="17401" fg:w="5"/><text x="72.8177%" y="735.50"></text></g><g><title>arrow_array::builder::buffer_builder::BufferBuilder&lt;T&gt;::len (3 samples, 0.01%)</title><rect x="72.5885%" y="741" width="0.0125%" height="15" fill="rgb(205,169,50)" fg:x="17406" fg:w="3"/><text x="72.8385%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.08%)</title><rect x="73.3850%" y="725" width="0.0834%" height="15" fill="rgb(239,186,37)" fg:x="17597" fg:w="20"/><text x="73.6350%" y="735.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.07%)</title><rect x="73.4017%" y="709" width="0.0667%" height="15" fill="rgb(205,221,10)" fg:x="17601" fg:w="16"/><text x="73.6517%" y="719.50"></text></g><g><title>_int_malloc (12 samples, 0.05%)</title><rect x="73.4184%" y="693" width="0.0500%" height="15" fill="rgb(218,196,15)" fg:x="17605" fg:w="12"/><text x="73.6684%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (119 samples, 0.50%)</title><rect x="73.4685%" y="725" width="0.4963%" height="15" fill="rgb(218,196,35)" fg:x="17617" fg:w="119"/><text x="73.7185%" y="735.50"></text></g><g><title>__GI___libc_free (20 samples, 0.08%)</title><rect x="73.9647%" y="725" width="0.0834%" height="15" fill="rgb(233,63,24)" fg:x="17736" fg:w="20"/><text x="74.2147%" y="735.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="74.0982%" y="709" width="0.0125%" height="15" fill="rgb(225,8,4)" fg:x="17768" fg:w="3"/><text x="74.3482%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="74.2108%" y="693" width="0.0459%" height="15" fill="rgb(234,105,35)" fg:x="17795" fg:w="11"/><text x="74.4608%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.04%)</title><rect x="74.2149%" y="677" width="0.0417%" height="15" fill="rgb(236,21,32)" fg:x="17796" fg:w="10"/><text x="74.4649%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.04%)</title><rect x="74.2149%" y="661" width="0.0417%" height="15" fill="rgb(228,109,6)" fg:x="17796" fg:w="10"/><text x="74.4649%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.04%)</title><rect x="74.2149%" y="645" width="0.0417%" height="15" fill="rgb(229,215,31)" fg:x="17796" fg:w="10"/><text x="74.4649%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.04%)</title><rect x="74.2149%" y="629" width="0.0417%" height="15" fill="rgb(221,52,54)" fg:x="17796" fg:w="10"/><text x="74.4649%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="74.2274%" y="613" width="0.0292%" height="15" fill="rgb(252,129,43)" fg:x="17799" fg:w="7"/><text x="74.4774%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="74.2316%" y="597" width="0.0250%" height="15" fill="rgb(248,183,27)" fg:x="17800" fg:w="6"/><text x="74.4816%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="74.2316%" y="581" width="0.0250%" height="15" fill="rgb(250,0,22)" fg:x="17800" fg:w="6"/><text x="74.4816%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="74.2441%" y="565" width="0.0125%" height="15" fill="rgb(213,166,10)" fg:x="17803" fg:w="3"/><text x="74.4941%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="74.2441%" y="549" width="0.0125%" height="15" fill="rgb(207,163,36)" fg:x="17803" fg:w="3"/><text x="74.4941%" y="559.50"></text></g><g><title>malloc_consolidate (32 samples, 0.13%)</title><rect x="74.2566%" y="693" width="0.1335%" height="15" fill="rgb(208,122,22)" fg:x="17806" fg:w="32"/><text x="74.5066%" y="703.50"></text></g><g><title>__calloc (94 samples, 0.39%)</title><rect x="74.0481%" y="725" width="0.3920%" height="15" fill="rgb(207,104,49)" fg:x="17756" fg:w="94"/><text x="74.2981%" y="735.50"></text></g><g><title>_int_malloc (79 samples, 0.33%)</title><rect x="74.1107%" y="709" width="0.3295%" height="15" fill="rgb(248,211,50)" fg:x="17771" fg:w="79"/><text x="74.3607%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (12 samples, 0.05%)</title><rect x="74.3901%" y="693" width="0.0500%" height="15" fill="rgb(217,13,45)" fg:x="17838" fg:w="12"/><text x="74.6401%" y="703.50"></text></g><g><title>_int_free (14 samples, 0.06%)</title><rect x="74.5319%" y="645" width="0.0584%" height="15" fill="rgb(211,216,49)" fg:x="17872" fg:w="14"/><text x="74.7819%" y="655.50"></text></g><g><title>malloc_consolidate (31 samples, 0.13%)</title><rect x="74.8113%" y="629" width="0.1293%" height="15" fill="rgb(221,58,53)" fg:x="17939" fg:w="31"/><text x="75.0613%" y="639.50"></text></g><g><title>__posix_memalign (139 samples, 0.58%)</title><rect x="74.4401%" y="677" width="0.5797%" height="15" fill="rgb(220,112,41)" fg:x="17850" fg:w="139"/><text x="74.6901%" y="687.50"></text></g><g><title>_int_memalign (121 samples, 0.50%)</title><rect x="74.5152%" y="661" width="0.5046%" height="15" fill="rgb(236,38,28)" fg:x="17868" fg:w="121"/><text x="74.7652%" y="671.50"></text></g><g><title>_int_malloc (103 samples, 0.43%)</title><rect x="74.5903%" y="645" width="0.4295%" height="15" fill="rgb(227,195,22)" fg:x="17886" fg:w="103"/><text x="74.8403%" y="655.50"></text></g><g><title>unlink_chunk.isra.0 (19 samples, 0.08%)</title><rect x="74.9406%" y="629" width="0.0792%" height="15" fill="rgb(214,55,33)" fg:x="17970" fg:w="19"/><text x="75.1906%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="75.0031%" y="613" width="0.0167%" height="15" fill="rgb(248,80,13)" fg:x="17985" fg:w="4"/><text x="75.2531%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="75.0031%" y="597" width="0.0167%" height="15" fill="rgb(238,52,6)" fg:x="17985" fg:w="4"/><text x="75.2531%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="75.0031%" y="581" width="0.0167%" height="15" fill="rgb(224,198,47)" fg:x="17985" fg:w="4"/><text x="75.2531%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="75.0031%" y="565" width="0.0167%" height="15" fill="rgb(233,171,20)" fg:x="17985" fg:w="4"/><text x="75.2531%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="75.0031%" y="549" width="0.0167%" height="15" fill="rgb(241,30,25)" fg:x="17985" fg:w="4"/><text x="75.2531%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="75.0073%" y="533" width="0.0125%" height="15" fill="rgb(207,171,38)" fg:x="17986" fg:w="3"/><text x="75.2573%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="75.0073%" y="517" width="0.0125%" height="15" fill="rgb(234,70,1)" fg:x="17986" fg:w="3"/><text x="75.2573%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="75.0073%" y="501" width="0.0125%" height="15" fill="rgb(232,178,18)" fg:x="17986" fg:w="3"/><text x="75.2573%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="75.0073%" y="485" width="0.0125%" height="15" fill="rgb(241,78,40)" fg:x="17986" fg:w="3"/><text x="75.2573%" y="495.50"></text></g><g><title>__rdl_alloc (140 samples, 0.58%)</title><rect x="74.4401%" y="725" width="0.5838%" height="15" fill="rgb(222,35,25)" fg:x="17850" fg:w="140"/><text x="74.6901%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (140 samples, 0.58%)</title><rect x="74.4401%" y="709" width="0.5838%" height="15" fill="rgb(207,92,16)" fg:x="17850" fg:w="140"/><text x="74.6901%" y="719.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (140 samples, 0.58%)</title><rect x="74.4401%" y="693" width="0.5838%" height="15" fill="rgb(216,59,51)" fg:x="17850" fg:w="140"/><text x="74.6901%" y="703.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.02%)</title><rect x="75.0240%" y="725" width="0.0209%" height="15" fill="rgb(213,80,28)" fg:x="17990" fg:w="5"/><text x="75.2740%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.02%)</title><rect x="75.0240%" y="709" width="0.0209%" height="15" fill="rgb(220,93,7)" fg:x="17990" fg:w="5"/><text x="75.2740%" y="719.50"></text></g><g><title>_int_free (113 samples, 0.47%)</title><rect x="75.0532%" y="725" width="0.4712%" height="15" fill="rgb(225,24,44)" fg:x="17997" fg:w="113"/><text x="75.3032%" y="735.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (9,836 samples, 41.02%)</title><rect x="34.5344%" y="805" width="41.0192%" height="15" fill="rgb(243,74,40)" fg:x="8281" fg:w="9836"/><text x="34.7844%" y="815.50">&lt;fastfull_search::datasources::posting_table::PostingStream as futu..</text></g><g><title>fastfull_search::batch::posting_batch::PostingBatch::project_with_predicate (9,386 samples, 39.14%)</title><rect x="36.4110%" y="789" width="39.1426%" height="15" fill="rgb(228,39,7)" fg:x="8731" fg:w="9386"/><text x="36.6610%" y="799.50">fastfull_search::batch::posting_batch::PostingBatch::project_wit..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (5,417 samples, 22.59%)</title><rect x="52.9630%" y="773" width="22.5906%" height="15" fill="rgb(227,79,8)" fg:x="12700" fg:w="5417"/><text x="53.2130%" y="783.50">fastfull_search::physical_expr::bool..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (5,403 samples, 22.53%)</title><rect x="53.0214%" y="757" width="22.5322%" height="15" fill="rgb(236,58,11)" fg:x="12714" fg:w="5403"/><text x="53.2714%" y="767.50">fastfull_search::physical_expr::bool..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (708 samples, 2.95%)</title><rect x="72.6010%" y="741" width="2.9526%" height="15" fill="rgb(249,63,35)" fg:x="17409" fg:w="708"/><text x="72.8510%" y="751.50">fas..</text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (7 samples, 0.03%)</title><rect x="75.5244%" y="725" width="0.0292%" height="15" fill="rgb(252,114,16)" fg:x="18110" fg:w="7"/><text x="75.7744%" y="735.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="75.5536%" y="805" width="0.0125%" height="15" fill="rgb(254,151,24)" fg:x="18117" fg:w="3"/><text x="75.8036%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.07%)</title><rect x="75.5661%" y="805" width="0.0709%" height="15" fill="rgb(253,54,39)" fg:x="18120" fg:w="17"/><text x="75.8161%" y="815.50"></text></g><g><title>_int_free (20 samples, 0.08%)</title><rect x="75.6537%" y="805" width="0.0834%" height="15" fill="rgb(243,25,45)" fg:x="18141" fg:w="20"/><text x="75.9037%" y="815.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (4 samples, 0.02%)</title><rect x="75.7413%" y="805" width="0.0167%" height="15" fill="rgb(234,134,9)" fg:x="18162" fg:w="4"/><text x="75.9913%" y="815.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (4 samples, 0.02%)</title><rect x="75.7413%" y="789" width="0.0167%" height="15" fill="rgb(227,166,31)" fg:x="18162" fg:w="4"/><text x="75.9913%" y="799.50"></text></g><g><title>arrow_array::array::Array::len (4 samples, 0.02%)</title><rect x="75.7413%" y="773" width="0.0167%" height="15" fill="rgb(245,143,41)" fg:x="18162" fg:w="4"/><text x="75.9913%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn datafusion_physical_expr::physical_expr::PhysicalExpr&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="75.7580%" y="805" width="0.0334%" height="15" fill="rgb(238,181,32)" fg:x="18166" fg:w="8"/><text x="76.0080%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.03%)</title><rect x="75.7580%" y="789" width="0.0334%" height="15" fill="rgb(224,113,18)" fg:x="18166" fg:w="8"/><text x="76.0080%" y="799.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="75.7663%" y="773" width="0.0250%" height="15" fill="rgb(240,229,28)" fg:x="18168" fg:w="6"/><text x="76.0163%" y="783.50"></text></g><g><title>__GI___libc_free (10 samples, 0.04%)</title><rect x="75.8580%" y="789" width="0.0417%" height="15" fill="rgb(250,185,3)" fg:x="18190" fg:w="10"/><text x="76.1080%" y="799.50"></text></g><g><title>_int_free (9 samples, 0.04%)</title><rect x="75.9081%" y="789" width="0.0375%" height="15" fill="rgb(212,59,25)" fg:x="18202" fg:w="9"/><text x="76.1581%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt32Type&gt;&gt; (5 samples, 0.02%)</title><rect x="75.9873%" y="773" width="0.0209%" height="15" fill="rgb(221,87,20)" fg:x="18221" fg:w="5"/><text x="76.2373%" y="783.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="76.0415%" y="757" width="0.0209%" height="15" fill="rgb(213,74,28)" fg:x="18234" fg:w="5"/><text x="76.2915%" y="767.50"></text></g><g><title>_int_free (10 samples, 0.04%)</title><rect x="76.0707%" y="757" width="0.0417%" height="15" fill="rgb(224,132,34)" fg:x="18241" fg:w="10"/><text x="76.3207%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.09%)</title><rect x="76.1124%" y="757" width="0.0917%" height="15" fill="rgb(222,101,24)" fg:x="18251" fg:w="22"/><text x="76.3624%" y="767.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="76.1541%" y="741" width="0.0500%" height="15" fill="rgb(254,142,4)" fg:x="18261" fg:w="12"/><text x="76.4041%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (49 samples, 0.20%)</title><rect x="76.0082%" y="773" width="0.2043%" height="15" fill="rgb(230,229,49)" fg:x="18226" fg:w="49"/><text x="76.2582%" y="783.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="76.2250%" y="741" width="0.0125%" height="15" fill="rgb(238,70,47)" fg:x="18278" fg:w="3"/><text x="76.4750%" y="751.50"></text></g><g><title>_int_free (7 samples, 0.03%)</title><rect x="76.2459%" y="741" width="0.0292%" height="15" fill="rgb(231,160,17)" fg:x="18283" fg:w="7"/><text x="76.4959%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.07%)</title><rect x="76.2125%" y="757" width="0.0709%" height="15" fill="rgb(218,68,53)" fg:x="18275" fg:w="17"/><text x="76.4625%" y="767.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="76.2834%" y="757" width="0.0167%" height="15" fill="rgb(236,111,10)" fg:x="18292" fg:w="4"/><text x="76.5334%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (131 samples, 0.55%)</title><rect x="75.7913%" y="805" width="0.5463%" height="15" fill="rgb(224,34,41)" fg:x="18174" fg:w="131"/><text x="76.0413%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (94 samples, 0.39%)</title><rect x="75.9456%" y="789" width="0.3920%" height="15" fill="rgb(241,118,19)" fg:x="18211" fg:w="94"/><text x="76.1956%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::schema::Schema&gt; (30 samples, 0.13%)</title><rect x="76.2125%" y="773" width="0.1251%" height="15" fill="rgb(238,129,25)" fg:x="18275" fg:w="30"/><text x="76.4625%" y="783.50"></text></g><g><title>_int_free (9 samples, 0.04%)</title><rect x="76.3001%" y="757" width="0.0375%" height="15" fill="rgb(238,22,31)" fg:x="18296" fg:w="9"/><text x="76.5501%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::memory_pool::MemoryReservation&gt; (10 samples, 0.04%)</title><rect x="76.3376%" y="805" width="0.0417%" height="15" fill="rgb(222,174,48)" fg:x="18305" fg:w="10"/><text x="76.5876%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="76.3585%" y="789" width="0.0209%" height="15" fill="rgb(206,152,40)" fg:x="18310" fg:w="5"/><text x="76.6085%" y="799.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (4 samples, 0.02%)</title><rect x="76.4544%" y="757" width="0.0167%" height="15" fill="rgb(218,99,54)" fg:x="18333" fg:w="4"/><text x="76.7044%" y="767.50"></text></g><g><title>&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics as core::ops::drop::Drop&gt;::drop (17 samples, 0.07%)</title><rect x="76.4044%" y="789" width="0.0709%" height="15" fill="rgb(220,174,26)" fg:x="18321" fg:w="17"/><text x="76.6544%" y="799.50"></text></g><g><title>chrono::offset::utc::Utc::now (7 samples, 0.03%)</title><rect x="76.4461%" y="773" width="0.0292%" height="15" fill="rgb(245,116,9)" fg:x="18331" fg:w="7"/><text x="76.6961%" y="783.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="76.4752%" y="789" width="0.0125%" height="15" fill="rgb(209,72,35)" fg:x="18338" fg:w="3"/><text x="76.7252%" y="799.50"></text></g><g><title>_int_free (7 samples, 0.03%)</title><rect x="76.4961%" y="789" width="0.0292%" height="15" fill="rgb(226,126,21)" fg:x="18343" fg:w="7"/><text x="76.7461%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics&gt; (42 samples, 0.18%)</title><rect x="76.3793%" y="805" width="0.1752%" height="15" fill="rgb(227,192,1)" fg:x="18315" fg:w="42"/><text x="76.6293%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.03%)</title><rect x="76.5253%" y="789" width="0.0292%" height="15" fill="rgb(237,180,29)" fg:x="18350" fg:w="7"/><text x="76.7753%" y="799.50"></text></g><g><title>_int_free (8 samples, 0.03%)</title><rect x="76.6379%" y="789" width="0.0334%" height="15" fill="rgb(230,197,35)" fg:x="18377" fg:w="8"/><text x="76.8879%" y="799.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="76.8172%" y="757" width="0.0125%" height="15" fill="rgb(246,193,31)" fg:x="18420" fg:w="3"/><text x="77.0672%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.06%)</title><rect x="76.8172%" y="773" width="0.0626%" height="15" fill="rgb(241,36,4)" fg:x="18420" fg:w="15"/><text x="77.0672%" y="783.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="76.8297%" y="757" width="0.0500%" height="15" fill="rgb(241,130,17)" fg:x="18423" fg:w="12"/><text x="77.0797%" y="767.50"></text></g><g><title>__GI___libc_free (7 samples, 0.03%)</title><rect x="76.8798%" y="773" width="0.0292%" height="15" fill="rgb(206,137,32)" fg:x="18435" fg:w="7"/><text x="77.1298%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="741" width="0.0167%" height="15" fill="rgb(237,228,51)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="725" width="0.0167%" height="15" fill="rgb(243,6,42)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="709" width="0.0167%" height="15" fill="rgb(251,74,28)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="693" width="0.0167%" height="15" fill="rgb(218,20,49)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="677" width="0.0167%" height="15" fill="rgb(238,28,14)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="661" width="0.0167%" height="15" fill="rgb(229,40,46)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="645" width="0.0167%" height="15" fill="rgb(244,195,20)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="629" width="0.0167%" height="15" fill="rgb(253,56,35)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="613" width="0.0167%" height="15" fill="rgb(210,149,44)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="597" width="0.0167%" height="15" fill="rgb(240,135,12)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="77.4428%" y="581" width="0.0167%" height="15" fill="rgb(251,24,50)" fg:x="18570" fg:w="4"/><text x="77.6928%" y="591.50"></text></g><g><title>_int_free (142 samples, 0.59%)</title><rect x="76.9131%" y="773" width="0.5922%" height="15" fill="rgb(243,200,47)" fg:x="18443" fg:w="142"/><text x="77.1631%" y="783.50"></text></g><g><title>malloc_consolidate (120 samples, 0.50%)</title><rect x="77.0049%" y="757" width="0.5004%" height="15" fill="rgb(224,166,26)" fg:x="18465" fg:w="120"/><text x="77.2549%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (11 samples, 0.05%)</title><rect x="77.4594%" y="741" width="0.0459%" height="15" fill="rgb(233,0,47)" fg:x="18574" fg:w="11"/><text x="77.7094%" y="751.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="77.5262%" y="757" width="0.0250%" height="15" fill="rgb(253,80,5)" fg:x="18590" fg:w="6"/><text x="77.7762%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (16 samples, 0.07%)</title><rect x="77.5053%" y="773" width="0.0667%" height="15" fill="rgb(214,133,25)" fg:x="18585" fg:w="16"/><text x="77.7553%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.02%)</title><rect x="77.5512%" y="757" width="0.0209%" height="15" fill="rgb(209,27,14)" fg:x="18596" fg:w="5"/><text x="77.8012%" y="767.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="77.5595%" y="741" width="0.0125%" height="15" fill="rgb(219,102,51)" fg:x="18598" fg:w="3"/><text x="77.8095%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingStream&gt; (246 samples, 1.03%)</title><rect x="76.5545%" y="805" width="1.0259%" height="15" fill="rgb(237,18,16)" fg:x="18357" fg:w="246"/><text x="76.8045%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (218 samples, 0.91%)</title><rect x="76.6713%" y="789" width="0.9091%" height="15" fill="rgb(241,85,17)" fg:x="18385" fg:w="218"/><text x="76.9213%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="77.6012%" y="789" width="0.0292%" height="15" fill="rgb(236,90,42)" fg:x="18608" fg:w="7"/><text x="77.8512%" y="799.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="77.6304%" y="789" width="0.0167%" height="15" fill="rgb(249,57,21)" fg:x="18615" fg:w="4"/><text x="77.8804%" y="799.50"></text></g><g><title>datafusion_common::scalar::ScalarValue::to_array (3 samples, 0.01%)</title><rect x="77.7097%" y="725" width="0.0125%" height="15" fill="rgb(243,12,36)" fg:x="18634" fg:w="3"/><text x="77.9597%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="77.7347%" y="693" width="0.0125%" height="15" fill="rgb(253,128,47)" fg:x="18640" fg:w="3"/><text x="77.9847%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="77.7347%" y="709" width="0.0292%" height="15" fill="rgb(207,33,20)" fg:x="18640" fg:w="7"/><text x="77.9847%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="77.7472%" y="693" width="0.0167%" height="15" fill="rgb(233,215,35)" fg:x="18643" fg:w="4"/><text x="77.9972%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="77.7847%" y="677" width="0.0292%" height="15" fill="rgb(249,188,52)" fg:x="18652" fg:w="7"/><text x="78.0347%" y="687.50"></text></g><g><title>arrow_data::data::ArrayData::buffers (3 samples, 0.01%)</title><rect x="77.8139%" y="677" width="0.0125%" height="15" fill="rgb(225,12,32)" fg:x="18659" fg:w="3"/><text x="78.0639%" y="687.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (17 samples, 0.07%)</title><rect x="77.7722%" y="693" width="0.0709%" height="15" fill="rgb(247,98,14)" fg:x="18649" fg:w="17"/><text x="78.0222%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (4 samples, 0.02%)</title><rect x="77.8264%" y="677" width="0.0167%" height="15" fill="rgb(247,219,48)" fg:x="18662" fg:w="4"/><text x="78.0764%" y="687.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (14 samples, 0.06%)</title><rect x="77.8473%" y="693" width="0.0584%" height="15" fill="rgb(253,60,48)" fg:x="18667" fg:w="14"/><text x="78.0973%" y="703.50"></text></g><g><title>__rdl_alloc (14 samples, 0.06%)</title><rect x="77.8473%" y="677" width="0.0584%" height="15" fill="rgb(245,15,52)" fg:x="18667" fg:w="14"/><text x="78.0973%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (14 samples, 0.06%)</title><rect x="77.8473%" y="661" width="0.0584%" height="15" fill="rgb(220,133,28)" fg:x="18667" fg:w="14"/><text x="78.0973%" y="671.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (14 samples, 0.06%)</title><rect x="77.8473%" y="645" width="0.0584%" height="15" fill="rgb(217,180,4)" fg:x="18667" fg:w="14"/><text x="78.0973%" y="655.50"></text></g><g><title>__posix_memalign (14 samples, 0.06%)</title><rect x="77.8473%" y="629" width="0.0584%" height="15" fill="rgb(251,24,1)" fg:x="18667" fg:w="14"/><text x="78.0973%" y="639.50"></text></g><g><title>_int_memalign (9 samples, 0.04%)</title><rect x="77.8681%" y="613" width="0.0375%" height="15" fill="rgb(212,185,49)" fg:x="18672" fg:w="9"/><text x="78.1181%" y="623.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="77.8723%" y="597" width="0.0334%" height="15" fill="rgb(215,175,22)" fg:x="18673" fg:w="8"/><text x="78.1223%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 0.24%)</title><rect x="77.6888%" y="741" width="0.2377%" height="15" fill="rgb(250,205,14)" fg:x="18629" fg:w="57"/><text x="77.9388%" y="751.50"></text></g><g><title>datafusion_common::scalar::ScalarValue::to_array_of_size (49 samples, 0.20%)</title><rect x="77.7222%" y="725" width="0.2043%" height="15" fill="rgb(225,211,22)" fg:x="18637" fg:w="49"/><text x="77.9722%" y="735.50"></text></g><g><title>arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt;::from_value (39 samples, 0.16%)</title><rect x="77.7639%" y="709" width="0.1626%" height="15" fill="rgb(251,179,42)" fg:x="18647" fg:w="39"/><text x="78.0139%" y="719.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (4 samples, 0.02%)</title><rect x="77.9098%" y="693" width="0.0167%" height="15" fill="rgb(208,216,51)" fg:x="18682" fg:w="4"/><text x="78.1598%" y="703.50"></text></g><g><title>&lt;fastfull_search::physical_expr::count_udf::CountValid as datafusion_expr::accumulator::Accumulator&gt;::state (5 samples, 0.02%)</title><rect x="77.9265%" y="741" width="0.0209%" height="15" fill="rgb(235,36,11)" fg:x="18686" fg:w="5"/><text x="78.1765%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 0.27%)</title><rect x="77.6805%" y="757" width="0.2711%" height="15" fill="rgb(213,189,28)" fg:x="18627" fg:w="65"/><text x="77.9305%" y="767.50"></text></g><g><title>core::iter::adapters::try_process (72 samples, 0.30%)</title><rect x="77.6596%" y="789" width="0.3003%" height="15" fill="rgb(227,203,42)" fg:x="18622" fg:w="72"/><text x="77.9096%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 0.30%)</title><rect x="77.6638%" y="773" width="0.2961%" height="15" fill="rgb(244,72,36)" fg:x="18623" fg:w="71"/><text x="77.9138%" y="783.50"></text></g><g><title>datafusion::physical_plan::aggregates::finalize_aggregation (92 samples, 0.38%)</title><rect x="77.5804%" y="805" width="0.3837%" height="15" fill="rgb(213,53,17)" fg:x="18603" fg:w="92"/><text x="77.8304%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt; as arrow_array::array::Array&gt;::as_any (3 samples, 0.01%)</title><rect x="78.1058%" y="757" width="0.0125%" height="15" fill="rgb(207,167,3)" fg:x="18729" fg:w="3"/><text x="78.3558%" y="767.50"></text></g><g><title>&lt;fastfull_search::physical_expr::count_udf::CountValid as datafusion_expr::accumulator::Accumulator&gt;::update_batch (14 samples, 0.06%)</title><rect x="78.0641%" y="789" width="0.0584%" height="15" fill="rgb(216,98,30)" fg:x="18719" fg:w="14"/><text x="78.3141%" y="799.50"></text></g><g><title>datafusion_common::cast::as_uint64_array (4 samples, 0.02%)</title><rect x="78.1058%" y="773" width="0.0167%" height="15" fill="rgb(236,123,15)" fg:x="18729" fg:w="4"/><text x="78.3558%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.22%)</title><rect x="78.2184%" y="757" width="0.2210%" height="15" fill="rgb(248,81,50)" fg:x="18756" fg:w="53"/><text x="78.4684%" y="767.50"></text></g><g><title>&lt;datafusion_physical_expr::expressions::column::Column as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (30 samples, 0.13%)</title><rect x="78.3144%" y="741" width="0.1251%" height="15" fill="rgb(214,120,4)" fg:x="18779" fg:w="30"/><text x="78.5644%" y="751.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::schema (10 samples, 0.04%)</title><rect x="78.3978%" y="725" width="0.0417%" height="15" fill="rgb(208,179,34)" fg:x="18799" fg:w="10"/><text x="78.6478%" y="735.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="78.4395%" y="757" width="0.0250%" height="15" fill="rgb(227,140,7)" fg:x="18809" fg:w="6"/><text x="78.6895%" y="767.50"></text></g><g><title>datafusion::physical_plan::aggregates::no_grouping::aggregate_batch (121 samples, 0.50%)</title><rect x="77.9641%" y="805" width="0.5046%" height="15" fill="rgb(214,22,6)" fg:x="18695" fg:w="121"/><text x="78.2141%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (80 samples, 0.33%)</title><rect x="78.1350%" y="789" width="0.3336%" height="15" fill="rgb(207,137,27)" fg:x="18736" fg:w="80"/><text x="78.3850%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 0.29%)</title><rect x="78.1809%" y="773" width="0.2878%" height="15" fill="rgb(210,8,46)" fg:x="18747" fg:w="69"/><text x="78.4309%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (11 samples, 0.05%)</title><rect x="78.4687%" y="805" width="0.0459%" height="15" fill="rgb(240,16,54)" fg:x="18816" fg:w="11"/><text x="78.7187%" y="815.50"></text></g><g><title>__clock_gettime_2 (10 samples, 0.04%)</title><rect x="78.4728%" y="789" width="0.0417%" height="15" fill="rgb(211,209,29)" fg:x="18817" fg:w="10"/><text x="78.7228%" y="799.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (6 samples, 0.03%)</title><rect x="78.5229%" y="789" width="0.0250%" height="15" fill="rgb(226,228,24)" fg:x="18829" fg:w="6"/><text x="78.7729%" y="799.50"></text></g><g><title>std::time::Instant::duration_since (6 samples, 0.03%)</title><rect x="78.5229%" y="773" width="0.0250%" height="15" fill="rgb(222,84,9)" fg:x="18829" fg:w="6"/><text x="78.7729%" y="783.50"></text></g><g><title>std::time::Instant::checked_duration_since (6 samples, 0.03%)</title><rect x="78.5229%" y="757" width="0.0250%" height="15" fill="rgb(234,203,30)" fg:x="18829" fg:w="6"/><text x="78.7729%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (6 samples, 0.03%)</title><rect x="78.5229%" y="741" width="0.0250%" height="15" fill="rgb(238,109,14)" fg:x="18829" fg:w="6"/><text x="78.7729%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (6 samples, 0.03%)</title><rect x="78.5229%" y="725" width="0.0250%" height="15" fill="rgb(233,206,34)" fg:x="18829" fg:w="6"/><text x="78.7729%" y="735.50"></text></g><g><title>std::time::Instant::elapsed (10 samples, 0.04%)</title><rect x="78.5145%" y="805" width="0.0417%" height="15" fill="rgb(220,167,47)" fg:x="18827" fg:w="10"/><text x="78.7645%" y="815.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream as futures_core::stream::Stream&gt;::poll_next (10,607 samples, 44.23%)</title><rect x="34.3342%" y="853" width="44.2345%" height="15" fill="rgb(238,105,10)" fg:x="8233" fg:w="10607"/><text x="34.5842%" y="863.50">&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream as ..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (10,607 samples, 44.23%)</title><rect x="34.3342%" y="837" width="44.2345%" height="15" fill="rgb(213,227,17)" fg:x="8233" fg:w="10607"/><text x="34.5842%" y="847.50">&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::St..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (10,603 samples, 44.22%)</title><rect x="34.3509%" y="821" width="44.2179%" height="15" fill="rgb(217,132,38)" fg:x="8237" fg:w="10603"/><text x="34.6009%" y="831.50">&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::..</text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="78.5562%" y="805" width="0.0125%" height="15" fill="rgb(242,146,4)" fg:x="18837" fg:w="3"/><text x="78.8062%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="78.5562%" y="789" width="0.0125%" height="15" fill="rgb(212,61,9)" fg:x="18837" fg:w="3"/><text x="78.8062%" y="799.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="78.5813%" y="805" width="0.0209%" height="15" fill="rgb(247,126,22)" fg:x="18843" fg:w="5"/><text x="78.8313%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (9 samples, 0.04%)</title><rect x="78.5813%" y="853" width="0.0375%" height="15" fill="rgb(220,196,2)" fg:x="18843" fg:w="9"/><text x="78.8313%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.04%)</title><rect x="78.5813%" y="837" width="0.0375%" height="15" fill="rgb(208,46,4)" fg:x="18843" fg:w="9"/><text x="78.8313%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (9 samples, 0.04%)</title><rect x="78.5813%" y="821" width="0.0375%" height="15" fill="rgb(252,104,46)" fg:x="18843" fg:w="9"/><text x="78.8313%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.02%)</title><rect x="78.6021%" y="805" width="0.0167%" height="15" fill="rgb(237,152,48)" fg:x="18848" fg:w="4"/><text x="78.8521%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics&gt; (3 samples, 0.01%)</title><rect x="78.6188%" y="853" width="0.0125%" height="15" fill="rgb(221,59,37)" fg:x="18852" fg:w="3"/><text x="78.8688%" y="863.50"></text></g><g><title>&lt;datafusion::physical_plan::metrics::baseline::BaselineMetrics as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="78.6188%" y="837" width="0.0125%" height="15" fill="rgb(209,202,51)" fg:x="18852" fg:w="3"/><text x="78.8688%" y="847.50"></text></g><g><title>chrono::offset::utc::Utc::now (3 samples, 0.01%)</title><rect x="78.6188%" y="821" width="0.0125%" height="15" fill="rgb(228,81,30)" fg:x="18852" fg:w="3"/><text x="78.8688%" y="831.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (3 samples, 0.01%)</title><rect x="78.6188%" y="805" width="0.0125%" height="15" fill="rgb(227,42,39)" fg:x="18852" fg:w="3"/><text x="78.8688%" y="815.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (18 samples, 0.08%)</title><rect x="78.6855%" y="757" width="0.0751%" height="15" fill="rgb(221,26,2)" fg:x="18868" fg:w="18"/><text x="78.9355%" y="767.50"></text></g><g><title>__rdl_alloc (18 samples, 0.08%)</title><rect x="78.6855%" y="741" width="0.0751%" height="15" fill="rgb(254,61,31)" fg:x="18868" fg:w="18"/><text x="78.9355%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (18 samples, 0.08%)</title><rect x="78.6855%" y="725" width="0.0751%" height="15" fill="rgb(222,173,38)" fg:x="18868" fg:w="18"/><text x="78.9355%" y="735.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (18 samples, 0.08%)</title><rect x="78.6855%" y="709" width="0.0751%" height="15" fill="rgb(218,50,12)" fg:x="18868" fg:w="18"/><text x="78.9355%" y="719.50"></text></g><g><title>__posix_memalign (18 samples, 0.08%)</title><rect x="78.6855%" y="693" width="0.0751%" height="15" fill="rgb(223,88,40)" fg:x="18868" fg:w="18"/><text x="78.9355%" y="703.50"></text></g><g><title>_int_memalign (13 samples, 0.05%)</title><rect x="78.7064%" y="677" width="0.0542%" height="15" fill="rgb(237,54,19)" fg:x="18873" fg:w="13"/><text x="78.9564%" y="687.50"></text></g><g><title>_int_malloc (11 samples, 0.05%)</title><rect x="78.7147%" y="661" width="0.0459%" height="15" fill="rgb(251,129,25)" fg:x="18875" fg:w="11"/><text x="78.9647%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.13%)</title><rect x="78.6396%" y="805" width="0.1251%" height="15" fill="rgb(238,97,19)" fg:x="18857" fg:w="30"/><text x="78.8896%" y="815.50"></text></g><g><title>datafusion_common::scalar::ScalarValue::to_array_of_size (27 samples, 0.11%)</title><rect x="78.6522%" y="789" width="0.1126%" height="15" fill="rgb(240,169,18)" fg:x="18860" fg:w="27"/><text x="78.9022%" y="799.50"></text></g><g><title>arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt;::from_value (25 samples, 0.10%)</title><rect x="78.6605%" y="773" width="0.1043%" height="15" fill="rgb(230,187,49)" fg:x="18862" fg:w="25"/><text x="78.9105%" y="783.50"></text></g><g><title>datafusion::physical_plan::aggregates::finalize_aggregation (35 samples, 0.15%)</title><rect x="78.6313%" y="853" width="0.1460%" height="15" fill="rgb(209,44,26)" fg:x="18855" fg:w="35"/><text x="78.8813%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (35 samples, 0.15%)</title><rect x="78.6313%" y="837" width="0.1460%" height="15" fill="rgb(244,0,6)" fg:x="18855" fg:w="35"/><text x="78.8813%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.14%)</title><rect x="78.6355%" y="821" width="0.1418%" height="15" fill="rgb(248,18,21)" fg:x="18856" fg:w="34"/><text x="78.8855%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="78.7648%" y="805" width="0.0125%" height="15" fill="rgb(245,180,19)" fg:x="18887" fg:w="3"/><text x="79.0148%" y="815.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (3 samples, 0.01%)</title><rect x="78.8148%" y="821" width="0.0125%" height="15" fill="rgb(252,118,36)" fg:x="18899" fg:w="3"/><text x="79.0648%" y="831.50"></text></g><g><title>&lt;fastfull_search::physical_expr::count_udf::CountValid as datafusion_expr::accumulator::Accumulator&gt;::merge_batch (18 samples, 0.08%)</title><rect x="78.7856%" y="837" width="0.0751%" height="15" fill="rgb(210,224,19)" fg:x="18892" fg:w="18"/><text x="79.0356%" y="847.50"></text></g><g><title>arrow_arith::aggregate::simd::simd_aggregation (6 samples, 0.03%)</title><rect x="78.8356%" y="821" width="0.0250%" height="15" fill="rgb(218,30,24)" fg:x="18904" fg:w="6"/><text x="79.0856%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.04%)</title><rect x="78.8857%" y="805" width="0.0417%" height="15" fill="rgb(219,75,50)" fg:x="18916" fg:w="10"/><text x="79.1357%" y="815.50"></text></g><g><title>&lt;datafusion_physical_expr::expressions::column::Column as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (5 samples, 0.02%)</title><rect x="78.9065%" y="789" width="0.0209%" height="15" fill="rgb(234,72,50)" fg:x="18921" fg:w="5"/><text x="79.1565%" y="799.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (10,695 samples, 44.60%)</title><rect x="34.3342%" y="917" width="44.6015%" height="15" fill="rgb(219,100,48)" fg:x="8233" fg:w="10695"/><text x="34.5842%" y="927.50">&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core:..</text></g><g><title>&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream as futures_core::stream::Stream&gt;::poll_next (10,695 samples, 44.60%)</title><rect x="34.3342%" y="901" width="44.6015%" height="15" fill="rgb(253,5,41)" fg:x="8233" fg:w="10695"/><text x="34.5842%" y="911.50">&lt;datafusion::physical_plan::aggregates::no_grouping::AggregateStream as f..</text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (10,695 samples, 44.60%)</title><rect x="34.3342%" y="885" width="44.6015%" height="15" fill="rgb(247,181,11)" fg:x="8233" fg:w="10695"/><text x="34.5842%" y="895.50">&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Str..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (10,695 samples, 44.60%)</title><rect x="34.3342%" y="869" width="44.6015%" height="15" fill="rgb(222,223,25)" fg:x="8233" fg:w="10695"/><text x="34.5842%" y="879.50">&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::S..</text></g><g><title>datafusion::physical_plan::aggregates::no_grouping::aggregate_batch (38 samples, 0.16%)</title><rect x="78.7773%" y="853" width="0.1585%" height="15" fill="rgb(214,198,28)" fg:x="18890" fg:w="38"/><text x="79.0273%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 0.06%)</title><rect x="78.8732%" y="837" width="0.0626%" height="15" fill="rgb(230,46,43)" fg:x="18913" fg:w="15"/><text x="79.1232%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.05%)</title><rect x="78.8815%" y="821" width="0.0542%" height="15" fill="rgb(233,65,53)" fg:x="18915" fg:w="13"/><text x="79.1315%" y="831.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="78.9774%" y="821" width="0.0250%" height="15" fill="rgb(221,121,27)" fg:x="18938" fg:w="6"/><text x="79.2274%" y="831.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="79.0025%" y="821" width="0.0250%" height="15" fill="rgb(247,70,47)" fg:x="18944" fg:w="6"/><text x="79.2525%" y="831.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (18 samples, 0.08%)</title><rect x="78.9649%" y="853" width="0.0751%" height="15" fill="rgb(228,85,35)" fg:x="18935" fg:w="18"/><text x="79.2149%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.06%)</title><rect x="78.9774%" y="837" width="0.0626%" height="15" fill="rgb(209,50,18)" fg:x="18938" fg:w="15"/><text x="79.2274%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="79.0275%" y="821" width="0.0125%" height="15" fill="rgb(250,19,35)" fg:x="18950" fg:w="3"/><text x="79.2775%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="79.0400%" y="853" width="0.0125%" height="15" fill="rgb(253,107,29)" fg:x="18953" fg:w="3"/><text x="79.2900%" y="863.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="79.0400%" y="837" width="0.0125%" height="15" fill="rgb(252,179,29)" fg:x="18953" fg:w="3"/><text x="79.2900%" y="847.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (31 samples, 0.13%)</title><rect x="78.9357%" y="885" width="0.1293%" height="15" fill="rgb(238,194,6)" fg:x="18928" fg:w="31"/><text x="79.1857%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.10%)</title><rect x="78.9649%" y="869" width="0.1001%" height="15" fill="rgb(238,164,29)" fg:x="18935" fg:w="24"/><text x="79.2149%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="79.0525%" y="853" width="0.0125%" height="15" fill="rgb(224,25,9)" fg:x="18956" fg:w="3"/><text x="79.3025%" y="863.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="79.0650%" y="885" width="0.0167%" height="15" fill="rgb(244,153,23)" fg:x="18959" fg:w="4"/><text x="79.3150%" y="895.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="79.0817%" y="885" width="0.0459%" height="15" fill="rgb(212,203,14)" fg:x="18963" fg:w="11"/><text x="79.3317%" y="895.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.01%)</title><rect x="79.1276%" y="869" width="0.0125%" height="15" fill="rgb(220,164,20)" fg:x="18974" fg:w="3"/><text x="79.3776%" y="879.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (5 samples, 0.02%)</title><rect x="79.1401%" y="869" width="0.0209%" height="15" fill="rgb(222,203,48)" fg:x="18977" fg:w="5"/><text x="79.3901%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.02%)</title><rect x="79.1443%" y="853" width="0.0167%" height="15" fill="rgb(215,159,22)" fg:x="18978" fg:w="4"/><text x="79.3943%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.02%)</title><rect x="79.1443%" y="837" width="0.0167%" height="15" fill="rgb(216,183,47)" fg:x="18978" fg:w="4"/><text x="79.3943%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="79.1443%" y="821" width="0.0167%" height="15" fill="rgb(229,195,25)" fg:x="18978" fg:w="4"/><text x="79.3943%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="79.1443%" y="805" width="0.0167%" height="15" fill="rgb(224,132,51)" fg:x="18978" fg:w="4"/><text x="79.3943%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.05%)</title><rect x="79.2485%" y="805" width="0.0459%" height="15" fill="rgb(240,63,7)" fg:x="19003" fg:w="11"/><text x="79.4985%" y="815.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (8 samples, 0.03%)</title><rect x="79.2610%" y="789" width="0.0334%" height="15" fill="rgb(249,182,41)" fg:x="19006" fg:w="8"/><text x="79.5110%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.03%)</title><rect x="79.2652%" y="773" width="0.0292%" height="15" fill="rgb(243,47,26)" fg:x="19007" fg:w="7"/><text x="79.5152%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (6 samples, 0.03%)</title><rect x="79.2694%" y="757" width="0.0250%" height="15" fill="rgb(233,48,2)" fg:x="19008" fg:w="6"/><text x="79.5194%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="79.4654%" y="693" width="0.0209%" height="15" fill="rgb(244,165,34)" fg:x="19055" fg:w="5"/><text x="79.7154%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="79.4695%" y="677" width="0.0167%" height="15" fill="rgb(207,89,7)" fg:x="19056" fg:w="4"/><text x="79.7195%" y="687.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.02%)</title><rect x="79.4695%" y="661" width="0.0167%" height="15" fill="rgb(244,117,36)" fg:x="19056" fg:w="4"/><text x="79.7195%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="79.4695%" y="645" width="0.0167%" height="15" fill="rgb(226,144,34)" fg:x="19056" fg:w="4"/><text x="79.7195%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="79.4695%" y="629" width="0.0167%" height="15" fill="rgb(213,23,19)" fg:x="19056" fg:w="4"/><text x="79.7195%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="79.4695%" y="613" width="0.0167%" height="15" fill="rgb(217,75,12)" fg:x="19056" fg:w="4"/><text x="79.7195%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="79.4737%" y="597" width="0.0125%" height="15" fill="rgb(224,159,17)" fg:x="19057" fg:w="3"/><text x="79.7237%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="79.4737%" y="581" width="0.0125%" height="15" fill="rgb(217,118,1)" fg:x="19057" fg:w="3"/><text x="79.7237%" y="591.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="79.5738%" y="389" width="0.0167%" height="15" fill="rgb(232,180,48)" fg:x="19081" fg:w="4"/><text x="79.8238%" y="399.50"></text></g><g><title>__GI___libc_realloc (33 samples, 0.14%)</title><rect x="79.4987%" y="421" width="0.1376%" height="15" fill="rgb(230,27,33)" fg:x="19063" fg:w="33"/><text x="79.7487%" y="431.50"></text></g><g><title>_int_realloc (26 samples, 0.11%)</title><rect x="79.5279%" y="405" width="0.1084%" height="15" fill="rgb(205,31,21)" fg:x="19070" fg:w="26"/><text x="79.7779%" y="415.50"></text></g><g><title>_int_malloc (11 samples, 0.05%)</title><rect x="79.5905%" y="389" width="0.0459%" height="15" fill="rgb(253,59,4)" fg:x="19085" fg:w="11"/><text x="79.8405%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.14%)</title><rect x="79.4987%" y="549" width="0.1418%" height="15" fill="rgb(224,201,9)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.14%)</title><rect x="79.4987%" y="533" width="0.1418%" height="15" fill="rgb(229,206,30)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.14%)</title><rect x="79.4987%" y="517" width="0.1418%" height="15" fill="rgb(212,67,47)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.14%)</title><rect x="79.4987%" y="501" width="0.1418%" height="15" fill="rgb(211,96,50)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.14%)</title><rect x="79.4987%" y="485" width="0.1418%" height="15" fill="rgb(252,114,18)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.14%)</title><rect x="79.4987%" y="469" width="0.1418%" height="15" fill="rgb(223,58,37)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.14%)</title><rect x="79.4987%" y="453" width="0.1418%" height="15" fill="rgb(237,70,4)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="463.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.14%)</title><rect x="79.4987%" y="437" width="0.1418%" height="15" fill="rgb(244,85,46)" fg:x="19063" fg:w="34"/><text x="79.7487%" y="447.50"></text></g><g><title>core::fmt::Formatter::debug_list (39 samples, 0.16%)</title><rect x="79.4862%" y="693" width="0.1626%" height="15" fill="rgb(223,39,52)" fg:x="19060" fg:w="39"/><text x="79.7362%" y="703.50"></text></g><g><title>core::fmt::builders::debug_list_new (39 samples, 0.16%)</title><rect x="79.4862%" y="677" width="0.1626%" height="15" fill="rgb(218,200,14)" fg:x="19060" fg:w="39"/><text x="79.7362%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (38 samples, 0.16%)</title><rect x="79.4904%" y="661" width="0.1585%" height="15" fill="rgb(208,171,16)" fg:x="19061" fg:w="38"/><text x="79.7404%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (37 samples, 0.15%)</title><rect x="79.4946%" y="645" width="0.1543%" height="15" fill="rgb(234,200,18)" fg:x="19062" fg:w="37"/><text x="79.7446%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (37 samples, 0.15%)</title><rect x="79.4946%" y="629" width="0.1543%" height="15" fill="rgb(228,45,11)" fg:x="19062" fg:w="37"/><text x="79.7446%" y="639.50"></text></g><g><title>alloc::string::String::push_str (37 samples, 0.15%)</title><rect x="79.4946%" y="613" width="0.1543%" height="15" fill="rgb(237,182,11)" fg:x="19062" fg:w="37"/><text x="79.7446%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (37 samples, 0.15%)</title><rect x="79.4946%" y="597" width="0.1543%" height="15" fill="rgb(241,175,49)" fg:x="19062" fg:w="37"/><text x="79.7446%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (37 samples, 0.15%)</title><rect x="79.4946%" y="581" width="0.1543%" height="15" fill="rgb(247,38,35)" fg:x="19062" fg:w="37"/><text x="79.7446%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37 samples, 0.15%)</title><rect x="79.4946%" y="565" width="0.1543%" height="15" fill="rgb(228,39,49)" fg:x="19062" fg:w="37"/><text x="79.7446%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.02%)</title><rect x="79.6572%" y="629" width="0.0167%" height="15" fill="rgb(226,101,26)" fg:x="19101" fg:w="4"/><text x="79.9072%" y="639.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="79.7323%" y="581" width="0.0334%" height="15" fill="rgb(206,141,19)" fg:x="19119" fg:w="8"/><text x="79.9823%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="79.8449%" y="469" width="0.0167%" height="15" fill="rgb(211,200,13)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="79.8449%" y="453" width="0.0167%" height="15" fill="rgb(241,121,6)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="79.8449%" y="437" width="0.0167%" height="15" fill="rgb(234,221,29)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="79.8449%" y="421" width="0.0167%" height="15" fill="rgb(229,136,5)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="79.8449%" y="405" width="0.0167%" height="15" fill="rgb(238,36,11)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="79.8449%" y="389" width="0.0167%" height="15" fill="rgb(251,55,41)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="79.8449%" y="373" width="0.0167%" height="15" fill="rgb(242,34,40)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="79.8449%" y="357" width="0.0167%" height="15" fill="rgb(215,42,17)" fg:x="19146" fg:w="4"/><text x="80.0949%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="79.8490%" y="341" width="0.0125%" height="15" fill="rgb(207,44,46)" fg:x="19147" fg:w="3"/><text x="80.0990%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="79.8490%" y="325" width="0.0125%" height="15" fill="rgb(211,206,28)" fg:x="19147" fg:w="3"/><text x="80.0990%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="79.8490%" y="309" width="0.0125%" height="15" fill="rgb(237,167,16)" fg:x="19147" fg:w="3"/><text x="80.0990%" y="319.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="79.8490%" y="293" width="0.0125%" height="15" fill="rgb(233,66,6)" fg:x="19147" fg:w="3"/><text x="80.0990%" y="303.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.08%)</title><rect x="79.8741%" y="261" width="0.0834%" height="15" fill="rgb(246,123,29)" fg:x="19153" fg:w="20"/><text x="80.1241%" y="271.50"></text></g><g><title>_int_malloc (15 samples, 0.06%)</title><rect x="79.8949%" y="245" width="0.0626%" height="15" fill="rgb(209,62,40)" fg:x="19158" fg:w="15"/><text x="80.1449%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.10%)</title><rect x="79.8699%" y="341" width="0.0959%" height="15" fill="rgb(218,4,25)" fg:x="19152" fg:w="23"/><text x="80.1199%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.10%)</title><rect x="79.8699%" y="325" width="0.0959%" height="15" fill="rgb(253,91,49)" fg:x="19152" fg:w="23"/><text x="80.1199%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.10%)</title><rect x="79.8699%" y="309" width="0.0959%" height="15" fill="rgb(228,155,29)" fg:x="19152" fg:w="23"/><text x="80.1199%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.10%)</title><rect x="79.8699%" y="293" width="0.0959%" height="15" fill="rgb(243,57,37)" fg:x="19152" fg:w="23"/><text x="80.1199%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.10%)</title><rect x="79.8699%" y="277" width="0.0959%" height="15" fill="rgb(244,167,17)" fg:x="19152" fg:w="23"/><text x="80.1199%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.10%)</title><rect x="79.8699%" y="437" width="0.1043%" height="15" fill="rgb(207,181,38)" fg:x="19152" fg:w="25"/><text x="80.1199%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25 samples, 0.10%)</title><rect x="79.8699%" y="421" width="0.1043%" height="15" fill="rgb(211,8,23)" fg:x="19152" fg:w="25"/><text x="80.1199%" y="431.50"></text></g><g><title>alloc::string::String::push_str (25 samples, 0.10%)</title><rect x="79.8699%" y="405" width="0.1043%" height="15" fill="rgb(235,11,44)" fg:x="19152" fg:w="25"/><text x="80.1199%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.10%)</title><rect x="79.8699%" y="389" width="0.1043%" height="15" fill="rgb(248,18,52)" fg:x="19152" fg:w="25"/><text x="80.1199%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.10%)</title><rect x="79.8699%" y="373" width="0.1043%" height="15" fill="rgb(208,4,7)" fg:x="19152" fg:w="25"/><text x="80.1199%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.10%)</title><rect x="79.8699%" y="357" width="0.1043%" height="15" fill="rgb(240,17,39)" fg:x="19152" fg:w="25"/><text x="80.1199%" y="367.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (48 samples, 0.20%)</title><rect x="79.7865%" y="533" width="0.2002%" height="15" fill="rgb(207,170,3)" fg:x="19132" fg:w="48"/><text x="80.0365%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (40 samples, 0.17%)</title><rect x="79.8198%" y="517" width="0.1668%" height="15" fill="rgb(236,100,52)" fg:x="19140" fg:w="40"/><text x="80.0698%" y="527.50"></text></g><g><title>core::fmt::write (38 samples, 0.16%)</title><rect x="79.8282%" y="501" width="0.1585%" height="15" fill="rgb(246,78,51)" fg:x="19142" fg:w="38"/><text x="80.0782%" y="511.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::fmt::Display&gt;::fmt (34 samples, 0.14%)</title><rect x="79.8449%" y="485" width="0.1418%" height="15" fill="rgb(211,17,15)" fg:x="19146" fg:w="34"/><text x="80.0949%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (29 samples, 0.12%)</title><rect x="79.8657%" y="469" width="0.1209%" height="15" fill="rgb(209,59,46)" fg:x="19151" fg:w="29"/><text x="80.1157%" y="479.50"></text></g><g><title>core::fmt::write (28 samples, 0.12%)</title><rect x="79.8699%" y="453" width="0.1168%" height="15" fill="rgb(210,92,25)" fg:x="19152" fg:w="28"/><text x="80.1199%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (63 samples, 0.26%)</title><rect x="79.7281%" y="597" width="0.2627%" height="15" fill="rgb(238,174,52)" fg:x="19118" fg:w="63"/><text x="79.9781%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (53 samples, 0.22%)</title><rect x="79.7698%" y="581" width="0.2210%" height="15" fill="rgb(230,73,7)" fg:x="19128" fg:w="53"/><text x="80.0198%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (52 samples, 0.22%)</title><rect x="79.7740%" y="565" width="0.2169%" height="15" fill="rgb(243,124,40)" fg:x="19129" fg:w="52"/><text x="80.0240%" y="575.50"></text></g><g><title>core::fmt::write (50 samples, 0.21%)</title><rect x="79.7823%" y="549" width="0.2085%" height="15" fill="rgb(244,170,11)" fg:x="19131" fg:w="50"/><text x="80.0323%" y="559.50"></text></g><g><title>__GI___libc_free (7 samples, 0.03%)</title><rect x="79.9908%" y="597" width="0.0292%" height="15" fill="rgb(207,114,54)" fg:x="19181" fg:w="7"/><text x="80.2408%" y="607.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="80.0242%" y="597" width="0.0250%" height="15" fill="rgb(205,42,20)" fg:x="19189" fg:w="6"/><text x="80.2742%" y="607.50"></text></g><g><title>alloc::str::join_generic_copy (11 samples, 0.05%)</title><rect x="80.0492%" y="597" width="0.0459%" height="15" fill="rgb(230,30,28)" fg:x="19195" fg:w="11"/><text x="80.2992%" y="607.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="80.1576%" y="309" width="0.0209%" height="15" fill="rgb(205,73,54)" fg:x="19221" fg:w="5"/><text x="80.4076%" y="319.50"></text></g><g><title>_int_malloc (13 samples, 0.05%)</title><rect x="80.1785%" y="309" width="0.0542%" height="15" fill="rgb(254,227,23)" fg:x="19226" fg:w="13"/><text x="80.4285%" y="319.50"></text></g><g><title>__GI___libc_realloc (26 samples, 0.11%)</title><rect x="80.1326%" y="341" width="0.1084%" height="15" fill="rgb(228,202,34)" fg:x="19215" fg:w="26"/><text x="80.3826%" y="351.50"></text></g><g><title>_int_realloc (21 samples, 0.09%)</title><rect x="80.1535%" y="325" width="0.0876%" height="15" fill="rgb(222,225,37)" fg:x="19220" fg:w="21"/><text x="80.4035%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.13%)</title><rect x="80.1159%" y="469" width="0.1293%" height="15" fill="rgb(221,14,54)" fg:x="19211" fg:w="31"/><text x="80.3659%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.13%)</title><rect x="80.1159%" y="453" width="0.1293%" height="15" fill="rgb(254,102,2)" fg:x="19211" fg:w="31"/><text x="80.3659%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.13%)</title><rect x="80.1201%" y="437" width="0.1251%" height="15" fill="rgb(232,104,17)" fg:x="19212" fg:w="30"/><text x="80.3701%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.13%)</title><rect x="80.1201%" y="421" width="0.1251%" height="15" fill="rgb(250,220,14)" fg:x="19212" fg:w="30"/><text x="80.3701%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.12%)</title><rect x="80.1284%" y="405" width="0.1168%" height="15" fill="rgb(241,158,9)" fg:x="19214" fg:w="28"/><text x="80.3784%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (27 samples, 0.11%)</title><rect x="80.1326%" y="389" width="0.1126%" height="15" fill="rgb(246,9,43)" fg:x="19215" fg:w="27"/><text x="80.3826%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (27 samples, 0.11%)</title><rect x="80.1326%" y="373" width="0.1126%" height="15" fill="rgb(206,73,33)" fg:x="19215" fg:w="27"/><text x="80.3826%" y="383.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.11%)</title><rect x="80.1326%" y="357" width="0.1126%" height="15" fill="rgb(222,79,8)" fg:x="19215" fg:w="27"/><text x="80.3826%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 0.14%)</title><rect x="80.1159%" y="565" width="0.1418%" height="15" fill="rgb(234,8,54)" fg:x="19211" fg:w="34"/><text x="80.3659%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (34 samples, 0.14%)</title><rect x="80.1159%" y="549" width="0.1418%" height="15" fill="rgb(209,134,38)" fg:x="19211" fg:w="34"/><text x="80.3659%" y="559.50"></text></g><g><title>alloc::string::String::push_str (34 samples, 0.14%)</title><rect x="80.1159%" y="533" width="0.1418%" height="15" fill="rgb(230,127,29)" fg:x="19211" fg:w="34"/><text x="80.3659%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.14%)</title><rect x="80.1159%" y="517" width="0.1418%" height="15" fill="rgb(242,44,41)" fg:x="19211" fg:w="34"/><text x="80.3659%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.14%)</title><rect x="80.1159%" y="501" width="0.1418%" height="15" fill="rgb(222,56,43)" fg:x="19211" fg:w="34"/><text x="80.3659%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.14%)</title><rect x="80.1159%" y="485" width="0.1418%" height="15" fill="rgb(238,39,47)" fg:x="19211" fg:w="34"/><text x="80.3659%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="80.2452%" y="469" width="0.0125%" height="15" fill="rgb(226,79,43)" fg:x="19242" fg:w="3"/><text x="80.4952%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="80.2452%" y="453" width="0.0125%" height="15" fill="rgb(242,105,53)" fg:x="19242" fg:w="3"/><text x="80.4952%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 0.01%)</title><rect x="80.2577%" y="565" width="0.0125%" height="15" fill="rgb(251,132,46)" fg:x="19245" fg:w="3"/><text x="80.5077%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (202 samples, 0.84%)</title><rect x="79.4403%" y="709" width="0.8424%" height="15" fill="rgb(231,77,14)" fg:x="19049" fg:w="202"/><text x="79.6903%" y="719.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (150 samples, 0.63%)</title><rect x="79.6572%" y="693" width="0.6255%" height="15" fill="rgb(240,135,9)" fg:x="19101" fg:w="150"/><text x="79.9072%" y="703.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (150 samples, 0.63%)</title><rect x="79.6572%" y="677" width="0.6255%" height="15" fill="rgb(248,109,14)" fg:x="19101" fg:w="150"/><text x="79.9072%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (150 samples, 0.63%)</title><rect x="79.6572%" y="661" width="0.6255%" height="15" fill="rgb(227,146,52)" fg:x="19101" fg:w="150"/><text x="79.9072%" y="671.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (150 samples, 0.63%)</title><rect x="79.6572%" y="645" width="0.6255%" height="15" fill="rgb(232,54,3)" fg:x="19101" fg:w="150"/><text x="79.9072%" y="655.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (146 samples, 0.61%)</title><rect x="79.6739%" y="629" width="0.6089%" height="15" fill="rgb(229,201,43)" fg:x="19105" fg:w="146"/><text x="79.9239%" y="639.50"></text></g><g><title>datafusion_expr::expr::fmt_function (137 samples, 0.57%)</title><rect x="79.7114%" y="613" width="0.5713%" height="15" fill="rgb(252,161,33)" fg:x="19114" fg:w="137"/><text x="79.9614%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (45 samples, 0.19%)</title><rect x="80.0951%" y="597" width="0.1877%" height="15" fill="rgb(226,146,40)" fg:x="19206" fg:w="45"/><text x="80.3451%" y="607.50"></text></g><g><title>core::fmt::write (43 samples, 0.18%)</title><rect x="80.1034%" y="581" width="0.1793%" height="15" fill="rgb(219,47,25)" fg:x="19208" fg:w="43"/><text x="80.3534%" y="591.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.09%)</title><rect x="80.2827%" y="533" width="0.0876%" height="15" fill="rgb(250,135,13)" fg:x="19251" fg:w="21"/><text x="80.5327%" y="543.50"></text></g><g><title>_int_malloc (16 samples, 0.07%)</title><rect x="80.3036%" y="517" width="0.0667%" height="15" fill="rgb(219,229,18)" fg:x="19256" fg:w="16"/><text x="80.5536%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.09%)</title><rect x="80.2827%" y="613" width="0.0917%" height="15" fill="rgb(217,152,27)" fg:x="19251" fg:w="22"/><text x="80.5327%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.09%)</title><rect x="80.2827%" y="597" width="0.0917%" height="15" fill="rgb(225,71,47)" fg:x="19251" fg:w="22"/><text x="80.5327%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.09%)</title><rect x="80.2827%" y="581" width="0.0917%" height="15" fill="rgb(220,139,14)" fg:x="19251" fg:w="22"/><text x="80.5327%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.09%)</title><rect x="80.2827%" y="565" width="0.0917%" height="15" fill="rgb(247,54,32)" fg:x="19251" fg:w="22"/><text x="80.5327%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.09%)</title><rect x="80.2827%" y="549" width="0.0917%" height="15" fill="rgb(252,131,39)" fg:x="19251" fg:w="22"/><text x="80.5327%" y="559.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (246 samples, 1.03%)</title><rect x="79.3569%" y="757" width="1.0259%" height="15" fill="rgb(210,108,39)" fg:x="19029" fg:w="246"/><text x="79.6069%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (235 samples, 0.98%)</title><rect x="79.4028%" y="741" width="0.9800%" height="15" fill="rgb(205,23,29)" fg:x="19040" fg:w="235"/><text x="79.6528%" y="751.50"></text></g><g><title>core::fmt::write (235 samples, 0.98%)</title><rect x="79.4028%" y="725" width="0.9800%" height="15" fill="rgb(246,139,46)" fg:x="19040" fg:w="235"/><text x="79.6528%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (24 samples, 0.10%)</title><rect x="80.2827%" y="709" width="0.1001%" height="15" fill="rgb(250,81,26)" fg:x="19251" fg:w="24"/><text x="80.5327%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.10%)</title><rect x="80.2827%" y="693" width="0.1001%" height="15" fill="rgb(214,104,7)" fg:x="19251" fg:w="24"/><text x="80.5327%" y="703.50"></text></g><g><title>alloc::string::String::push_str (24 samples, 0.10%)</title><rect x="80.2827%" y="677" width="0.1001%" height="15" fill="rgb(233,189,8)" fg:x="19251" fg:w="24"/><text x="80.5327%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.10%)</title><rect x="80.2827%" y="661" width="0.1001%" height="15" fill="rgb(228,141,17)" fg:x="19251" fg:w="24"/><text x="80.5327%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.10%)</title><rect x="80.2827%" y="645" width="0.1001%" height="15" fill="rgb(247,157,1)" fg:x="19251" fg:w="24"/><text x="80.5327%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.10%)</title><rect x="80.2827%" y="629" width="0.1001%" height="15" fill="rgb(249,225,5)" fg:x="19251" fg:w="24"/><text x="80.5327%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="80.3953%" y="741" width="0.0167%" height="15" fill="rgb(242,55,13)" fg:x="19278" fg:w="4"/><text x="80.6453%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="80.3953%" y="725" width="0.0167%" height="15" fill="rgb(230,49,50)" fg:x="19278" fg:w="4"/><text x="80.6453%" y="735.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.02%)</title><rect x="80.3953%" y="709" width="0.0167%" height="15" fill="rgb(241,111,38)" fg:x="19278" fg:w="4"/><text x="80.6453%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="80.3953%" y="693" width="0.0167%" height="15" fill="rgb(252,155,4)" fg:x="19278" fg:w="4"/><text x="80.6453%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="80.3953%" y="677" width="0.0167%" height="15" fill="rgb(212,69,32)" fg:x="19278" fg:w="4"/><text x="80.6453%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="80.3953%" y="661" width="0.0167%" height="15" fill="rgb(243,107,47)" fg:x="19278" fg:w="4"/><text x="80.6453%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="80.3995%" y="645" width="0.0125%" height="15" fill="rgb(247,130,12)" fg:x="19279" fg:w="3"/><text x="80.6495%" y="655.50"></text></g><g><title>core::fmt::run (8 samples, 0.03%)</title><rect x="80.3870%" y="757" width="0.0334%" height="15" fill="rgb(233,74,16)" fg:x="19276" fg:w="8"/><text x="80.6370%" y="767.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (272 samples, 1.13%)</title><rect x="79.2944%" y="805" width="1.1343%" height="15" fill="rgb(208,58,18)" fg:x="19014" fg:w="272"/><text x="79.5444%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (265 samples, 1.11%)</title><rect x="79.3236%" y="789" width="1.1051%" height="15" fill="rgb(242,225,1)" fg:x="19021" fg:w="265"/><text x="79.5736%" y="799.50"></text></g><g><title>core::fmt::write (262 samples, 1.09%)</title><rect x="79.3361%" y="773" width="1.0926%" height="15" fill="rgb(249,39,40)" fg:x="19024" fg:w="262"/><text x="79.5861%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="80.5163%" y="741" width="0.0125%" height="15" fill="rgb(207,72,44)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="80.5163%" y="725" width="0.0125%" height="15" fill="rgb(215,193,12)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="735.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.01%)</title><rect x="80.5163%" y="709" width="0.0125%" height="15" fill="rgb(248,41,39)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="80.5163%" y="693" width="0.0125%" height="15" fill="rgb(253,85,4)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="80.5163%" y="677" width="0.0125%" height="15" fill="rgb(243,70,31)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="80.5163%" y="661" width="0.0125%" height="15" fill="rgb(253,195,26)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="80.5163%" y="645" width="0.0125%" height="15" fill="rgb(243,42,11)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="80.5163%" y="629" width="0.0125%" height="15" fill="rgb(239,66,17)" fg:x="19307" fg:w="3"/><text x="80.7663%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="80.5288%" y="741" width="0.0167%" height="15" fill="rgb(217,132,21)" fg:x="19310" fg:w="4"/><text x="80.7788%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="80.5288%" y="725" width="0.0167%" height="15" fill="rgb(252,202,21)" fg:x="19310" fg:w="4"/><text x="80.7788%" y="735.50"></text></g><g><title>core::fmt::Formatter::debug_list (9 samples, 0.04%)</title><rect x="80.6164%" y="517" width="0.0375%" height="15" fill="rgb(233,98,36)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="527.50"></text></g><g><title>core::fmt::builders::debug_list_new (9 samples, 0.04%)</title><rect x="80.6164%" y="501" width="0.0375%" height="15" fill="rgb(216,153,54)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (9 samples, 0.04%)</title><rect x="80.6164%" y="485" width="0.0375%" height="15" fill="rgb(250,99,7)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.04%)</title><rect x="80.6164%" y="469" width="0.0375%" height="15" fill="rgb(207,56,50)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.04%)</title><rect x="80.6164%" y="453" width="0.0375%" height="15" fill="rgb(244,61,34)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="463.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.04%)</title><rect x="80.6164%" y="437" width="0.0375%" height="15" fill="rgb(241,50,38)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.04%)</title><rect x="80.6164%" y="421" width="0.0375%" height="15" fill="rgb(212,166,30)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.04%)</title><rect x="80.6164%" y="405" width="0.0375%" height="15" fill="rgb(249,127,32)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.04%)</title><rect x="80.6164%" y="389" width="0.0375%" height="15" fill="rgb(209,103,0)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="80.6164%" y="373" width="0.0375%" height="15" fill="rgb(238,209,51)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.04%)</title><rect x="80.6164%" y="357" width="0.0375%" height="15" fill="rgb(237,56,23)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="80.6164%" y="341" width="0.0375%" height="15" fill="rgb(215,153,46)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.04%)</title><rect x="80.6164%" y="325" width="0.0375%" height="15" fill="rgb(224,49,31)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.04%)</title><rect x="80.6164%" y="309" width="0.0375%" height="15" fill="rgb(250,18,42)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.04%)</title><rect x="80.6164%" y="293" width="0.0375%" height="15" fill="rgb(215,176,39)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.04%)</title><rect x="80.6164%" y="277" width="0.0375%" height="15" fill="rgb(223,77,29)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="287.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.04%)</title><rect x="80.6164%" y="261" width="0.0375%" height="15" fill="rgb(234,94,52)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="271.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.04%)</title><rect x="80.6164%" y="245" width="0.0375%" height="15" fill="rgb(220,154,50)" fg:x="19331" fg:w="9"/><text x="80.8664%" y="255.50"></text></g><g><title>_int_realloc (6 samples, 0.03%)</title><rect x="80.6289%" y="229" width="0.0250%" height="15" fill="rgb(212,11,10)" fg:x="19334" fg:w="6"/><text x="80.8789%" y="239.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="80.6414%" y="213" width="0.0125%" height="15" fill="rgb(205,166,19)" fg:x="19337" fg:w="3"/><text x="80.8914%" y="223.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (3 samples, 0.01%)</title><rect x="80.6706%" y="437" width="0.0125%" height="15" fill="rgb(244,198,16)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="447.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (3 samples, 0.01%)</title><rect x="80.6706%" y="421" width="0.0125%" height="15" fill="rgb(219,69,12)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.01%)</title><rect x="80.6706%" y="405" width="0.0125%" height="15" fill="rgb(245,30,7)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="80.6706%" y="389" width="0.0125%" height="15" fill="rgb(218,221,48)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="80.6706%" y="373" width="0.0125%" height="15" fill="rgb(216,66,15)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="383.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.01%)</title><rect x="80.6706%" y="357" width="0.0125%" height="15" fill="rgb(226,122,50)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="80.6706%" y="341" width="0.0125%" height="15" fill="rgb(239,156,16)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="80.6706%" y="325" width="0.0125%" height="15" fill="rgb(224,27,38)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="80.6706%" y="309" width="0.0125%" height="15" fill="rgb(224,39,27)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="80.6706%" y="293" width="0.0125%" height="15" fill="rgb(215,92,29)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="80.6706%" y="277" width="0.0125%" height="15" fill="rgb(207,159,16)" fg:x="19344" fg:w="3"/><text x="80.9206%" y="287.50"></text></g><g><title>core::fmt::Formatter::debug_lower_hex (3 samples, 0.01%)</title><rect x="80.6956%" y="373" width="0.0125%" height="15" fill="rgb(238,163,47)" fg:x="19350" fg:w="3"/><text x="80.9456%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.01%)</title><rect x="80.7248%" y="309" width="0.0125%" height="15" fill="rgb(219,91,49)" fg:x="19357" fg:w="3"/><text x="80.9748%" y="319.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="80.7748%" y="69" width="0.0125%" height="15" fill="rgb(227,167,31)" fg:x="19369" fg:w="3"/><text x="81.0248%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="80.7748%" y="245" width="0.0167%" height="15" fill="rgb(234,80,54)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="80.7748%" y="229" width="0.0167%" height="15" fill="rgb(212,114,2)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="80.7748%" y="213" width="0.0167%" height="15" fill="rgb(234,50,24)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="80.7748%" y="197" width="0.0167%" height="15" fill="rgb(221,68,8)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="80.7748%" y="181" width="0.0167%" height="15" fill="rgb(254,180,31)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="80.7748%" y="165" width="0.0167%" height="15" fill="rgb(247,130,50)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="80.7748%" y="149" width="0.0167%" height="15" fill="rgb(211,109,4)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="80.7748%" y="133" width="0.0167%" height="15" fill="rgb(238,50,21)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="80.7748%" y="117" width="0.0167%" height="15" fill="rgb(225,57,45)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="80.7748%" y="101" width="0.0167%" height="15" fill="rgb(209,196,50)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="111.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="80.7748%" y="85" width="0.0167%" height="15" fill="rgb(242,140,13)" fg:x="19369" fg:w="4"/><text x="81.0248%" y="95.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (26 samples, 0.11%)</title><rect x="80.7373%" y="309" width="0.1084%" height="15" fill="rgb(217,111,7)" fg:x="19360" fg:w="26"/><text x="80.9873%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (22 samples, 0.09%)</title><rect x="80.7540%" y="293" width="0.0917%" height="15" fill="rgb(253,193,51)" fg:x="19364" fg:w="22"/><text x="81.0040%" y="303.50"></text></g><g><title>core::fmt::write (21 samples, 0.09%)</title><rect x="80.7582%" y="277" width="0.0876%" height="15" fill="rgb(252,70,29)" fg:x="19365" fg:w="21"/><text x="81.0082%" y="287.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::fmt::Display&gt;::fmt (18 samples, 0.08%)</title><rect x="80.7707%" y="261" width="0.0751%" height="15" fill="rgb(232,127,12)" fg:x="19368" fg:w="18"/><text x="81.0207%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (9 samples, 0.04%)</title><rect x="80.8082%" y="245" width="0.0375%" height="15" fill="rgb(211,180,21)" fg:x="19377" fg:w="9"/><text x="81.0582%" y="255.50"></text></g><g><title>core::fmt::write (7 samples, 0.03%)</title><rect x="80.8165%" y="229" width="0.0292%" height="15" fill="rgb(229,72,13)" fg:x="19379" fg:w="7"/><text x="81.0665%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="80.8457%" y="197" width="0.0250%" height="15" fill="rgb(240,211,49)" fg:x="19386" fg:w="6"/><text x="81.0957%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="80.8457%" y="181" width="0.0250%" height="15" fill="rgb(219,149,40)" fg:x="19386" fg:w="6"/><text x="81.0957%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="80.8499%" y="165" width="0.0209%" height="15" fill="rgb(210,127,46)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="80.8499%" y="149" width="0.0209%" height="15" fill="rgb(220,106,7)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="80.8499%" y="133" width="0.0209%" height="15" fill="rgb(249,31,22)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.02%)</title><rect x="80.8499%" y="117" width="0.0209%" height="15" fill="rgb(253,1,49)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.02%)</title><rect x="80.8499%" y="101" width="0.0209%" height="15" fill="rgb(227,144,33)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="111.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.02%)</title><rect x="80.8499%" y="85" width="0.0209%" height="15" fill="rgb(249,163,44)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="95.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.02%)</title><rect x="80.8499%" y="69" width="0.0209%" height="15" fill="rgb(234,15,39)" fg:x="19387" fg:w="5"/><text x="81.0999%" y="79.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="80.8541%" y="53" width="0.0167%" height="15" fill="rgb(207,66,16)" fg:x="19388" fg:w="4"/><text x="81.1041%" y="63.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="80.8583%" y="37" width="0.0125%" height="15" fill="rgb(233,112,24)" fg:x="19389" fg:w="3"/><text x="81.1083%" y="47.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (41 samples, 0.17%)</title><rect x="80.7165%" y="357" width="0.1710%" height="15" fill="rgb(230,90,22)" fg:x="19355" fg:w="41"/><text x="80.9665%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (41 samples, 0.17%)</title><rect x="80.7165%" y="341" width="0.1710%" height="15" fill="rgb(229,61,13)" fg:x="19355" fg:w="41"/><text x="80.9665%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (41 samples, 0.17%)</title><rect x="80.7165%" y="325" width="0.1710%" height="15" fill="rgb(225,57,24)" fg:x="19355" fg:w="41"/><text x="80.9665%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (10 samples, 0.04%)</title><rect x="80.8457%" y="309" width="0.0417%" height="15" fill="rgb(208,169,48)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.04%)</title><rect x="80.8457%" y="293" width="0.0417%" height="15" fill="rgb(244,218,51)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.04%)</title><rect x="80.8457%" y="277" width="0.0417%" height="15" fill="rgb(214,148,10)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="287.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.04%)</title><rect x="80.8457%" y="261" width="0.0417%" height="15" fill="rgb(225,174,27)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.04%)</title><rect x="80.8457%" y="245" width="0.0417%" height="15" fill="rgb(230,96,26)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.04%)</title><rect x="80.8457%" y="229" width="0.0417%" height="15" fill="rgb(232,10,30)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.04%)</title><rect x="80.8457%" y="213" width="0.0417%" height="15" fill="rgb(222,8,50)" fg:x="19386" fg:w="10"/><text x="81.0957%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="80.8708%" y="197" width="0.0167%" height="15" fill="rgb(213,81,27)" fg:x="19392" fg:w="4"/><text x="81.1208%" y="207.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (5 samples, 0.02%)</title><rect x="80.8874%" y="357" width="0.0209%" height="15" fill="rgb(245,50,10)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.02%)</title><rect x="80.8874%" y="341" width="0.0209%" height="15" fill="rgb(216,100,18)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (5 samples, 0.02%)</title><rect x="80.8874%" y="325" width="0.0209%" height="15" fill="rgb(236,147,54)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="80.8874%" y="309" width="0.0209%" height="15" fill="rgb(205,143,26)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="80.8874%" y="293" width="0.0209%" height="15" fill="rgb(236,26,9)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="303.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.02%)</title><rect x="80.8874%" y="277" width="0.0209%" height="15" fill="rgb(221,165,53)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.02%)</title><rect x="80.8874%" y="261" width="0.0209%" height="15" fill="rgb(214,110,17)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="80.8874%" y="245" width="0.0209%" height="15" fill="rgb(237,197,12)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.02%)</title><rect x="80.8874%" y="229" width="0.0209%" height="15" fill="rgb(205,84,17)" fg:x="19396" fg:w="5"/><text x="81.1374%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="80.8916%" y="213" width="0.0167%" height="15" fill="rgb(237,18,45)" fg:x="19397" fg:w="4"/><text x="81.1416%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="80.8916%" y="197" width="0.0167%" height="15" fill="rgb(221,87,14)" fg:x="19397" fg:w="4"/><text x="81.1416%" y="207.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (52 samples, 0.22%)</title><rect x="80.7081%" y="373" width="0.2169%" height="15" fill="rgb(238,186,15)" fg:x="19353" fg:w="52"/><text x="80.9581%" y="383.50"></text></g><g><title>core::fmt::builders::debug_struct_new (4 samples, 0.02%)</title><rect x="80.9083%" y="357" width="0.0167%" height="15" fill="rgb(208,115,11)" fg:x="19401" fg:w="4"/><text x="81.1583%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.01%)</title><rect x="80.9125%" y="341" width="0.0125%" height="15" fill="rgb(254,175,0)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="80.9125%" y="325" width="0.0125%" height="15" fill="rgb(227,24,42)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="80.9125%" y="309" width="0.0125%" height="15" fill="rgb(223,211,37)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="319.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.01%)</title><rect x="80.9125%" y="293" width="0.0125%" height="15" fill="rgb(235,49,27)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="80.9125%" y="277" width="0.0125%" height="15" fill="rgb(254,97,51)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="80.9125%" y="261" width="0.0125%" height="15" fill="rgb(249,51,40)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="80.9125%" y="245" width="0.0125%" height="15" fill="rgb(210,128,45)" fg:x="19402" fg:w="3"/><text x="81.1625%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (58 samples, 0.24%)</title><rect x="80.6873%" y="389" width="0.2419%" height="15" fill="rgb(224,137,50)" fg:x="19348" fg:w="58"/><text x="80.9373%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (8 samples, 0.03%)</title><rect x="80.9291%" y="389" width="0.0334%" height="15" fill="rgb(242,15,9)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="80.9291%" y="373" width="0.0334%" height="15" fill="rgb(233,187,41)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.03%)</title><rect x="80.9291%" y="357" width="0.0334%" height="15" fill="rgb(227,2,29)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="367.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.03%)</title><rect x="80.9291%" y="341" width="0.0334%" height="15" fill="rgb(222,70,3)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.03%)</title><rect x="80.9291%" y="325" width="0.0334%" height="15" fill="rgb(213,11,42)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="80.9291%" y="309" width="0.0334%" height="15" fill="rgb(225,150,9)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.03%)</title><rect x="80.9291%" y="293" width="0.0334%" height="15" fill="rgb(230,162,45)" fg:x="19406" fg:w="8"/><text x="81.1791%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="80.9375%" y="277" width="0.0250%" height="15" fill="rgb(222,14,52)" fg:x="19408" fg:w="6"/><text x="81.1875%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="80.9375%" y="261" width="0.0250%" height="15" fill="rgb(254,198,14)" fg:x="19408" fg:w="6"/><text x="81.1875%" y="271.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Debug for f64&gt;::fmt (10 samples, 0.04%)</title><rect x="80.9667%" y="389" width="0.0417%" height="15" fill="rgb(220,217,30)" fg:x="19415" fg:w="10"/><text x="81.2167%" y="399.50"></text></g><g><title>core::fmt::float::float_to_general_debug (7 samples, 0.03%)</title><rect x="80.9792%" y="373" width="0.0292%" height="15" fill="rgb(215,146,41)" fg:x="19418" fg:w="7"/><text x="81.2292%" y="383.50"></text></g><g><title>&lt;f64 as core::fmt::float::GeneralFormat&gt;::already_rounded_value_should_use_exponential (6 samples, 0.03%)</title><rect x="80.9834%" y="357" width="0.0250%" height="15" fill="rgb(217,27,36)" fg:x="19419" fg:w="6"/><text x="81.2334%" y="367.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs_private (4 samples, 0.02%)</title><rect x="80.9917%" y="341" width="0.0167%" height="15" fill="rgb(219,218,39)" fg:x="19421" fg:w="4"/><text x="81.2417%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="81.0417%" y="357" width="0.0125%" height="15" fill="rgb(219,4,42)" fg:x="19433" fg:w="3"/><text x="81.2917%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="81.0417%" y="341" width="0.0125%" height="15" fill="rgb(249,119,36)" fg:x="19433" fg:w="3"/><text x="81.2917%" y="351.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.01%)</title><rect x="81.0417%" y="325" width="0.0125%" height="15" fill="rgb(209,23,33)" fg:x="19433" fg:w="3"/><text x="81.2917%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="81.0417%" y="309" width="0.0125%" height="15" fill="rgb(211,10,0)" fg:x="19433" fg:w="3"/><text x="81.2917%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="81.0417%" y="293" width="0.0125%" height="15" fill="rgb(208,99,37)" fg:x="19433" fg:w="3"/><text x="81.2917%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="81.0417%" y="277" width="0.0125%" height="15" fill="rgb(213,132,31)" fg:x="19433" fg:w="3"/><text x="81.2917%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (14 samples, 0.06%)</title><rect x="81.0167%" y="373" width="0.0584%" height="15" fill="rgb(243,129,40)" fg:x="19427" fg:w="14"/><text x="81.2667%" y="383.50"></text></g><g><title>core::num::flt2dec::decoder::decode (4 samples, 0.02%)</title><rect x="81.0960%" y="357" width="0.0167%" height="15" fill="rgb(210,66,33)" fg:x="19446" fg:w="4"/><text x="81.3460%" y="367.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (26 samples, 0.11%)</title><rect x="81.0084%" y="389" width="0.1084%" height="15" fill="rgb(209,189,4)" fg:x="19425" fg:w="26"/><text x="81.2584%" y="399.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (10 samples, 0.04%)</title><rect x="81.0751%" y="373" width="0.0417%" height="15" fill="rgb(214,107,37)" fg:x="19441" fg:w="10"/><text x="81.3251%" y="383.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (114 samples, 0.48%)</title><rect x="80.6831%" y="437" width="0.4754%" height="15" fill="rgb(245,88,54)" fg:x="19347" fg:w="114"/><text x="80.9331%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (114 samples, 0.48%)</title><rect x="80.6831%" y="421" width="0.4754%" height="15" fill="rgb(205,146,20)" fg:x="19347" fg:w="114"/><text x="80.9331%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (114 samples, 0.48%)</title><rect x="80.6831%" y="405" width="0.4754%" height="15" fill="rgb(220,161,25)" fg:x="19347" fg:w="114"/><text x="80.9331%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (10 samples, 0.04%)</title><rect x="81.1168%" y="389" width="0.0417%" height="15" fill="rgb(215,152,15)" fg:x="19451" fg:w="10"/><text x="81.3668%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (10 samples, 0.04%)</title><rect x="81.1168%" y="373" width="0.0417%" height="15" fill="rgb(233,192,44)" fg:x="19451" fg:w="10"/><text x="81.3668%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral (7 samples, 0.03%)</title><rect x="81.1293%" y="357" width="0.0292%" height="15" fill="rgb(240,170,46)" fg:x="19454" fg:w="7"/><text x="81.3793%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="341" width="0.0167%" height="15" fill="rgb(207,104,33)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="325" width="0.0167%" height="15" fill="rgb(219,21,39)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="309" width="0.0167%" height="15" fill="rgb(214,133,29)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="293" width="0.0167%" height="15" fill="rgb(226,93,6)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="277" width="0.0167%" height="15" fill="rgb(252,222,34)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="261" width="0.0167%" height="15" fill="rgb(252,92,48)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="245" width="0.0167%" height="15" fill="rgb(245,223,24)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="229" width="0.0167%" height="15" fill="rgb(205,176,3)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="213" width="0.0167%" height="15" fill="rgb(235,151,15)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="197" width="0.0167%" height="15" fill="rgb(237,209,11)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="81.1418%" y="181" width="0.0167%" height="15" fill="rgb(243,227,24)" fg:x="19457" fg:w="4"/><text x="81.3918%" y="191.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (125 samples, 0.52%)</title><rect x="80.6622%" y="453" width="0.5213%" height="15" fill="rgb(239,193,16)" fg:x="19342" fg:w="125"/><text x="80.9122%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (6 samples, 0.03%)</title><rect x="81.1585%" y="437" width="0.0250%" height="15" fill="rgb(231,27,9)" fg:x="19461" fg:w="6"/><text x="81.4085%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.03%)</title><rect x="81.1585%" y="421" width="0.0250%" height="15" fill="rgb(219,169,10)" fg:x="19461" fg:w="6"/><text x="81.4085%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (6 samples, 0.03%)</title><rect x="81.1585%" y="405" width="0.0250%" height="15" fill="rgb(244,229,43)" fg:x="19461" fg:w="6"/><text x="81.4085%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (4 samples, 0.02%)</title><rect x="81.1669%" y="389" width="0.0167%" height="15" fill="rgb(254,38,20)" fg:x="19463" fg:w="4"/><text x="81.4169%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="81.1710%" y="373" width="0.0125%" height="15" fill="rgb(250,47,30)" fg:x="19464" fg:w="3"/><text x="81.4210%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (141 samples, 0.59%)</title><rect x="80.6080%" y="533" width="0.5880%" height="15" fill="rgb(224,124,36)" fg:x="19329" fg:w="141"/><text x="80.8580%" y="543.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (130 samples, 0.54%)</title><rect x="80.6539%" y="517" width="0.5421%" height="15" fill="rgb(246,68,51)" fg:x="19340" fg:w="130"/><text x="80.9039%" y="527.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (130 samples, 0.54%)</title><rect x="80.6539%" y="501" width="0.5421%" height="15" fill="rgb(253,43,49)" fg:x="19340" fg:w="130"/><text x="80.9039%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (130 samples, 0.54%)</title><rect x="80.6539%" y="485" width="0.5421%" height="15" fill="rgb(219,54,36)" fg:x="19340" fg:w="130"/><text x="80.9039%" y="495.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (130 samples, 0.54%)</title><rect x="80.6539%" y="469" width="0.5421%" height="15" fill="rgb(227,133,34)" fg:x="19340" fg:w="130"/><text x="80.9039%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (148 samples, 0.62%)</title><rect x="80.6039%" y="581" width="0.6172%" height="15" fill="rgb(247,227,15)" fg:x="19328" fg:w="148"/><text x="80.8539%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (148 samples, 0.62%)</title><rect x="80.6039%" y="565" width="0.6172%" height="15" fill="rgb(229,96,14)" fg:x="19328" fg:w="148"/><text x="80.8539%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (147 samples, 0.61%)</title><rect x="80.6080%" y="549" width="0.6130%" height="15" fill="rgb(220,79,17)" fg:x="19329" fg:w="147"/><text x="80.8580%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (6 samples, 0.03%)</title><rect x="81.1960%" y="533" width="0.0250%" height="15" fill="rgb(205,131,53)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.03%)</title><rect x="81.1960%" y="517" width="0.0250%" height="15" fill="rgb(209,50,29)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.03%)</title><rect x="81.1960%" y="501" width="0.0250%" height="15" fill="rgb(245,86,46)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="511.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.03%)</title><rect x="81.1960%" y="485" width="0.0250%" height="15" fill="rgb(235,66,46)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.03%)</title><rect x="81.1960%" y="469" width="0.0250%" height="15" fill="rgb(232,148,31)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.03%)</title><rect x="81.1960%" y="453" width="0.0250%" height="15" fill="rgb(217,149,8)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.03%)</title><rect x="81.1960%" y="437" width="0.0250%" height="15" fill="rgb(209,183,11)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="81.1960%" y="421" width="0.0250%" height="15" fill="rgb(208,55,20)" fg:x="19470" fg:w="6"/><text x="81.4460%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="81.2002%" y="405" width="0.0209%" height="15" fill="rgb(218,39,14)" fg:x="19471" fg:w="5"/><text x="81.4502%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (3 samples, 0.01%)</title><rect x="81.2211%" y="581" width="0.0125%" height="15" fill="rgb(216,169,33)" fg:x="19476" fg:w="3"/><text x="81.4711%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.01%)</title><rect x="81.2211%" y="565" width="0.0125%" height="15" fill="rgb(233,80,24)" fg:x="19476" fg:w="3"/><text x="81.4711%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (3 samples, 0.01%)</title><rect x="81.2211%" y="549" width="0.0125%" height="15" fill="rgb(213,179,31)" fg:x="19476" fg:w="3"/><text x="81.4711%" y="559.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (159 samples, 0.66%)</title><rect x="80.5872%" y="661" width="0.6631%" height="15" fill="rgb(209,19,5)" fg:x="19324" fg:w="159"/><text x="80.8372%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (158 samples, 0.66%)</title><rect x="80.5914%" y="645" width="0.6589%" height="15" fill="rgb(219,18,35)" fg:x="19325" fg:w="158"/><text x="80.8414%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (158 samples, 0.66%)</title><rect x="80.5914%" y="629" width="0.6589%" height="15" fill="rgb(209,169,16)" fg:x="19325" fg:w="158"/><text x="80.8414%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (157 samples, 0.65%)</title><rect x="80.5955%" y="613" width="0.6547%" height="15" fill="rgb(245,90,51)" fg:x="19326" fg:w="157"/><text x="80.8455%" y="623.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (155 samples, 0.65%)</title><rect x="80.6039%" y="597" width="0.6464%" height="15" fill="rgb(220,99,45)" fg:x="19328" fg:w="155"/><text x="80.8539%" y="607.50"></text></g><g><title>core::fmt::builders::debug_struct_new (4 samples, 0.02%)</title><rect x="81.2336%" y="581" width="0.0167%" height="15" fill="rgb(249,89,25)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (4 samples, 0.02%)</title><rect x="81.2336%" y="565" width="0.0167%" height="15" fill="rgb(239,193,0)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="81.2336%" y="549" width="0.0167%" height="15" fill="rgb(231,126,1)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="81.2336%" y="533" width="0.0167%" height="15" fill="rgb(243,166,3)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="543.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.02%)</title><rect x="81.2336%" y="517" width="0.0167%" height="15" fill="rgb(223,22,34)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="81.2336%" y="501" width="0.0167%" height="15" fill="rgb(251,52,51)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="81.2336%" y="485" width="0.0167%" height="15" fill="rgb(221,165,28)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="81.2336%" y="469" width="0.0167%" height="15" fill="rgb(218,121,47)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="81.2336%" y="453" width="0.0167%" height="15" fill="rgb(209,120,9)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="81.2336%" y="437" width="0.0167%" height="15" fill="rgb(236,68,12)" fg:x="19479" fg:w="4"/><text x="81.4836%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (5 samples, 0.02%)</title><rect x="81.2503%" y="661" width="0.0209%" height="15" fill="rgb(225,194,26)" fg:x="19483" fg:w="5"/><text x="81.5003%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="81.2544%" y="645" width="0.0167%" height="15" fill="rgb(231,84,39)" fg:x="19484" fg:w="4"/><text x="81.5044%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (4 samples, 0.02%)</title><rect x="81.2544%" y="629" width="0.0167%" height="15" fill="rgb(210,11,45)" fg:x="19484" fg:w="4"/><text x="81.5044%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.01%)</title><rect x="81.2586%" y="613" width="0.0125%" height="15" fill="rgb(224,54,52)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="81.2586%" y="597" width="0.0125%" height="15" fill="rgb(238,102,14)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="81.2586%" y="581" width="0.0125%" height="15" fill="rgb(243,160,52)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="591.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.01%)</title><rect x="81.2586%" y="565" width="0.0125%" height="15" fill="rgb(216,114,19)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="81.2586%" y="549" width="0.0125%" height="15" fill="rgb(244,166,37)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="81.2586%" y="533" width="0.0125%" height="15" fill="rgb(246,29,44)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="81.2586%" y="517" width="0.0125%" height="15" fill="rgb(215,56,53)" fg:x="19485" fg:w="3"/><text x="81.5086%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (168 samples, 0.70%)</title><rect x="80.5788%" y="693" width="0.7006%" height="15" fill="rgb(217,60,2)" fg:x="19322" fg:w="168"/><text x="80.8288%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (166 samples, 0.69%)</title><rect x="80.5872%" y="677" width="0.6923%" height="15" fill="rgb(207,26,24)" fg:x="19324" fg:w="166"/><text x="80.8372%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="81.2795%" y="693" width="0.0167%" height="15" fill="rgb(252,210,15)" fg:x="19490" fg:w="4"/><text x="81.5295%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="81.2795%" y="677" width="0.0167%" height="15" fill="rgb(253,209,26)" fg:x="19490" fg:w="4"/><text x="81.5295%" y="687.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.02%)</title><rect x="81.2795%" y="661" width="0.0167%" height="15" fill="rgb(238,170,14)" fg:x="19490" fg:w="4"/><text x="81.5295%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="81.2795%" y="645" width="0.0167%" height="15" fill="rgb(216,178,15)" fg:x="19490" fg:w="4"/><text x="81.5295%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="81.2795%" y="629" width="0.0167%" height="15" fill="rgb(250,197,2)" fg:x="19490" fg:w="4"/><text x="81.5295%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="81.2795%" y="613" width="0.0167%" height="15" fill="rgb(212,70,42)" fg:x="19490" fg:w="4"/><text x="81.5295%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="81.2836%" y="597" width="0.0125%" height="15" fill="rgb(227,213,9)" fg:x="19491" fg:w="3"/><text x="81.5336%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="81.2836%" y="581" width="0.0125%" height="15" fill="rgb(245,99,25)" fg:x="19491" fg:w="3"/><text x="81.5336%" y="591.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (182 samples, 0.76%)</title><rect x="80.5455%" y="741" width="0.7590%" height="15" fill="rgb(250,82,29)" fg:x="19314" fg:w="182"/><text x="80.7955%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (178 samples, 0.74%)</title><rect x="80.5622%" y="725" width="0.7423%" height="15" fill="rgb(241,226,54)" fg:x="19318" fg:w="178"/><text x="80.8122%" y="735.50"></text></g><g><title>core::fmt::write (175 samples, 0.73%)</title><rect x="80.5747%" y="709" width="0.7298%" height="15" fill="rgb(221,99,41)" fg:x="19321" fg:w="175"/><text x="80.8247%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="81.3170%" y="725" width="0.0209%" height="15" fill="rgb(213,90,21)" fg:x="19499" fg:w="5"/><text x="81.5670%" y="735.50"></text></g><g><title>core::fmt::PostPadding::write (3 samples, 0.01%)</title><rect x="81.3253%" y="709" width="0.0125%" height="15" fill="rgb(205,208,24)" fg:x="19501" fg:w="3"/><text x="81.5753%" y="719.50"></text></g><g><title>core::fmt::run (8 samples, 0.03%)</title><rect x="81.3128%" y="741" width="0.0334%" height="15" fill="rgb(246,31,12)" fg:x="19498" fg:w="8"/><text x="81.5628%" y="751.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (211 samples, 0.88%)</title><rect x="80.4704%" y="789" width="0.8799%" height="15" fill="rgb(213,154,6)" fg:x="19296" fg:w="211"/><text x="80.7204%" y="799.50"></text></g><g><title>core::fmt::Formatter::write_fmt (207 samples, 0.86%)</title><rect x="80.4871%" y="773" width="0.8633%" height="15" fill="rgb(222,163,29)" fg:x="19300" fg:w="207"/><text x="80.7371%" y="783.50"></text></g><g><title>core::fmt::write (202 samples, 0.84%)</title><rect x="80.5079%" y="757" width="0.8424%" height="15" fill="rgb(227,201,8)" fg:x="19305" fg:w="202"/><text x="80.7579%" y="767.50"></text></g><g><title>datafusion_expr::expr_visitor::inspect_expr_pre (12 samples, 0.05%)</title><rect x="81.3503%" y="789" width="0.0500%" height="15" fill="rgb(233,9,32)" fg:x="19507" fg:w="12"/><text x="81.6003%" y="799.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (11 samples, 0.05%)</title><rect x="81.3545%" y="773" width="0.0459%" height="15" fill="rgb(217,54,24)" fg:x="19508" fg:w="11"/><text x="81.6045%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (7 samples, 0.03%)</title><rect x="81.3712%" y="757" width="0.0292%" height="15" fill="rgb(235,192,0)" fg:x="19512" fg:w="7"/><text x="81.6212%" y="767.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::schema (3 samples, 0.01%)</title><rect x="81.5589%" y="709" width="0.0125%" height="15" fill="rgb(235,45,9)" fg:x="19557" fg:w="3"/><text x="81.8089%" y="719.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="81.5714%" y="709" width="0.0125%" height="15" fill="rgb(246,42,40)" fg:x="19560" fg:w="3"/><text x="81.8214%" y="719.50"></text></g><g><title>_int_free (9 samples, 0.04%)</title><rect x="81.5881%" y="709" width="0.0375%" height="15" fill="rgb(248,111,24)" fg:x="19564" fg:w="9"/><text x="81.8381%" y="719.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.01%)</title><rect x="81.6256%" y="693" width="0.0125%" height="15" fill="rgb(249,65,22)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="81.6256%" y="677" width="0.0125%" height="15" fill="rgb(238,111,51)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="81.6256%" y="661" width="0.0125%" height="15" fill="rgb(250,118,22)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="81.6256%" y="645" width="0.0125%" height="15" fill="rgb(234,84,26)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="81.6256%" y="629" width="0.0125%" height="15" fill="rgb(243,172,12)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="81.6256%" y="613" width="0.0125%" height="15" fill="rgb(236,150,49)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="81.6256%" y="597" width="0.0125%" height="15" fill="rgb(225,197,26)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="81.6256%" y="581" width="0.0125%" height="15" fill="rgb(214,17,42)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="81.6256%" y="565" width="0.0125%" height="15" fill="rgb(224,165,40)" fg:x="19573" fg:w="3"/><text x="81.8756%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.15%)</title><rect x="81.6590%" y="501" width="0.1501%" height="15" fill="rgb(246,100,4)" fg:x="19581" fg:w="36"/><text x="81.9090%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (36 samples, 0.15%)</title><rect x="81.6590%" y="485" width="0.1501%" height="15" fill="rgb(222,103,0)" fg:x="19581" fg:w="36"/><text x="81.9090%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (36 samples, 0.15%)</title><rect x="81.6590%" y="469" width="0.1501%" height="15" fill="rgb(227,189,26)" fg:x="19581" fg:w="36"/><text x="81.9090%" y="479.50"></text></g><g><title>alloc::alloc::realloc (36 samples, 0.15%)</title><rect x="81.6590%" y="453" width="0.1501%" height="15" fill="rgb(214,202,17)" fg:x="19581" fg:w="36"/><text x="81.9090%" y="463.50"></text></g><g><title>__GI___libc_realloc (35 samples, 0.15%)</title><rect x="81.6631%" y="437" width="0.1460%" height="15" fill="rgb(229,111,3)" fg:x="19582" fg:w="35"/><text x="81.9131%" y="447.50"></text></g><g><title>_int_realloc (28 samples, 0.12%)</title><rect x="81.6923%" y="421" width="0.1168%" height="15" fill="rgb(229,172,15)" fg:x="19589" fg:w="28"/><text x="81.9423%" y="431.50"></text></g><g><title>_int_malloc (25 samples, 0.10%)</title><rect x="81.7048%" y="405" width="0.1043%" height="15" fill="rgb(230,224,35)" fg:x="19592" fg:w="25"/><text x="81.9548%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.16%)</title><rect x="81.6506%" y="565" width="0.1626%" height="15" fill="rgb(251,141,6)" fg:x="19579" fg:w="39"/><text x="81.9006%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.16%)</title><rect x="81.6506%" y="549" width="0.1626%" height="15" fill="rgb(225,208,6)" fg:x="19579" fg:w="39"/><text x="81.9006%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.15%)</title><rect x="81.6590%" y="533" width="0.1543%" height="15" fill="rgb(246,181,16)" fg:x="19581" fg:w="37"/><text x="81.9090%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (37 samples, 0.15%)</title><rect x="81.6590%" y="517" width="0.1543%" height="15" fill="rgb(227,129,36)" fg:x="19581" fg:w="37"/><text x="81.9090%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (43 samples, 0.18%)</title><rect x="81.6464%" y="661" width="0.1793%" height="15" fill="rgb(248,117,24)" fg:x="19578" fg:w="43"/><text x="81.8964%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 0.18%)</title><rect x="81.6506%" y="645" width="0.1752%" height="15" fill="rgb(214,185,35)" fg:x="19579" fg:w="42"/><text x="81.9006%" y="655.50"></text></g><g><title>alloc::string::String::push_str (42 samples, 0.18%)</title><rect x="81.6506%" y="629" width="0.1752%" height="15" fill="rgb(236,150,34)" fg:x="19579" fg:w="42"/><text x="81.9006%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 0.18%)</title><rect x="81.6506%" y="613" width="0.1752%" height="15" fill="rgb(243,228,27)" fg:x="19579" fg:w="42"/><text x="81.9006%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 0.18%)</title><rect x="81.6506%" y="597" width="0.1752%" height="15" fill="rgb(245,77,44)" fg:x="19579" fg:w="42"/><text x="81.9006%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 0.18%)</title><rect x="81.6506%" y="581" width="0.1752%" height="15" fill="rgb(235,214,42)" fg:x="19579" fg:w="42"/><text x="81.9006%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="81.8133%" y="565" width="0.0125%" height="15" fill="rgb(221,74,3)" fg:x="19618" fg:w="3"/><text x="82.0633%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 0.01%)</title><rect x="81.8258%" y="661" width="0.0125%" height="15" fill="rgb(206,121,29)" fg:x="19621" fg:w="3"/><text x="82.0758%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (54 samples, 0.23%)</title><rect x="81.6256%" y="709" width="0.2252%" height="15" fill="rgb(249,131,53)" fg:x="19573" fg:w="54"/><text x="81.8756%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (50 samples, 0.21%)</title><rect x="81.6423%" y="693" width="0.2085%" height="15" fill="rgb(236,170,29)" fg:x="19577" fg:w="50"/><text x="81.8923%" y="703.50"></text></g><g><title>core::fmt::write (50 samples, 0.21%)</title><rect x="81.6423%" y="677" width="0.2085%" height="15" fill="rgb(247,96,15)" fg:x="19577" fg:w="50"/><text x="81.8923%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.04%)</title><rect x="81.8967%" y="693" width="0.0417%" height="15" fill="rgb(211,210,7)" fg:x="19638" fg:w="10"/><text x="82.1467%" y="703.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (22 samples, 0.09%)</title><rect x="81.8508%" y="709" width="0.0917%" height="15" fill="rgb(240,88,50)" fg:x="19627" fg:w="22"/><text x="82.1008%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.05%)</title><rect x="81.9550%" y="581" width="0.0459%" height="15" fill="rgb(209,229,26)" fg:x="19652" fg:w="11"/><text x="82.2050%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.05%)</title><rect x="81.9550%" y="565" width="0.0459%" height="15" fill="rgb(210,68,23)" fg:x="19652" fg:w="11"/><text x="82.2050%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.05%)</title><rect x="81.9550%" y="549" width="0.0459%" height="15" fill="rgb(229,180,13)" fg:x="19652" fg:w="11"/><text x="82.2050%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.05%)</title><rect x="81.9550%" y="533" width="0.0459%" height="15" fill="rgb(236,53,44)" fg:x="19652" fg:w="11"/><text x="82.2050%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.04%)</title><rect x="81.9592%" y="517" width="0.0417%" height="15" fill="rgb(244,214,29)" fg:x="19653" fg:w="10"/><text x="82.2092%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.04%)</title><rect x="81.9592%" y="501" width="0.0417%" height="15" fill="rgb(220,75,29)" fg:x="19653" fg:w="10"/><text x="82.2092%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.04%)</title><rect x="81.9592%" y="485" width="0.0417%" height="15" fill="rgb(214,183,37)" fg:x="19653" fg:w="10"/><text x="82.2092%" y="495.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.04%)</title><rect x="81.9592%" y="469" width="0.0417%" height="15" fill="rgb(239,117,29)" fg:x="19653" fg:w="10"/><text x="82.2092%" y="479.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.04%)</title><rect x="81.9592%" y="453" width="0.0417%" height="15" fill="rgb(237,171,35)" fg:x="19653" fg:w="10"/><text x="82.2092%" y="463.50"></text></g><g><title>_int_realloc (6 samples, 0.03%)</title><rect x="81.9759%" y="437" width="0.0250%" height="15" fill="rgb(229,178,53)" fg:x="19657" fg:w="6"/><text x="82.2259%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.05%)</title><rect x="81.9550%" y="677" width="0.0542%" height="15" fill="rgb(210,102,19)" fg:x="19652" fg:w="13"/><text x="82.2050%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13 samples, 0.05%)</title><rect x="81.9550%" y="661" width="0.0542%" height="15" fill="rgb(235,127,22)" fg:x="19652" fg:w="13"/><text x="82.2050%" y="671.50"></text></g><g><title>alloc::string::String::push_str (13 samples, 0.05%)</title><rect x="81.9550%" y="645" width="0.0542%" height="15" fill="rgb(244,31,31)" fg:x="19652" fg:w="13"/><text x="82.2050%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.05%)</title><rect x="81.9550%" y="629" width="0.0542%" height="15" fill="rgb(231,43,21)" fg:x="19652" fg:w="13"/><text x="82.2050%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.05%)</title><rect x="81.9550%" y="613" width="0.0542%" height="15" fill="rgb(217,131,35)" fg:x="19652" fg:w="13"/><text x="82.2050%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.05%)</title><rect x="81.9550%" y="597" width="0.0542%" height="15" fill="rgb(221,149,4)" fg:x="19652" fg:w="13"/><text x="82.2050%" y="607.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (134 samples, 0.56%)</title><rect x="81.4796%" y="725" width="0.5588%" height="15" fill="rgb(232,170,28)" fg:x="19538" fg:w="134"/><text x="81.7296%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (23 samples, 0.10%)</title><rect x="81.9425%" y="709" width="0.0959%" height="15" fill="rgb(238,56,10)" fg:x="19649" fg:w="23"/><text x="82.1925%" y="719.50"></text></g><g><title>core::fmt::write (21 samples, 0.09%)</title><rect x="81.9509%" y="693" width="0.0876%" height="15" fill="rgb(235,196,14)" fg:x="19651" fg:w="21"/><text x="82.2009%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="82.0259%" y="677" width="0.0125%" height="15" fill="rgb(216,45,48)" fg:x="19669" fg:w="3"/><text x="82.2759%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="82.0593%" y="581" width="0.0292%" height="15" fill="rgb(238,213,17)" fg:x="19677" fg:w="7"/><text x="82.3093%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.03%)</title><rect x="82.0593%" y="565" width="0.0292%" height="15" fill="rgb(212,13,2)" fg:x="19677" fg:w="7"/><text x="82.3093%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.03%)</title><rect x="82.0593%" y="549" width="0.0292%" height="15" fill="rgb(240,114,20)" fg:x="19677" fg:w="7"/><text x="82.3093%" y="559.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.03%)</title><rect x="82.0593%" y="533" width="0.0292%" height="15" fill="rgb(228,41,40)" fg:x="19677" fg:w="7"/><text x="82.3093%" y="543.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.03%)</title><rect x="82.0593%" y="517" width="0.0292%" height="15" fill="rgb(244,132,35)" fg:x="19677" fg:w="7"/><text x="82.3093%" y="527.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="82.0718%" y="501" width="0.0167%" height="15" fill="rgb(253,189,4)" fg:x="19680" fg:w="4"/><text x="82.3218%" y="511.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="82.0760%" y="485" width="0.0125%" height="15" fill="rgb(224,37,19)" fg:x="19681" fg:w="3"/><text x="82.3260%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad (12 samples, 0.05%)</title><rect x="82.0426%" y="709" width="0.0500%" height="15" fill="rgb(235,223,18)" fg:x="19673" fg:w="12"/><text x="82.2926%" y="719.50"></text></g><g><title>core::fmt::PostPadding::write (10 samples, 0.04%)</title><rect x="82.0510%" y="693" width="0.0417%" height="15" fill="rgb(235,163,25)" fg:x="19675" fg:w="10"/><text x="82.3010%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (10 samples, 0.04%)</title><rect x="82.0510%" y="677" width="0.0417%" height="15" fill="rgb(217,145,28)" fg:x="19675" fg:w="10"/><text x="82.3010%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (10 samples, 0.04%)</title><rect x="82.0510%" y="661" width="0.0417%" height="15" fill="rgb(223,223,32)" fg:x="19675" fg:w="10"/><text x="82.3010%" y="671.50"></text></g><g><title>alloc::string::String::push (10 samples, 0.04%)</title><rect x="82.0510%" y="645" width="0.0417%" height="15" fill="rgb(227,189,39)" fg:x="19675" fg:w="10"/><text x="82.3010%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.04%)</title><rect x="82.0510%" y="629" width="0.0417%" height="15" fill="rgb(248,10,22)" fg:x="19675" fg:w="10"/><text x="82.3010%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.03%)</title><rect x="82.0593%" y="613" width="0.0334%" height="15" fill="rgb(248,46,39)" fg:x="19677" fg:w="8"/><text x="82.3093%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.03%)</title><rect x="82.0593%" y="597" width="0.0334%" height="15" fill="rgb(248,113,48)" fg:x="19677" fg:w="8"/><text x="82.3093%" y="607.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (697 samples, 2.91%)</title><rect x="79.1901%" y="837" width="2.9067%" height="15" fill="rgb(245,16,25)" fg:x="18989" fg:w="697"/><text x="79.4401%" y="847.50">&lt;d..</text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (695 samples, 2.90%)</title><rect x="79.1985%" y="821" width="2.8984%" height="15" fill="rgb(249,152,16)" fg:x="18991" fg:w="695"/><text x="79.4485%" y="831.50">da..</text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (400 samples, 1.67%)</title><rect x="80.4287%" y="805" width="1.6681%" height="15" fill="rgb(250,16,1)" fg:x="19286" fg:w="400"/><text x="80.6787%" y="815.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (167 samples, 0.70%)</title><rect x="81.4004%" y="789" width="0.6964%" height="15" fill="rgb(249,138,3)" fg:x="19519" fg:w="167"/><text x="81.6504%" y="799.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (161 samples, 0.67%)</title><rect x="81.4254%" y="773" width="0.6714%" height="15" fill="rgb(227,71,41)" fg:x="19525" fg:w="161"/><text x="81.6754%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (159 samples, 0.66%)</title><rect x="81.4338%" y="757" width="0.6631%" height="15" fill="rgb(209,184,23)" fg:x="19527" fg:w="159"/><text x="81.6838%" y="767.50"></text></g><g><title>core::fmt::write (149 samples, 0.62%)</title><rect x="81.4755%" y="741" width="0.6214%" height="15" fill="rgb(223,215,31)" fg:x="19537" fg:w="149"/><text x="81.7255%" y="751.50"></text></g><g><title>core::fmt::run (13 samples, 0.05%)</title><rect x="82.0426%" y="725" width="0.0542%" height="15" fill="rgb(210,146,28)" fg:x="19673" fg:w="13"/><text x="82.2926%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (707 samples, 2.95%)</title><rect x="79.1609%" y="869" width="2.9484%" height="15" fill="rgb(209,183,41)" fg:x="18982" fg:w="707"/><text x="79.4109%" y="879.50">co..</text></g><g><title>core::fmt::write (705 samples, 2.94%)</title><rect x="79.1693%" y="853" width="2.9401%" height="15" fill="rgb(209,224,45)" fg:x="18984" fg:w="705"/><text x="79.4193%" y="863.50">co..</text></g><g><title>alloc::fmt::format::format_inner (719 samples, 3.00%)</title><rect x="79.1276%" y="885" width="2.9985%" height="15" fill="rgb(224,209,51)" fg:x="18974" fg:w="719"/><text x="79.3776%" y="895.50">all..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (4 samples, 0.02%)</title><rect x="82.1093%" y="869" width="0.0167%" height="15" fill="rgb(223,17,39)" fg:x="19689" fg:w="4"/><text x="82.3593%" y="879.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="82.1552%" y="869" width="0.0125%" height="15" fill="rgb(234,204,37)" fg:x="19700" fg:w="3"/><text x="82.4052%" y="879.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="82.1802%" y="853" width="0.0125%" height="15" fill="rgb(236,120,5)" fg:x="19706" fg:w="3"/><text x="82.4302%" y="863.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="82.1969%" y="853" width="0.0209%" height="15" fill="rgb(248,97,27)" fg:x="19710" fg:w="5"/><text x="82.4469%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (28 samples, 0.12%)</title><rect x="82.1260%" y="885" width="0.1168%" height="15" fill="rgb(240,66,17)" fg:x="19693" fg:w="28"/><text x="82.3760%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (18 samples, 0.08%)</title><rect x="82.1677%" y="869" width="0.0751%" height="15" fill="rgb(210,79,3)" fg:x="19703" fg:w="18"/><text x="82.4177%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (6 samples, 0.03%)</title><rect x="82.2178%" y="853" width="0.0250%" height="15" fill="rgb(214,176,27)" fg:x="19715" fg:w="6"/><text x="82.4678%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.03%)</title><rect x="82.2595%" y="869" width="0.0292%" height="15" fill="rgb(235,185,3)" fg:x="19725" fg:w="7"/><text x="82.5095%" y="879.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (12 samples, 0.05%)</title><rect x="82.2428%" y="885" width="0.0500%" height="15" fill="rgb(227,24,12)" fg:x="19721" fg:w="12"/><text x="82.4928%" y="895.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::apply_order (3 samples, 0.01%)</title><rect x="82.3220%" y="869" width="0.0125%" height="15" fill="rgb(252,169,48)" fg:x="19740" fg:w="3"/><text x="82.5720%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="82.3387%" y="869" width="0.0334%" height="15" fill="rgb(212,65,1)" fg:x="19744" fg:w="8"/><text x="82.5887%" y="879.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="82.3888%" y="853" width="0.0250%" height="15" fill="rgb(242,39,24)" fg:x="19756" fg:w="6"/><text x="82.6388%" y="863.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.03%)</title><rect x="82.4138%" y="853" width="0.0292%" height="15" fill="rgb(249,32,23)" fg:x="19762" fg:w="7"/><text x="82.6638%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="82.4221%" y="837" width="0.0209%" height="15" fill="rgb(251,195,23)" fg:x="19764" fg:w="5"/><text x="82.6721%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="82.4305%" y="821" width="0.0125%" height="15" fill="rgb(236,174,8)" fg:x="19766" fg:w="3"/><text x="82.6805%" y="831.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="82.4680%" y="821" width="0.0292%" height="15" fill="rgb(220,197,8)" fg:x="19775" fg:w="7"/><text x="82.7180%" y="831.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="82.4763%" y="805" width="0.0209%" height="15" fill="rgb(240,108,37)" fg:x="19777" fg:w="5"/><text x="82.7263%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="82.4972%" y="821" width="0.0209%" height="15" fill="rgb(232,176,24)" fg:x="19782" fg:w="5"/><text x="82.7472%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="82.5931%" y="677" width="0.0125%" height="15" fill="rgb(243,35,29)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="82.5931%" y="661" width="0.0125%" height="15" fill="rgb(210,37,18)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="82.5931%" y="645" width="0.0125%" height="15" fill="rgb(224,184,40)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="82.5931%" y="629" width="0.0125%" height="15" fill="rgb(236,39,29)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="82.5931%" y="613" width="0.0125%" height="15" fill="rgb(232,48,39)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="623.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="82.5931%" y="597" width="0.0125%" height="15" fill="rgb(236,34,42)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="82.5931%" y="581" width="0.0125%" height="15" fill="rgb(243,106,37)" fg:x="19805" fg:w="3"/><text x="82.8431%" y="591.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="82.5806%" y="773" width="0.0292%" height="15" fill="rgb(218,96,6)" fg:x="19802" fg:w="7"/><text x="82.8306%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="82.5889%" y="757" width="0.0209%" height="15" fill="rgb(235,130,12)" fg:x="19804" fg:w="5"/><text x="82.8389%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="82.5931%" y="741" width="0.0167%" height="15" fill="rgb(231,95,0)" fg:x="19805" fg:w="4"/><text x="82.8431%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="82.5931%" y="725" width="0.0167%" height="15" fill="rgb(228,12,23)" fg:x="19805" fg:w="4"/><text x="82.8431%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="82.5931%" y="709" width="0.0167%" height="15" fill="rgb(216,12,1)" fg:x="19805" fg:w="4"/><text x="82.8431%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="82.5931%" y="693" width="0.0167%" height="15" fill="rgb(219,59,3)" fg:x="19805" fg:w="4"/><text x="82.8431%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.04%)</title><rect x="82.5764%" y="789" width="0.0417%" height="15" fill="rgb(215,208,46)" fg:x="19801" fg:w="10"/><text x="82.8264%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="82.6181%" y="789" width="0.0209%" height="15" fill="rgb(254,224,29)" fg:x="19811" fg:w="5"/><text x="82.8681%" y="799.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new_with_predicate (4 samples, 0.02%)</title><rect x="82.6390%" y="789" width="0.0167%" height="15" fill="rgb(232,14,29)" fg:x="19816" fg:w="4"/><text x="82.8890%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="82.6431%" y="773" width="0.0125%" height="15" fill="rgb(208,45,52)" fg:x="19817" fg:w="3"/><text x="82.8931%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.04%)</title><rect x="82.6932%" y="757" width="0.0375%" height="15" fill="rgb(234,191,28)" fg:x="19829" fg:w="9"/><text x="82.9432%" y="767.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="82.7391%" y="725" width="0.0250%" height="15" fill="rgb(244,67,43)" fg:x="19840" fg:w="6"/><text x="82.9891%" y="735.50"></text></g><g><title>datafusion_expr::expr::Expr::boolean_and (17 samples, 0.07%)</title><rect x="82.7349%" y="757" width="0.0709%" height="15" fill="rgb(236,189,24)" fg:x="19839" fg:w="17"/><text x="82.9849%" y="767.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (17 samples, 0.07%)</title><rect x="82.7349%" y="741" width="0.0709%" height="15" fill="rgb(239,214,33)" fg:x="19839" fg:w="17"/><text x="82.9849%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.04%)</title><rect x="82.7641%" y="725" width="0.0417%" height="15" fill="rgb(226,176,41)" fg:x="19846" fg:w="10"/><text x="83.0141%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.14%)</title><rect x="82.6807%" y="773" width="0.1418%" height="15" fill="rgb(248,47,8)" fg:x="19826" fg:w="34"/><text x="82.9307%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (4 samples, 0.02%)</title><rect x="82.8058%" y="757" width="0.0167%" height="15" fill="rgb(218,81,44)" fg:x="19856" fg:w="4"/><text x="83.0558%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (47 samples, 0.20%)</title><rect x="82.6557%" y="789" width="0.1960%" height="15" fill="rgb(213,98,6)" fg:x="19820" fg:w="47"/><text x="82.9057%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (7 samples, 0.03%)</title><rect x="82.8225%" y="773" width="0.0292%" height="15" fill="rgb(222,85,22)" fg:x="19860" fg:w="7"/><text x="83.0725%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (63 samples, 0.26%)</title><rect x="82.8975%" y="757" width="0.2627%" height="15" fill="rgb(239,46,39)" fg:x="19878" fg:w="63"/><text x="83.1475%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (60 samples, 0.25%)</title><rect x="82.9100%" y="741" width="0.2502%" height="15" fill="rgb(237,12,29)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.25%)</title><rect x="82.9100%" y="725" width="0.2502%" height="15" fill="rgb(214,77,8)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60 samples, 0.25%)</title><rect x="82.9100%" y="709" width="0.2502%" height="15" fill="rgb(217,168,37)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (60 samples, 0.25%)</title><rect x="82.9100%" y="693" width="0.2502%" height="15" fill="rgb(221,217,23)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (60 samples, 0.25%)</title><rect x="82.9100%" y="677" width="0.2502%" height="15" fill="rgb(243,229,36)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.25%)</title><rect x="82.9100%" y="661" width="0.2502%" height="15" fill="rgb(251,163,40)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.25%)</title><rect x="82.9100%" y="645" width="0.2502%" height="15" fill="rgb(237,222,12)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.25%)</title><rect x="82.9100%" y="629" width="0.2502%" height="15" fill="rgb(248,132,6)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.25%)</title><rect x="82.9100%" y="613" width="0.2502%" height="15" fill="rgb(227,167,50)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.25%)</title><rect x="82.9100%" y="597" width="0.2502%" height="15" fill="rgb(242,84,37)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="607.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.25%)</title><rect x="82.9100%" y="581" width="0.2502%" height="15" fill="rgb(212,4,50)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="591.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.25%)</title><rect x="82.9100%" y="565" width="0.2502%" height="15" fill="rgb(230,228,32)" fg:x="19881" fg:w="60"/><text x="83.1600%" y="575.50"></text></g><g><title>_int_malloc (54 samples, 0.23%)</title><rect x="82.9351%" y="549" width="0.2252%" height="15" fill="rgb(248,217,23)" fg:x="19887" fg:w="54"/><text x="83.1851%" y="559.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.05%)</title><rect x="83.1603%" y="757" width="0.0500%" height="15" fill="rgb(238,197,32)" fg:x="19941" fg:w="12"/><text x="83.4103%" y="767.50"></text></g><g><title>_int_malloc (9 samples, 0.04%)</title><rect x="83.1728%" y="741" width="0.0375%" height="15" fill="rgb(236,106,1)" fg:x="19944" fg:w="9"/><text x="83.4228%" y="751.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (25 samples, 0.10%)</title><rect x="83.2186%" y="741" width="0.1043%" height="15" fill="rgb(219,228,13)" fg:x="19955" fg:w="25"/><text x="83.4686%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 0.08%)</title><rect x="83.2437%" y="725" width="0.0792%" height="15" fill="rgb(238,30,35)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.08%)</title><rect x="83.2437%" y="709" width="0.0792%" height="15" fill="rgb(236,70,23)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.08%)</title><rect x="83.2437%" y="693" width="0.0792%" height="15" fill="rgb(249,104,48)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.08%)</title><rect x="83.2437%" y="677" width="0.0792%" height="15" fill="rgb(254,117,50)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.08%)</title><rect x="83.2437%" y="661" width="0.0792%" height="15" fill="rgb(223,152,4)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.08%)</title><rect x="83.2437%" y="645" width="0.0792%" height="15" fill="rgb(245,6,2)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.08%)</title><rect x="83.2437%" y="629" width="0.0792%" height="15" fill="rgb(249,150,24)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.08%)</title><rect x="83.2437%" y="613" width="0.0792%" height="15" fill="rgb(228,185,42)" fg:x="19961" fg:w="19"/><text x="83.4937%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.08%)</title><rect x="83.2478%" y="597" width="0.0751%" height="15" fill="rgb(226,39,33)" fg:x="19962" fg:w="18"/><text x="83.4978%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.08%)</title><rect x="83.2478%" y="581" width="0.0751%" height="15" fill="rgb(221,166,19)" fg:x="19962" fg:w="18"/><text x="83.4978%" y="591.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.08%)</title><rect x="83.2478%" y="565" width="0.0751%" height="15" fill="rgb(209,109,2)" fg:x="19962" fg:w="18"/><text x="83.4978%" y="575.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.08%)</title><rect x="83.2478%" y="549" width="0.0751%" height="15" fill="rgb(252,216,26)" fg:x="19962" fg:w="18"/><text x="83.4978%" y="559.50"></text></g><g><title>_int_malloc (15 samples, 0.06%)</title><rect x="83.2604%" y="533" width="0.0626%" height="15" fill="rgb(227,173,36)" fg:x="19965" fg:w="15"/><text x="83.5104%" y="543.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.04%)</title><rect x="83.3229%" y="741" width="0.0375%" height="15" fill="rgb(209,90,7)" fg:x="19980" fg:w="9"/><text x="83.5729%" y="751.50"></text></g><g><title>_int_malloc (9 samples, 0.04%)</title><rect x="83.3229%" y="725" width="0.0375%" height="15" fill="rgb(250,194,11)" fg:x="19980" fg:w="9"/><text x="83.5729%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (126 samples, 0.53%)</title><rect x="82.8517%" y="789" width="0.5255%" height="15" fill="rgb(220,72,50)" fg:x="19867" fg:w="126"/><text x="83.1017%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (118 samples, 0.49%)</title><rect x="82.8850%" y="773" width="0.4921%" height="15" fill="rgb(222,106,48)" fg:x="19875" fg:w="118"/><text x="83.1350%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (40 samples, 0.17%)</title><rect x="83.2103%" y="757" width="0.1668%" height="15" fill="rgb(216,220,45)" fg:x="19953" fg:w="40"/><text x="83.4603%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (4 samples, 0.02%)</title><rect x="83.3604%" y="741" width="0.0167%" height="15" fill="rgb(234,112,18)" fg:x="19989" fg:w="4"/><text x="83.6104%" y="751.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="83.4105%" y="725" width="0.0167%" height="15" fill="rgb(206,179,9)" fg:x="20001" fg:w="4"/><text x="83.6605%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="83.4147%" y="709" width="0.0125%" height="15" fill="rgb(215,115,40)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="83.4147%" y="693" width="0.0125%" height="15" fill="rgb(222,69,34)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="83.4147%" y="677" width="0.0125%" height="15" fill="rgb(209,161,10)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="83.4147%" y="661" width="0.0125%" height="15" fill="rgb(217,6,38)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="83.4147%" y="645" width="0.0125%" height="15" fill="rgb(229,229,48)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="83.4147%" y="629" width="0.0125%" height="15" fill="rgb(225,21,28)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="83.4147%" y="613" width="0.0125%" height="15" fill="rgb(206,33,13)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="83.4147%" y="597" width="0.0125%" height="15" fill="rgb(242,178,17)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="83.4147%" y="581" width="0.0125%" height="15" fill="rgb(220,162,5)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="83.4147%" y="565" width="0.0125%" height="15" fill="rgb(210,33,43)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="83.4147%" y="549" width="0.0125%" height="15" fill="rgb(216,116,54)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="83.4147%" y="533" width="0.0125%" height="15" fill="rgb(249,92,24)" fg:x="20002" fg:w="3"/><text x="83.6647%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="83.4063%" y="741" width="0.0292%" height="15" fill="rgb(231,189,14)" fg:x="20000" fg:w="7"/><text x="83.6563%" y="751.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="83.4522%" y="549" width="0.0209%" height="15" fill="rgb(230,8,41)" fg:x="20011" fg:w="5"/><text x="83.7022%" y="559.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="83.4605%" y="533" width="0.0125%" height="15" fill="rgb(249,7,27)" fg:x="20013" fg:w="3"/><text x="83.7105%" y="543.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (10 samples, 0.04%)</title><rect x="83.4355%" y="741" width="0.0417%" height="15" fill="rgb(232,86,5)" fg:x="20007" fg:w="10"/><text x="83.6855%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="83.4522%" y="725" width="0.0250%" height="15" fill="rgb(224,175,18)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="83.4522%" y="709" width="0.0250%" height="15" fill="rgb(220,129,12)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="83.4522%" y="693" width="0.0250%" height="15" fill="rgb(210,19,36)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="83.4522%" y="677" width="0.0250%" height="15" fill="rgb(219,96,14)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="83.4522%" y="661" width="0.0250%" height="15" fill="rgb(249,106,1)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="83.4522%" y="645" width="0.0250%" height="15" fill="rgb(249,155,20)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="83.4522%" y="629" width="0.0250%" height="15" fill="rgb(244,168,9)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.03%)</title><rect x="83.4522%" y="613" width="0.0250%" height="15" fill="rgb(216,23,50)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="83.4522%" y="597" width="0.0250%" height="15" fill="rgb(224,219,20)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="83.4522%" y="581" width="0.0250%" height="15" fill="rgb(222,156,15)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="591.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="83.4522%" y="565" width="0.0250%" height="15" fill="rgb(231,97,17)" fg:x="20011" fg:w="6"/><text x="83.7022%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.08%)</title><rect x="83.4063%" y="757" width="0.0834%" height="15" fill="rgb(218,70,48)" fg:x="20000" fg:w="20"/><text x="83.6563%" y="767.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.05%)</title><rect x="83.5106%" y="565" width="0.0500%" height="15" fill="rgb(212,196,52)" fg:x="20025" fg:w="12"/><text x="83.7606%" y="575.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="83.5356%" y="549" width="0.0250%" height="15" fill="rgb(243,203,18)" fg:x="20031" fg:w="6"/><text x="83.7856%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.06%)</title><rect x="83.5106%" y="661" width="0.0584%" height="15" fill="rgb(252,125,41)" fg:x="20025" fg:w="14"/><text x="83.7606%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.06%)</title><rect x="83.5106%" y="645" width="0.0584%" height="15" fill="rgb(223,180,33)" fg:x="20025" fg:w="14"/><text x="83.7606%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.06%)</title><rect x="83.5106%" y="629" width="0.0584%" height="15" fill="rgb(254,159,46)" fg:x="20025" fg:w="14"/><text x="83.7606%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.06%)</title><rect x="83.5106%" y="613" width="0.0584%" height="15" fill="rgb(254,38,10)" fg:x="20025" fg:w="14"/><text x="83.7606%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.06%)</title><rect x="83.5106%" y="597" width="0.0584%" height="15" fill="rgb(208,217,32)" fg:x="20025" fg:w="14"/><text x="83.7606%" y="607.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.06%)</title><rect x="83.5106%" y="581" width="0.0584%" height="15" fill="rgb(221,120,13)" fg:x="20025" fg:w="14"/><text x="83.7606%" y="591.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (20 samples, 0.08%)</title><rect x="83.4897%" y="757" width="0.0834%" height="15" fill="rgb(246,54,52)" fg:x="20020" fg:w="20"/><text x="83.7397%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.06%)</title><rect x="83.5106%" y="741" width="0.0626%" height="15" fill="rgb(242,34,25)" fg:x="20025" fg:w="15"/><text x="83.7606%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.06%)</title><rect x="83.5106%" y="725" width="0.0626%" height="15" fill="rgb(247,209,9)" fg:x="20025" fg:w="15"/><text x="83.7606%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.06%)</title><rect x="83.5106%" y="709" width="0.0626%" height="15" fill="rgb(228,71,26)" fg:x="20025" fg:w="15"/><text x="83.7606%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.06%)</title><rect x="83.5106%" y="693" width="0.0626%" height="15" fill="rgb(222,145,49)" fg:x="20025" fg:w="15"/><text x="83.7606%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.06%)</title><rect x="83.5106%" y="677" width="0.0626%" height="15" fill="rgb(218,121,17)" fg:x="20025" fg:w="15"/><text x="83.7606%" y="687.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="83.5731%" y="757" width="0.0917%" height="15" fill="rgb(244,50,7)" fg:x="20040" fg:w="22"/><text x="83.8231%" y="767.50"></text></g><g><title>_int_malloc (21 samples, 0.09%)</title><rect x="83.5773%" y="741" width="0.0876%" height="15" fill="rgb(246,229,37)" fg:x="20041" fg:w="21"/><text x="83.8273%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="83.6649%" y="757" width="0.0209%" height="15" fill="rgb(225,18,5)" fg:x="20062" fg:w="5"/><text x="83.9149%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 0.30%)</title><rect x="83.3938%" y="773" width="0.2961%" height="15" fill="rgb(213,204,8)" fg:x="19997" fg:w="71"/><text x="83.6438%" y="783.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="83.6899%" y="773" width="0.0167%" height="15" fill="rgb(238,103,6)" fg:x="20068" fg:w="4"/><text x="83.9399%" y="783.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="83.7107%" y="773" width="0.0250%" height="15" fill="rgb(222,25,35)" fg:x="20073" fg:w="6"/><text x="83.9607%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="83.7691%" y="757" width="0.0167%" height="15" fill="rgb(213,203,35)" fg:x="20087" fg:w="4"/><text x="84.0191%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (5 samples, 0.02%)</title><rect x="83.7858%" y="757" width="0.0209%" height="15" fill="rgb(221,79,53)" fg:x="20091" fg:w="5"/><text x="84.0358%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (18 samples, 0.08%)</title><rect x="83.7399%" y="773" width="0.0751%" height="15" fill="rgb(243,200,35)" fg:x="20080" fg:w="18"/><text x="83.9899%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="83.8275%" y="757" width="0.0125%" height="15" fill="rgb(248,60,25)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="741" width="0.0125%" height="15" fill="rgb(227,53,46)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="725" width="0.0125%" height="15" fill="rgb(216,120,32)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="709" width="0.0125%" height="15" fill="rgb(220,134,1)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="693" width="0.0125%" height="15" fill="rgb(237,168,5)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="677" width="0.0125%" height="15" fill="rgb(231,100,33)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="661" width="0.0125%" height="15" fill="rgb(236,177,47)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="645" width="0.0125%" height="15" fill="rgb(235,7,49)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="629" width="0.0125%" height="15" fill="rgb(232,119,22)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="613" width="0.0125%" height="15" fill="rgb(254,73,53)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="597" width="0.0125%" height="15" fill="rgb(251,35,20)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="83.8275%" y="581" width="0.0125%" height="15" fill="rgb(241,119,20)" fg:x="20101" fg:w="3"/><text x="84.0775%" y="591.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (19 samples, 0.08%)</title><rect x="83.8567%" y="741" width="0.0792%" height="15" fill="rgb(207,102,14)" fg:x="20108" fg:w="19"/><text x="84.1067%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.06%)</title><rect x="83.8734%" y="725" width="0.0626%" height="15" fill="rgb(248,201,50)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.06%)</title><rect x="83.8734%" y="709" width="0.0626%" height="15" fill="rgb(222,185,44)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.06%)</title><rect x="83.8734%" y="693" width="0.0626%" height="15" fill="rgb(218,107,18)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.06%)</title><rect x="83.8734%" y="677" width="0.0626%" height="15" fill="rgb(237,177,39)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.06%)</title><rect x="83.8734%" y="661" width="0.0626%" height="15" fill="rgb(246,69,6)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.06%)</title><rect x="83.8734%" y="645" width="0.0626%" height="15" fill="rgb(234,208,37)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.06%)</title><rect x="83.8734%" y="629" width="0.0626%" height="15" fill="rgb(225,4,6)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.06%)</title><rect x="83.8734%" y="613" width="0.0626%" height="15" fill="rgb(233,45,0)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.06%)</title><rect x="83.8734%" y="597" width="0.0626%" height="15" fill="rgb(226,136,5)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.06%)</title><rect x="83.8734%" y="581" width="0.0626%" height="15" fill="rgb(211,91,47)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="591.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.06%)</title><rect x="83.8734%" y="565" width="0.0626%" height="15" fill="rgb(242,88,51)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="575.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.06%)</title><rect x="83.8734%" y="549" width="0.0626%" height="15" fill="rgb(230,91,28)" fg:x="20112" fg:w="15"/><text x="84.1234%" y="559.50"></text></g><g><title>_int_malloc (10 samples, 0.04%)</title><rect x="83.8942%" y="533" width="0.0417%" height="15" fill="rgb(254,186,29)" fg:x="20117" fg:w="10"/><text x="84.1442%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.10%)</title><rect x="83.8400%" y="757" width="0.1001%" height="15" fill="rgb(238,6,4)" fg:x="20104" fg:w="24"/><text x="84.0900%" y="767.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="83.9443%" y="757" width="0.0167%" height="15" fill="rgb(221,151,16)" fg:x="20129" fg:w="4"/><text x="84.1943%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (3 samples, 0.01%)</title><rect x="83.9693%" y="757" width="0.0125%" height="15" fill="rgb(251,143,52)" fg:x="20135" fg:w="3"/><text x="84.2193%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (54 samples, 0.23%)</title><rect x="83.8150%" y="773" width="0.2252%" height="15" fill="rgb(206,90,15)" fg:x="20098" fg:w="54"/><text x="84.0650%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (14 samples, 0.06%)</title><rect x="83.9818%" y="757" width="0.0584%" height="15" fill="rgb(218,35,8)" fg:x="20138" fg:w="14"/><text x="84.2318%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (4 samples, 0.02%)</title><rect x="84.0235%" y="741" width="0.0167%" height="15" fill="rgb(239,215,6)" fg:x="20148" fg:w="4"/><text x="84.2735%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (3 samples, 0.01%)</title><rect x="84.0277%" y="725" width="0.0125%" height="15" fill="rgb(245,116,39)" fg:x="20149" fg:w="3"/><text x="84.2777%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="84.0527%" y="757" width="0.0125%" height="15" fill="rgb(242,65,28)" fg:x="20155" fg:w="3"/><text x="84.3027%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="84.0652%" y="757" width="0.0125%" height="15" fill="rgb(252,132,53)" fg:x="20158" fg:w="3"/><text x="84.3152%" y="767.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (369 samples, 1.54%)</title><rect x="82.5431%" y="805" width="1.5388%" height="15" fill="rgb(224,159,50)" fg:x="19793" fg:w="369"/><text x="82.7931%" y="815.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (169 samples, 0.70%)</title><rect x="83.3771%" y="789" width="0.7048%" height="15" fill="rgb(224,93,4)" fg:x="19993" fg:w="169"/><text x="83.6271%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (10 samples, 0.04%)</title><rect x="84.0402%" y="773" width="0.0417%" height="15" fill="rgb(208,81,34)" fg:x="20152" fg:w="10"/><text x="84.2902%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.06%)</title><rect x="84.0819%" y="805" width="0.0584%" height="15" fill="rgb(233,92,54)" fg:x="20162" fg:w="14"/><text x="84.3319%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="84.1528%" y="789" width="0.0250%" height="15" fill="rgb(237,21,14)" fg:x="20179" fg:w="6"/><text x="84.4028%" y="799.50"></text></g><g><title>malloc_consolidate (75 samples, 0.31%)</title><rect x="84.4239%" y="725" width="0.3128%" height="15" fill="rgb(249,128,51)" fg:x="20244" fg:w="75"/><text x="84.6739%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.03%)</title><rect x="84.7116%" y="709" width="0.0250%" height="15" fill="rgb(223,129,24)" fg:x="20313" fg:w="6"/><text x="84.9616%" y="719.50"></text></g><g><title>__GI___libc_malloc (129 samples, 0.54%)</title><rect x="84.2028%" y="757" width="0.5380%" height="15" fill="rgb(231,168,25)" fg:x="20191" fg:w="129"/><text x="84.4528%" y="767.50"></text></g><g><title>_int_malloc (124 samples, 0.52%)</title><rect x="84.2237%" y="741" width="0.5171%" height="15" fill="rgb(224,39,20)" fg:x="20196" fg:w="124"/><text x="84.4737%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.05%)</title><rect x="84.7408%" y="757" width="0.0459%" height="15" fill="rgb(225,152,53)" fg:x="20320" fg:w="11"/><text x="84.9908%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="84.8034%" y="741" width="0.0292%" height="15" fill="rgb(252,17,24)" fg:x="20335" fg:w="7"/><text x="85.0534%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (160 samples, 0.67%)</title><rect x="84.1778%" y="789" width="0.6673%" height="15" fill="rgb(250,114,30)" fg:x="20185" fg:w="160"/><text x="84.4278%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (155 samples, 0.65%)</title><rect x="84.1987%" y="773" width="0.6464%" height="15" fill="rgb(229,5,4)" fg:x="20190" fg:w="155"/><text x="84.4487%" y="783.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (14 samples, 0.06%)</title><rect x="84.7867%" y="757" width="0.0584%" height="15" fill="rgb(225,176,49)" fg:x="20331" fg:w="14"/><text x="85.0367%" y="767.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (3 samples, 0.01%)</title><rect x="84.8326%" y="741" width="0.0125%" height="15" fill="rgb(224,221,49)" fg:x="20342" fg:w="3"/><text x="85.0826%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.01%)</title><rect x="84.8326%" y="725" width="0.0125%" height="15" fill="rgb(253,169,27)" fg:x="20342" fg:w="3"/><text x="85.0826%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (585 samples, 2.44%)</title><rect x="82.4430%" y="853" width="2.4396%" height="15" fill="rgb(211,206,16)" fg:x="19769" fg:w="585"/><text x="82.6930%" y="863.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (581 samples, 2.42%)</title><rect x="82.4597%" y="837" width="2.4230%" height="15" fill="rgb(244,87,35)" fg:x="19773" fg:w="581"/><text x="82.7097%" y="847.50">&lt;a..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (566 samples, 2.36%)</title><rect x="82.5222%" y="821" width="2.3604%" height="15" fill="rgb(246,28,10)" fg:x="19788" fg:w="566"/><text x="82.7722%" y="831.50">da..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (178 samples, 0.74%)</title><rect x="84.1403%" y="805" width="0.7423%" height="15" fill="rgb(229,12,44)" fg:x="20176" fg:w="178"/><text x="84.3903%" y="815.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::inputs (9 samples, 0.04%)</title><rect x="84.8451%" y="789" width="0.0375%" height="15" fill="rgb(210,145,37)" fg:x="20345" fg:w="9"/><text x="85.0951%" y="799.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.04%)</title><rect x="84.8451%" y="773" width="0.0375%" height="15" fill="rgb(227,112,52)" fg:x="20345" fg:w="9"/><text x="85.0951%" y="783.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="84.8618%" y="757" width="0.0209%" height="15" fill="rgb(238,155,34)" fg:x="20349" fg:w="5"/><text x="85.1118%" y="767.50"></text></g><g><title>_int_free (7 samples, 0.03%)</title><rect x="84.9035%" y="837" width="0.0292%" height="15" fill="rgb(239,226,36)" fg:x="20359" fg:w="7"/><text x="85.1535%" y="847.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="84.9535%" y="821" width="0.0459%" height="15" fill="rgb(230,16,23)" fg:x="20371" fg:w="11"/><text x="85.2035%" y="831.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="85.0119%" y="805" width="0.0167%" height="15" fill="rgb(236,171,36)" fg:x="20385" fg:w="4"/><text x="85.2619%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="789" width="0.0125%" height="15" fill="rgb(221,22,14)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="773" width="0.0125%" height="15" fill="rgb(242,43,11)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="757" width="0.0125%" height="15" fill="rgb(232,69,23)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="741" width="0.0125%" height="15" fill="rgb(216,180,54)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="725" width="0.0125%" height="15" fill="rgb(216,5,24)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="709" width="0.0125%" height="15" fill="rgb(225,89,9)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="693" width="0.0125%" height="15" fill="rgb(243,75,33)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="677" width="0.0125%" height="15" fill="rgb(247,141,45)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="661" width="0.0125%" height="15" fill="rgb(232,177,36)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="645" width="0.0125%" height="15" fill="rgb(219,125,36)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="85.0161%" y="629" width="0.0125%" height="15" fill="rgb(227,94,9)" fg:x="20386" fg:w="3"/><text x="85.2661%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (28 samples, 0.12%)</title><rect x="84.9326%" y="837" width="0.1168%" height="15" fill="rgb(240,34,52)" fg:x="20366" fg:w="28"/><text x="85.1826%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (12 samples, 0.05%)</title><rect x="84.9994%" y="821" width="0.0500%" height="15" fill="rgb(216,45,12)" fg:x="20382" fg:w="12"/><text x="85.2494%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (5 samples, 0.02%)</title><rect x="85.0286%" y="805" width="0.0209%" height="15" fill="rgb(246,21,19)" fg:x="20389" fg:w="5"/><text x="85.2786%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="85.0494%" y="821" width="0.0209%" height="15" fill="rgb(213,98,42)" fg:x="20394" fg:w="5"/><text x="85.2994%" y="831.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="85.0703%" y="805" width="0.0125%" height="15" fill="rgb(250,136,47)" fg:x="20399" fg:w="3"/><text x="85.3203%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="85.0828%" y="805" width="0.0125%" height="15" fill="rgb(251,124,27)" fg:x="20402" fg:w="3"/><text x="85.3328%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (52 samples, 0.22%)</title><rect x="84.8826%" y="853" width="0.2169%" height="15" fill="rgb(229,180,14)" fg:x="20354" fg:w="52"/><text x="85.1326%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (12 samples, 0.05%)</title><rect x="85.0494%" y="837" width="0.0500%" height="15" fill="rgb(245,216,25)" fg:x="20394" fg:w="12"/><text x="85.2994%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (7 samples, 0.03%)</title><rect x="85.0703%" y="821" width="0.0292%" height="15" fill="rgb(251,43,5)" fg:x="20399" fg:w="7"/><text x="85.3203%" y="831.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::inputs (5 samples, 0.02%)</title><rect x="85.0995%" y="853" width="0.0209%" height="15" fill="rgb(250,128,24)" fg:x="20406" fg:w="5"/><text x="85.3495%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="85.1328%" y="837" width="0.0125%" height="15" fill="rgb(217,117,27)" fg:x="20414" fg:w="3"/><text x="85.3828%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="85.1662%" y="821" width="0.0125%" height="15" fill="rgb(245,147,4)" fg:x="20422" fg:w="3"/><text x="85.4162%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (21 samples, 0.09%)</title><rect x="85.1453%" y="837" width="0.0876%" height="15" fill="rgb(242,201,35)" fg:x="20417" fg:w="21"/><text x="85.3953%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (9 samples, 0.04%)</title><rect x="85.1954%" y="821" width="0.0375%" height="15" fill="rgb(218,181,1)" fg:x="20429" fg:w="9"/><text x="85.4454%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="85.3330%" y="677" width="0.0250%" height="15" fill="rgb(222,6,29)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.03%)</title><rect x="85.3330%" y="661" width="0.0250%" height="15" fill="rgb(208,186,3)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.03%)</title><rect x="85.3330%" y="645" width="0.0250%" height="15" fill="rgb(216,36,26)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="85.3330%" y="629" width="0.0250%" height="15" fill="rgb(248,201,23)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="85.3330%" y="613" width="0.0250%" height="15" fill="rgb(251,170,31)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="623.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="85.3330%" y="597" width="0.0250%" height="15" fill="rgb(207,110,25)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="607.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="85.3330%" y="581" width="0.0250%" height="15" fill="rgb(250,54,15)" fg:x="20462" fg:w="6"/><text x="85.5830%" y="591.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="85.3455%" y="565" width="0.0125%" height="15" fill="rgb(227,68,33)" fg:x="20465" fg:w="3"/><text x="85.5955%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="85.3330%" y="757" width="0.0375%" height="15" fill="rgb(238,34,41)" fg:x="20462" fg:w="9"/><text x="85.5830%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="85.3330%" y="741" width="0.0375%" height="15" fill="rgb(220,11,15)" fg:x="20462" fg:w="9"/><text x="85.5830%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.04%)</title><rect x="85.3330%" y="725" width="0.0375%" height="15" fill="rgb(246,111,35)" fg:x="20462" fg:w="9"/><text x="85.5830%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.04%)</title><rect x="85.3330%" y="709" width="0.0375%" height="15" fill="rgb(209,88,53)" fg:x="20462" fg:w="9"/><text x="85.5830%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.04%)</title><rect x="85.3330%" y="693" width="0.0375%" height="15" fill="rgb(231,185,47)" fg:x="20462" fg:w="9"/><text x="85.5830%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.01%)</title><rect x="85.3580%" y="677" width="0.0125%" height="15" fill="rgb(233,154,1)" fg:x="20468" fg:w="3"/><text x="85.6080%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="85.3580%" y="661" width="0.0125%" height="15" fill="rgb(225,15,46)" fg:x="20468" fg:w="3"/><text x="85.6080%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="85.3580%" y="645" width="0.0125%" height="15" fill="rgb(211,135,41)" fg:x="20468" fg:w="3"/><text x="85.6080%" y="655.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (18 samples, 0.08%)</title><rect x="85.2996%" y="773" width="0.0751%" height="15" fill="rgb(208,54,0)" fg:x="20454" fg:w="18"/><text x="85.5496%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (27 samples, 0.11%)</title><rect x="85.2704%" y="805" width="0.1126%" height="15" fill="rgb(244,136,14)" fg:x="20447" fg:w="27"/><text x="85.5204%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.09%)</title><rect x="85.2955%" y="789" width="0.0876%" height="15" fill="rgb(241,56,14)" fg:x="20453" fg:w="21"/><text x="85.5455%" y="799.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="85.3914%" y="773" width="0.0125%" height="15" fill="rgb(205,80,24)" fg:x="20476" fg:w="3"/><text x="85.6414%" y="783.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::expressions (42 samples, 0.18%)</title><rect x="85.2329%" y="837" width="0.1752%" height="15" fill="rgb(220,57,4)" fg:x="20438" fg:w="42"/><text x="85.4829%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.15%)</title><rect x="85.2538%" y="821" width="0.1543%" height="15" fill="rgb(226,193,50)" fg:x="20443" fg:w="37"/><text x="85.5038%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="85.3914%" y="805" width="0.0167%" height="15" fill="rgb(231,168,22)" fg:x="20476" fg:w="4"/><text x="85.6414%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="85.3914%" y="789" width="0.0167%" height="15" fill="rgb(254,215,14)" fg:x="20476" fg:w="4"/><text x="85.6414%" y="799.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (17 samples, 0.07%)</title><rect x="85.4498%" y="773" width="0.0709%" height="15" fill="rgb(211,115,16)" fg:x="20490" fg:w="17"/><text x="85.6998%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.06%)</title><rect x="85.4623%" y="757" width="0.0584%" height="15" fill="rgb(236,210,16)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.06%)</title><rect x="85.4623%" y="741" width="0.0584%" height="15" fill="rgb(221,94,12)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.06%)</title><rect x="85.4623%" y="725" width="0.0584%" height="15" fill="rgb(235,218,49)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.06%)</title><rect x="85.4623%" y="709" width="0.0584%" height="15" fill="rgb(217,114,14)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.06%)</title><rect x="85.4623%" y="693" width="0.0584%" height="15" fill="rgb(216,145,22)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.06%)</title><rect x="85.4623%" y="677" width="0.0584%" height="15" fill="rgb(217,112,39)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.06%)</title><rect x="85.4623%" y="661" width="0.0584%" height="15" fill="rgb(225,85,32)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.06%)</title><rect x="85.4623%" y="645" width="0.0584%" height="15" fill="rgb(245,209,47)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.06%)</title><rect x="85.4623%" y="629" width="0.0584%" height="15" fill="rgb(218,220,15)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.06%)</title><rect x="85.4623%" y="613" width="0.0584%" height="15" fill="rgb(222,202,31)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="623.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.06%)</title><rect x="85.4623%" y="597" width="0.0584%" height="15" fill="rgb(243,203,4)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="607.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.06%)</title><rect x="85.4623%" y="581" width="0.0584%" height="15" fill="rgb(237,92,17)" fg:x="20493" fg:w="14"/><text x="85.7123%" y="591.50"></text></g><g><title>_int_malloc (12 samples, 0.05%)</title><rect x="85.4706%" y="565" width="0.0500%" height="15" fill="rgb(231,119,7)" fg:x="20495" fg:w="12"/><text x="85.7206%" y="575.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (34 samples, 0.14%)</title><rect x="85.4456%" y="805" width="0.1418%" height="15" fill="rgb(237,82,41)" fg:x="20489" fg:w="34"/><text x="85.6956%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.14%)</title><rect x="85.4498%" y="789" width="0.1376%" height="15" fill="rgb(226,81,48)" fg:x="20490" fg:w="33"/><text x="85.6998%" y="799.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.07%)</title><rect x="85.5207%" y="773" width="0.0667%" height="15" fill="rgb(234,70,51)" fg:x="20507" fg:w="16"/><text x="85.7707%" y="783.50"></text></g><g><title>_int_malloc (14 samples, 0.06%)</title><rect x="85.5290%" y="757" width="0.0584%" height="15" fill="rgb(251,86,4)" fg:x="20509" fg:w="14"/><text x="85.7790%" y="767.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.16%)</title><rect x="85.5874%" y="805" width="0.1585%" height="15" fill="rgb(244,144,28)" fg:x="20523" fg:w="38"/><text x="85.8374%" y="815.50"></text></g><g><title>_int_malloc (31 samples, 0.13%)</title><rect x="85.6166%" y="789" width="0.1293%" height="15" fill="rgb(232,161,39)" fg:x="20530" fg:w="31"/><text x="85.8666%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73 samples, 0.30%)</title><rect x="85.4456%" y="821" width="0.3044%" height="15" fill="rgb(247,34,51)" fg:x="20489" fg:w="73"/><text x="85.6956%" y="831.50"></text></g><g><title>__GI___libc_malloc (73 samples, 0.30%)</title><rect x="85.8084%" y="597" width="0.3044%" height="15" fill="rgb(225,132,2)" fg:x="20576" fg:w="73"/><text x="86.0584%" y="607.50"></text></g><g><title>_int_malloc (51 samples, 0.21%)</title><rect x="85.9002%" y="581" width="0.2127%" height="15" fill="rgb(209,159,44)" fg:x="20598" fg:w="51"/><text x="86.1502%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (74 samples, 0.31%)</title><rect x="85.8084%" y="693" width="0.3086%" height="15" fill="rgb(251,214,1)" fg:x="20576" fg:w="74"/><text x="86.0584%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74 samples, 0.31%)</title><rect x="85.8084%" y="677" width="0.3086%" height="15" fill="rgb(247,84,47)" fg:x="20576" fg:w="74"/><text x="86.0584%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (74 samples, 0.31%)</title><rect x="85.8084%" y="661" width="0.3086%" height="15" fill="rgb(240,111,43)" fg:x="20576" fg:w="74"/><text x="86.0584%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74 samples, 0.31%)</title><rect x="85.8084%" y="645" width="0.3086%" height="15" fill="rgb(215,214,35)" fg:x="20576" fg:w="74"/><text x="86.0584%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74 samples, 0.31%)</title><rect x="85.8084%" y="629" width="0.3086%" height="15" fill="rgb(248,207,23)" fg:x="20576" fg:w="74"/><text x="86.0584%" y="639.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.31%)</title><rect x="85.8084%" y="613" width="0.3086%" height="15" fill="rgb(214,186,4)" fg:x="20576" fg:w="74"/><text x="86.0584%" y="623.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (80 samples, 0.33%)</title><rect x="85.7917%" y="789" width="0.3336%" height="15" fill="rgb(220,133,22)" fg:x="20572" fg:w="80"/><text x="86.0417%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (76 samples, 0.32%)</title><rect x="85.8084%" y="773" width="0.3169%" height="15" fill="rgb(239,134,19)" fg:x="20576" fg:w="76"/><text x="86.0584%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (76 samples, 0.32%)</title><rect x="85.8084%" y="757" width="0.3169%" height="15" fill="rgb(250,140,9)" fg:x="20576" fg:w="76"/><text x="86.0584%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76 samples, 0.32%)</title><rect x="85.8084%" y="741" width="0.3169%" height="15" fill="rgb(225,59,14)" fg:x="20576" fg:w="76"/><text x="86.0584%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (76 samples, 0.32%)</title><rect x="85.8084%" y="725" width="0.3169%" height="15" fill="rgb(214,152,51)" fg:x="20576" fg:w="76"/><text x="86.0584%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76 samples, 0.32%)</title><rect x="85.8084%" y="709" width="0.3169%" height="15" fill="rgb(251,227,43)" fg:x="20576" fg:w="76"/><text x="86.0584%" y="719.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.04%)</title><rect x="86.1254%" y="789" width="0.0417%" height="15" fill="rgb(241,96,17)" fg:x="20652" fg:w="10"/><text x="86.3754%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="86.1546%" y="773" width="0.0125%" height="15" fill="rgb(234,198,43)" fg:x="20659" fg:w="3"/><text x="86.4046%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="86.1671%" y="789" width="0.0167%" height="15" fill="rgb(220,108,29)" fg:x="20662" fg:w="4"/><text x="86.4171%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 0.41%)</title><rect x="85.7792%" y="805" width="0.4087%" height="15" fill="rgb(226,163,33)" fg:x="20569" fg:w="98"/><text x="86.0292%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.09%)</title><rect x="86.2171%" y="693" width="0.0917%" height="15" fill="rgb(205,194,45)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.09%)</title><rect x="86.2171%" y="677" width="0.0917%" height="15" fill="rgb(206,143,44)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.09%)</title><rect x="86.2171%" y="661" width="0.0917%" height="15" fill="rgb(236,136,36)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.09%)</title><rect x="86.2171%" y="645" width="0.0917%" height="15" fill="rgb(249,172,42)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.09%)</title><rect x="86.2171%" y="629" width="0.0917%" height="15" fill="rgb(216,139,23)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="639.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.09%)</title><rect x="86.2171%" y="613" width="0.0917%" height="15" fill="rgb(207,166,20)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="623.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="86.2171%" y="597" width="0.0917%" height="15" fill="rgb(210,209,22)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="607.50"></text></g><g><title>_int_malloc (22 samples, 0.09%)</title><rect x="86.2171%" y="581" width="0.0917%" height="15" fill="rgb(232,118,20)" fg:x="20674" fg:w="22"/><text x="86.4671%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (24 samples, 0.10%)</title><rect x="86.2129%" y="773" width="0.1001%" height="15" fill="rgb(238,113,42)" fg:x="20673" fg:w="24"/><text x="86.4629%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.10%)</title><rect x="86.2171%" y="757" width="0.0959%" height="15" fill="rgb(231,42,5)" fg:x="20674" fg:w="23"/><text x="86.4671%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.10%)</title><rect x="86.2171%" y="741" width="0.0959%" height="15" fill="rgb(243,166,24)" fg:x="20674" fg:w="23"/><text x="86.4671%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.10%)</title><rect x="86.2171%" y="725" width="0.0959%" height="15" fill="rgb(237,226,12)" fg:x="20674" fg:w="23"/><text x="86.4671%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.10%)</title><rect x="86.2171%" y="709" width="0.0959%" height="15" fill="rgb(229,133,24)" fg:x="20674" fg:w="23"/><text x="86.4671%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.08%)</title><rect x="86.3172%" y="757" width="0.0834%" height="15" fill="rgb(238,33,43)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.08%)</title><rect x="86.3172%" y="741" width="0.0834%" height="15" fill="rgb(227,59,38)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.08%)</title><rect x="86.3172%" y="725" width="0.0834%" height="15" fill="rgb(230,97,0)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.08%)</title><rect x="86.3172%" y="709" width="0.0834%" height="15" fill="rgb(250,173,50)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.08%)</title><rect x="86.3172%" y="693" width="0.0834%" height="15" fill="rgb(240,15,50)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.08%)</title><rect x="86.3172%" y="677" width="0.0834%" height="15" fill="rgb(221,93,22)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.08%)</title><rect x="86.3172%" y="661" width="0.0834%" height="15" fill="rgb(245,180,53)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.08%)</title><rect x="86.3172%" y="645" width="0.0834%" height="15" fill="rgb(231,88,51)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.08%)</title><rect x="86.3172%" y="629" width="0.0834%" height="15" fill="rgb(240,58,21)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.08%)</title><rect x="86.3172%" y="613" width="0.0834%" height="15" fill="rgb(237,21,10)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="623.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.08%)</title><rect x="86.3172%" y="597" width="0.0834%" height="15" fill="rgb(218,43,11)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="607.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.08%)</title><rect x="86.3172%" y="581" width="0.0834%" height="15" fill="rgb(218,221,29)" fg:x="20698" fg:w="20"/><text x="86.5672%" y="591.50"></text></g><g><title>_int_malloc (18 samples, 0.08%)</title><rect x="86.3255%" y="565" width="0.0751%" height="15" fill="rgb(214,118,42)" fg:x="20700" fg:w="18"/><text x="86.5755%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="86.4048%" y="741" width="0.0209%" height="15" fill="rgb(251,200,26)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="86.4048%" y="725" width="0.0209%" height="15" fill="rgb(237,101,39)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="86.4048%" y="709" width="0.0209%" height="15" fill="rgb(251,117,11)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="86.4048%" y="693" width="0.0209%" height="15" fill="rgb(216,223,23)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="86.4048%" y="677" width="0.0209%" height="15" fill="rgb(251,54,12)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="86.4048%" y="661" width="0.0209%" height="15" fill="rgb(254,176,54)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="86.4048%" y="645" width="0.0209%" height="15" fill="rgb(210,32,8)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="86.4048%" y="629" width="0.0209%" height="15" fill="rgb(235,52,38)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="86.4048%" y="613" width="0.0209%" height="15" fill="rgb(231,4,44)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="86.4048%" y="597" width="0.0209%" height="15" fill="rgb(249,2,32)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="86.4048%" y="581" width="0.0209%" height="15" fill="rgb(224,65,26)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="591.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="86.4048%" y="565" width="0.0209%" height="15" fill="rgb(250,73,40)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="575.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="86.4048%" y="549" width="0.0209%" height="15" fill="rgb(253,177,16)" fg:x="20719" fg:w="5"/><text x="86.6548%" y="559.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (29 samples, 0.12%)</title><rect x="86.3130%" y="773" width="0.1209%" height="15" fill="rgb(217,32,34)" fg:x="20697" fg:w="29"/><text x="86.5630%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="86.4006%" y="757" width="0.0334%" height="15" fill="rgb(212,7,10)" fg:x="20718" fg:w="8"/><text x="86.6506%" y="767.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.05%)</title><rect x="86.4340%" y="773" width="0.0459%" height="15" fill="rgb(245,89,8)" fg:x="20726" fg:w="11"/><text x="86.6840%" y="783.50"></text></g><g><title>_int_malloc (7 samples, 0.03%)</title><rect x="86.4506%" y="757" width="0.0292%" height="15" fill="rgb(237,16,53)" fg:x="20730" fg:w="7"/><text x="86.7006%" y="767.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (72 samples, 0.30%)</title><rect x="86.1879%" y="789" width="0.3003%" height="15" fill="rgb(250,204,30)" fg:x="20667" fg:w="72"/><text x="86.4379%" y="799.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.08%)</title><rect x="86.4882%" y="789" width="0.0834%" height="15" fill="rgb(208,77,27)" fg:x="20739" fg:w="20"/><text x="86.7382%" y="799.50"></text></g><g><title>_int_malloc (16 samples, 0.07%)</title><rect x="86.5049%" y="773" width="0.0667%" height="15" fill="rgb(250,204,28)" fg:x="20743" fg:w="16"/><text x="86.7549%" y="783.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (200 samples, 0.83%)</title><rect x="85.7500%" y="821" width="0.8341%" height="15" fill="rgb(244,63,21)" fg:x="20562" fg:w="200"/><text x="86.0000%" y="831.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (95 samples, 0.40%)</title><rect x="86.1879%" y="805" width="0.3962%" height="15" fill="rgb(236,85,44)" fg:x="20667" fg:w="95"/><text x="86.4379%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="86.5716%" y="789" width="0.0125%" height="15" fill="rgb(215,98,4)" fg:x="20759" fg:w="3"/><text x="86.8216%" y="799.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (1,033 samples, 4.31%)</title><rect x="82.2928%" y="885" width="4.3079%" height="15" fill="rgb(235,38,11)" fg:x="19733" fg:w="1033"/><text x="82.5428%" y="895.50">dataf..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (1,014 samples, 4.23%)</title><rect x="82.3721%" y="869" width="4.2287%" height="15" fill="rgb(254,186,25)" fg:x="19752" fg:w="1014"/><text x="82.6221%" y="879.50">dataf..</text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::with_new_inputs (355 samples, 1.48%)</title><rect x="85.1203%" y="853" width="1.4805%" height="15" fill="rgb(225,55,31)" fg:x="20411" fg:w="355"/><text x="85.3703%" y="863.50"></text></g><g><title>datafusion_expr::utils::from_plan (286 samples, 1.19%)</title><rect x="85.4081%" y="837" width="1.1927%" height="15" fill="rgb(211,15,21)" fg:x="20480" fg:w="286"/><text x="85.6581%" y="847.50"></text></g><g><title>datafusion_optimizer::optimizer::log_plan (3 samples, 0.01%)</title><rect x="86.6008%" y="885" width="0.0125%" height="15" fill="rgb(215,187,41)" fg:x="20766" fg:w="3"/><text x="86.8508%" y="895.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (1,842 samples, 7.68%)</title><rect x="78.9357%" y="917" width="7.6817%" height="15" fill="rgb(248,69,32)" fg:x="18928" fg:w="1842"/><text x="79.1857%" y="927.50">datafusion:..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (1,842 samples, 7.68%)</title><rect x="78.9357%" y="901" width="7.6817%" height="15" fill="rgb(252,102,52)" fg:x="18928" fg:w="1842"/><text x="79.1857%" y="911.50">datafusion_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="86.6800%" y="869" width="0.0125%" height="15" fill="rgb(253,140,32)" fg:x="20785" fg:w="3"/><text x="86.9300%" y="879.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::expressions (9 samples, 0.04%)</title><rect x="86.7050%" y="853" width="0.0375%" height="15" fill="rgb(216,56,42)" fg:x="20791" fg:w="9"/><text x="86.9550%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="86.7050%" y="837" width="0.0375%" height="15" fill="rgb(216,184,14)" fg:x="20791" fg:w="9"/><text x="86.9550%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.16%)</title><rect x="86.6925%" y="869" width="0.1585%" height="15" fill="rgb(237,187,27)" fg:x="20788" fg:w="38"/><text x="86.9425%" y="879.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.11%)</title><rect x="86.7426%" y="853" width="0.1084%" height="15" fill="rgb(219,65,3)" fg:x="20800" fg:w="26"/><text x="86.9926%" y="863.50"></text></g><g><title>_int_malloc (20 samples, 0.08%)</title><rect x="86.7676%" y="837" width="0.0834%" height="15" fill="rgb(245,83,25)" fg:x="20806" fg:w="20"/><text x="87.0176%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.10%)</title><rect x="86.9094%" y="837" width="0.1043%" height="15" fill="rgb(214,205,45)" fg:x="20840" fg:w="25"/><text x="87.1594%" y="847.50"></text></g><g><title>dashmap::set::DashSet&lt;K,S&gt;::contains (6 samples, 0.03%)</title><rect x="86.9886%" y="821" width="0.0250%" height="15" fill="rgb(241,20,18)" fg:x="20859" fg:w="6"/><text x="87.2386%" y="831.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="87.0261%" y="805" width="0.0250%" height="15" fill="rgb(232,163,23)" fg:x="20868" fg:w="6"/><text x="87.2761%" y="815.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (49 samples, 0.20%)</title><rect x="86.8510%" y="869" width="0.2043%" height="15" fill="rgb(214,5,46)" fg:x="20826" fg:w="49"/><text x="87.1010%" y="879.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (37 samples, 0.15%)</title><rect x="86.9010%" y="853" width="0.1543%" height="15" fill="rgb(229,78,17)" fg:x="20838" fg:w="37"/><text x="87.1510%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.04%)</title><rect x="87.0136%" y="837" width="0.0417%" height="15" fill="rgb(248,89,10)" fg:x="20865" fg:w="10"/><text x="87.2636%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="87.0261%" y="821" width="0.0292%" height="15" fill="rgb(248,54,15)" fg:x="20868" fg:w="7"/><text x="87.2761%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.07%)</title><rect x="87.0553%" y="869" width="0.0709%" height="15" fill="rgb(223,116,6)" fg:x="20875" fg:w="17"/><text x="87.3053%" y="879.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.03%)</title><rect x="87.1346%" y="869" width="0.0292%" height="15" fill="rgb(205,125,38)" fg:x="20894" fg:w="7"/><text x="87.3846%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.01%)</title><rect x="87.1513%" y="853" width="0.0125%" height="15" fill="rgb(251,78,38)" fg:x="20898" fg:w="3"/><text x="87.4013%" y="863.50"></text></g><g><title>core::fmt::write (3 samples, 0.01%)</title><rect x="87.1513%" y="837" width="0.0125%" height="15" fill="rgb(253,78,28)" fg:x="20898" fg:w="3"/><text x="87.4013%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::create_accumulator (3 samples, 0.01%)</title><rect x="87.1679%" y="837" width="0.0125%" height="15" fill="rgb(209,120,3)" fg:x="20902" fg:w="3"/><text x="87.4179%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.02%)</title><rect x="87.1638%" y="869" width="0.0209%" height="15" fill="rgb(238,229,9)" fg:x="20901" fg:w="5"/><text x="87.4138%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="87.1679%" y="853" width="0.0167%" height="15" fill="rgb(253,159,18)" fg:x="20902" fg:w="4"/><text x="87.4179%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="87.1888%" y="853" width="0.0125%" height="15" fill="rgb(244,42,34)" fg:x="20907" fg:w="3"/><text x="87.4388%" y="863.50"></text></g><g><title>datafusion::physical_plan::aggregates::&lt;impl core::convert::From&lt;datafusion::physical_plan::aggregates::StreamType&gt; for core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;&gt;::from (5 samples, 0.02%)</title><rect x="87.1846%" y="869" width="0.0209%" height="15" fill="rgb(224,8,7)" fg:x="20906" fg:w="5"/><text x="87.4346%" y="879.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (3 samples, 0.01%)</title><rect x="87.2347%" y="837" width="0.0125%" height="15" fill="rgb(210,201,45)" fg:x="20918" fg:w="3"/><text x="87.4847%" y="847.50"></text></g><g><title>chrono::offset::utc::Utc::now (5 samples, 0.02%)</title><rect x="87.2305%" y="853" width="0.0209%" height="15" fill="rgb(252,185,21)" fg:x="20917" fg:w="5"/><text x="87.4805%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::elapsed_compute (6 samples, 0.03%)</title><rect x="87.2513%" y="853" width="0.0250%" height="15" fill="rgb(223,131,1)" fg:x="20922" fg:w="6"/><text x="87.5013%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (3 samples, 0.01%)</title><rect x="87.2639%" y="837" width="0.0125%" height="15" fill="rgb(245,141,16)" fg:x="20925" fg:w="3"/><text x="87.5139%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::end_timestamp (9 samples, 0.04%)</title><rect x="87.2764%" y="853" width="0.0375%" height="15" fill="rgb(229,55,45)" fg:x="20928" fg:w="9"/><text x="87.5264%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (5 samples, 0.02%)</title><rect x="87.2930%" y="837" width="0.0209%" height="15" fill="rgb(208,92,15)" fg:x="20932" fg:w="5"/><text x="87.5430%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::mem_used (9 samples, 0.04%)</title><rect x="87.3139%" y="853" width="0.0375%" height="15" fill="rgb(234,185,47)" fg:x="20937" fg:w="9"/><text x="87.5639%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (5 samples, 0.02%)</title><rect x="87.3306%" y="837" width="0.0209%" height="15" fill="rgb(253,104,50)" fg:x="20941" fg:w="5"/><text x="87.5806%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="805" width="0.0459%" height="15" fill="rgb(205,70,7)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="789" width="0.0459%" height="15" fill="rgb(240,178,43)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="773" width="0.0459%" height="15" fill="rgb(214,112,2)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="757" width="0.0459%" height="15" fill="rgb(206,46,17)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="741" width="0.0459%" height="15" fill="rgb(225,220,16)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="725" width="0.0459%" height="15" fill="rgb(238,65,40)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="87.4140%" y="709" width="0.0459%" height="15" fill="rgb(230,151,21)" fg:x="20961" fg:w="11"/><text x="87.6640%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="87.4265%" y="693" width="0.0334%" height="15" fill="rgb(218,58,49)" fg:x="20964" fg:w="8"/><text x="87.6765%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="87.4265%" y="677" width="0.0334%" height="15" fill="rgb(219,179,14)" fg:x="20964" fg:w="8"/><text x="87.6765%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="87.4307%" y="661" width="0.0292%" height="15" fill="rgb(223,72,1)" fg:x="20965" fg:w="7"/><text x="87.6807%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="87.4348%" y="645" width="0.0250%" height="15" fill="rgb(238,126,10)" fg:x="20966" fg:w="6"/><text x="87.6848%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.4473%" y="629" width="0.0125%" height="15" fill="rgb(224,206,38)" fg:x="20969" fg:w="3"/><text x="87.6973%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.4473%" y="613" width="0.0125%" height="15" fill="rgb(212,201,54)" fg:x="20969" fg:w="3"/><text x="87.6973%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.4473%" y="597" width="0.0125%" height="15" fill="rgb(218,154,48)" fg:x="20969" fg:w="3"/><text x="87.6973%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.4473%" y="581" width="0.0125%" height="15" fill="rgb(232,93,24)" fg:x="20969" fg:w="3"/><text x="87.6973%" y="591.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="87.3723%" y="837" width="0.0917%" height="15" fill="rgb(245,30,21)" fg:x="20951" fg:w="22"/><text x="87.6223%" y="847.50"></text></g><g><title>_int_malloc (13 samples, 0.05%)</title><rect x="87.4098%" y="821" width="0.0542%" height="15" fill="rgb(242,148,29)" fg:x="20960" fg:w="13"/><text x="87.6598%" y="831.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::output_rows (29 samples, 0.12%)</title><rect x="87.3514%" y="853" width="0.1209%" height="15" fill="rgb(244,153,54)" fg:x="20946" fg:w="29"/><text x="87.6014%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::spill_count (7 samples, 0.03%)</title><rect x="87.4724%" y="853" width="0.0292%" height="15" fill="rgb(252,87,22)" fg:x="20975" fg:w="7"/><text x="87.7224%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (3 samples, 0.01%)</title><rect x="87.4891%" y="837" width="0.0125%" height="15" fill="rgb(210,51,29)" fg:x="20979" fg:w="3"/><text x="87.7391%" y="847.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="87.5016%" y="837" width="0.0292%" height="15" fill="rgb(242,136,47)" fg:x="20982" fg:w="7"/><text x="87.7516%" y="847.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::spilled_bytes (18 samples, 0.08%)</title><rect x="87.5016%" y="853" width="0.0751%" height="15" fill="rgb(238,68,4)" fg:x="20982" fg:w="18"/><text x="87.7516%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (11 samples, 0.05%)</title><rect x="87.5308%" y="837" width="0.0459%" height="15" fill="rgb(242,161,30)" fg:x="20989" fg:w="11"/><text x="87.7808%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.03%)</title><rect x="87.5433%" y="821" width="0.0334%" height="15" fill="rgb(218,58,44)" fg:x="20992" fg:w="8"/><text x="87.7933%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.03%)</title><rect x="87.5433%" y="805" width="0.0334%" height="15" fill="rgb(252,125,32)" fg:x="20992" fg:w="8"/><text x="87.7933%" y="815.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.03%)</title><rect x="87.5433%" y="789" width="0.0334%" height="15" fill="rgb(219,178,0)" fg:x="20992" fg:w="8"/><text x="87.7933%" y="799.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="87.5808%" y="837" width="0.0250%" height="15" fill="rgb(213,152,7)" fg:x="21001" fg:w="6"/><text x="87.8308%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (245 samples, 1.02%)</title><rect x="86.6175%" y="885" width="1.0217%" height="15" fill="rgb(249,109,34)" fg:x="20770" fg:w="245"/><text x="86.8675%" y="895.50"></text></g><g><title>datafusion::physical_plan::metrics::baseline::BaselineMetrics::new (104 samples, 0.43%)</title><rect x="87.2055%" y="869" width="0.4337%" height="15" fill="rgb(232,96,21)" fg:x="20911" fg:w="104"/><text x="87.4555%" y="879.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::start_timestamp (15 samples, 0.06%)</title><rect x="87.5766%" y="853" width="0.0626%" height="15" fill="rgb(228,27,39)" fg:x="21000" fg:w="15"/><text x="87.8266%" y="863.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (8 samples, 0.03%)</title><rect x="87.6058%" y="837" width="0.0334%" height="15" fill="rgb(211,182,52)" fg:x="21007" fg:w="8"/><text x="87.8558%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="87.6225%" y="821" width="0.0167%" height="15" fill="rgb(234,178,38)" fg:x="21011" fg:w="4"/><text x="87.8725%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="87.6267%" y="805" width="0.0125%" height="15" fill="rgb(221,111,3)" fg:x="21012" fg:w="3"/><text x="87.8767%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="87.6559%" y="821" width="0.0125%" height="15" fill="rgb(228,175,21)" fg:x="21019" fg:w="3"/><text x="87.9059%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="87.6684%" y="805" width="0.0209%" height="15" fill="rgb(228,174,43)" fg:x="21022" fg:w="5"/><text x="87.9184%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="87.6684%" y="821" width="0.0250%" height="15" fill="rgb(211,191,0)" fg:x="21022" fg:w="6"/><text x="87.9184%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.03%)</title><rect x="87.7226%" y="773" width="0.0292%" height="15" fill="rgb(253,117,3)" fg:x="21035" fg:w="7"/><text x="87.9726%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.03%)</title><rect x="87.7268%" y="757" width="0.0250%" height="15" fill="rgb(241,127,19)" fg:x="21036" fg:w="6"/><text x="87.9768%" y="767.50"></text></g><g><title>core::fmt::write (6 samples, 0.03%)</title><rect x="87.7268%" y="741" width="0.0250%" height="15" fill="rgb(218,103,12)" fg:x="21036" fg:w="6"/><text x="87.9768%" y="751.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (5 samples, 0.02%)</title><rect x="87.7309%" y="725" width="0.0209%" height="15" fill="rgb(236,214,43)" fg:x="21037" fg:w="5"/><text x="87.9809%" y="735.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (5 samples, 0.02%)</title><rect x="87.7309%" y="709" width="0.0209%" height="15" fill="rgb(244,144,19)" fg:x="21037" fg:w="5"/><text x="87.9809%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.07%)</title><rect x="87.7851%" y="533" width="0.0709%" height="15" fill="rgb(246,188,10)" fg:x="21050" fg:w="17"/><text x="88.0351%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.07%)</title><rect x="87.7851%" y="517" width="0.0709%" height="15" fill="rgb(212,193,33)" fg:x="21050" fg:w="17"/><text x="88.0351%" y="527.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.07%)</title><rect x="87.7851%" y="501" width="0.0709%" height="15" fill="rgb(241,51,29)" fg:x="21050" fg:w="17"/><text x="88.0351%" y="511.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.07%)</title><rect x="87.7851%" y="485" width="0.0709%" height="15" fill="rgb(211,58,19)" fg:x="21050" fg:w="17"/><text x="88.0351%" y="495.50"></text></g><g><title>_int_realloc (14 samples, 0.06%)</title><rect x="87.7977%" y="469" width="0.0584%" height="15" fill="rgb(229,111,26)" fg:x="21053" fg:w="14"/><text x="88.0477%" y="479.50"></text></g><g><title>_int_malloc (7 samples, 0.03%)</title><rect x="87.8268%" y="453" width="0.0292%" height="15" fill="rgb(213,115,40)" fg:x="21060" fg:w="7"/><text x="88.0768%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.08%)</title><rect x="87.7810%" y="613" width="0.0792%" height="15" fill="rgb(209,56,44)" fg:x="21049" fg:w="19"/><text x="88.0310%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.08%)</title><rect x="87.7810%" y="597" width="0.0792%" height="15" fill="rgb(230,108,32)" fg:x="21049" fg:w="19"/><text x="88.0310%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.08%)</title><rect x="87.7810%" y="581" width="0.0792%" height="15" fill="rgb(216,165,31)" fg:x="21049" fg:w="19"/><text x="88.0310%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.08%)</title><rect x="87.7810%" y="565" width="0.0792%" height="15" fill="rgb(218,122,21)" fg:x="21049" fg:w="19"/><text x="88.0310%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.08%)</title><rect x="87.7851%" y="549" width="0.0751%" height="15" fill="rgb(223,224,47)" fg:x="21050" fg:w="18"/><text x="88.0351%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 0.16%)</title><rect x="87.7017%" y="789" width="0.1626%" height="15" fill="rgb(238,102,44)" fg:x="21030" fg:w="39"/><text x="87.9517%" y="799.50"></text></g><g><title>datafusion_physical_expr::expressions::format_state_name (27 samples, 0.11%)</title><rect x="87.7518%" y="773" width="0.1126%" height="15" fill="rgb(236,46,40)" fg:x="21042" fg:w="27"/><text x="88.0018%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (27 samples, 0.11%)</title><rect x="87.7518%" y="757" width="0.1126%" height="15" fill="rgb(247,202,50)" fg:x="21042" fg:w="27"/><text x="88.0018%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (26 samples, 0.11%)</title><rect x="87.7560%" y="741" width="0.1084%" height="15" fill="rgb(209,99,20)" fg:x="21043" fg:w="26"/><text x="88.0060%" y="751.50"></text></g><g><title>core::fmt::write (25 samples, 0.10%)</title><rect x="87.7601%" y="725" width="0.1043%" height="15" fill="rgb(252,27,34)" fg:x="21044" fg:w="25"/><text x="88.0101%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.09%)</title><rect x="87.7768%" y="709" width="0.0876%" height="15" fill="rgb(215,206,23)" fg:x="21048" fg:w="21"/><text x="88.0268%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.08%)</title><rect x="87.7810%" y="693" width="0.0834%" height="15" fill="rgb(212,135,36)" fg:x="21049" fg:w="20"/><text x="88.0310%" y="703.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.08%)</title><rect x="87.7810%" y="677" width="0.0834%" height="15" fill="rgb(240,189,1)" fg:x="21049" fg:w="20"/><text x="88.0310%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.08%)</title><rect x="87.7810%" y="661" width="0.0834%" height="15" fill="rgb(242,56,20)" fg:x="21049" fg:w="20"/><text x="88.0310%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.08%)</title><rect x="87.7810%" y="645" width="0.0834%" height="15" fill="rgb(247,132,33)" fg:x="21049" fg:w="20"/><text x="88.0310%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.08%)</title><rect x="87.7810%" y="629" width="0.0834%" height="15" fill="rgb(208,149,11)" fg:x="21049" fg:w="20"/><text x="88.0310%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 0.17%)</title><rect x="87.7017%" y="805" width="0.1668%" height="15" fill="rgb(211,33,11)" fg:x="21030" fg:w="40"/><text x="87.9517%" y="815.50"></text></g><g><title>&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr as datafusion_physical_expr::aggregate::AggregateExpr&gt;::state_fields (45 samples, 0.19%)</title><rect x="87.6934%" y="821" width="0.1877%" height="15" fill="rgb(221,29,38)" fg:x="21028" fg:w="45"/><text x="87.9434%" y="831.50"></text></g><g><title>datafusion_expr::expr_fn::create_udaf::{{closure}} (3 samples, 0.01%)</title><rect x="87.8686%" y="805" width="0.0125%" height="15" fill="rgb(206,182,49)" fg:x="21070" fg:w="3"/><text x="88.1186%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (60 samples, 0.25%)</title><rect x="87.6392%" y="853" width="0.2502%" height="15" fill="rgb(216,140,1)" fg:x="21015" fg:w="60"/><text x="87.8892%" y="863.50"></text></g><g><title>datafusion::physical_plan::aggregates::merge_expressions (60 samples, 0.25%)</title><rect x="87.6392%" y="837" width="0.2502%" height="15" fill="rgb(232,57,40)" fg:x="21015" fg:w="60"/><text x="87.8892%" y="847.50"></text></g><g><title>core::iter::adapters::try_process (83 samples, 0.35%)</title><rect x="87.6392%" y="885" width="0.3461%" height="15" fill="rgb(224,186,18)" fg:x="21015" fg:w="83"/><text x="87.8892%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.35%)</title><rect x="87.6392%" y="869" width="0.3461%" height="15" fill="rgb(215,121,11)" fg:x="21015" fg:w="83"/><text x="87.8892%" y="879.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.10%)</title><rect x="87.8894%" y="853" width="0.0959%" height="15" fill="rgb(245,147,10)" fg:x="21075" fg:w="23"/><text x="88.1394%" y="863.50"></text></g><g><title>_int_malloc (23 samples, 0.10%)</title><rect x="87.8894%" y="837" width="0.0959%" height="15" fill="rgb(238,153,13)" fg:x="21075" fg:w="23"/><text x="88.1394%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (21 samples, 0.09%)</title><rect x="87.8977%" y="821" width="0.0876%" height="15" fill="rgb(233,108,0)" fg:x="21077" fg:w="21"/><text x="88.1477%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="87.9645%" y="805" width="0.0209%" height="15" fill="rgb(212,157,17)" fg:x="21093" fg:w="5"/><text x="88.2145%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="87.9686%" y="789" width="0.0167%" height="15" fill="rgb(225,213,38)" fg:x="21094" fg:w="4"/><text x="88.2186%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="87.9686%" y="773" width="0.0167%" height="15" fill="rgb(248,16,11)" fg:x="21094" fg:w="4"/><text x="88.2186%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.9728%" y="757" width="0.0125%" height="15" fill="rgb(241,33,4)" fg:x="21095" fg:w="3"/><text x="88.2228%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.9728%" y="741" width="0.0125%" height="15" fill="rgb(222,26,43)" fg:x="21095" fg:w="3"/><text x="88.2228%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="87.9728%" y="725" width="0.0125%" height="15" fill="rgb(243,29,36)" fg:x="21095" fg:w="3"/><text x="88.2228%" y="735.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::elapsed_compute (17 samples, 0.07%)</title><rect x="87.9937%" y="869" width="0.0709%" height="15" fill="rgb(241,9,27)" fg:x="21100" fg:w="17"/><text x="88.2437%" y="879.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.07%)</title><rect x="87.9937%" y="853" width="0.0709%" height="15" fill="rgb(205,117,26)" fg:x="21100" fg:w="17"/><text x="88.2437%" y="863.50"></text></g><g><title>_int_malloc (17 samples, 0.07%)</title><rect x="87.9937%" y="837" width="0.0709%" height="15" fill="rgb(209,80,39)" fg:x="21100" fg:w="17"/><text x="88.2437%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (15 samples, 0.06%)</title><rect x="88.0020%" y="821" width="0.0626%" height="15" fill="rgb(239,155,6)" fg:x="21102" fg:w="15"/><text x="88.2520%" y="831.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::end_timestamp (13 samples, 0.05%)</title><rect x="88.0646%" y="869" width="0.0542%" height="15" fill="rgb(212,104,12)" fg:x="21117" fg:w="13"/><text x="88.3146%" y="879.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.05%)</title><rect x="88.0646%" y="853" width="0.0542%" height="15" fill="rgb(234,204,3)" fg:x="21117" fg:w="13"/><text x="88.3146%" y="863.50"></text></g><g><title>_int_malloc (13 samples, 0.05%)</title><rect x="88.0646%" y="837" width="0.0542%" height="15" fill="rgb(251,218,7)" fg:x="21117" fg:w="13"/><text x="88.3146%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.03%)</title><rect x="88.0896%" y="821" width="0.0292%" height="15" fill="rgb(221,81,32)" fg:x="21123" fg:w="7"/><text x="88.3396%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.0979%" y="805" width="0.0209%" height="15" fill="rgb(214,152,26)" fg:x="21125" fg:w="5"/><text x="88.3479%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.0979%" y="789" width="0.0209%" height="15" fill="rgb(223,22,3)" fg:x="21125" fg:w="5"/><text x="88.3479%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.0979%" y="773" width="0.0209%" height="15" fill="rgb(207,174,7)" fg:x="21125" fg:w="5"/><text x="88.3479%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.1021%" y="757" width="0.0167%" height="15" fill="rgb(224,19,52)" fg:x="21126" fg:w="4"/><text x="88.3521%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.1021%" y="741" width="0.0167%" height="15" fill="rgb(228,24,14)" fg:x="21126" fg:w="4"/><text x="88.3521%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.1021%" y="725" width="0.0167%" height="15" fill="rgb(230,153,43)" fg:x="21126" fg:w="4"/><text x="88.3521%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.1021%" y="709" width="0.0167%" height="15" fill="rgb(231,106,12)" fg:x="21126" fg:w="4"/><text x="88.3521%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.1063%" y="693" width="0.0125%" height="15" fill="rgb(215,92,2)" fg:x="21127" fg:w="3"/><text x="88.3563%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.1063%" y="677" width="0.0125%" height="15" fill="rgb(249,143,25)" fg:x="21127" fg:w="3"/><text x="88.3563%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.1063%" y="661" width="0.0125%" height="15" fill="rgb(252,7,35)" fg:x="21127" fg:w="3"/><text x="88.3563%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.1063%" y="645" width="0.0125%" height="15" fill="rgb(216,69,40)" fg:x="21127" fg:w="3"/><text x="88.3563%" y="655.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::mem_used (19 samples, 0.08%)</title><rect x="88.1188%" y="869" width="0.0792%" height="15" fill="rgb(240,36,33)" fg:x="21130" fg:w="19"/><text x="88.3688%" y="879.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.08%)</title><rect x="88.1188%" y="853" width="0.0792%" height="15" fill="rgb(231,128,14)" fg:x="21130" fg:w="19"/><text x="88.3688%" y="863.50"></text></g><g><title>_int_malloc (19 samples, 0.08%)</title><rect x="88.1188%" y="837" width="0.0792%" height="15" fill="rgb(245,143,14)" fg:x="21130" fg:w="19"/><text x="88.3688%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (17 samples, 0.07%)</title><rect x="88.1271%" y="821" width="0.0709%" height="15" fill="rgb(222,130,28)" fg:x="21132" fg:w="17"/><text x="88.3771%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.1813%" y="805" width="0.0167%" height="15" fill="rgb(212,10,48)" fg:x="21145" fg:w="4"/><text x="88.4313%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.1855%" y="789" width="0.0125%" height="15" fill="rgb(254,118,45)" fg:x="21146" fg:w="3"/><text x="88.4355%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.1855%" y="773" width="0.0125%" height="15" fill="rgb(228,6,45)" fg:x="21146" fg:w="3"/><text x="88.4355%" y="783.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::output_rows (22 samples, 0.09%)</title><rect x="88.1980%" y="869" width="0.0917%" height="15" fill="rgb(241,18,35)" fg:x="21149" fg:w="22"/><text x="88.4480%" y="879.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="88.1980%" y="853" width="0.0917%" height="15" fill="rgb(227,214,53)" fg:x="21149" fg:w="22"/><text x="88.4480%" y="863.50"></text></g><g><title>_int_malloc (22 samples, 0.09%)</title><rect x="88.1980%" y="837" width="0.0917%" height="15" fill="rgb(224,107,51)" fg:x="21149" fg:w="22"/><text x="88.4480%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (20 samples, 0.08%)</title><rect x="88.2063%" y="821" width="0.0834%" height="15" fill="rgb(248,60,28)" fg:x="21151" fg:w="20"/><text x="88.4563%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="88.2606%" y="805" width="0.0292%" height="15" fill="rgb(249,101,23)" fg:x="21164" fg:w="7"/><text x="88.5106%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.2647%" y="789" width="0.0250%" height="15" fill="rgb(228,51,19)" fg:x="21165" fg:w="6"/><text x="88.5147%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.2647%" y="773" width="0.0250%" height="15" fill="rgb(213,20,6)" fg:x="21165" fg:w="6"/><text x="88.5147%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.2647%" y="757" width="0.0250%" height="15" fill="rgb(212,124,10)" fg:x="21165" fg:w="6"/><text x="88.5147%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.2647%" y="741" width="0.0250%" height="15" fill="rgb(248,3,40)" fg:x="21165" fg:w="6"/><text x="88.5147%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.2689%" y="725" width="0.0209%" height="15" fill="rgb(223,178,23)" fg:x="21166" fg:w="5"/><text x="88.5189%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.2689%" y="709" width="0.0209%" height="15" fill="rgb(240,132,45)" fg:x="21166" fg:w="5"/><text x="88.5189%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.2689%" y="693" width="0.0209%" height="15" fill="rgb(245,164,36)" fg:x="21166" fg:w="5"/><text x="88.5189%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.2772%" y="677" width="0.0125%" height="15" fill="rgb(231,188,53)" fg:x="21168" fg:w="3"/><text x="88.5272%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.2772%" y="661" width="0.0125%" height="15" fill="rgb(237,198,39)" fg:x="21168" fg:w="3"/><text x="88.5272%" y="671.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::spill_count (28 samples, 0.12%)</title><rect x="88.2898%" y="869" width="0.1168%" height="15" fill="rgb(223,120,35)" fg:x="21171" fg:w="28"/><text x="88.5398%" y="879.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.12%)</title><rect x="88.2898%" y="853" width="0.1168%" height="15" fill="rgb(253,107,49)" fg:x="21171" fg:w="28"/><text x="88.5398%" y="863.50"></text></g><g><title>_int_malloc (28 samples, 0.12%)</title><rect x="88.2898%" y="837" width="0.1168%" height="15" fill="rgb(216,44,31)" fg:x="21171" fg:w="28"/><text x="88.5398%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (24 samples, 0.10%)</title><rect x="88.3064%" y="821" width="0.1001%" height="15" fill="rgb(253,87,21)" fg:x="21175" fg:w="24"/><text x="88.5564%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.3857%" y="805" width="0.0209%" height="15" fill="rgb(226,18,2)" fg:x="21194" fg:w="5"/><text x="88.6357%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.3898%" y="789" width="0.0167%" height="15" fill="rgb(216,8,46)" fg:x="21195" fg:w="4"/><text x="88.6398%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.3898%" y="773" width="0.0167%" height="15" fill="rgb(226,140,39)" fg:x="21195" fg:w="4"/><text x="88.6398%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.3898%" y="757" width="0.0167%" height="15" fill="rgb(221,194,54)" fg:x="21195" fg:w="4"/><text x="88.6398%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.3898%" y="741" width="0.0167%" height="15" fill="rgb(213,92,11)" fg:x="21195" fg:w="4"/><text x="88.6398%" y="751.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.09%)</title><rect x="88.4065%" y="853" width="0.0917%" height="15" fill="rgb(229,162,46)" fg:x="21199" fg:w="22"/><text x="88.6565%" y="863.50"></text></g><g><title>_int_malloc (22 samples, 0.09%)</title><rect x="88.4065%" y="837" width="0.0917%" height="15" fill="rgb(214,111,36)" fg:x="21199" fg:w="22"/><text x="88.6565%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (20 samples, 0.08%)</title><rect x="88.4149%" y="821" width="0.0834%" height="15" fill="rgb(207,6,21)" fg:x="21201" fg:w="20"/><text x="88.6649%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="88.4691%" y="805" width="0.0292%" height="15" fill="rgb(213,127,38)" fg:x="21214" fg:w="7"/><text x="88.7191%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.4774%" y="789" width="0.0209%" height="15" fill="rgb(238,118,32)" fg:x="21216" fg:w="5"/><text x="88.7274%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.4774%" y="773" width="0.0209%" height="15" fill="rgb(240,139,39)" fg:x="21216" fg:w="5"/><text x="88.7274%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.02%)</title><rect x="88.4774%" y="757" width="0.0209%" height="15" fill="rgb(235,10,37)" fg:x="21216" fg:w="5"/><text x="88.7274%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.4816%" y="741" width="0.0167%" height="15" fill="rgb(249,171,38)" fg:x="21217" fg:w="4"/><text x="88.7316%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.4816%" y="725" width="0.0167%" height="15" fill="rgb(242,144,32)" fg:x="21217" fg:w="4"/><text x="88.7316%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="88.4816%" y="709" width="0.0167%" height="15" fill="rgb(217,117,21)" fg:x="21217" fg:w="4"/><text x="88.7316%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.4858%" y="693" width="0.0125%" height="15" fill="rgb(249,87,1)" fg:x="21218" fg:w="3"/><text x="88.7358%" y="703.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::spilled_bytes (25 samples, 0.10%)</title><rect x="88.4065%" y="869" width="0.1043%" height="15" fill="rgb(248,196,48)" fg:x="21199" fg:w="25"/><text x="88.6565%" y="879.50"></text></g><g><title>datafusion::physical_plan::metrics::ExecutionPlanMetricsSet::register (3 samples, 0.01%)</title><rect x="88.4983%" y="853" width="0.0125%" height="15" fill="rgb(251,206,33)" fg:x="21221" fg:w="3"/><text x="88.7483%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="88.4983%" y="837" width="0.0125%" height="15" fill="rgb(232,141,28)" fg:x="21221" fg:w="3"/><text x="88.7483%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="88.4983%" y="821" width="0.0125%" height="15" fill="rgb(209,167,14)" fg:x="21221" fg:w="3"/><text x="88.7483%" y="831.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.01%)</title><rect x="88.4983%" y="805" width="0.0125%" height="15" fill="rgb(225,11,50)" fg:x="21221" fg:w="3"/><text x="88.7483%" y="815.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.08%)</title><rect x="88.5108%" y="853" width="0.0751%" height="15" fill="rgb(209,50,20)" fg:x="21224" fg:w="18"/><text x="88.7608%" y="863.50"></text></g><g><title>_int_malloc (18 samples, 0.08%)</title><rect x="88.5108%" y="837" width="0.0751%" height="15" fill="rgb(212,17,46)" fg:x="21224" fg:w="18"/><text x="88.7608%" y="847.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.04%)</title><rect x="88.5441%" y="821" width="0.0417%" height="15" fill="rgb(216,101,39)" fg:x="21232" fg:w="10"/><text x="88.7941%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="88.5733%" y="805" width="0.0125%" height="15" fill="rgb(212,228,48)" fg:x="21239" fg:w="3"/><text x="88.8233%" y="815.50"></text></g><g><title>datafusion::physical_plan::execute_stream (473 samples, 1.97%)</title><rect x="86.6175%" y="917" width="1.9726%" height="15" fill="rgb(250,6,50)" fg:x="20770" fg:w="473"/><text x="86.8675%" y="927.50">d..</text></g><g><title>&lt;datafusion::physical_plan::aggregates::AggregateExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (473 samples, 1.97%)</title><rect x="86.6175%" y="901" width="1.9726%" height="15" fill="rgb(250,160,48)" fg:x="20770" fg:w="473"/><text x="86.8675%" y="911.50">&lt;..</text></g><g><title>datafusion::physical_plan::metrics::baseline::BaselineMetrics::new (143 samples, 0.60%)</title><rect x="87.9937%" y="885" width="0.5964%" height="15" fill="rgb(244,216,33)" fg:x="21100" fg:w="143"/><text x="88.2437%" y="895.50"></text></g><g><title>datafusion::physical_plan::metrics::builder::MetricBuilder::start_timestamp (19 samples, 0.08%)</title><rect x="88.5108%" y="869" width="0.0792%" height="15" fill="rgb(207,157,5)" fg:x="21224" fg:w="19"/><text x="88.7608%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.05%)</title><rect x="88.5900%" y="645" width="0.0542%" height="15" fill="rgb(228,199,8)" fg:x="21243" fg:w="13"/><text x="88.8400%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.05%)</title><rect x="88.5900%" y="629" width="0.0542%" height="15" fill="rgb(227,80,20)" fg:x="21243" fg:w="13"/><text x="88.8400%" y="639.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.05%)</title><rect x="88.5900%" y="613" width="0.0542%" height="15" fill="rgb(222,9,33)" fg:x="21243" fg:w="13"/><text x="88.8400%" y="623.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.05%)</title><rect x="88.5900%" y="597" width="0.0542%" height="15" fill="rgb(239,44,28)" fg:x="21243" fg:w="13"/><text x="88.8400%" y="607.50"></text></g><g><title>_int_realloc (3 samples, 0.01%)</title><rect x="88.6317%" y="581" width="0.0125%" height="15" fill="rgb(249,187,43)" fg:x="21253" fg:w="3"/><text x="88.8817%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (14 samples, 0.06%)</title><rect x="88.5900%" y="869" width="0.0584%" height="15" fill="rgb(216,141,28)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.06%)</title><rect x="88.5900%" y="853" width="0.0584%" height="15" fill="rgb(230,154,53)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="863.50"></text></g><g><title>core::fmt::write (14 samples, 0.06%)</title><rect x="88.5900%" y="837" width="0.0584%" height="15" fill="rgb(227,82,4)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.06%)</title><rect x="88.5900%" y="821" width="0.0584%" height="15" fill="rgb(220,107,16)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.06%)</title><rect x="88.5900%" y="805" width="0.0584%" height="15" fill="rgb(207,187,2)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="815.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.06%)</title><rect x="88.5900%" y="789" width="0.0584%" height="15" fill="rgb(210,162,52)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.06%)</title><rect x="88.5900%" y="773" width="0.0584%" height="15" fill="rgb(217,216,49)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.06%)</title><rect x="88.5900%" y="757" width="0.0584%" height="15" fill="rgb(218,146,49)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.06%)</title><rect x="88.5900%" y="741" width="0.0584%" height="15" fill="rgb(216,55,40)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.06%)</title><rect x="88.5900%" y="725" width="0.0584%" height="15" fill="rgb(208,196,21)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.06%)</title><rect x="88.5900%" y="709" width="0.0584%" height="15" fill="rgb(242,117,42)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.06%)</title><rect x="88.5900%" y="693" width="0.0584%" height="15" fill="rgb(210,11,23)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.06%)</title><rect x="88.5900%" y="677" width="0.0584%" height="15" fill="rgb(217,110,2)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.06%)</title><rect x="88.5900%" y="661" width="0.0584%" height="15" fill="rgb(229,77,54)" fg:x="21243" fg:w="14"/><text x="88.8400%" y="671.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.10%)</title><rect x="88.6984%" y="581" width="0.1043%" height="15" fill="rgb(218,53,16)" fg:x="21269" fg:w="25"/><text x="88.9484%" y="591.50"></text></g><g><title>_int_realloc (10 samples, 0.04%)</title><rect x="88.7610%" y="565" width="0.0417%" height="15" fill="rgb(215,38,13)" fg:x="21284" fg:w="10"/><text x="89.0110%" y="575.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="88.7902%" y="549" width="0.0125%" height="15" fill="rgb(235,42,18)" fg:x="21291" fg:w="3"/><text x="89.0402%" y="559.50"></text></g><g><title>__rdl_realloc (4 samples, 0.02%)</title><rect x="88.8027%" y="581" width="0.0167%" height="15" fill="rgb(219,66,54)" fg:x="21294" fg:w="4"/><text x="89.0527%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="88.8027%" y="565" width="0.0167%" height="15" fill="rgb(222,205,4)" fg:x="21294" fg:w="4"/><text x="89.0527%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (31 samples, 0.13%)</title><rect x="88.6984%" y="629" width="0.1293%" height="15" fill="rgb(227,213,46)" fg:x="21269" fg:w="31"/><text x="88.9484%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (31 samples, 0.13%)</title><rect x="88.6984%" y="613" width="0.1293%" height="15" fill="rgb(250,145,42)" fg:x="21269" fg:w="31"/><text x="88.9484%" y="623.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.13%)</title><rect x="88.6984%" y="597" width="0.1293%" height="15" fill="rgb(219,15,2)" fg:x="21269" fg:w="31"/><text x="88.9484%" y="607.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="88.8277%" y="629" width="0.0250%" height="15" fill="rgb(231,181,52)" fg:x="21300" fg:w="6"/><text x="89.0777%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.18%)</title><rect x="88.6901%" y="645" width="0.1752%" height="15" fill="rgb(235,1,42)" fg:x="21267" fg:w="42"/><text x="88.9401%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (49 samples, 0.20%)</title><rect x="88.6693%" y="709" width="0.2043%" height="15" fill="rgb(249,88,27)" fg:x="21262" fg:w="49"/><text x="88.9193%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (49 samples, 0.20%)</title><rect x="88.6693%" y="693" width="0.2043%" height="15" fill="rgb(235,145,16)" fg:x="21262" fg:w="49"/><text x="88.9193%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (49 samples, 0.20%)</title><rect x="88.6693%" y="677" width="0.2043%" height="15" fill="rgb(237,114,19)" fg:x="21262" fg:w="49"/><text x="88.9193%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 0.20%)</title><rect x="88.6693%" y="661" width="0.2043%" height="15" fill="rgb(238,51,50)" fg:x="21262" fg:w="49"/><text x="88.9193%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 samples, 0.25%)</title><rect x="88.6484%" y="805" width="0.2460%" height="15" fill="rgb(205,194,25)" fg:x="21257" fg:w="59"/><text x="88.8984%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (58 samples, 0.24%)</title><rect x="88.6526%" y="789" width="0.2419%" height="15" fill="rgb(215,203,17)" fg:x="21258" fg:w="58"/><text x="88.9026%" y="799.50"></text></g><g><title>alloc::string::String::push_str (58 samples, 0.24%)</title><rect x="88.6526%" y="773" width="0.2419%" height="15" fill="rgb(233,112,49)" fg:x="21258" fg:w="58"/><text x="88.9026%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (58 samples, 0.24%)</title><rect x="88.6526%" y="757" width="0.2419%" height="15" fill="rgb(241,130,26)" fg:x="21258" fg:w="58"/><text x="88.9026%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (58 samples, 0.24%)</title><rect x="88.6526%" y="741" width="0.2419%" height="15" fill="rgb(252,223,19)" fg:x="21258" fg:w="58"/><text x="88.9026%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (58 samples, 0.24%)</title><rect x="88.6526%" y="725" width="0.2419%" height="15" fill="rgb(211,95,25)" fg:x="21258" fg:w="58"/><text x="88.9026%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="88.8736%" y="709" width="0.0209%" height="15" fill="rgb(251,182,27)" fg:x="21311" fg:w="5"/><text x="89.1236%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="88.8778%" y="693" width="0.0167%" height="15" fill="rgb(238,24,4)" fg:x="21312" fg:w="4"/><text x="89.1278%" y="703.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (78 samples, 0.33%)</title><rect x="88.5900%" y="917" width="0.3253%" height="15" fill="rgb(224,220,25)" fg:x="21243" fg:w="78"/><text x="88.8400%" y="927.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (78 samples, 0.33%)</title><rect x="88.5900%" y="901" width="0.3253%" height="15" fill="rgb(239,133,26)" fg:x="21243" fg:w="78"/><text x="88.8400%" y="911.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (78 samples, 0.33%)</title><rect x="88.5900%" y="885" width="0.3253%" height="15" fill="rgb(211,94,48)" fg:x="21243" fg:w="78"/><text x="88.8400%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (64 samples, 0.27%)</title><rect x="88.6484%" y="869" width="0.2669%" height="15" fill="rgb(239,87,6)" fg:x="21257" fg:w="64"/><text x="88.8984%" y="879.50"></text></g><g><title>alloc::fmt::format::format_inner (64 samples, 0.27%)</title><rect x="88.6484%" y="853" width="0.2669%" height="15" fill="rgb(227,62,0)" fg:x="21257" fg:w="64"/><text x="88.8984%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (64 samples, 0.27%)</title><rect x="88.6484%" y="837" width="0.2669%" height="15" fill="rgb(211,226,4)" fg:x="21257" fg:w="64"/><text x="88.8984%" y="847.50"></text></g><g><title>core::fmt::write (64 samples, 0.27%)</title><rect x="88.6484%" y="821" width="0.2669%" height="15" fill="rgb(253,38,52)" fg:x="21257" fg:w="64"/><text x="88.8984%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="88.8944%" y="805" width="0.0209%" height="15" fill="rgb(229,126,40)" fg:x="21316" fg:w="5"/><text x="89.1444%" y="815.50"></text></g><g><title>do_query::main_inner::{{closure}} (17,640 samples, 73.56%)</title><rect x="15.3593%" y="933" width="73.5644%" height="15" fill="rgb(229,165,44)" fg:x="3683" fg:w="17640"/><text x="15.6093%" y="943.50">do_query::main_inner::{{closure}}</text></g><g><title>fastfull_search::batch::posting_batch::PostingBatch::project_with_predicate (8 samples, 0.03%)</title><rect x="88.9236%" y="933" width="0.0334%" height="15" fill="rgb(247,95,47)" fg:x="21323" fg:w="8"/><text x="89.1736%" y="943.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (6 samples, 0.03%)</title><rect x="88.9320%" y="917" width="0.0250%" height="15" fill="rgb(216,140,30)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="927.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (6 samples, 0.03%)</title><rect x="88.9320%" y="901" width="0.0250%" height="15" fill="rgb(246,214,8)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="88.9320%" y="885" width="0.0250%" height="15" fill="rgb(227,224,15)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="88.9320%" y="869" width="0.0250%" height="15" fill="rgb(233,175,4)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="879.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="88.9320%" y="853" width="0.0250%" height="15" fill="rgb(221,66,45)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="837" width="0.0250%" height="15" fill="rgb(221,178,18)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="821" width="0.0250%" height="15" fill="rgb(213,81,29)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="805" width="0.0250%" height="15" fill="rgb(220,89,49)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="789" width="0.0250%" height="15" fill="rgb(227,60,33)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="773" width="0.0250%" height="15" fill="rgb(205,113,12)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="757" width="0.0250%" height="15" fill="rgb(211,32,1)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="741" width="0.0250%" height="15" fill="rgb(246,2,12)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="725" width="0.0250%" height="15" fill="rgb(243,37,27)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="709" width="0.0250%" height="15" fill="rgb(248,211,31)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="693" width="0.0250%" height="15" fill="rgb(242,146,47)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="677" width="0.0250%" height="15" fill="rgb(206,70,20)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="661" width="0.0250%" height="15" fill="rgb(215,10,51)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="645" width="0.0250%" height="15" fill="rgb(243,178,53)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="629" width="0.0250%" height="15" fill="rgb(233,221,20)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="613" width="0.0250%" height="15" fill="rgb(218,95,35)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="597" width="0.0250%" height="15" fill="rgb(229,13,5)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="581" width="0.0250%" height="15" fill="rgb(252,164,30)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="565" width="0.0250%" height="15" fill="rgb(232,68,36)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.03%)</title><rect x="88.9320%" y="549" width="0.0250%" height="15" fill="rgb(219,59,54)" fg:x="21325" fg:w="6"/><text x="89.1820%" y="559.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (4 samples, 0.02%)</title><rect x="88.9612%" y="933" width="0.0167%" height="15" fill="rgb(250,92,33)" fg:x="21332" fg:w="4"/><text x="89.2112%" y="943.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (17 samples, 0.07%)</title><rect x="89.0029%" y="933" width="0.0709%" height="15" fill="rgb(229,162,54)" fg:x="21342" fg:w="17"/><text x="89.2529%" y="943.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512::_{{closure}} (8 samples, 0.03%)</title><rect x="89.0738%" y="933" width="0.0334%" height="15" fill="rgb(244,114,52)" fg:x="21359" fg:w="8"/><text x="89.3238%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.03%)</title><rect x="89.1196%" y="933" width="0.0250%" height="15" fill="rgb(212,211,43)" fg:x="21370" fg:w="6"/><text x="89.3696%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.03%)</title><rect x="89.1447%" y="933" width="0.0250%" height="15" fill="rgb(226,147,8)" fg:x="21376" fg:w="6"/><text x="89.3947%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (28 samples, 0.12%)</title><rect x="89.1697%" y="933" width="0.1168%" height="15" fill="rgb(226,23,13)" fg:x="21382" fg:w="28"/><text x="89.4197%" y="943.50"></text></g><g><title>malloc_consolidate (6 samples, 0.03%)</title><rect x="89.2865%" y="933" width="0.0250%" height="15" fill="rgb(240,63,4)" fg:x="21410" fg:w="6"/><text x="89.5365%" y="943.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (3 samples, 0.01%)</title><rect x="89.3115%" y="933" width="0.0125%" height="15" fill="rgb(221,1,32)" fg:x="21416" fg:w="3"/><text x="89.5615%" y="943.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (5 samples, 0.02%)</title><rect x="89.3282%" y="933" width="0.0209%" height="15" fill="rgb(242,117,10)" fg:x="21420" fg:w="5"/><text x="89.5782%" y="943.50"></text></g><g><title>std::io::stdio::handle_ebadf (3 samples, 0.01%)</title><rect x="89.3532%" y="933" width="0.0125%" height="15" fill="rgb(249,172,44)" fg:x="21426" fg:w="3"/><text x="89.6032%" y="943.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.05%)</title><rect x="89.6826%" y="869" width="0.0459%" height="15" fill="rgb(244,46,45)" fg:x="21505" fg:w="11"/><text x="89.9326%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (23 samples, 0.10%)</title><rect x="89.6618%" y="885" width="0.0959%" height="15" fill="rgb(206,43,17)" fg:x="21500" fg:w="23"/><text x="89.9118%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="89.7369%" y="869" width="0.0209%" height="15" fill="rgb(239,218,39)" fg:x="21518" fg:w="5"/><text x="89.9869%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="89.7369%" y="853" width="0.0209%" height="15" fill="rgb(208,169,54)" fg:x="21518" fg:w="5"/><text x="89.9869%" y="863.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="89.7369%" y="837" width="0.0209%" height="15" fill="rgb(247,25,42)" fg:x="21518" fg:w="5"/><text x="89.9869%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="89.7619%" y="869" width="0.0125%" height="15" fill="rgb(226,23,31)" fg:x="21524" fg:w="3"/><text x="90.0119%" y="879.50"></text></g><g><title>_int_free (14 samples, 0.06%)</title><rect x="89.7827%" y="869" width="0.0584%" height="15" fill="rgb(247,16,28)" fg:x="21529" fg:w="14"/><text x="90.0327%" y="879.50"></text></g><g><title>__GI___libc_free (7 samples, 0.03%)</title><rect x="89.8495%" y="837" width="0.0292%" height="15" fill="rgb(231,147,38)" fg:x="21545" fg:w="7"/><text x="90.0995%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="89.8828%" y="837" width="0.0125%" height="15" fill="rgb(253,81,48)" fg:x="21553" fg:w="3"/><text x="90.1328%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.05%)</title><rect x="89.8453%" y="853" width="0.0542%" height="15" fill="rgb(249,222,43)" fg:x="21544" fg:w="13"/><text x="90.0953%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (18 samples, 0.08%)</title><rect x="89.8411%" y="869" width="0.0751%" height="15" fill="rgb(221,3,27)" fg:x="21543" fg:w="18"/><text x="90.0911%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.02%)</title><rect x="89.9495%" y="821" width="0.0167%" height="15" fill="rgb(228,180,5)" fg:x="21569" fg:w="4"/><text x="90.1995%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.22%)</title><rect x="89.7577%" y="885" width="0.2210%" height="15" fill="rgb(227,131,42)" fg:x="21523" fg:w="53"/><text x="90.0077%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (15 samples, 0.06%)</title><rect x="89.9162%" y="869" width="0.0626%" height="15" fill="rgb(212,3,39)" fg:x="21561" fg:w="15"/><text x="90.1662%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.05%)</title><rect x="89.9245%" y="853" width="0.0542%" height="15" fill="rgb(226,45,5)" fg:x="21563" fg:w="13"/><text x="90.1745%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (12 samples, 0.05%)</title><rect x="89.9287%" y="837" width="0.0500%" height="15" fill="rgb(215,167,45)" fg:x="21564" fg:w="12"/><text x="90.1787%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (3 samples, 0.01%)</title><rect x="89.9662%" y="821" width="0.0125%" height="15" fill="rgb(250,218,53)" fg:x="21573" fg:w="3"/><text x="90.2162%" y="831.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.07%)</title><rect x="90.0079%" y="869" width="0.0667%" height="15" fill="rgb(207,140,0)" fg:x="21583" fg:w="16"/><text x="90.2579%" y="879.50"></text></g><g><title>[do_query] (3 samples, 0.01%)</title><rect x="90.0746%" y="869" width="0.0125%" height="15" fill="rgb(238,133,51)" fg:x="21599" fg:w="3"/><text x="90.3246%" y="879.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (3 samples, 0.01%)</title><rect x="90.0746%" y="853" width="0.0125%" height="15" fill="rgb(218,203,53)" fg:x="21599" fg:w="3"/><text x="90.3246%" y="863.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="90.0872%" y="869" width="0.0209%" height="15" fill="rgb(226,184,25)" fg:x="21602" fg:w="5"/><text x="90.3372%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="90.1080%" y="869" width="0.0125%" height="15" fill="rgb(231,121,21)" fg:x="21607" fg:w="3"/><text x="90.3580%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="853" width="0.0125%" height="15" fill="rgb(251,14,34)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="837" width="0.0125%" height="15" fill="rgb(249,193,11)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="821" width="0.0125%" height="15" fill="rgb(220,172,37)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="805" width="0.0125%" height="15" fill="rgb(231,229,43)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="789" width="0.0125%" height="15" fill="rgb(250,161,5)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="773" width="0.0125%" height="15" fill="rgb(218,225,18)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="757" width="0.0125%" height="15" fill="rgb(245,45,42)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="741" width="0.0125%" height="15" fill="rgb(211,115,1)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="725" width="0.0125%" height="15" fill="rgb(248,133,52)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="709" width="0.0125%" height="15" fill="rgb(238,100,21)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="90.2790%" y="693" width="0.0125%" height="15" fill="rgb(247,144,11)" fg:x="21648" fg:w="3"/><text x="90.5290%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (28 samples, 0.12%)</title><rect x="90.2915%" y="853" width="0.1168%" height="15" fill="rgb(206,164,16)" fg:x="21651" fg:w="28"/><text x="90.5415%" y="863.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (78 samples, 0.33%)</title><rect x="90.1330%" y="869" width="0.3253%" height="15" fill="rgb(222,34,3)" fg:x="21613" fg:w="78"/><text x="90.3830%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.05%)</title><rect x="90.4124%" y="853" width="0.0459%" height="15" fill="rgb(248,82,4)" fg:x="21680" fg:w="11"/><text x="90.6624%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.03%)</title><rect x="90.4291%" y="837" width="0.0292%" height="15" fill="rgb(228,81,46)" fg:x="21684" fg:w="7"/><text x="90.6791%" y="847.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="90.4667%" y="677" width="0.0167%" height="15" fill="rgb(227,67,47)" fg:x="21693" fg:w="4"/><text x="90.7167%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="90.4625%" y="773" width="0.0292%" height="15" fill="rgb(215,93,53)" fg:x="21692" fg:w="7"/><text x="90.7125%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.03%)</title><rect x="90.4625%" y="757" width="0.0292%" height="15" fill="rgb(248,194,39)" fg:x="21692" fg:w="7"/><text x="90.7125%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.03%)</title><rect x="90.4625%" y="741" width="0.0292%" height="15" fill="rgb(215,5,19)" fg:x="21692" fg:w="7"/><text x="90.7125%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="90.4667%" y="725" width="0.0250%" height="15" fill="rgb(226,215,51)" fg:x="21693" fg:w="6"/><text x="90.7167%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="90.4667%" y="709" width="0.0250%" height="15" fill="rgb(225,56,26)" fg:x="21693" fg:w="6"/><text x="90.7167%" y="719.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="90.4667%" y="693" width="0.0250%" height="15" fill="rgb(222,75,29)" fg:x="21693" fg:w="6"/><text x="90.7167%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="90.4625%" y="853" width="0.0334%" height="15" fill="rgb(236,139,6)" fg:x="21692" fg:w="8"/><text x="90.7125%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="90.4625%" y="837" width="0.0334%" height="15" fill="rgb(223,137,36)" fg:x="21692" fg:w="8"/><text x="90.7125%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.03%)</title><rect x="90.4625%" y="821" width="0.0334%" height="15" fill="rgb(226,99,2)" fg:x="21692" fg:w="8"/><text x="90.7125%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.03%)</title><rect x="90.4625%" y="805" width="0.0334%" height="15" fill="rgb(206,133,23)" fg:x="21692" fg:w="8"/><text x="90.7125%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.03%)</title><rect x="90.4625%" y="789" width="0.0334%" height="15" fill="rgb(243,173,15)" fg:x="21692" fg:w="8"/><text x="90.7125%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="90.5292%" y="837" width="0.0125%" height="15" fill="rgb(228,69,28)" fg:x="21708" fg:w="3"/><text x="90.7792%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (20 samples, 0.08%)</title><rect x="90.4959%" y="853" width="0.0834%" height="15" fill="rgb(212,51,22)" fg:x="21700" fg:w="20"/><text x="90.7459%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.04%)</title><rect x="90.5417%" y="837" width="0.0375%" height="15" fill="rgb(227,113,0)" fg:x="21711" fg:w="9"/><text x="90.7917%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="90.5542%" y="821" width="0.0250%" height="15" fill="rgb(252,84,27)" fg:x="21714" fg:w="6"/><text x="90.8042%" y="831.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="90.5959%" y="853" width="0.0459%" height="15" fill="rgb(223,145,39)" fg:x="21724" fg:w="11"/><text x="90.8459%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="90.6585%" y="837" width="0.0125%" height="15" fill="rgb(239,219,30)" fg:x="21739" fg:w="3"/><text x="90.9085%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="90.6710%" y="821" width="0.0167%" height="15" fill="rgb(224,196,39)" fg:x="21742" fg:w="4"/><text x="90.9210%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream&gt; (14 samples, 0.06%)</title><rect x="90.6418%" y="853" width="0.0584%" height="15" fill="rgb(205,35,43)" fg:x="21735" fg:w="14"/><text x="90.8918%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream&gt; (7 samples, 0.03%)</title><rect x="90.6710%" y="837" width="0.0292%" height="15" fill="rgb(228,201,21)" fg:x="21742" fg:w="7"/><text x="90.9210%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream&gt; (3 samples, 0.01%)</title><rect x="90.6877%" y="821" width="0.0125%" height="15" fill="rgb(237,118,16)" fg:x="21746" fg:w="3"/><text x="90.9377%" y="831.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="90.7127%" y="821" width="0.0250%" height="15" fill="rgb(241,17,19)" fg:x="21752" fg:w="6"/><text x="90.9627%" y="831.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaser as tantivy::tokenizer::tokenizer::TokenFilter&gt;::transform (9 samples, 0.04%)</title><rect x="90.7044%" y="837" width="0.0375%" height="15" fill="rgb(214,10,25)" fg:x="21750" fg:w="9"/><text x="90.9544%" y="847.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilter as tantivy::tokenizer::tokenizer::TokenFilter&gt;::transform (5 samples, 0.02%)</title><rect x="90.7419%" y="837" width="0.0209%" height="15" fill="rgb(238,37,29)" fg:x="21759" fg:w="5"/><text x="90.9919%" y="847.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.06%)</title><rect x="90.7711%" y="821" width="0.0584%" height="15" fill="rgb(253,83,25)" fg:x="21766" fg:w="14"/><text x="91.0211%" y="831.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TextAnalyzer::token_stream (32 samples, 0.13%)</title><rect x="90.7002%" y="853" width="0.1335%" height="15" fill="rgb(234,192,12)" fg:x="21749" fg:w="32"/><text x="90.9502%" y="863.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (17 samples, 0.07%)</title><rect x="90.7628%" y="837" width="0.0709%" height="15" fill="rgb(241,216,45)" fg:x="21764" fg:w="17"/><text x="91.0128%" y="847.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (19 samples, 0.08%)</title><rect x="90.8795%" y="821" width="0.0792%" height="15" fill="rgb(242,22,33)" fg:x="21792" fg:w="19"/><text x="91.1295%" y="831.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (19 samples, 0.08%)</title><rect x="90.8795%" y="805" width="0.0792%" height="15" fill="rgb(231,105,49)" fg:x="21792" fg:w="19"/><text x="91.1295%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.03%)</title><rect x="90.9254%" y="789" width="0.0334%" height="15" fill="rgb(218,204,15)" fg:x="21803" fg:w="8"/><text x="91.1754%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (238 samples, 0.99%)</title><rect x="89.9787%" y="885" width="0.9925%" height="15" fill="rgb(235,138,41)" fg:x="21576" fg:w="238"/><text x="90.2287%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (123 samples, 0.51%)</title><rect x="90.4583%" y="869" width="0.5129%" height="15" fill="rgb(246,0,9)" fg:x="21691" fg:w="123"/><text x="90.7083%" y="879.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (33 samples, 0.14%)</title><rect x="90.8336%" y="853" width="0.1376%" height="15" fill="rgb(210,74,4)" fg:x="21781" fg:w="33"/><text x="91.0836%" y="863.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (32 samples, 0.13%)</title><rect x="90.8378%" y="837" width="0.1335%" height="15" fill="rgb(250,60,41)" fg:x="21782" fg:w="32"/><text x="91.0878%" y="847.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::token_mut (3 samples, 0.01%)</title><rect x="90.9588%" y="821" width="0.0125%" height="15" fill="rgb(220,115,12)" fg:x="21811" fg:w="3"/><text x="91.2088%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="91.0380%" y="869" width="0.0125%" height="15" fill="rgb(237,100,13)" fg:x="21830" fg:w="3"/><text x="91.2880%" y="879.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="91.0714%" y="869" width="0.0125%" height="15" fill="rgb(213,55,26)" fg:x="21838" fg:w="3"/><text x="91.3214%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="91.0714%" y="853" width="0.0125%" height="15" fill="rgb(216,17,4)" fg:x="21838" fg:w="3"/><text x="91.3214%" y="863.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (28 samples, 0.12%)</title><rect x="90.9754%" y="885" width="0.1168%" height="15" fill="rgb(220,153,47)" fg:x="21815" fg:w="28"/><text x="91.2254%" y="895.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan (3 samples, 0.01%)</title><rect x="91.0922%" y="885" width="0.0125%" height="15" fill="rgb(215,131,9)" fg:x="21843" fg:w="3"/><text x="91.3422%" y="895.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="91.0922%" y="869" width="0.0125%" height="15" fill="rgb(233,46,42)" fg:x="21843" fg:w="3"/><text x="91.3422%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="91.1464%" y="837" width="0.0125%" height="15" fill="rgb(226,86,7)" fg:x="21856" fg:w="3"/><text x="91.3964%" y="847.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (16 samples, 0.07%)</title><rect x="91.1047%" y="885" width="0.0667%" height="15" fill="rgb(239,226,21)" fg:x="21846" fg:w="16"/><text x="91.3547%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.03%)</title><rect x="91.1464%" y="869" width="0.0250%" height="15" fill="rgb(244,137,22)" fg:x="21856" fg:w="6"/><text x="91.3964%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="91.1464%" y="853" width="0.0250%" height="15" fill="rgb(211,139,35)" fg:x="21856" fg:w="6"/><text x="91.3964%" y="863.50"></text></g><g><title>core::str::converts::from_utf8 (5 samples, 0.02%)</title><rect x="91.2131%" y="821" width="0.0209%" height="15" fill="rgb(214,62,50)" fg:x="21872" fg:w="5"/><text x="91.4631%" y="831.50"></text></g><g><title>core::str::validations::run_utf8_validation (4 samples, 0.02%)</title><rect x="91.2173%" y="805" width="0.0167%" height="15" fill="rgb(212,113,44)" fg:x="21873" fg:w="4"/><text x="91.4673%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (440 samples, 1.83%)</title><rect x="91.2590%" y="661" width="1.8349%" height="15" fill="rgb(226,150,43)" fg:x="21883" fg:w="440"/><text x="91.5090%" y="671.50">[..</text></g><g><title>[[kernel.kallsyms]] (433 samples, 1.81%)</title><rect x="91.2882%" y="645" width="1.8057%" height="15" fill="rgb(250,71,37)" fg:x="21890" fg:w="433"/><text x="91.5382%" y="655.50">[..</text></g><g><title>[[kernel.kallsyms]] (430 samples, 1.79%)</title><rect x="91.3007%" y="629" width="1.7932%" height="15" fill="rgb(219,76,19)" fg:x="21893" fg:w="430"/><text x="91.5507%" y="639.50">[..</text></g><g><title>[[kernel.kallsyms]] (429 samples, 1.79%)</title><rect x="91.3049%" y="613" width="1.7891%" height="15" fill="rgb(250,39,11)" fg:x="21894" fg:w="429"/><text x="91.5549%" y="623.50">[..</text></g><g><title>[[kernel.kallsyms]] (427 samples, 1.78%)</title><rect x="91.3132%" y="597" width="1.7807%" height="15" fill="rgb(230,64,31)" fg:x="21896" fg:w="427"/><text x="91.5632%" y="607.50">[..</text></g><g><title>[[kernel.kallsyms]] (415 samples, 1.73%)</title><rect x="91.3633%" y="581" width="1.7307%" height="15" fill="rgb(208,222,23)" fg:x="21908" fg:w="415"/><text x="91.6133%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (402 samples, 1.68%)</title><rect x="91.4175%" y="565" width="1.6765%" height="15" fill="rgb(227,125,18)" fg:x="21921" fg:w="402"/><text x="91.6675%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (365 samples, 1.52%)</title><rect x="91.5718%" y="549" width="1.5222%" height="15" fill="rgb(234,210,9)" fg:x="21958" fg:w="365"/><text x="91.8218%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (351 samples, 1.46%)</title><rect x="91.6302%" y="533" width="1.4638%" height="15" fill="rgb(217,127,24)" fg:x="21972" fg:w="351"/><text x="91.8802%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (291 samples, 1.21%)</title><rect x="91.8804%" y="517" width="1.2136%" height="15" fill="rgb(239,141,48)" fg:x="22032" fg:w="291"/><text x="92.1304%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (252 samples, 1.05%)</title><rect x="92.0430%" y="501" width="1.0509%" height="15" fill="rgb(227,109,8)" fg:x="22071" fg:w="252"/><text x="92.2930%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (204 samples, 0.85%)</title><rect x="92.2432%" y="485" width="0.8507%" height="15" fill="rgb(235,184,23)" fg:x="22119" fg:w="204"/><text x="92.4932%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (176 samples, 0.73%)</title><rect x="92.3600%" y="469" width="0.7340%" height="15" fill="rgb(227,226,48)" fg:x="22147" fg:w="176"/><text x="92.6100%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (138 samples, 0.58%)</title><rect x="92.5185%" y="453" width="0.5755%" height="15" fill="rgb(206,150,11)" fg:x="22185" fg:w="138"/><text x="92.7685%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.41%)</title><rect x="92.6853%" y="437" width="0.4087%" height="15" fill="rgb(254,2,33)" fg:x="22225" fg:w="98"/><text x="92.9353%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.11%)</title><rect x="92.9855%" y="421" width="0.1084%" height="15" fill="rgb(243,160,20)" fg:x="22297" fg:w="26"/><text x="93.2355%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.05%)</title><rect x="93.0439%" y="405" width="0.0500%" height="15" fill="rgb(218,208,30)" fg:x="22311" fg:w="12"/><text x="93.2939%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.05%)</title><rect x="93.0481%" y="389" width="0.0459%" height="15" fill="rgb(224,120,49)" fg:x="22312" fg:w="11"/><text x="93.2981%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.03%)</title><rect x="93.0648%" y="373" width="0.0292%" height="15" fill="rgb(246,12,2)" fg:x="22316" fg:w="7"/><text x="93.3148%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="93.0814%" y="357" width="0.0125%" height="15" fill="rgb(236,117,3)" fg:x="22320" fg:w="3"/><text x="93.3314%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="93.0814%" y="341" width="0.0125%" height="15" fill="rgb(216,128,52)" fg:x="22320" fg:w="3"/><text x="93.3314%" y="351.50"></text></g><g><title>__libc_read (442 samples, 1.84%)</title><rect x="91.2548%" y="693" width="1.8433%" height="15" fill="rgb(246,145,19)" fg:x="21882" fg:w="442"/><text x="91.5048%" y="703.50">_..</text></g><g><title>__libc_read (442 samples, 1.84%)</title><rect x="91.2548%" y="677" width="1.8433%" height="15" fill="rgb(222,11,46)" fg:x="21882" fg:w="442"/><text x="91.5048%" y="687.50">_..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (451 samples, 1.88%)</title><rect x="91.2465%" y="789" width="1.8808%" height="15" fill="rgb(245,82,36)" fg:x="21880" fg:w="451"/><text x="91.4965%" y="799.50">&lt;..</text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (451 samples, 1.88%)</title><rect x="91.2465%" y="773" width="1.8808%" height="15" fill="rgb(250,73,51)" fg:x="21880" fg:w="451"/><text x="91.4965%" y="783.50">s..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (449 samples, 1.87%)</title><rect x="91.2548%" y="757" width="1.8725%" height="15" fill="rgb(221,189,23)" fg:x="21882" fg:w="449"/><text x="91.5048%" y="767.50">s..</text></g><g><title>&lt;std::io::stdio::StdinRaw as std::io::Read&gt;::read_buf (449 samples, 1.87%)</title><rect x="91.2548%" y="741" width="1.8725%" height="15" fill="rgb(210,33,7)" fg:x="21882" fg:w="449"/><text x="91.5048%" y="751.50">&lt;..</text></g><g><title>&lt;std::sys::unix::stdio::Stdin as std::io::Read&gt;::read_buf (449 samples, 1.87%)</title><rect x="91.2548%" y="725" width="1.8725%" height="15" fill="rgb(210,107,22)" fg:x="21882" fg:w="449"/><text x="91.5048%" y="735.50">&lt;..</text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (449 samples, 1.87%)</title><rect x="91.2548%" y="709" width="1.8725%" height="15" fill="rgb(222,116,37)" fg:x="21882" fg:w="449"/><text x="91.5048%" y="719.50">s..</text></g><g><title>std::sys::unix::cvt (7 samples, 0.03%)</title><rect x="93.0981%" y="693" width="0.0292%" height="15" fill="rgb(254,17,48)" fg:x="22324" fg:w="7"/><text x="93.3481%" y="703.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (7 samples, 0.03%)</title><rect x="93.0981%" y="677" width="0.0292%" height="15" fill="rgb(224,36,32)" fg:x="22324" fg:w="7"/><text x="93.3481%" y="687.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.03%)</title><rect x="93.1357%" y="661" width="0.0334%" height="15" fill="rgb(232,90,46)" fg:x="22333" fg:w="8"/><text x="93.3857%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.05%)</title><rect x="93.1273%" y="741" width="0.0542%" height="15" fill="rgb(241,66,40)" fg:x="22331" fg:w="13"/><text x="93.3773%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.05%)</title><rect x="93.1273%" y="725" width="0.0542%" height="15" fill="rgb(249,184,29)" fg:x="22331" fg:w="13"/><text x="93.3773%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.05%)</title><rect x="93.1273%" y="709" width="0.0542%" height="15" fill="rgb(231,181,1)" fg:x="22331" fg:w="13"/><text x="93.3773%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.05%)</title><rect x="93.1273%" y="693" width="0.0542%" height="15" fill="rgb(224,94,2)" fg:x="22331" fg:w="13"/><text x="93.3773%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.05%)</title><rect x="93.1357%" y="677" width="0.0459%" height="15" fill="rgb(229,170,15)" fg:x="22333" fg:w="11"/><text x="93.3857%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.07%)</title><rect x="93.1273%" y="789" width="0.0709%" height="15" fill="rgb(240,127,35)" fg:x="22331" fg:w="17"/><text x="93.3773%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.07%)</title><rect x="93.1273%" y="773" width="0.0709%" height="15" fill="rgb(248,196,34)" fg:x="22331" fg:w="17"/><text x="93.3773%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.07%)</title><rect x="93.1273%" y="757" width="0.0709%" height="15" fill="rgb(236,137,7)" fg:x="22331" fg:w="17"/><text x="93.3773%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="93.1815%" y="741" width="0.0167%" height="15" fill="rgb(235,127,16)" fg:x="22344" fg:w="4"/><text x="93.4315%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="93.1815%" y="725" width="0.0167%" height="15" fill="rgb(250,192,54)" fg:x="22344" fg:w="4"/><text x="93.4315%" y="735.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (488 samples, 2.04%)</title><rect x="91.1714%" y="885" width="2.0351%" height="15" fill="rgb(218,98,20)" fg:x="21862" fg:w="488"/><text x="91.4214%" y="895.50">&lt;..</text></g><g><title>&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (480 samples, 2.00%)</title><rect x="91.2048%" y="869" width="2.0018%" height="15" fill="rgb(230,176,47)" fg:x="21870" fg:w="480"/><text x="91.4548%" y="879.50">&lt;..</text></g><g><title>std::io::BufRead::read_line (480 samples, 2.00%)</title><rect x="91.2048%" y="853" width="2.0018%" height="15" fill="rgb(244,2,33)" fg:x="21870" fg:w="480"/><text x="91.4548%" y="863.50">s..</text></g><g><title>std::io::append_to_string (480 samples, 2.00%)</title><rect x="91.2048%" y="837" width="2.0018%" height="15" fill="rgb(231,100,17)" fg:x="21870" fg:w="480"/><text x="91.4548%" y="847.50">s..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (473 samples, 1.97%)</title><rect x="91.2340%" y="821" width="1.9726%" height="15" fill="rgb(245,23,12)" fg:x="21877" fg:w="473"/><text x="91.4840%" y="831.50">s..</text></g><g><title>std::io::read_until (473 samples, 1.97%)</title><rect x="91.2340%" y="805" width="1.9726%" height="15" fill="rgb(249,55,22)" fg:x="21877" fg:w="473"/><text x="91.4840%" y="815.50">s..</text></g><g><title>__GI___libc_free (24 samples, 0.10%)</title><rect x="93.2066%" y="885" width="0.1001%" height="15" fill="rgb(207,134,9)" fg:x="22350" fg:w="24"/><text x="93.4566%" y="895.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.04%)</title><rect x="93.3066%" y="885" width="0.0417%" height="15" fill="rgb(218,134,0)" fg:x="22374" fg:w="10"/><text x="93.5566%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (77 samples, 0.32%)</title><rect x="93.3483%" y="885" width="0.3211%" height="15" fill="rgb(213,212,33)" fg:x="22384" fg:w="77"/><text x="93.5983%" y="895.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.02%)</title><rect x="93.6736%" y="885" width="0.0209%" height="15" fill="rgb(252,106,18)" fg:x="22462" fg:w="5"/><text x="93.9236%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.02%)</title><rect x="93.6736%" y="869" width="0.0209%" height="15" fill="rgb(208,126,42)" fg:x="22462" fg:w="5"/><text x="93.9236%" y="879.50"></text></g><g><title>_int_free (29 samples, 0.12%)</title><rect x="93.7070%" y="885" width="0.1209%" height="15" fill="rgb(246,175,29)" fg:x="22470" fg:w="29"/><text x="93.9570%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.09%)</title><rect x="93.8571%" y="789" width="0.0876%" height="15" fill="rgb(215,13,50)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.09%)</title><rect x="93.8571%" y="773" width="0.0876%" height="15" fill="rgb(216,172,15)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.09%)</title><rect x="93.8571%" y="757" width="0.0876%" height="15" fill="rgb(212,103,13)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.09%)</title><rect x="93.8571%" y="741" width="0.0876%" height="15" fill="rgb(231,171,36)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.09%)</title><rect x="93.8571%" y="725" width="0.0876%" height="15" fill="rgb(250,123,20)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="735.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.09%)</title><rect x="93.8571%" y="709" width="0.0876%" height="15" fill="rgb(212,53,50)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="719.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.09%)</title><rect x="93.8571%" y="693" width="0.0876%" height="15" fill="rgb(243,54,12)" fg:x="22506" fg:w="21"/><text x="94.1071%" y="703.50"></text></g><g><title>_int_malloc (8 samples, 0.03%)</title><rect x="93.9113%" y="677" width="0.0334%" height="15" fill="rgb(234,101,34)" fg:x="22519" fg:w="8"/><text x="94.1613%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.09%)</title><rect x="93.8571%" y="869" width="0.0917%" height="15" fill="rgb(254,67,22)" fg:x="22506" fg:w="22"/><text x="94.1071%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.09%)</title><rect x="93.8571%" y="853" width="0.0917%" height="15" fill="rgb(250,35,47)" fg:x="22506" fg:w="22"/><text x="94.1071%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.09%)</title><rect x="93.8571%" y="837" width="0.0917%" height="15" fill="rgb(226,126,38)" fg:x="22506" fg:w="22"/><text x="94.1071%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.09%)</title><rect x="93.8571%" y="821" width="0.0917%" height="15" fill="rgb(216,138,53)" fg:x="22506" fg:w="22"/><text x="94.1071%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.09%)</title><rect x="93.8571%" y="805" width="0.0917%" height="15" fill="rgb(246,199,43)" fg:x="22506" fg:w="22"/><text x="94.1071%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (31 samples, 0.13%)</title><rect x="93.8279%" y="885" width="0.1293%" height="15" fill="rgb(232,125,11)" fg:x="22499" fg:w="31"/><text x="94.0779%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.04%)</title><rect x="93.9572%" y="885" width="0.0375%" height="15" fill="rgb(218,219,45)" fg:x="22530" fg:w="9"/><text x="94.2072%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_common::dfschema::DFField&gt; (5 samples, 0.02%)</title><rect x="93.9739%" y="869" width="0.0209%" height="15" fill="rgb(216,102,54)" fg:x="22534" fg:w="5"/><text x="94.2239%" y="879.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="93.9781%" y="853" width="0.0167%" height="15" fill="rgb(250,228,7)" fg:x="22535" fg:w="4"/><text x="94.2281%" y="863.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="94.0782%" y="869" width="0.0250%" height="15" fill="rgb(226,125,25)" fg:x="22559" fg:w="6"/><text x="94.3282%" y="879.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="94.1073%" y="853" width="0.0125%" height="15" fill="rgb(224,165,27)" fg:x="22566" fg:w="3"/><text x="94.3573%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionState&gt; (40 samples, 0.17%)</title><rect x="93.9947%" y="885" width="0.1668%" height="15" fill="rgb(233,86,3)" fg:x="22539" fg:w="40"/><text x="94.2447%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (14 samples, 0.06%)</title><rect x="94.1032%" y="869" width="0.0584%" height="15" fill="rgb(228,116,20)" fg:x="22565" fg:w="14"/><text x="94.3532%" y="879.50"></text></g><g><title>_int_free (10 samples, 0.04%)</title><rect x="94.1199%" y="853" width="0.0417%" height="15" fill="rgb(209,192,17)" fg:x="22569" fg:w="10"/><text x="94.3699%" y="863.50"></text></g><g><title>_int_free (11 samples, 0.05%)</title><rect x="94.2116%" y="869" width="0.0459%" height="15" fill="rgb(224,88,34)" fg:x="22591" fg:w="11"/><text x="94.4616%" y="879.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="94.2700%" y="853" width="0.0167%" height="15" fill="rgb(233,38,6)" fg:x="22605" fg:w="4"/><text x="94.5200%" y="863.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="94.2867%" y="853" width="0.0209%" height="15" fill="rgb(212,59,30)" fg:x="22609" fg:w="5"/><text x="94.5367%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="94.3492%" y="837" width="0.0125%" height="15" fill="rgb(213,80,3)" fg:x="22624" fg:w="3"/><text x="94.5992%" y="847.50"></text></g><g><title>__GI___libc_free (7 samples, 0.03%)</title><rect x="94.3868%" y="805" width="0.0292%" height="15" fill="rgb(251,178,7)" fg:x="22633" fg:w="7"/><text x="94.6368%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (48 samples, 0.20%)</title><rect x="94.3075%" y="853" width="0.2002%" height="15" fill="rgb(213,154,26)" fg:x="22614" fg:w="48"/><text x="94.5575%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (35 samples, 0.15%)</title><rect x="94.3617%" y="837" width="0.1460%" height="15" fill="rgb(238,165,49)" fg:x="22627" fg:w="35"/><text x="94.6117%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_common::dfschema::DFField&gt; (31 samples, 0.13%)</title><rect x="94.3784%" y="821" width="0.1293%" height="15" fill="rgb(248,91,46)" fg:x="22631" fg:w="31"/><text x="94.6284%" y="831.50"></text></g><g><title>_int_free (21 samples, 0.09%)</title><rect x="94.4201%" y="805" width="0.0876%" height="15" fill="rgb(244,21,52)" fg:x="22641" fg:w="21"/><text x="94.6701%" y="815.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="94.5119%" y="837" width="0.0125%" height="15" fill="rgb(247,122,20)" fg:x="22663" fg:w="3"/><text x="94.7619%" y="847.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="94.5369%" y="837" width="0.0500%" height="15" fill="rgb(218,27,9)" fg:x="22669" fg:w="12"/><text x="94.7869%" y="847.50"></text></g><g><title>_int_free (5 samples, 0.02%)</title><rect x="94.6078%" y="821" width="0.0209%" height="15" fill="rgb(246,7,6)" fg:x="22686" fg:w="5"/><text x="94.8578%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (32 samples, 0.13%)</title><rect x="94.5077%" y="853" width="0.1335%" height="15" fill="rgb(227,135,54)" fg:x="22662" fg:w="32"/><text x="94.7577%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (13 samples, 0.05%)</title><rect x="94.5869%" y="837" width="0.0542%" height="15" fill="rgb(247,14,11)" fg:x="22681" fg:w="13"/><text x="94.8369%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (3 samples, 0.01%)</title><rect x="94.6286%" y="821" width="0.0125%" height="15" fill="rgb(206,149,34)" fg:x="22691" fg:w="3"/><text x="94.8786%" y="831.50"></text></g><g><title>_int_free (15 samples, 0.06%)</title><rect x="94.6495%" y="837" width="0.0626%" height="15" fill="rgb(227,228,4)" fg:x="22696" fg:w="15"/><text x="94.8995%" y="847.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="94.7162%" y="821" width="0.0125%" height="15" fill="rgb(238,218,28)" fg:x="22712" fg:w="3"/><text x="94.9662%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="94.7162%" y="805" width="0.0125%" height="15" fill="rgb(252,86,40)" fg:x="22712" fg:w="3"/><text x="94.9662%" y="815.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="94.7287%" y="821" width="0.0500%" height="15" fill="rgb(251,225,11)" fg:x="22715" fg:w="12"/><text x="94.9787%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (128 samples, 0.53%)</title><rect x="94.2575%" y="869" width="0.5338%" height="15" fill="rgb(206,46,49)" fg:x="22602" fg:w="128"/><text x="94.5075%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (36 samples, 0.15%)</title><rect x="94.6411%" y="853" width="0.1501%" height="15" fill="rgb(245,128,24)" fg:x="22694" fg:w="36"/><text x="94.8911%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;(datafusion_expr::logical_plan::plan::Predicate,f64,usize,usize)&gt; (19 samples, 0.08%)</title><rect x="94.7120%" y="837" width="0.0792%" height="15" fill="rgb(219,177,34)" fg:x="22711" fg:w="19"/><text x="94.9620%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (3 samples, 0.01%)</title><rect x="94.7788%" y="821" width="0.0125%" height="15" fill="rgb(218,60,48)" fg:x="22727" fg:w="3"/><text x="95.0288%" y="831.50"></text></g><g><title>_int_free (19 samples, 0.08%)</title><rect x="94.8121%" y="853" width="0.0792%" height="15" fill="rgb(221,11,5)" fg:x="22735" fg:w="19"/><text x="95.0621%" y="863.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="94.9206%" y="837" width="0.0125%" height="15" fill="rgb(220,148,13)" fg:x="22761" fg:w="3"/><text x="95.1706%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="94.9456%" y="837" width="0.0167%" height="15" fill="rgb(210,16,3)" fg:x="22767" fg:w="4"/><text x="95.1956%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (21 samples, 0.09%)</title><rect x="94.8914%" y="853" width="0.0876%" height="15" fill="rgb(236,80,2)" fg:x="22754" fg:w="21"/><text x="95.1414%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::signature::Signature&gt; (4 samples, 0.02%)</title><rect x="94.9623%" y="837" width="0.0167%" height="15" fill="rgb(239,129,19)" fg:x="22771" fg:w="4"/><text x="95.2123%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (208 samples, 0.87%)</title><rect x="94.1616%" y="885" width="0.8674%" height="15" fill="rgb(220,106,35)" fg:x="22579" fg:w="208"/><text x="94.4116%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (57 samples, 0.24%)</title><rect x="94.7913%" y="869" width="0.2377%" height="15" fill="rgb(252,139,45)" fg:x="22730" fg:w="57"/><text x="95.0413%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (12 samples, 0.05%)</title><rect x="94.9789%" y="853" width="0.0500%" height="15" fill="rgb(229,8,36)" fg:x="22775" fg:w="12"/><text x="95.2289%" y="863.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="95.0040%" y="837" width="0.0250%" height="15" fill="rgb(230,126,33)" fg:x="22781" fg:w="6"/><text x="95.2540%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;arrow_array::record_batch::RecordBatch&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="95.0290%" y="885" width="0.0292%" height="15" fill="rgb(239,140,21)" fg:x="22787" fg:w="7"/><text x="95.2790%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.01%)</title><rect x="95.0665%" y="853" width="0.0125%" height="15" fill="rgb(254,104,9)" fg:x="22796" fg:w="3"/><text x="95.3165%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.01%)</title><rect x="95.0665%" y="837" width="0.0125%" height="15" fill="rgb(239,52,14)" fg:x="22796" fg:w="3"/><text x="95.3165%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="95.0665%" y="821" width="0.0125%" height="15" fill="rgb(208,227,44)" fg:x="22796" fg:w="3"/><text x="95.3165%" y="831.50"></text></g><g><title>core::str::pattern::StrSearcher::new (8 samples, 0.03%)</title><rect x="95.0582%" y="885" width="0.0334%" height="15" fill="rgb(246,18,19)" fg:x="22794" fg:w="8"/><text x="95.3082%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.03%)</title><rect x="95.0582%" y="869" width="0.0334%" height="15" fill="rgb(235,228,25)" fg:x="22794" fg:w="8"/><text x="95.3082%" y="879.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (3 samples, 0.01%)</title><rect x="95.0915%" y="885" width="0.0125%" height="15" fill="rgb(240,156,20)" fg:x="22802" fg:w="3"/><text x="95.3415%" y="895.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="95.1416%" y="869" width="0.0250%" height="15" fill="rgb(224,8,20)" fg:x="22814" fg:w="6"/><text x="95.3916%" y="879.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="95.2041%" y="837" width="0.0167%" height="15" fill="rgb(214,12,52)" fg:x="22829" fg:w="4"/><text x="95.4541%" y="847.50"></text></g><g><title>_int_free (17 samples, 0.07%)</title><rect x="95.2208%" y="837" width="0.0709%" height="15" fill="rgb(211,220,47)" fg:x="22833" fg:w="17"/><text x="95.4708%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (38 samples, 0.16%)</title><rect x="95.1749%" y="853" width="0.1585%" height="15" fill="rgb(250,173,5)" fg:x="22822" fg:w="38"/><text x="95.4249%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.04%)</title><rect x="95.2917%" y="837" width="0.0417%" height="15" fill="rgb(250,125,52)" fg:x="22850" fg:w="10"/><text x="95.5417%" y="847.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="95.3668%" y="837" width="0.0167%" height="15" fill="rgb(209,133,18)" fg:x="22868" fg:w="4"/><text x="95.6168%" y="847.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="95.3876%" y="837" width="0.0250%" height="15" fill="rgb(216,173,22)" fg:x="22873" fg:w="6"/><text x="95.6376%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="95.4127%" y="821" width="0.0125%" height="15" fill="rgb(205,3,22)" fg:x="22879" fg:w="3"/><text x="95.6627%" y="831.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="95.4669%" y="805" width="0.0125%" height="15" fill="rgb(248,22,20)" fg:x="22892" fg:w="3"/><text x="95.7169%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="95.4835%" y="805" width="0.0250%" height="15" fill="rgb(233,6,29)" fg:x="22896" fg:w="6"/><text x="95.7335%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.18%)</title><rect x="95.4252%" y="821" width="0.1793%" height="15" fill="rgb(240,22,54)" fg:x="22882" fg:w="43"/><text x="95.6752%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.10%)</title><rect x="95.5086%" y="805" width="0.0959%" height="15" fill="rgb(231,133,32)" fg:x="22902" fg:w="23"/><text x="95.7586%" y="815.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="95.6295%" y="805" width="0.0500%" height="15" fill="rgb(248,193,4)" fg:x="22931" fg:w="12"/><text x="95.8795%" y="815.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="95.6921%" y="789" width="0.0167%" height="15" fill="rgb(211,178,46)" fg:x="22946" fg:w="4"/><text x="95.9421%" y="799.50"></text></g><g><title>__GI___libc_free (5 samples, 0.02%)</title><rect x="95.7129%" y="773" width="0.0209%" height="15" fill="rgb(224,5,42)" fg:x="22951" fg:w="5"/><text x="95.9629%" y="783.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="95.7379%" y="773" width="0.0125%" height="15" fill="rgb(239,176,25)" fg:x="22957" fg:w="3"/><text x="95.9879%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.03%)</title><rect x="95.7671%" y="757" width="0.0250%" height="15" fill="rgb(245,187,50)" fg:x="22964" fg:w="6"/><text x="96.0171%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.05%)</title><rect x="95.7504%" y="773" width="0.0459%" height="15" fill="rgb(248,24,15)" fg:x="22960" fg:w="11"/><text x="96.0004%" y="783.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="95.8130%" y="757" width="0.0125%" height="15" fill="rgb(205,166,13)" fg:x="22975" fg:w="3"/><text x="96.0630%" y="767.50"></text></g><g><title>_int_free (8 samples, 0.03%)</title><rect x="95.8339%" y="757" width="0.0334%" height="15" fill="rgb(208,114,23)" fg:x="22980" fg:w="8"/><text x="96.0839%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.05%)</title><rect x="95.8672%" y="757" width="0.0542%" height="15" fill="rgb(239,127,18)" fg:x="22988" fg:w="13"/><text x="96.1172%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr_fn::create_udf::{{closure}}&gt; (5 samples, 0.02%)</title><rect x="95.9006%" y="741" width="0.0209%" height="15" fill="rgb(219,154,28)" fg:x="22996" fg:w="5"/><text x="96.1506%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::udaf::AggregateFunctionExpr&gt; (54 samples, 0.23%)</title><rect x="95.7087%" y="789" width="0.2252%" height="15" fill="rgb(225,157,23)" fg:x="22950" fg:w="54"/><text x="95.9587%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::udaf::AggregateUDF&gt; (31 samples, 0.13%)</title><rect x="95.8047%" y="773" width="0.1293%" height="15" fill="rgb(219,8,6)" fg:x="22973" fg:w="31"/><text x="96.0547%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::signature::Signature&gt; (3 samples, 0.01%)</title><rect x="95.9214%" y="757" width="0.0125%" height="15" fill="rgb(212,47,6)" fg:x="23001" fg:w="3"/><text x="96.1714%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="773" width="0.0125%" height="15" fill="rgb(224,190,4)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="757" width="0.0125%" height="15" fill="rgb(239,183,29)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="741" width="0.0125%" height="15" fill="rgb(213,57,7)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="725" width="0.0125%" height="15" fill="rgb(216,148,1)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="709" width="0.0125%" height="15" fill="rgb(236,182,29)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="693" width="0.0125%" height="15" fill="rgb(244,120,48)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="677" width="0.0125%" height="15" fill="rgb(206,71,34)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="661" width="0.0125%" height="15" fill="rgb(242,32,6)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="645" width="0.0125%" height="15" fill="rgb(241,35,3)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="629" width="0.0125%" height="15" fill="rgb(222,62,19)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.01%)</title><rect x="95.9631%" y="613" width="0.0125%" height="15" fill="rgb(223,110,41)" fg:x="23011" fg:w="3"/><text x="96.2131%" y="623.50"></text></g><g><title>_int_free (13 samples, 0.05%)</title><rect x="95.9923%" y="773" width="0.0542%" height="15" fill="rgb(208,224,4)" fg:x="23018" fg:w="13"/><text x="96.2423%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (155 samples, 0.65%)</title><rect x="95.4127%" y="837" width="0.6464%" height="15" fill="rgb(241,137,19)" fg:x="22879" fg:w="155"/><text x="95.6627%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::AggregateExec&gt; (109 samples, 0.45%)</title><rect x="95.6045%" y="821" width="0.4546%" height="15" fill="rgb(244,24,17)" fg:x="22925" fg:w="109"/><text x="95.8545%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (91 samples, 0.38%)</title><rect x="95.6796%" y="805" width="0.3795%" height="15" fill="rgb(245,178,49)" fg:x="22943" fg:w="91"/><text x="95.9296%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (30 samples, 0.13%)</title><rect x="95.9339%" y="789" width="0.1251%" height="15" fill="rgb(219,160,38)" fg:x="23004" fg:w="30"/><text x="96.1839%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (3 samples, 0.01%)</title><rect x="96.0465%" y="773" width="0.0125%" height="15" fill="rgb(228,137,14)" fg:x="23031" fg:w="3"/><text x="96.2965%" y="783.50"></text></g><g><title>datafusion::physical_plan::execute_stream (228 samples, 0.95%)</title><rect x="95.1207%" y="885" width="0.9508%" height="15" fill="rgb(237,134,11)" fg:x="22809" fg:w="228"/><text x="95.3707%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (217 samples, 0.90%)</title><rect x="95.1666%" y="869" width="0.9050%" height="15" fill="rgb(211,126,44)" fg:x="22820" fg:w="217"/><text x="95.4166%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::AggregateExec&gt; (177 samples, 0.74%)</title><rect x="95.3334%" y="853" width="0.7381%" height="15" fill="rgb(226,171,33)" fg:x="22860" fg:w="177"/><text x="95.5834%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::PhysicalGroupBy&gt; (3 samples, 0.01%)</title><rect x="96.0591%" y="837" width="0.0125%" height="15" fill="rgb(253,99,13)" fg:x="23034" fg:w="3"/><text x="96.3091%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt; as arrow_array::array::Array&gt;::as_any (5 samples, 0.02%)</title><rect x="96.0716%" y="869" width="0.0209%" height="15" fill="rgb(244,48,7)" fg:x="23037" fg:w="5"/><text x="96.3216%" y="879.50"></text></g><g><title>datafusion_common::cast::as_int64_array (8 samples, 0.03%)</title><rect x="96.0716%" y="885" width="0.0334%" height="15" fill="rgb(244,217,54)" fg:x="23037" fg:w="8"/><text x="96.3216%" y="895.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as arrow_array::array::Array&gt;::as_any (3 samples, 0.01%)</title><rect x="96.0924%" y="869" width="0.0125%" height="15" fill="rgb(224,15,18)" fg:x="23042" fg:w="3"/><text x="96.3424%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.05%)</title><rect x="96.1258%" y="869" width="0.0500%" height="15" fill="rgb(244,99,12)" fg:x="23050" fg:w="12"/><text x="96.3758%" y="879.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (19 samples, 0.08%)</title><rect x="96.1049%" y="885" width="0.0792%" height="15" fill="rgb(233,226,8)" fg:x="23045" fg:w="19"/><text x="96.3549%" y="895.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::build (3 samples, 0.01%)</title><rect x="96.1842%" y="885" width="0.0125%" height="15" fill="rgb(229,211,3)" fg:x="23064" fg:w="3"/><text x="96.4342%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="96.2217%" y="869" width="0.0334%" height="15" fill="rgb(216,140,21)" fg:x="23073" fg:w="8"/><text x="96.4717%" y="879.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="96.2259%" y="853" width="0.0292%" height="15" fill="rgb(234,122,30)" fg:x="23074" fg:w="7"/><text x="96.4759%" y="863.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="96.2384%" y="837" width="0.0167%" height="15" fill="rgb(236,25,46)" fg:x="23077" fg:w="4"/><text x="96.4884%" y="847.50"></text></g><g><title>malloc_consolidate (3 samples, 0.01%)</title><rect x="96.2425%" y="821" width="0.0125%" height="15" fill="rgb(217,52,54)" fg:x="23078" fg:w="3"/><text x="96.4925%" y="831.50"></text></g><g><title>&lt;datafusion::datasource::default_table_source::DefaultTableSource as datafusion_expr::table_source::TableSource&gt;::schema (3 samples, 0.01%)</title><rect x="96.2551%" y="869" width="0.0125%" height="15" fill="rgb(222,29,26)" fg:x="23081" fg:w="3"/><text x="96.5051%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="96.2759%" y="869" width="0.0125%" height="15" fill="rgb(216,177,29)" fg:x="23086" fg:w="3"/><text x="96.5259%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="96.2884%" y="869" width="0.0125%" height="15" fill="rgb(247,136,51)" fg:x="23089" fg:w="3"/><text x="96.5384%" y="879.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (17 samples, 0.07%)</title><rect x="96.3051%" y="869" width="0.0709%" height="15" fill="rgb(231,47,47)" fg:x="23093" fg:w="17"/><text x="96.5551%" y="879.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (45 samples, 0.19%)</title><rect x="96.1967%" y="885" width="0.1877%" height="15" fill="rgb(211,192,36)" fg:x="23067" fg:w="45"/><text x="96.4467%" y="895.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="96.4803%" y="693" width="0.0250%" height="15" fill="rgb(229,156,32)" fg:x="23135" fg:w="6"/><text x="96.7303%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="96.4803%" y="741" width="0.0292%" height="15" fill="rgb(248,213,20)" fg:x="23135" fg:w="7"/><text x="96.7303%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="96.4803%" y="725" width="0.0292%" height="15" fill="rgb(217,64,7)" fg:x="23135" fg:w="7"/><text x="96.7303%" y="735.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="96.4803%" y="709" width="0.0292%" height="15" fill="rgb(232,142,8)" fg:x="23135" fg:w="7"/><text x="96.7303%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="96.4803%" y="789" width="0.0334%" height="15" fill="rgb(224,92,44)" fg:x="23135" fg:w="8"/><text x="96.7303%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="96.4803%" y="773" width="0.0334%" height="15" fill="rgb(214,169,17)" fg:x="23135" fg:w="8"/><text x="96.7303%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.03%)</title><rect x="96.4803%" y="757" width="0.0334%" height="15" fill="rgb(210,59,37)" fg:x="23135" fg:w="8"/><text x="96.7303%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="96.4803%" y="869" width="0.0375%" height="15" fill="rgb(214,116,48)" fg:x="23135" fg:w="9"/><text x="96.7303%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="96.4803%" y="853" width="0.0375%" height="15" fill="rgb(244,191,6)" fg:x="23135" fg:w="9"/><text x="96.7303%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.04%)</title><rect x="96.4803%" y="837" width="0.0375%" height="15" fill="rgb(241,50,52)" fg:x="23135" fg:w="9"/><text x="96.7303%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.04%)</title><rect x="96.4803%" y="821" width="0.0375%" height="15" fill="rgb(236,75,39)" fg:x="23135" fg:w="9"/><text x="96.7303%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.04%)</title><rect x="96.4803%" y="805" width="0.0375%" height="15" fill="rgb(236,99,0)" fg:x="23135" fg:w="9"/><text x="96.7303%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.04%)</title><rect x="96.5178%" y="869" width="0.0417%" height="15" fill="rgb(207,202,15)" fg:x="23144" fg:w="10"/><text x="96.7678%" y="879.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="96.5428%" y="853" width="0.0167%" height="15" fill="rgb(233,207,14)" fg:x="23150" fg:w="4"/><text x="96.7928%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="96.5595%" y="869" width="0.0125%" height="15" fill="rgb(226,27,51)" fg:x="23154" fg:w="3"/><text x="96.8095%" y="879.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (3 samples, 0.01%)</title><rect x="96.5762%" y="837" width="0.0125%" height="15" fill="rgb(206,104,42)" fg:x="23158" fg:w="3"/><text x="96.8262%" y="847.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (51 samples, 0.21%)</title><rect x="96.3927%" y="885" width="0.2127%" height="15" fill="rgb(212,225,4)" fg:x="23114" fg:w="51"/><text x="96.6427%" y="895.50"></text></g><g><title>datafusion_physical_expr::execution_props::ExecutionProps::start_execution (8 samples, 0.03%)</title><rect x="96.5720%" y="869" width="0.0334%" height="15" fill="rgb(233,96,42)" fg:x="23157" fg:w="8"/><text x="96.8220%" y="879.50"></text></g><g><title>chrono::offset::utc::Utc::now (7 samples, 0.03%)</title><rect x="96.5762%" y="853" width="0.0292%" height="15" fill="rgb(229,21,32)" fg:x="23158" fg:w="7"/><text x="96.8262%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.02%)</title><rect x="96.5887%" y="837" width="0.0167%" height="15" fill="rgb(226,216,24)" fg:x="23161" fg:w="4"/><text x="96.8387%" y="847.50"></text></g><g><title>__clock_gettime_2 (3 samples, 0.01%)</title><rect x="96.5929%" y="821" width="0.0125%" height="15" fill="rgb(221,163,17)" fg:x="23162" fg:w="3"/><text x="96.8429%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (68 samples, 0.28%)</title><rect x="96.6220%" y="869" width="0.2836%" height="15" fill="rgb(216,216,42)" fg:x="23169" fg:w="68"/><text x="96.8720%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.28%)</title><rect x="96.6262%" y="853" width="0.2794%" height="15" fill="rgb(240,118,7)" fg:x="23170" fg:w="67"/><text x="96.8762%" y="863.50"></text></g><g><title>__GI___libc_realloc (67 samples, 0.28%)</title><rect x="96.6262%" y="837" width="0.2794%" height="15" fill="rgb(221,67,37)" fg:x="23170" fg:w="67"/><text x="96.8762%" y="847.50"></text></g><g><title>_int_realloc (65 samples, 0.27%)</title><rect x="96.6346%" y="821" width="0.2711%" height="15" fill="rgb(241,32,44)" fg:x="23172" fg:w="65"/><text x="96.8846%" y="831.50"></text></g><g><title>_int_malloc (62 samples, 0.26%)</title><rect x="96.6471%" y="805" width="0.2586%" height="15" fill="rgb(235,204,43)" fg:x="23175" fg:w="62"/><text x="96.8971%" y="815.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.02%)</title><rect x="96.8889%" y="789" width="0.0167%" height="15" fill="rgb(213,116,10)" fg:x="23233" fg:w="4"/><text x="97.1389%" y="799.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.02%)</title><rect x="96.9348%" y="853" width="0.0209%" height="15" fill="rgb(239,15,48)" fg:x="23244" fg:w="5"/><text x="97.1848%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.10%)</title><rect x="96.9557%" y="853" width="0.1043%" height="15" fill="rgb(207,123,36)" fg:x="23249" fg:w="25"/><text x="97.2057%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.10%)</title><rect x="96.9557%" y="837" width="0.1043%" height="15" fill="rgb(209,103,30)" fg:x="23249" fg:w="25"/><text x="97.2057%" y="847.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.10%)</title><rect x="96.9557%" y="821" width="0.1043%" height="15" fill="rgb(238,100,19)" fg:x="23249" fg:w="25"/><text x="97.2057%" y="831.50"></text></g><g><title>_int_realloc (23 samples, 0.10%)</title><rect x="96.9640%" y="805" width="0.0959%" height="15" fill="rgb(244,30,14)" fg:x="23251" fg:w="23"/><text x="97.2140%" y="815.50"></text></g><g><title>_int_malloc (23 samples, 0.10%)</title><rect x="96.9640%" y="789" width="0.0959%" height="15" fill="rgb(249,174,6)" fg:x="23251" fg:w="23"/><text x="97.2140%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="97.0641%" y="837" width="0.0125%" height="15" fill="rgb(235,213,41)" fg:x="23275" fg:w="3"/><text x="97.3141%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="97.0641%" y="821" width="0.0125%" height="15" fill="rgb(213,118,6)" fg:x="23275" fg:w="3"/><text x="97.3141%" y="831.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.01%)</title><rect x="97.0641%" y="805" width="0.0125%" height="15" fill="rgb(235,44,51)" fg:x="23275" fg:w="3"/><text x="97.3141%" y="815.50"></text></g><g><title>_int_realloc (3 samples, 0.01%)</title><rect x="97.0641%" y="789" width="0.0125%" height="15" fill="rgb(217,9,53)" fg:x="23275" fg:w="3"/><text x="97.3141%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="97.0641%" y="773" width="0.0125%" height="15" fill="rgb(237,172,34)" fg:x="23275" fg:w="3"/><text x="97.3141%" y="783.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (116 samples, 0.48%)</title><rect x="96.6054%" y="885" width="0.4838%" height="15" fill="rgb(206,206,11)" fg:x="23165" fg:w="116"/><text x="96.8554%" y="895.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (44 samples, 0.18%)</title><rect x="96.9056%" y="869" width="0.1835%" height="15" fill="rgb(214,149,29)" fg:x="23237" fg:w="44"/><text x="97.1556%" y="879.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (7 samples, 0.03%)</title><rect x="97.0599%" y="853" width="0.0292%" height="15" fill="rgb(208,123,3)" fg:x="23274" fg:w="7"/><text x="97.3099%" y="863.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (3 samples, 0.01%)</title><rect x="97.0766%" y="837" width="0.0125%" height="15" fill="rgb(229,126,4)" fg:x="23278" fg:w="3"/><text x="97.3266%" y="847.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="97.1225%" y="853" width="0.0167%" height="15" fill="rgb(222,92,36)" fg:x="23289" fg:w="4"/><text x="97.3725%" y="863.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="97.1392%" y="853" width="0.0292%" height="15" fill="rgb(216,39,41)" fg:x="23293" fg:w="7"/><text x="97.3892%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="97.1684%" y="853" width="0.0167%" height="15" fill="rgb(253,127,28)" fg:x="23300" fg:w="4"/><text x="97.4184%" y="863.50"></text></g><g><title>_int_free (7 samples, 0.03%)</title><rect x="97.1892%" y="853" width="0.0292%" height="15" fill="rgb(249,152,51)" fg:x="23305" fg:w="7"/><text x="97.4392%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlparser::tokenizer::Token&gt; (7 samples, 0.03%)</title><rect x="97.2184%" y="853" width="0.0292%" height="15" fill="rgb(209,123,42)" fg:x="23312" fg:w="7"/><text x="97.4684%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.02%)</title><rect x="97.2893%" y="837" width="0.0209%" height="15" fill="rgb(241,118,22)" fg:x="23329" fg:w="5"/><text x="97.5393%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="97.2976%" y="821" width="0.0125%" height="15" fill="rgb(208,25,7)" fg:x="23331" fg:w="3"/><text x="97.5476%" y="831.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (51 samples, 0.21%)</title><rect x="97.1100%" y="869" width="0.2127%" height="15" fill="rgb(243,144,39)" fg:x="23286" fg:w="51"/><text x="97.3600%" y="879.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (17 samples, 0.07%)</title><rect x="97.2518%" y="853" width="0.0709%" height="15" fill="rgb(250,50,5)" fg:x="23320" fg:w="17"/><text x="97.5018%" y="863.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_with_location (3 samples, 0.01%)</title><rect x="97.3101%" y="837" width="0.0125%" height="15" fill="rgb(207,67,11)" fg:x="23334" fg:w="3"/><text x="97.5601%" y="847.50"></text></g><g><title>[do_query] (4 samples, 0.02%)</title><rect x="97.3227%" y="869" width="0.0167%" height="15" fill="rgb(245,204,40)" fg:x="23337" fg:w="4"/><text x="97.5727%" y="879.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.02%)</title><rect x="97.3227%" y="853" width="0.0167%" height="15" fill="rgb(238,228,24)" fg:x="23337" fg:w="4"/><text x="97.5727%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="97.3393%" y="869" width="0.0250%" height="15" fill="rgb(217,116,22)" fg:x="23341" fg:w="6"/><text x="97.5893%" y="879.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.03%)</title><rect x="97.3644%" y="837" width="0.0292%" height="15" fill="rgb(234,98,12)" fg:x="23347" fg:w="7"/><text x="97.6144%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="97.3936%" y="837" width="0.0167%" height="15" fill="rgb(242,170,50)" fg:x="23354" fg:w="4"/><text x="97.6436%" y="847.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (76 samples, 0.32%)</title><rect x="97.0975%" y="885" width="0.3169%" height="15" fill="rgb(235,7,5)" fg:x="23283" fg:w="76"/><text x="97.3475%" y="895.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_and (12 samples, 0.05%)</title><rect x="97.3644%" y="869" width="0.0500%" height="15" fill="rgb(241,114,28)" fg:x="23347" fg:w="12"/><text x="97.6144%" y="879.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (12 samples, 0.05%)</title><rect x="97.3644%" y="853" width="0.0500%" height="15" fill="rgb(246,112,42)" fg:x="23347" fg:w="12"/><text x="97.6144%" y="863.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::collect (7 samples, 0.03%)</title><rect x="97.4144%" y="885" width="0.0292%" height="15" fill="rgb(248,228,14)" fg:x="23359" fg:w="7"/><text x="97.6644%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.03%)</title><rect x="97.4144%" y="869" width="0.0292%" height="15" fill="rgb(208,133,18)" fg:x="23359" fg:w="7"/><text x="97.6644%" y="879.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.12%)</title><rect x="97.4686%" y="869" width="0.1209%" height="15" fill="rgb(207,35,49)" fg:x="23372" fg:w="29"/><text x="97.7186%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.05%)</title><rect x="97.5896%" y="869" width="0.0542%" height="15" fill="rgb(205,68,36)" fg:x="23401" fg:w="13"/><text x="97.8396%" y="879.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.01%)</title><rect x="97.6605%" y="853" width="0.0125%" height="15" fill="rgb(245,62,40)" fg:x="23418" fg:w="3"/><text x="97.9105%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.01%)</title><rect x="97.6605%" y="837" width="0.0125%" height="15" fill="rgb(228,27,24)" fg:x="23418" fg:w="3"/><text x="97.9105%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::udaf::AggregateUDF&gt; (13 samples, 0.05%)</title><rect x="97.6479%" y="869" width="0.0542%" height="15" fill="rgb(253,19,12)" fg:x="23415" fg:w="13"/><text x="97.8979%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::signature::Signature&gt; (6 samples, 0.03%)</title><rect x="97.6771%" y="853" width="0.0250%" height="15" fill="rgb(232,28,20)" fg:x="23422" fg:w="6"/><text x="97.9271%" y="863.50"></text></g><g><title>datafusion_common::dfschema::DFField::new (7 samples, 0.03%)</title><rect x="97.7022%" y="869" width="0.0292%" height="15" fill="rgb(218,35,51)" fg:x="23428" fg:w="7"/><text x="97.9522%" y="879.50"></text></g><g><title>arrow_schema::field::Field::new (5 samples, 0.02%)</title><rect x="97.7105%" y="853" width="0.0209%" height="15" fill="rgb(212,90,40)" fg:x="23430" fg:w="5"/><text x="97.9605%" y="863.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (11 samples, 0.05%)</title><rect x="97.7313%" y="869" width="0.0459%" height="15" fill="rgb(220,172,12)" fg:x="23435" fg:w="11"/><text x="97.9813%" y="879.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.04%)</title><rect x="97.8064%" y="853" width="0.0375%" height="15" fill="rgb(226,159,20)" fg:x="23453" fg:w="9"/><text x="98.0564%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="97.8648%" y="853" width="0.0125%" height="15" fill="rgb(234,205,16)" fg:x="23467" fg:w="3"/><text x="98.1148%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::signature::Signature&gt; (3 samples, 0.01%)</title><rect x="97.8773%" y="853" width="0.0125%" height="15" fill="rgb(207,9,39)" fg:x="23470" fg:w="3"/><text x="98.1273%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="97.9148%" y="837" width="0.0125%" height="15" fill="rgb(249,143,15)" fg:x="23479" fg:w="3"/><text x="98.1648%" y="847.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.06%)</title><rect x="97.9274%" y="837" width="0.0626%" height="15" fill="rgb(253,133,29)" fg:x="23482" fg:w="15"/><text x="98.1774%" y="847.50"></text></g><g><title>_int_malloc (13 samples, 0.05%)</title><rect x="97.9357%" y="821" width="0.0542%" height="15" fill="rgb(221,187,0)" fg:x="23484" fg:w="13"/><text x="98.1857%" y="831.50"></text></g><g><title>datafusion_expr::expr_fn::create_udaf (52 samples, 0.22%)</title><rect x="97.7772%" y="869" width="0.2169%" height="15" fill="rgb(205,204,26)" fg:x="23446" fg:w="52"/><text x="98.0272%" y="879.50"></text></g><g><title>datafusion_expr::udaf::AggregateUDF::new (25 samples, 0.10%)</title><rect x="97.8898%" y="853" width="0.1043%" height="15" fill="rgb(224,68,54)" fg:x="23473" fg:w="25"/><text x="98.1398%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.07%)</title><rect x="98.0191%" y="853" width="0.0709%" height="15" fill="rgb(209,67,4)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.07%)</title><rect x="98.0191%" y="837" width="0.0709%" height="15" fill="rgb(228,229,18)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.07%)</title><rect x="98.0191%" y="821" width="0.0709%" height="15" fill="rgb(231,89,13)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.07%)</title><rect x="98.0191%" y="805" width="0.0709%" height="15" fill="rgb(210,182,18)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.07%)</title><rect x="98.0191%" y="789" width="0.0709%" height="15" fill="rgb(240,105,2)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.07%)</title><rect x="98.0191%" y="773" width="0.0709%" height="15" fill="rgb(207,170,50)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.07%)</title><rect x="98.0191%" y="757" width="0.0709%" height="15" fill="rgb(232,133,24)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.07%)</title><rect x="98.0191%" y="741" width="0.0709%" height="15" fill="rgb(235,166,27)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.07%)</title><rect x="98.0191%" y="725" width="0.0709%" height="15" fill="rgb(209,19,13)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.07%)</title><rect x="98.0191%" y="709" width="0.0709%" height="15" fill="rgb(226,79,39)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="719.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.07%)</title><rect x="98.0191%" y="693" width="0.0709%" height="15" fill="rgb(222,163,10)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="703.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.07%)</title><rect x="98.0191%" y="677" width="0.0709%" height="15" fill="rgb(214,44,19)" fg:x="23504" fg:w="17"/><text x="98.2691%" y="687.50"></text></g><g><title>_int_malloc (11 samples, 0.05%)</title><rect x="98.0441%" y="661" width="0.0459%" height="15" fill="rgb(210,217,13)" fg:x="23510" fg:w="11"/><text x="98.2941%" y="671.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::count_agg (157 samples, 0.65%)</title><rect x="97.4436%" y="885" width="0.6547%" height="15" fill="rgb(237,61,54)" fg:x="23366" fg:w="157"/><text x="97.6936%" y="895.50"></text></g><g><title>datafusion_expr::udaf::AggregateUDF::call (23 samples, 0.10%)</title><rect x="98.0024%" y="869" width="0.0959%" height="15" fill="rgb(226,184,24)" fg:x="23500" fg:w="23"/><text x="98.2524%" y="879.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::create_physical_plan (3 samples, 0.01%)</title><rect x="98.0983%" y="885" width="0.0125%" height="15" fill="rgb(223,226,4)" fg:x="23523" fg:w="3"/><text x="98.3483%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="98.0983%" y="869" width="0.0125%" height="15" fill="rgb(210,26,41)" fg:x="23523" fg:w="3"/><text x="98.3483%" y="879.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.01%)</title><rect x="98.1651%" y="677" width="0.0125%" height="15" fill="rgb(220,221,6)" fg:x="23539" fg:w="3"/><text x="98.4151%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="98.1609%" y="773" width="0.0209%" height="15" fill="rgb(225,89,49)" fg:x="23538" fg:w="5"/><text x="98.4109%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="98.1609%" y="757" width="0.0209%" height="15" fill="rgb(218,70,45)" fg:x="23538" fg:w="5"/><text x="98.4109%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="98.1609%" y="741" width="0.0209%" height="15" fill="rgb(238,166,21)" fg:x="23538" fg:w="5"/><text x="98.4109%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="98.1651%" y="725" width="0.0167%" height="15" fill="rgb(224,141,44)" fg:x="23539" fg:w="4"/><text x="98.4151%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="98.1651%" y="709" width="0.0167%" height="15" fill="rgb(230,12,49)" fg:x="23539" fg:w="4"/><text x="98.4151%" y="719.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="98.1651%" y="693" width="0.0167%" height="15" fill="rgb(212,174,12)" fg:x="23539" fg:w="4"/><text x="98.4151%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="98.1609%" y="853" width="0.0250%" height="15" fill="rgb(246,67,9)" fg:x="23538" fg:w="6"/><text x="98.4109%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="98.1609%" y="837" width="0.0250%" height="15" fill="rgb(239,35,23)" fg:x="23538" fg:w="6"/><text x="98.4109%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="98.1609%" y="821" width="0.0250%" height="15" fill="rgb(211,167,0)" fg:x="23538" fg:w="6"/><text x="98.4109%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="98.1609%" y="805" width="0.0250%" height="15" fill="rgb(225,119,45)" fg:x="23538" fg:w="6"/><text x="98.4109%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="98.1609%" y="789" width="0.0250%" height="15" fill="rgb(210,162,6)" fg:x="23538" fg:w="6"/><text x="98.4109%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="98.1984%" y="757" width="0.0167%" height="15" fill="rgb(208,118,35)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="98.1984%" y="741" width="0.0167%" height="15" fill="rgb(239,4,53)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="98.1984%" y="725" width="0.0167%" height="15" fill="rgb(213,130,21)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="98.1984%" y="709" width="0.0167%" height="15" fill="rgb(235,148,0)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="98.1984%" y="693" width="0.0167%" height="15" fill="rgb(244,224,18)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="703.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="98.1984%" y="677" width="0.0167%" height="15" fill="rgb(211,214,4)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="687.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="98.1984%" y="661" width="0.0167%" height="15" fill="rgb(206,119,25)" fg:x="23547" fg:w="4"/><text x="98.4484%" y="671.50"></text></g><g><title>&lt;datafusion::execution::context::SessionConfig as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="98.1859%" y="853" width="0.0375%" height="15" fill="rgb(243,93,47)" fg:x="23544" fg:w="9"/><text x="98.4359%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="98.1984%" y="837" width="0.0250%" height="15" fill="rgb(224,194,6)" fg:x="23547" fg:w="6"/><text x="98.4484%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="98.1984%" y="821" width="0.0250%" height="15" fill="rgb(243,229,6)" fg:x="23547" fg:w="6"/><text x="98.4484%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.03%)</title><rect x="98.1984%" y="805" width="0.0250%" height="15" fill="rgb(207,23,50)" fg:x="23547" fg:w="6"/><text x="98.4484%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.03%)</title><rect x="98.1984%" y="789" width="0.0250%" height="15" fill="rgb(253,192,32)" fg:x="23547" fg:w="6"/><text x="98.4484%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.03%)</title><rect x="98.1984%" y="773" width="0.0250%" height="15" fill="rgb(213,21,6)" fg:x="23547" fg:w="6"/><text x="98.4484%" y="783.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::task_ctx (29 samples, 0.12%)</title><rect x="98.1192%" y="885" width="0.1209%" height="15" fill="rgb(243,151,13)" fg:x="23528" fg:w="29"/><text x="98.3692%" y="895.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (29 samples, 0.12%)</title><rect x="98.1192%" y="869" width="0.1209%" height="15" fill="rgb(233,165,41)" fg:x="23528" fg:w="29"/><text x="98.3692%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="98.2276%" y="853" width="0.0125%" height="15" fill="rgb(246,176,45)" fg:x="23554" fg:w="3"/><text x="98.4776%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.01%)</title><rect x="98.2943%" y="725" width="0.0125%" height="15" fill="rgb(217,170,52)" fg:x="23570" fg:w="3"/><text x="98.5443%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.01%)</title><rect x="98.3069%" y="725" width="0.0125%" height="15" fill="rgb(214,203,54)" fg:x="23573" fg:w="3"/><text x="98.5569%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (214 samples, 0.89%)</title><rect x="98.3486%" y="629" width="0.8924%" height="15" fill="rgb(248,215,49)" fg:x="23583" fg:w="214"/><text x="98.5986%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (207 samples, 0.86%)</title><rect x="98.3777%" y="613" width="0.8633%" height="15" fill="rgb(208,46,10)" fg:x="23590" fg:w="207"/><text x="98.6277%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (202 samples, 0.84%)</title><rect x="98.3986%" y="597" width="0.8424%" height="15" fill="rgb(254,5,31)" fg:x="23595" fg:w="202"/><text x="98.6486%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (198 samples, 0.83%)</title><rect x="98.4153%" y="581" width="0.8257%" height="15" fill="rgb(222,104,33)" fg:x="23599" fg:w="198"/><text x="98.6653%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (192 samples, 0.80%)</title><rect x="98.4403%" y="565" width="0.8007%" height="15" fill="rgb(248,49,16)" fg:x="23605" fg:w="192"/><text x="98.6903%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (184 samples, 0.77%)</title><rect x="98.4737%" y="549" width="0.7673%" height="15" fill="rgb(232,198,41)" fg:x="23613" fg:w="184"/><text x="98.7237%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (171 samples, 0.71%)</title><rect x="98.5279%" y="533" width="0.7131%" height="15" fill="rgb(214,125,3)" fg:x="23626" fg:w="171"/><text x="98.7779%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (144 samples, 0.60%)</title><rect x="98.6405%" y="517" width="0.6005%" height="15" fill="rgb(229,220,28)" fg:x="23653" fg:w="144"/><text x="98.8905%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (120 samples, 0.50%)</title><rect x="98.7406%" y="501" width="0.5004%" height="15" fill="rgb(222,64,37)" fg:x="23677" fg:w="120"/><text x="98.9906%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.41%)</title><rect x="98.8323%" y="485" width="0.4087%" height="15" fill="rgb(249,184,13)" fg:x="23699" fg:w="98"/><text x="99.0823%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (70 samples, 0.29%)</title><rect x="98.9491%" y="469" width="0.2919%" height="15" fill="rgb(252,176,6)" fg:x="23727" fg:w="70"/><text x="99.1991%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.27%)</title><rect x="98.9699%" y="453" width="0.2711%" height="15" fill="rgb(228,153,7)" fg:x="23732" fg:w="65"/><text x="99.2199%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.27%)</title><rect x="98.9699%" y="437" width="0.2711%" height="15" fill="rgb(242,193,5)" fg:x="23732" fg:w="65"/><text x="99.2199%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.20%)</title><rect x="99.0450%" y="421" width="0.1960%" height="15" fill="rgb(232,140,9)" fg:x="23750" fg:w="47"/><text x="99.2950%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (37 samples, 0.15%)</title><rect x="99.0867%" y="405" width="0.1543%" height="15" fill="rgb(213,222,16)" fg:x="23760" fg:w="37"/><text x="99.3367%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (34 samples, 0.14%)</title><rect x="99.0992%" y="389" width="0.1418%" height="15" fill="rgb(222,75,50)" fg:x="23763" fg:w="34"/><text x="99.3492%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="99.2076%" y="373" width="0.0334%" height="15" fill="rgb(205,180,2)" fg:x="23789" fg:w="8"/><text x="99.4576%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="99.2076%" y="357" width="0.0334%" height="15" fill="rgb(216,34,7)" fg:x="23789" fg:w="8"/><text x="99.4576%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.03%)</title><rect x="99.2076%" y="341" width="0.0334%" height="15" fill="rgb(253,16,32)" fg:x="23789" fg:w="8"/><text x="99.4576%" y="351.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (227 samples, 0.95%)</title><rect x="98.3194%" y="709" width="0.9467%" height="15" fill="rgb(208,97,28)" fg:x="23576" fg:w="227"/><text x="98.5694%" y="719.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (227 samples, 0.95%)</title><rect x="98.3194%" y="693" width="0.9467%" height="15" fill="rgb(225,92,11)" fg:x="23576" fg:w="227"/><text x="98.5694%" y="703.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (227 samples, 0.95%)</title><rect x="98.3194%" y="677" width="0.9467%" height="15" fill="rgb(243,38,12)" fg:x="23576" fg:w="227"/><text x="98.5694%" y="687.50"></text></g><g><title>__libc_write (227 samples, 0.95%)</title><rect x="98.3194%" y="661" width="0.9467%" height="15" fill="rgb(208,139,16)" fg:x="23576" fg:w="227"/><text x="98.5694%" y="671.50"></text></g><g><title>__libc_write (222 samples, 0.93%)</title><rect x="98.3402%" y="645" width="0.9258%" height="15" fill="rgb(227,24,9)" fg:x="23581" fg:w="222"/><text x="98.5902%" y="655.50"></text></g><g><title>__pthread_enable_asynccancel (5 samples, 0.02%)</title><rect x="99.2452%" y="629" width="0.0209%" height="15" fill="rgb(206,62,11)" fg:x="23798" fg:w="5"/><text x="99.4952%" y="639.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (228 samples, 0.95%)</title><rect x="98.3194%" y="725" width="0.9508%" height="15" fill="rgb(228,134,27)" fg:x="23576" fg:w="228"/><text x="98.5694%" y="735.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (237 samples, 0.99%)</title><rect x="98.2902%" y="789" width="0.9884%" height="15" fill="rgb(205,55,33)" fg:x="23569" fg:w="237"/><text x="98.5402%" y="799.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (236 samples, 0.98%)</title><rect x="98.2943%" y="773" width="0.9842%" height="15" fill="rgb(243,75,43)" fg:x="23570" fg:w="236"/><text x="98.5443%" y="783.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (236 samples, 0.98%)</title><rect x="98.2943%" y="757" width="0.9842%" height="15" fill="rgb(223,27,42)" fg:x="23570" fg:w="236"/><text x="98.5443%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (236 samples, 0.98%)</title><rect x="98.2943%" y="741" width="0.9842%" height="15" fill="rgb(232,189,33)" fg:x="23570" fg:w="236"/><text x="98.5443%" y="751.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.03%)</title><rect x="99.2869%" y="757" width="0.0292%" height="15" fill="rgb(210,9,39)" fg:x="23808" fg:w="7"/><text x="99.5369%" y="767.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.02%)</title><rect x="99.2952%" y="741" width="0.0209%" height="15" fill="rgb(242,85,26)" fg:x="23810" fg:w="5"/><text x="99.5452%" y="751.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.02%)</title><rect x="99.2952%" y="725" width="0.0209%" height="15" fill="rgb(248,44,4)" fg:x="23810" fg:w="5"/><text x="99.5452%" y="735.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.02%)</title><rect x="99.2952%" y="709" width="0.0209%" height="15" fill="rgb(250,96,46)" fg:x="23810" fg:w="5"/><text x="99.5452%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8 samples, 0.03%)</title><rect x="99.3161%" y="757" width="0.0334%" height="15" fill="rgb(229,116,26)" fg:x="23815" fg:w="8"/><text x="99.5661%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (4 samples, 0.02%)</title><rect x="99.3327%" y="741" width="0.0167%" height="15" fill="rgb(246,94,34)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="725" width="0.0167%" height="15" fill="rgb(251,73,21)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="709" width="0.0167%" height="15" fill="rgb(254,121,25)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="693" width="0.0167%" height="15" fill="rgb(215,161,49)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="677" width="0.0167%" height="15" fill="rgb(221,43,13)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="661" width="0.0167%" height="15" fill="rgb(249,5,37)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="645" width="0.0167%" height="15" fill="rgb(226,25,44)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="629" width="0.0167%" height="15" fill="rgb(238,189,16)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="613" width="0.0167%" height="15" fill="rgb(251,186,8)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="597" width="0.0167%" height="15" fill="rgb(254,34,31)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="581" width="0.0167%" height="15" fill="rgb(225,215,27)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.02%)</title><rect x="99.3327%" y="565" width="0.0167%" height="15" fill="rgb(221,192,48)" fg:x="23819" fg:w="4"/><text x="99.5827%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (19 samples, 0.08%)</title><rect x="99.2785%" y="789" width="0.0792%" height="15" fill="rgb(219,137,20)" fg:x="23806" fg:w="19"/><text x="99.5285%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (19 samples, 0.08%)</title><rect x="99.2785%" y="773" width="0.0792%" height="15" fill="rgb(219,84,11)" fg:x="23806" fg:w="19"/><text x="99.5285%" y="783.50"></text></g><g><title>std::io::Write::write_fmt (266 samples, 1.11%)</title><rect x="98.2526%" y="821" width="1.1093%" height="15" fill="rgb(224,10,23)" fg:x="23560" fg:w="266"/><text x="98.5026%" y="831.50"></text></g><g><title>core::fmt::write (261 samples, 1.09%)</title><rect x="98.2735%" y="805" width="1.0885%" height="15" fill="rgb(248,22,39)" fg:x="23565" fg:w="261"/><text x="98.5235%" y="815.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (269 samples, 1.12%)</title><rect x="98.2443%" y="853" width="1.1218%" height="15" fill="rgb(212,154,20)" fg:x="23558" fg:w="269"/><text x="98.4943%" y="863.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (269 samples, 1.12%)</title><rect x="98.2443%" y="837" width="1.1218%" height="15" fill="rgb(236,199,50)" fg:x="23558" fg:w="269"/><text x="98.4943%" y="847.50"></text></g><g><title>std::io::stdio::_print (271 samples, 1.13%)</title><rect x="98.2401%" y="885" width="1.1302%" height="15" fill="rgb(211,9,17)" fg:x="23557" fg:w="271"/><text x="98.4901%" y="895.50"></text></g><g><title>std::io::stdio::print_to (270 samples, 1.13%)</title><rect x="98.2443%" y="869" width="1.1260%" height="15" fill="rgb(243,216,36)" fg:x="23558" fg:w="270"/><text x="98.4943%" y="879.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2,401 samples, 10.01%)</title><rect x="89.3824%" y="933" width="10.0129%" height="15" fill="rgb(250,2,10)" fg:x="21433" fg:w="2401"/><text x="89.6324%" y="943.50">tokio::runtime..</text></g><g><title>do_query::main::_{{closure}} (2,401 samples, 10.01%)</title><rect x="89.3824%" y="917" width="10.0129%" height="15" fill="rgb(226,50,48)" fg:x="21433" fg:w="2401"/><text x="89.6324%" y="927.50">do_query::main..</text></g><g><title>do_query::main_inner::{{closure}} (2,401 samples, 10.01%)</title><rect x="89.3824%" y="901" width="10.0129%" height="15" fill="rgb(243,81,16)" fg:x="21433" fg:w="2401"/><text x="89.6324%" y="911.50">do_query::main..</text></g><g><title>tokio::time::instant::Instant::now (4 samples, 0.02%)</title><rect x="99.3786%" y="885" width="0.0167%" height="15" fill="rgb(250,14,2)" fg:x="23830" fg:w="4"/><text x="99.6286%" y="895.50"></text></g><g><title>[unknown] (21,901 samples, 91.33%)</title><rect x="8.0904%" y="949" width="91.3341%" height="15" fill="rgb(233,135,29)" fg:x="1940" fg:w="21901"/><text x="8.3404%" y="959.50">[unknown]</text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.03%)</title><rect x="99.3953%" y="933" width="0.0292%" height="15" fill="rgb(224,64,43)" fg:x="23834" fg:w="7"/><text x="99.6453%" y="943.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="99.4245%" y="949" width="0.0125%" height="15" fill="rgb(238,84,13)" fg:x="23841" fg:w="3"/><text x="99.6745%" y="959.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.08%)</title><rect x="99.4370%" y="949" width="0.0751%" height="15" fill="rgb(253,48,26)" fg:x="23844" fg:w="18"/><text x="99.6870%" y="959.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.01%)</title><rect x="99.5121%" y="949" width="0.0125%" height="15" fill="rgb(205,223,31)" fg:x="23862" fg:w="3"/><text x="99.7621%" y="959.50"></text></g><g><title>__rdl_alloc (10 samples, 0.04%)</title><rect x="99.5413%" y="949" width="0.0417%" height="15" fill="rgb(221,41,32)" fg:x="23869" fg:w="10"/><text x="99.7913%" y="959.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.02%)</title><rect x="99.5663%" y="933" width="0.0167%" height="15" fill="rgb(213,158,31)" fg:x="23875" fg:w="4"/><text x="99.8163%" y="943.50"></text></g><g><title>_int_free (12 samples, 0.05%)</title><rect x="99.5871%" y="949" width="0.0500%" height="15" fill="rgb(245,126,43)" fg:x="23880" fg:w="12"/><text x="99.8371%" y="959.50"></text></g><g><title>_int_memalign (4 samples, 0.02%)</title><rect x="99.6455%" y="949" width="0.0167%" height="15" fill="rgb(227,7,22)" fg:x="23894" fg:w="4"/><text x="99.8955%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.03%)</title><rect x="99.6664%" y="949" width="0.0334%" height="15" fill="rgb(252,90,44)" fg:x="23899" fg:w="8"/><text x="99.9164%" y="959.50"></text></g><g><title>alloc::string::String::push (5 samples, 0.02%)</title><rect x="99.7122%" y="949" width="0.0209%" height="15" fill="rgb(253,91,0)" fg:x="23910" fg:w="5"/><text x="99.9622%" y="959.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="99.7414%" y="949" width="0.0167%" height="15" fill="rgb(252,175,49)" fg:x="23917" fg:w="4"/><text x="99.9914%" y="959.50"></text></g><g><title>anon.12273d08e29f89160c2c4bd78de36d6f.214.llvm.2977646343340588066 (3 samples, 0.01%)</title><rect x="99.7623%" y="949" width="0.0125%" height="15" fill="rgb(246,150,1)" fg:x="23922" fg:w="3"/><text x="100.0123%" y="959.50"></text></g><g><title>anon.58f8eef60850d28a590162ecbc8c3282.4.llvm.10451180986836075178 (3 samples, 0.01%)</title><rect x="99.7873%" y="949" width="0.0125%" height="15" fill="rgb(241,192,25)" fg:x="23928" fg:w="3"/><text x="100.0373%" y="959.50"></text></g><g><title>arrow_arith::aggregate::simd::simd_aggregation (3 samples, 0.01%)</title><rect x="99.7998%" y="949" width="0.0125%" height="15" fill="rgb(239,187,11)" fg:x="23931" fg:w="3"/><text x="100.0498%" y="959.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::column (3 samples, 0.01%)</title><rect x="99.8123%" y="949" width="0.0125%" height="15" fill="rgb(218,202,51)" fg:x="23934" fg:w="3"/><text x="100.0623%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::aggregates::AggregateExec&gt; (4 samples, 0.02%)</title><rect x="99.8665%" y="949" width="0.0167%" height="15" fill="rgb(225,176,8)" fg:x="23947" fg:w="4"/><text x="100.1165%" y="959.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::with_new_inputs (7 samples, 0.03%)</title><rect x="99.9291%" y="949" width="0.0292%" height="15" fill="rgb(219,122,41)" fg:x="23962" fg:w="7"/><text x="100.1791%" y="959.50"></text></g><g><title>all (23,979 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(248,140,20)" fg:x="0" fg:w="23979"/><text x="0.2500%" y="991.50"></text></g><g><title>do_query (23,979 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(245,41,37)" fg:x="0" fg:w="23979"/><text x="0.2500%" y="975.50">do_query</text></g></svg></svg>