<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="49787"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="0.0341%" y="869" width="0.0341%" height="15" fill="rgb(227,0,7)" fg:x="17" fg:w="17"/><text x="0.2841%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="0.1125%" y="869" width="0.0321%" height="15" fill="rgb(217,0,24)" fg:x="56" fg:w="16"/><text x="0.3625%" y="879.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="0.1647%" y="869" width="0.0121%" height="15" fill="rgb(221,193,54)" fg:x="82" fg:w="6"/><text x="0.4147%" y="879.50"></text></g><g><title>__GI___libc_malloc (53 samples, 0.11%)</title><rect x="0.1768%" y="869" width="0.1065%" height="15" fill="rgb(248,212,6)" fg:x="88" fg:w="53"/><text x="0.4268%" y="879.50"></text></g><g><title>__calloc (38 samples, 0.08%)</title><rect x="0.2872%" y="869" width="0.0763%" height="15" fill="rgb(208,68,35)" fg:x="143" fg:w="38"/><text x="0.5372%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="0.3676%" y="869" width="0.0201%" height="15" fill="rgb(232,128,0)" fg:x="183" fg:w="10"/><text x="0.6176%" y="879.50"></text></g><g><title>__posix_memalign (14 samples, 0.03%)</title><rect x="0.3877%" y="869" width="0.0281%" height="15" fill="rgb(207,160,47)" fg:x="193" fg:w="14"/><text x="0.6377%" y="879.50"></text></g><g><title>_int_free (126 samples, 0.25%)</title><rect x="0.4158%" y="869" width="0.2531%" height="15" fill="rgb(228,23,34)" fg:x="207" fg:w="126"/><text x="0.6658%" y="879.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="0.6688%" y="869" width="0.0161%" height="15" fill="rgb(218,30,26)" fg:x="333" fg:w="8"/><text x="0.9188%" y="879.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (8 samples, 0.02%)</title><rect x="0.6869%" y="869" width="0.0161%" height="15" fill="rgb(220,122,19)" fg:x="342" fg:w="8"/><text x="0.9369%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="0.7110%" y="869" width="0.0201%" height="15" fill="rgb(250,228,42)" fg:x="354" fg:w="10"/><text x="0.9610%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.04%)</title><rect x="0.7452%" y="869" width="0.0382%" height="15" fill="rgb(240,193,28)" fg:x="371" fg:w="19"/><text x="0.9952%" y="879.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (6 samples, 0.01%)</title><rect x="0.7833%" y="869" width="0.0121%" height="15" fill="rgb(216,20,37)" fg:x="390" fg:w="6"/><text x="1.0333%" y="879.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_add_epi64 (68 samples, 0.14%)</title><rect x="0.8074%" y="869" width="0.1366%" height="15" fill="rgb(206,188,39)" fg:x="402" fg:w="68"/><text x="1.0574%" y="879.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (169 samples, 0.34%)</title><rect x="0.9440%" y="869" width="0.3394%" height="15" fill="rgb(217,207,13)" fg:x="470" fg:w="169"/><text x="1.1940%" y="879.50"></text></g><g><title>core::core_arch::x86::avx512vbmi2::_mm512_mask_compressstoreu_epi8 (15 samples, 0.03%)</title><rect x="1.2895%" y="869" width="0.0301%" height="15" fill="rgb(231,73,38)" fg:x="642" fg:w="15"/><text x="1.5395%" y="879.50"></text></g><g><title>core::core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64 (67 samples, 0.13%)</title><rect x="1.3196%" y="869" width="0.1346%" height="15" fill="rgb(225,20,46)" fg:x="657" fg:w="67"/><text x="1.5696%" y="879.50"></text></g><g><title>core::core_arch::x86_64::bmi2::_pext_u64 (8 samples, 0.02%)</title><rect x="1.4542%" y="869" width="0.0161%" height="15" fill="rgb(210,31,41)" fg:x="724" fg:w="8"/><text x="1.7042%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="1.4803%" y="869" width="0.0121%" height="15" fill="rgb(221,200,47)" fg:x="737" fg:w="6"/><text x="1.7303%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (8 samples, 0.02%)</title><rect x="1.5084%" y="869" width="0.0161%" height="15" fill="rgb(226,26,5)" fg:x="751" fg:w="8"/><text x="1.7584%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (14 samples, 0.03%)</title><rect x="1.5245%" y="869" width="0.0281%" height="15" fill="rgb(249,33,26)" fg:x="759" fg:w="14"/><text x="1.7745%" y="879.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (6 samples, 0.01%)</title><rect x="1.5888%" y="869" width="0.0121%" height="15" fill="rgb(235,183,28)" fg:x="791" fg:w="6"/><text x="1.8388%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="1.6249%" y="869" width="0.0100%" height="15" fill="rgb(221,5,38)" fg:x="809" fg:w="5"/><text x="1.8749%" y="879.50"></text></g><g><title>[[heap]] (826 samples, 1.66%)</title><rect x="0.0201%" y="885" width="1.6591%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="826"/><text x="0.2701%" y="895.50"></text></g><g><title>unlink_chunk.isra.0 (19 samples, 0.04%)</title><rect x="1.6410%" y="869" width="0.0382%" height="15" fill="rgb(241,131,45)" fg:x="817" fg:w="19"/><text x="1.8910%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (487 samples, 0.98%)</title><rect x="1.6792%" y="885" width="0.9782%" height="15" fill="rgb(249,31,29)" fg:x="836" fg:w="487"/><text x="1.9292%" y="895.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (11 samples, 0.02%)</title><rect x="2.6573%" y="869" width="0.0221%" height="15" fill="rgb(225,111,53)" fg:x="1323" fg:w="11"/><text x="2.9073%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.04%)</title><rect x="2.6794%" y="869" width="0.0422%" height="15" fill="rgb(238,160,17)" fg:x="1334" fg:w="21"/><text x="2.9294%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="2.7095%" y="853" width="0.0121%" height="15" fill="rgb(214,148,48)" fg:x="1349" fg:w="6"/><text x="2.9595%" y="863.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.01%)</title><rect x="2.7095%" y="837" width="0.0121%" height="15" fill="rgb(232,36,49)" fg:x="1349" fg:w="6"/><text x="2.9595%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.01%)</title><rect x="2.7095%" y="821" width="0.0121%" height="15" fill="rgb(209,103,24)" fg:x="1349" fg:w="6"/><text x="2.9595%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="2.7095%" y="805" width="0.0121%" height="15" fill="rgb(229,88,8)" fg:x="1349" fg:w="6"/><text x="2.9595%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.01%)</title><rect x="2.7095%" y="789" width="0.0121%" height="15" fill="rgb(213,181,19)" fg:x="1349" fg:w="6"/><text x="2.9595%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="2.7296%" y="869" width="0.0141%" height="15" fill="rgb(254,191,54)" fg:x="1359" fg:w="7"/><text x="2.9796%" y="879.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (10 samples, 0.02%)</title><rect x="2.7457%" y="869" width="0.0201%" height="15" fill="rgb(241,83,37)" fg:x="1367" fg:w="10"/><text x="2.9957%" y="879.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (31 samples, 0.06%)</title><rect x="2.7658%" y="869" width="0.0623%" height="15" fill="rgb(233,36,39)" fg:x="1377" fg:w="31"/><text x="3.0158%" y="879.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="2.8582%" y="869" width="0.0100%" height="15" fill="rgb(226,3,54)" fg:x="1423" fg:w="5"/><text x="3.1082%" y="879.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="2.9024%" y="869" width="0.0141%" height="15" fill="rgb(245,192,40)" fg:x="1445" fg:w="7"/><text x="3.1524%" y="879.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="2.9184%" y="869" width="0.0100%" height="15" fill="rgb(238,167,29)" fg:x="1453" fg:w="5"/><text x="3.1684%" y="879.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="2.9405%" y="869" width="0.0121%" height="15" fill="rgb(232,182,51)" fg:x="1464" fg:w="6"/><text x="3.1905%" y="879.50"></text></g><g><title>_int_free (22 samples, 0.04%)</title><rect x="2.9747%" y="869" width="0.0442%" height="15" fill="rgb(231,60,39)" fg:x="1481" fg:w="22"/><text x="3.2247%" y="879.50"></text></g><g><title>_int_malloc (35 samples, 0.07%)</title><rect x="3.0189%" y="869" width="0.0703%" height="15" fill="rgb(208,69,12)" fg:x="1503" fg:w="35"/><text x="3.2689%" y="879.50"></text></g><g><title>_int_memalign (35 samples, 0.07%)</title><rect x="3.0892%" y="869" width="0.0703%" height="15" fill="rgb(235,93,37)" fg:x="1538" fg:w="35"/><text x="3.3392%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="3.1675%" y="869" width="0.0241%" height="15" fill="rgb(213,116,39)" fg:x="1577" fg:w="12"/><text x="3.4175%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="3.1916%" y="869" width="0.0121%" height="15" fill="rgb(222,207,29)" fg:x="1589" fg:w="6"/><text x="3.4416%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="3.2036%" y="869" width="0.0100%" height="15" fill="rgb(206,96,30)" fg:x="1595" fg:w="5"/><text x="3.4536%" y="879.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (8 samples, 0.02%)</title><rect x="3.2257%" y="869" width="0.0161%" height="15" fill="rgb(218,138,4)" fg:x="1606" fg:w="8"/><text x="3.4757%" y="879.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (12 samples, 0.02%)</title><rect x="3.2539%" y="869" width="0.0241%" height="15" fill="rgb(250,191,14)" fg:x="1620" fg:w="12"/><text x="3.5039%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral (5 samples, 0.01%)</title><rect x="3.2880%" y="869" width="0.0100%" height="15" fill="rgb(239,60,40)" fg:x="1637" fg:w="5"/><text x="3.5380%" y="879.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (5 samples, 0.01%)</title><rect x="3.3081%" y="869" width="0.0100%" height="15" fill="rgb(206,27,48)" fg:x="1647" fg:w="5"/><text x="3.5581%" y="879.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (5 samples, 0.01%)</title><rect x="3.3965%" y="869" width="0.0100%" height="15" fill="rgb(225,35,8)" fg:x="1691" fg:w="5"/><text x="3.6465%" y="879.50"></text></g><g><title>do_query::main_inner::{{closure}} (9 samples, 0.02%)</title><rect x="3.4065%" y="869" width="0.0181%" height="15" fill="rgb(250,213,24)" fg:x="1696" fg:w="9"/><text x="3.6565%" y="879.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (13 samples, 0.03%)</title><rect x="3.4386%" y="869" width="0.0261%" height="15" fill="rgb(247,123,22)" fg:x="1712" fg:w="13"/><text x="3.6886%" y="879.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (5 samples, 0.01%)</title><rect x="3.4648%" y="869" width="0.0100%" height="15" fill="rgb(231,138,38)" fg:x="1725" fg:w="5"/><text x="3.7148%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (5 samples, 0.01%)</title><rect x="3.4889%" y="869" width="0.0100%" height="15" fill="rgb(231,145,46)" fg:x="1737" fg:w="5"/><text x="3.7389%" y="879.50"></text></g><g><title>[[stack]] (420 samples, 0.84%)</title><rect x="2.6573%" y="885" width="0.8436%" height="15" fill="rgb(251,118,11)" fg:x="1323" fg:w="420"/><text x="2.9073%" y="895.50"></text></g><g><title>[[vdso]] (16 samples, 0.03%)</title><rect x="3.5009%" y="885" width="0.0321%" height="15" fill="rgb(217,147,25)" fg:x="1743" fg:w="16"/><text x="3.7509%" y="895.50"></text></g><g><title>_int_memalign (25 samples, 0.05%)</title><rect x="3.5331%" y="869" width="0.0502%" height="15" fill="rgb(247,81,37)" fg:x="1759" fg:w="25"/><text x="3.7831%" y="879.50"></text></g><g><title>[anon] (26 samples, 0.05%)</title><rect x="3.5331%" y="885" width="0.0522%" height="15" fill="rgb(209,12,38)" fg:x="1759" fg:w="26"/><text x="3.7831%" y="895.50"></text></g><g><title>[do_query] (7 samples, 0.01%)</title><rect x="3.6054%" y="869" width="0.0141%" height="15" fill="rgb(227,1,9)" fg:x="1795" fg:w="7"/><text x="3.8554%" y="879.50"></text></g><g><title>[do_query] (38 samples, 0.08%)</title><rect x="3.5853%" y="885" width="0.0763%" height="15" fill="rgb(248,47,43)" fg:x="1785" fg:w="38"/><text x="3.8353%" y="895.50"></text></g><g><title>_int_malloc (9 samples, 0.02%)</title><rect x="3.6696%" y="869" width="0.0181%" height="15" fill="rgb(221,10,30)" fg:x="1827" fg:w="9"/><text x="3.9196%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="3.6877%" y="869" width="0.0121%" height="15" fill="rgb(210,229,1)" fg:x="1836" fg:w="6"/><text x="3.9377%" y="879.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.04%)</title><rect x="3.6616%" y="885" width="0.0422%" height="15" fill="rgb(222,148,37)" fg:x="1823" fg:w="21"/><text x="3.9116%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="869" width="0.0301%" height="15" fill="rgb(234,67,33)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="853" width="0.0301%" height="15" fill="rgb(247,98,35)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="837" width="0.0301%" height="15" fill="rgb(247,138,52)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="821" width="0.0301%" height="15" fill="rgb(213,79,30)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="805" width="0.0301%" height="15" fill="rgb(246,177,23)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="789" width="0.0301%" height="15" fill="rgb(230,62,27)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="773" width="0.0301%" height="15" fill="rgb(216,154,8)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="757" width="0.0301%" height="15" fill="rgb(244,35,45)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="741" width="0.0301%" height="15" fill="rgb(251,115,12)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="725" width="0.0301%" height="15" fill="rgb(240,54,50)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="6.4736%" y="709" width="0.0301%" height="15" fill="rgb(233,84,52)" fg:x="3223" fg:w="15"/><text x="6.7236%" y="719.50"></text></g><g><title>[perf-2693837.map] (1,396 samples, 2.80%)</title><rect x="3.7038%" y="885" width="2.8039%" height="15" fill="rgb(207,117,47)" fg:x="1844" fg:w="1396"/><text x="3.9538%" y="895.50">[p..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="6.5158%" y="869" width="0.0121%" height="15" fill="rgb(249,43,39)" fg:x="3244" fg:w="6"/><text x="6.7658%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="6.5298%" y="869" width="0.0141%" height="15" fill="rgb(209,38,44)" fg:x="3251" fg:w="7"/><text x="6.7798%" y="879.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="6.5539%" y="869" width="0.0100%" height="15" fill="rgb(236,212,23)" fg:x="3263" fg:w="5"/><text x="6.8039%" y="879.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="6.5640%" y="869" width="0.0121%" height="15" fill="rgb(242,79,21)" fg:x="3268" fg:w="6"/><text x="6.8140%" y="879.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="6.5760%" y="805" width="0.0141%" height="15" fill="rgb(211,96,35)" fg:x="3274" fg:w="7"/><text x="6.8260%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,16_usize&gt;&gt; (5 samples, 0.01%)</title><rect x="6.5800%" y="789" width="0.0100%" height="15" fill="rgb(253,215,40)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (5 samples, 0.01%)</title><rect x="6.5800%" y="773" width="0.0100%" height="15" fill="rgb(211,81,21)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="783.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="6.5800%" y="757" width="0.0100%" height="15" fill="rgb(208,190,38)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (5 samples, 0.01%)</title><rect x="6.5800%" y="741" width="0.0100%" height="15" fill="rgb(235,213,38)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="751.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="6.5800%" y="725" width="0.0100%" height="15" fill="rgb(237,122,38)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (5 samples, 0.01%)</title><rect x="6.5800%" y="709" width="0.0100%" height="15" fill="rgb(244,218,35)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="719.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="6.5800%" y="693" width="0.0100%" height="15" fill="rgb(240,68,47)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (5 samples, 0.01%)</title><rect x="6.5800%" y="677" width="0.0100%" height="15" fill="rgb(210,16,53)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="687.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="6.5800%" y="661" width="0.0100%" height="15" fill="rgb(235,124,12)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (5 samples, 0.01%)</title><rect x="6.5800%" y="645" width="0.0100%" height="15" fill="rgb(224,169,11)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="655.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="6.5800%" y="629" width="0.0100%" height="15" fill="rgb(250,166,2)" fg:x="3276" fg:w="5"/><text x="6.8300%" y="639.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="6.5760%" y="821" width="0.0221%" height="15" fill="rgb(242,216,29)" fg:x="3274" fg:w="11"/><text x="6.8260%" y="831.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="6.5760%" y="837" width="0.0321%" height="15" fill="rgb(230,116,27)" fg:x="3274" fg:w="16"/><text x="6.8260%" y="847.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="6.5760%" y="853" width="0.0341%" height="15" fill="rgb(228,99,48)" fg:x="3274" fg:w="17"/><text x="6.8260%" y="863.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="6.5760%" y="869" width="0.0382%" height="15" fill="rgb(253,11,6)" fg:x="3274" fg:w="19"/><text x="6.8260%" y="879.50"></text></g><g><title>[do_query] (12 samples, 0.02%)</title><rect x="6.6684%" y="853" width="0.0241%" height="15" fill="rgb(247,143,39)" fg:x="3320" fg:w="12"/><text x="6.9184%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="6.6805%" y="837" width="0.0121%" height="15" fill="rgb(236,97,10)" fg:x="3326" fg:w="6"/><text x="6.9305%" y="847.50"></text></g><g><title>[do_query] (15 samples, 0.03%)</title><rect x="6.6684%" y="869" width="0.0301%" height="15" fill="rgb(233,208,19)" fg:x="3320" fg:w="15"/><text x="6.9184%" y="879.50"></text></g><g><title>__GI___libc_free (9 samples, 0.02%)</title><rect x="6.6985%" y="869" width="0.0181%" height="15" fill="rgb(216,164,2)" fg:x="3335" fg:w="9"/><text x="6.9485%" y="879.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.07%)</title><rect x="6.7166%" y="869" width="0.0683%" height="15" fill="rgb(220,129,5)" fg:x="3344" fg:w="34"/><text x="6.9666%" y="879.50"></text></g><g><title>__calloc (24 samples, 0.05%)</title><rect x="6.7869%" y="869" width="0.0482%" height="15" fill="rgb(242,17,10)" fg:x="3379" fg:w="24"/><text x="7.0369%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="6.8432%" y="869" width="0.0261%" height="15" fill="rgb(242,107,0)" fg:x="3407" fg:w="13"/><text x="7.0932%" y="879.50"></text></g><g><title>__posix_memalign (19 samples, 0.04%)</title><rect x="6.8693%" y="869" width="0.0382%" height="15" fill="rgb(251,28,31)" fg:x="3420" fg:w="19"/><text x="7.1193%" y="879.50"></text></g><g><title>__rust_probestack (9 samples, 0.02%)</title><rect x="6.9074%" y="869" width="0.0181%" height="15" fill="rgb(233,223,10)" fg:x="3439" fg:w="9"/><text x="7.1574%" y="879.50"></text></g><g><title>_int_free (115 samples, 0.23%)</title><rect x="6.9255%" y="869" width="0.2310%" height="15" fill="rgb(215,21,27)" fg:x="3448" fg:w="115"/><text x="7.1755%" y="879.50"></text></g><g><title>_int_malloc (110 samples, 0.22%)</title><rect x="7.1565%" y="869" width="0.2209%" height="15" fill="rgb(232,23,21)" fg:x="3563" fg:w="110"/><text x="7.4065%" y="879.50"></text></g><g><title>_int_memalign (14 samples, 0.03%)</title><rect x="7.3774%" y="869" width="0.0281%" height="15" fill="rgb(244,5,23)" fg:x="3673" fg:w="14"/><text x="7.6274%" y="879.50"></text></g><g><title>_int_realloc (12 samples, 0.02%)</title><rect x="7.4055%" y="869" width="0.0241%" height="15" fill="rgb(226,81,46)" fg:x="3687" fg:w="12"/><text x="7.6555%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="7.4437%" y="869" width="0.0141%" height="15" fill="rgb(247,70,30)" fg:x="3706" fg:w="7"/><text x="7.6937%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.02%)</title><rect x="7.4578%" y="869" width="0.0181%" height="15" fill="rgb(212,68,19)" fg:x="3713" fg:w="9"/><text x="7.7078%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="7.4758%" y="869" width="0.0121%" height="15" fill="rgb(240,187,13)" fg:x="3722" fg:w="6"/><text x="7.7258%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.02%)</title><rect x="7.5060%" y="869" width="0.0181%" height="15" fill="rgb(223,113,26)" fg:x="3737" fg:w="9"/><text x="7.7560%" y="879.50"></text></g><g><title>arrow_array::array::Array::len (5 samples, 0.01%)</title><rect x="7.5241%" y="869" width="0.0100%" height="15" fill="rgb(206,192,2)" fg:x="3746" fg:w="5"/><text x="7.7741%" y="879.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (51 samples, 0.10%)</title><rect x="7.5622%" y="869" width="0.1024%" height="15" fill="rgb(241,108,4)" fg:x="3765" fg:w="51"/><text x="7.8122%" y="879.50"></text></g><g><title>core::fmt::write (7 samples, 0.01%)</title><rect x="7.6787%" y="869" width="0.0141%" height="15" fill="rgb(247,173,49)" fg:x="3823" fg:w="7"/><text x="7.9287%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.01%)</title><rect x="7.6968%" y="869" width="0.0121%" height="15" fill="rgb(224,114,35)" fg:x="3832" fg:w="6"/><text x="7.9468%" y="879.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="7.8354%" y="821" width="0.0141%" height="15" fill="rgb(245,159,27)" fg:x="3901" fg:w="7"/><text x="8.0854%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="7.8334%" y="837" width="0.0241%" height="15" fill="rgb(245,172,44)" fg:x="3900" fg:w="12"/><text x="8.0834%" y="847.50"></text></g><g><title>__GI___libc_free (24 samples, 0.05%)</title><rect x="7.9057%" y="821" width="0.0482%" height="15" fill="rgb(236,23,11)" fg:x="3936" fg:w="24"/><text x="8.1557%" y="831.50"></text></g><g><title>_int_free (447 samples, 0.90%)</title><rect x="7.9539%" y="821" width="0.8978%" height="15" fill="rgb(205,117,38)" fg:x="3960" fg:w="447"/><text x="8.2039%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (240 samples, 0.48%)</title><rect x="8.3697%" y="805" width="0.4821%" height="15" fill="rgb(237,72,25)" fg:x="4167" fg:w="240"/><text x="8.6197%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (217 samples, 0.44%)</title><rect x="8.4159%" y="789" width="0.4359%" height="15" fill="rgb(244,70,9)" fg:x="4190" fg:w="217"/><text x="8.6659%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (217 samples, 0.44%)</title><rect x="8.4159%" y="773" width="0.4359%" height="15" fill="rgb(217,125,39)" fg:x="4190" fg:w="217"/><text x="8.6659%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (216 samples, 0.43%)</title><rect x="8.4179%" y="757" width="0.4338%" height="15" fill="rgb(235,36,10)" fg:x="4191" fg:w="216"/><text x="8.6679%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (213 samples, 0.43%)</title><rect x="8.4239%" y="741" width="0.4278%" height="15" fill="rgb(251,123,47)" fg:x="4194" fg:w="213"/><text x="8.6739%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (199 samples, 0.40%)</title><rect x="8.4520%" y="725" width="0.3997%" height="15" fill="rgb(221,13,13)" fg:x="4208" fg:w="199"/><text x="8.7020%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (183 samples, 0.37%)</title><rect x="8.4841%" y="709" width="0.3676%" height="15" fill="rgb(238,131,9)" fg:x="4224" fg:w="183"/><text x="8.7341%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (173 samples, 0.35%)</title><rect x="8.5042%" y="693" width="0.3475%" height="15" fill="rgb(211,50,8)" fg:x="4234" fg:w="173"/><text x="8.7542%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (137 samples, 0.28%)</title><rect x="8.5765%" y="677" width="0.2752%" height="15" fill="rgb(245,182,24)" fg:x="4270" fg:w="137"/><text x="8.8265%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (132 samples, 0.27%)</title><rect x="8.5866%" y="661" width="0.2651%" height="15" fill="rgb(242,14,37)" fg:x="4275" fg:w="132"/><text x="8.8366%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (129 samples, 0.26%)</title><rect x="8.5926%" y="645" width="0.2591%" height="15" fill="rgb(246,228,12)" fg:x="4278" fg:w="129"/><text x="8.8426%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (62 samples, 0.12%)</title><rect x="8.7272%" y="629" width="0.1245%" height="15" fill="rgb(213,55,15)" fg:x="4345" fg:w="62"/><text x="8.9772%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (42 samples, 0.08%)</title><rect x="8.7673%" y="613" width="0.0844%" height="15" fill="rgb(209,9,3)" fg:x="4365" fg:w="42"/><text x="9.0173%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="8.8256%" y="597" width="0.0261%" height="15" fill="rgb(230,59,30)" fg:x="4394" fg:w="13"/><text x="9.0756%" y="607.50"></text></g><g><title>__GI___libc_free (8 samples, 0.02%)</title><rect x="8.9220%" y="789" width="0.0161%" height="15" fill="rgb(209,121,21)" fg:x="4442" fg:w="8"/><text x="9.1720%" y="799.50"></text></g><g><title>_int_free (41 samples, 0.08%)</title><rect x="8.9381%" y="789" width="0.0824%" height="15" fill="rgb(220,109,13)" fg:x="4450" fg:w="41"/><text x="9.1881%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.12%)</title><rect x="8.9079%" y="805" width="0.1165%" height="15" fill="rgb(232,18,1)" fg:x="4435" fg:w="58"/><text x="9.1579%" y="815.50"></text></g><g><title>__GI___libc_free (25 samples, 0.05%)</title><rect x="9.0285%" y="805" width="0.0502%" height="15" fill="rgb(215,41,42)" fg:x="4495" fg:w="25"/><text x="9.2785%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (228 samples, 0.46%)</title><rect x="8.8517%" y="821" width="0.4580%" height="15" fill="rgb(224,123,36)" fg:x="4407" fg:w="228"/><text x="9.1017%" y="831.50"></text></g><g><title>_int_free (115 samples, 0.23%)</title><rect x="9.0787%" y="805" width="0.2310%" height="15" fill="rgb(240,125,3)" fg:x="4520" fg:w="115"/><text x="9.3287%" y="815.50"></text></g><g><title>__GI___libc_free (21 samples, 0.04%)</title><rect x="9.3659%" y="805" width="0.0422%" height="15" fill="rgb(205,98,50)" fg:x="4663" fg:w="21"/><text x="9.6159%" y="815.50"></text></g><g><title>_int_free (98 samples, 0.20%)</title><rect x="9.4081%" y="805" width="0.1968%" height="15" fill="rgb(205,185,37)" fg:x="4684" fg:w="98"/><text x="9.6581%" y="815.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="9.7435%" y="773" width="0.0241%" height="15" fill="rgb(238,207,15)" fg:x="4851" fg:w="12"/><text x="9.9935%" y="783.50"></text></g><g><title>_int_free (83 samples, 0.17%)</title><rect x="9.7676%" y="773" width="0.1667%" height="15" fill="rgb(213,199,42)" fg:x="4863" fg:w="83"/><text x="10.0176%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="757" width="0.0141%" height="15" fill="rgb(235,201,11)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="741" width="0.0141%" height="15" fill="rgb(207,46,11)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="725" width="0.0141%" height="15" fill="rgb(241,35,35)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="709" width="0.0141%" height="15" fill="rgb(243,32,47)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="693" width="0.0141%" height="15" fill="rgb(247,202,23)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="677" width="0.0141%" height="15" fill="rgb(219,102,11)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="661" width="0.0141%" height="15" fill="rgb(243,110,44)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="645" width="0.0141%" height="15" fill="rgb(222,74,54)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="629" width="0.0141%" height="15" fill="rgb(216,99,12)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="613" width="0.0141%" height="15" fill="rgb(226,22,26)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="597" width="0.0141%" height="15" fill="rgb(217,163,10)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="581" width="0.0141%" height="15" fill="rgb(213,25,53)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="9.9203%" y="565" width="0.0141%" height="15" fill="rgb(252,105,26)" fg:x="4939" fg:w="7"/><text x="10.1703%" y="575.50"></text></g><g><title>__GI___libc_free (9 samples, 0.02%)</title><rect x="9.9825%" y="757" width="0.0181%" height="15" fill="rgb(220,39,43)" fg:x="4970" fg:w="9"/><text x="10.2325%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (76 samples, 0.15%)</title><rect x="9.9343%" y="773" width="0.1527%" height="15" fill="rgb(229,68,48)" fg:x="4946" fg:w="76"/><text x="10.1843%" y="783.50"></text></g><g><title>_int_free (43 samples, 0.09%)</title><rect x="10.0006%" y="757" width="0.0864%" height="15" fill="rgb(252,8,32)" fg:x="4979" fg:w="43"/><text x="10.2506%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,114 samples, 2.24%)</title><rect x="7.8575%" y="837" width="2.2375%" height="15" fill="rgb(223,20,43)" fg:x="3912" fg:w="1114"/><text x="8.1075%" y="847.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (391 samples, 0.79%)</title><rect x="9.3097%" y="821" width="0.7853%" height="15" fill="rgb(229,81,49)" fg:x="4635" fg:w="391"/><text x="9.5597%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (244 samples, 0.49%)</title><rect x="9.6049%" y="805" width="0.4901%" height="15" fill="rgb(236,28,36)" fg:x="4782" fg:w="244"/><text x="9.8549%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (210 samples, 0.42%)</title><rect x="9.6732%" y="789" width="0.4218%" height="15" fill="rgb(249,185,26)" fg:x="4816" fg:w="210"/><text x="9.9232%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="10.1050%" y="821" width="0.0121%" height="15" fill="rgb(249,174,33)" fg:x="5031" fg:w="6"/><text x="10.3550%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (33 samples, 0.07%)</title><rect x="10.2557%" y="805" width="0.0663%" height="15" fill="rgb(233,201,37)" fg:x="5106" fg:w="33"/><text x="10.5057%" y="815.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (105 samples, 0.21%)</title><rect x="10.1292%" y="821" width="0.2109%" height="15" fill="rgb(221,78,26)" fg:x="5043" fg:w="105"/><text x="10.3792%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="10.3220%" y="805" width="0.0181%" height="15" fill="rgb(250,127,30)" fg:x="5139" fg:w="9"/><text x="10.5720%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="10.3280%" y="789" width="0.0121%" height="15" fill="rgb(230,49,44)" fg:x="5142" fg:w="6"/><text x="10.5780%" y="799.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (8 samples, 0.02%)</title><rect x="10.3561%" y="805" width="0.0161%" height="15" fill="rgb(229,67,23)" fg:x="5156" fg:w="8"/><text x="10.6061%" y="815.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="10.3581%" y="789" width="0.0141%" height="15" fill="rgb(249,83,47)" fg:x="5157" fg:w="7"/><text x="10.6081%" y="799.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="10.3842%" y="805" width="0.0100%" height="15" fill="rgb(215,43,3)" fg:x="5170" fg:w="5"/><text x="10.6342%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="10.3943%" y="805" width="0.0121%" height="15" fill="rgb(238,154,13)" fg:x="5175" fg:w="6"/><text x="10.6443%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="10.3963%" y="789" width="0.0100%" height="15" fill="rgb(219,56,2)" fg:x="5176" fg:w="5"/><text x="10.6463%" y="799.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (7 samples, 0.01%)</title><rect x="10.4365%" y="757" width="0.0141%" height="15" fill="rgb(233,0,4)" fg:x="5196" fg:w="7"/><text x="10.6865%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (178 samples, 0.36%)</title><rect x="10.0950%" y="837" width="0.3575%" height="15" fill="rgb(235,30,7)" fg:x="5026" fg:w="178"/><text x="10.3450%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (56 samples, 0.11%)</title><rect x="10.3400%" y="821" width="0.1125%" height="15" fill="rgb(250,79,13)" fg:x="5148" fg:w="56"/><text x="10.5900%" y="831.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (18 samples, 0.04%)</title><rect x="10.4164%" y="805" width="0.0362%" height="15" fill="rgb(211,146,34)" fg:x="5186" fg:w="18"/><text x="10.6664%" y="815.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (18 samples, 0.04%)</title><rect x="10.4164%" y="789" width="0.0362%" height="15" fill="rgb(228,22,38)" fg:x="5186" fg:w="18"/><text x="10.6664%" y="799.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (9 samples, 0.02%)</title><rect x="10.4345%" y="773" width="0.0181%" height="15" fill="rgb(235,168,5)" fg:x="5195" fg:w="9"/><text x="10.6845%" y="783.50"></text></g><g><title>&lt;datafusion::execution::context::SessionConfig as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="10.4586%" y="821" width="0.0221%" height="15" fill="rgb(221,155,16)" fg:x="5207" fg:w="11"/><text x="10.7086%" y="831.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (19 samples, 0.04%)</title><rect x="10.4525%" y="837" width="0.0382%" height="15" fill="rgb(215,215,53)" fg:x="5204" fg:w="19"/><text x="10.7025%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange&gt; (8 samples, 0.02%)</title><rect x="10.5048%" y="789" width="0.0161%" height="15" fill="rgb(223,4,10)" fg:x="5230" fg:w="8"/><text x="10.7548%" y="799.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (5 samples, 0.01%)</title><rect x="10.5389%" y="773" width="0.0100%" height="15" fill="rgb(234,103,6)" fg:x="5247" fg:w="5"/><text x="10.7889%" y="783.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (11 samples, 0.02%)</title><rect x="10.5489%" y="773" width="0.0221%" height="15" fill="rgb(227,97,0)" fg:x="5252" fg:w="11"/><text x="10.7989%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.02%)</title><rect x="10.5550%" y="757" width="0.0161%" height="15" fill="rgb(234,150,53)" fg:x="5255" fg:w="8"/><text x="10.8050%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (5 samples, 0.01%)</title><rect x="10.5610%" y="741" width="0.0100%" height="15" fill="rgb(228,201,54)" fg:x="5258" fg:w="5"/><text x="10.8110%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="10.6634%" y="757" width="0.0121%" height="15" fill="rgb(222,22,37)" fg:x="5309" fg:w="6"/><text x="10.9134%" y="767.50"></text></g><g><title>__posix_memalign (34 samples, 0.07%)</title><rect x="10.7136%" y="741" width="0.0683%" height="15" fill="rgb(237,53,32)" fg:x="5334" fg:w="34"/><text x="10.9636%" y="751.50"></text></g><g><title>_int_memalign (6 samples, 0.01%)</title><rect x="10.7699%" y="725" width="0.0121%" height="15" fill="rgb(233,25,53)" fg:x="5362" fg:w="6"/><text x="11.0199%" y="735.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (54 samples, 0.11%)</title><rect x="10.6755%" y="757" width="0.1085%" height="15" fill="rgb(210,40,34)" fg:x="5315" fg:w="54"/><text x="10.9255%" y="767.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.05%)</title><rect x="10.8181%" y="725" width="0.0542%" height="15" fill="rgb(241,220,44)" fg:x="5386" fg:w="27"/><text x="11.0681%" y="735.50"></text></g><g><title>_int_malloc (19 samples, 0.04%)</title><rect x="10.8342%" y="709" width="0.0382%" height="15" fill="rgb(235,28,35)" fg:x="5394" fg:w="19"/><text x="11.0842%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.07%)</title><rect x="10.8040%" y="741" width="0.0723%" height="15" fill="rgb(210,56,17)" fg:x="5379" fg:w="36"/><text x="11.0540%" y="751.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (48 samples, 0.10%)</title><rect x="10.7859%" y="757" width="0.0964%" height="15" fill="rgb(224,130,29)" fg:x="5370" fg:w="48"/><text x="11.0359%" y="767.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (26 samples, 0.05%)</title><rect x="10.8864%" y="741" width="0.0522%" height="15" fill="rgb(235,212,8)" fg:x="5420" fg:w="26"/><text x="11.1364%" y="751.50"></text></g><g><title>__posix_memalign (16 samples, 0.03%)</title><rect x="10.9065%" y="725" width="0.0321%" height="15" fill="rgb(223,33,50)" fg:x="5430" fg:w="16"/><text x="11.1565%" y="735.50"></text></g><g><title>_int_memalign (13 samples, 0.03%)</title><rect x="10.9125%" y="709" width="0.0261%" height="15" fill="rgb(219,149,13)" fg:x="5433" fg:w="13"/><text x="11.1625%" y="719.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="10.9125%" y="693" width="0.0261%" height="15" fill="rgb(250,156,29)" fg:x="5433" fg:w="13"/><text x="11.1625%" y="703.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.01%)</title><rect x="10.9466%" y="741" width="0.0100%" height="15" fill="rgb(216,193,19)" fg:x="5450" fg:w="5"/><text x="11.1966%" y="751.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (93 samples, 0.19%)</title><rect x="10.8824%" y="757" width="0.1868%" height="15" fill="rgb(216,135,14)" fg:x="5418" fg:w="93"/><text x="11.1324%" y="767.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (56 samples, 0.11%)</title><rect x="10.9567%" y="741" width="0.1125%" height="15" fill="rgb(241,47,5)" fg:x="5455" fg:w="56"/><text x="11.2067%" y="751.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (54 samples, 0.11%)</title><rect x="10.9607%" y="725" width="0.1085%" height="15" fill="rgb(233,42,35)" fg:x="5457" fg:w="54"/><text x="11.2107%" y="735.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (49 samples, 0.10%)</title><rect x="10.9707%" y="709" width="0.0984%" height="15" fill="rgb(231,13,6)" fg:x="5462" fg:w="49"/><text x="11.2207%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="11.0571%" y="693" width="0.0121%" height="15" fill="rgb(207,181,40)" fg:x="5505" fg:w="6"/><text x="11.3071%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="11.0571%" y="677" width="0.0121%" height="15" fill="rgb(254,173,49)" fg:x="5505" fg:w="6"/><text x="11.3071%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="11.0571%" y="661" width="0.0121%" height="15" fill="rgb(221,1,38)" fg:x="5505" fg:w="6"/><text x="11.3071%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="11.0591%" y="645" width="0.0100%" height="15" fill="rgb(206,124,46)" fg:x="5506" fg:w="5"/><text x="11.3091%" y="655.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.04%)</title><rect x="11.0772%" y="757" width="0.0382%" height="15" fill="rgb(249,21,11)" fg:x="5515" fg:w="19"/><text x="11.3272%" y="767.50"></text></g><g><title>__calloc (10 samples, 0.02%)</title><rect x="11.1154%" y="757" width="0.0201%" height="15" fill="rgb(222,201,40)" fg:x="5534" fg:w="10"/><text x="11.3654%" y="767.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="11.1254%" y="741" width="0.0100%" height="15" fill="rgb(235,61,29)" fg:x="5539" fg:w="5"/><text x="11.3754%" y="751.50"></text></g><g><title>_int_free (13 samples, 0.03%)</title><rect x="11.1374%" y="757" width="0.0261%" height="15" fill="rgb(219,207,3)" fg:x="5545" fg:w="13"/><text x="11.3874%" y="767.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.06%)</title><rect x="11.2519%" y="741" width="0.0582%" height="15" fill="rgb(222,56,46)" fg:x="5602" fg:w="29"/><text x="11.5019%" y="751.50"></text></g><g><title>_int_malloc (19 samples, 0.04%)</title><rect x="11.2720%" y="725" width="0.0382%" height="15" fill="rgb(239,76,54)" fg:x="5612" fg:w="19"/><text x="11.5220%" y="735.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="11.3202%" y="741" width="0.0141%" height="15" fill="rgb(231,124,27)" fg:x="5636" fg:w="7"/><text x="11.5702%" y="751.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (97 samples, 0.19%)</title><rect x="11.1636%" y="757" width="0.1948%" height="15" fill="rgb(249,195,6)" fg:x="5558" fg:w="97"/><text x="11.4136%" y="767.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (12 samples, 0.02%)</title><rect x="11.3343%" y="741" width="0.0241%" height="15" fill="rgb(237,174,47)" fg:x="5643" fg:w="12"/><text x="11.5843%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.02%)</title><rect x="11.3584%" y="757" width="0.0181%" height="15" fill="rgb(206,201,31)" fg:x="5655" fg:w="9"/><text x="11.6084%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (8 samples, 0.02%)</title><rect x="11.3604%" y="741" width="0.0161%" height="15" fill="rgb(231,57,52)" fg:x="5656" fg:w="8"/><text x="11.6104%" y="751.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (7 samples, 0.01%)</title><rect x="11.3765%" y="757" width="0.0141%" height="15" fill="rgb(248,177,22)" fg:x="5664" fg:w="7"/><text x="11.6265%" y="767.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (408 samples, 0.82%)</title><rect x="10.5730%" y="773" width="0.8195%" height="15" fill="rgb(215,211,37)" fg:x="5264" fg:w="408"/><text x="10.8230%" y="783.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (47 samples, 0.09%)</title><rect x="11.3925%" y="757" width="0.0944%" height="15" fill="rgb(241,128,51)" fg:x="5672" fg:w="47"/><text x="11.6425%" y="767.50"></text></g><g><title>__GI___libc_malloc (46 samples, 0.09%)</title><rect x="11.3945%" y="741" width="0.0924%" height="15" fill="rgb(227,165,31)" fg:x="5673" fg:w="46"/><text x="11.6445%" y="751.50"></text></g><g><title>_int_malloc (36 samples, 0.07%)</title><rect x="11.4146%" y="725" width="0.0723%" height="15" fill="rgb(228,167,24)" fg:x="5683" fg:w="36"/><text x="11.6646%" y="735.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (15 samples, 0.03%)</title><rect x="11.4869%" y="757" width="0.0301%" height="15" fill="rgb(228,143,12)" fg:x="5719" fg:w="15"/><text x="11.7369%" y="767.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="11.5211%" y="725" width="0.0121%" height="15" fill="rgb(249,149,8)" fg:x="5736" fg:w="6"/><text x="11.7711%" y="735.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (519 samples, 1.04%)</title><rect x="10.5048%" y="805" width="1.0424%" height="15" fill="rgb(243,35,44)" fg:x="5230" fg:w="519"/><text x="10.7548%" y="815.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (511 samples, 1.03%)</title><rect x="10.5208%" y="789" width="1.0264%" height="15" fill="rgb(246,89,9)" fg:x="5238" fg:w="511"/><text x="10.7708%" y="799.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (77 samples, 0.15%)</title><rect x="11.3925%" y="773" width="0.1547%" height="15" fill="rgb(233,213,13)" fg:x="5672" fg:w="77"/><text x="11.6425%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (14 samples, 0.03%)</title><rect x="11.5191%" y="757" width="0.0281%" height="15" fill="rgb(233,141,41)" fg:x="5735" fg:w="14"/><text x="11.7691%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (14 samples, 0.03%)</title><rect x="11.5191%" y="741" width="0.0281%" height="15" fill="rgb(239,167,4)" fg:x="5735" fg:w="14"/><text x="11.7691%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (6 samples, 0.01%)</title><rect x="11.5351%" y="725" width="0.0121%" height="15" fill="rgb(209,217,16)" fg:x="5743" fg:w="6"/><text x="11.7851%" y="735.50"></text></g><g><title>&lt;dashmap::iter_set::OwningIter&lt;K,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (475 samples, 0.95%)</title><rect x="11.5733%" y="773" width="0.9541%" height="15" fill="rgb(219,88,35)" fg:x="5762" fg:w="475"/><text x="11.8233%" y="783.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="12.5274%" y="773" width="0.0141%" height="15" fill="rgb(220,193,23)" fg:x="6237" fg:w="7"/><text x="12.7774%" y="783.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="12.5294%" y="757" width="0.0121%" height="15" fill="rgb(230,90,52)" fg:x="6238" fg:w="6"/><text x="12.7794%" y="767.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (9 samples, 0.02%)</title><rect x="12.5414%" y="773" width="0.0181%" height="15" fill="rgb(252,106,19)" fg:x="6244" fg:w="9"/><text x="12.7914%" y="783.50"></text></g><g><title>__GI___libc_free (5 samples, 0.01%)</title><rect x="12.5655%" y="757" width="0.0100%" height="15" fill="rgb(206,74,20)" fg:x="6256" fg:w="5"/><text x="12.8155%" y="767.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="12.5756%" y="757" width="0.0100%" height="15" fill="rgb(230,138,44)" fg:x="6261" fg:w="5"/><text x="12.8256%" y="767.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (19 samples, 0.04%)</title><rect x="12.5876%" y="757" width="0.0382%" height="15" fill="rgb(235,182,43)" fg:x="6267" fg:w="19"/><text x="12.8376%" y="767.50"></text></g><g><title>malloc_consolidate (23 samples, 0.05%)</title><rect x="12.8126%" y="709" width="0.0462%" height="15" fill="rgb(242,16,51)" fg:x="6379" fg:w="23"/><text x="13.0626%" y="719.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (117 samples, 0.24%)</title><rect x="12.6258%" y="757" width="0.2350%" height="15" fill="rgb(248,9,4)" fg:x="6286" fg:w="117"/><text x="12.8758%" y="767.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.09%)</title><rect x="12.7664%" y="741" width="0.0944%" height="15" fill="rgb(210,31,22)" fg:x="6356" fg:w="47"/><text x="13.0164%" y="751.50"></text></g><g><title>_int_malloc (47 samples, 0.09%)</title><rect x="12.7664%" y="725" width="0.0944%" height="15" fill="rgb(239,54,39)" fg:x="6356" fg:w="47"/><text x="13.0164%" y="735.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (655 samples, 1.32%)</title><rect x="11.5472%" y="805" width="1.3156%" height="15" fill="rgb(230,99,41)" fg:x="5749" fg:w="655"/><text x="11.7972%" y="815.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (655 samples, 1.32%)</title><rect x="11.5472%" y="789" width="1.3156%" height="15" fill="rgb(253,106,12)" fg:x="5749" fg:w="655"/><text x="11.7972%" y="799.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (151 samples, 0.30%)</title><rect x="12.5595%" y="773" width="0.3033%" height="15" fill="rgb(213,46,41)" fg:x="6253" fg:w="151"/><text x="12.8095%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="12.9371%" y="789" width="0.0362%" height="15" fill="rgb(215,133,35)" fg:x="6441" fg:w="18"/><text x="13.1871%" y="799.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.03%)</title><rect x="12.9391%" y="773" width="0.0341%" height="15" fill="rgb(213,28,5)" fg:x="6442" fg:w="17"/><text x="13.1891%" y="783.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="12.9472%" y="757" width="0.0261%" height="15" fill="rgb(215,77,49)" fg:x="6446" fg:w="13"/><text x="13.1972%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="12.9813%" y="773" width="0.0121%" height="15" fill="rgb(248,100,22)" fg:x="6463" fg:w="6"/><text x="13.2313%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="12.9773%" y="789" width="0.0221%" height="15" fill="rgb(208,67,9)" fg:x="6461" fg:w="11"/><text x="13.2273%" y="799.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="13.0034%" y="789" width="0.0201%" height="15" fill="rgb(219,133,21)" fg:x="6474" fg:w="10"/><text x="13.2534%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.05%)</title><rect x="13.9595%" y="773" width="0.0502%" height="15" fill="rgb(246,46,29)" fg:x="6950" fg:w="25"/><text x="14.2095%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.05%)</title><rect x="13.9595%" y="757" width="0.0502%" height="15" fill="rgb(246,185,52)" fg:x="6950" fg:w="25"/><text x="14.2095%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.05%)</title><rect x="13.9595%" y="741" width="0.0502%" height="15" fill="rgb(252,136,11)" fg:x="6950" fg:w="25"/><text x="14.2095%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.05%)</title><rect x="13.9595%" y="725" width="0.0502%" height="15" fill="rgb(219,138,53)" fg:x="6950" fg:w="25"/><text x="14.2095%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.05%)</title><rect x="13.9615%" y="709" width="0.0482%" height="15" fill="rgb(211,51,23)" fg:x="6951" fg:w="24"/><text x="14.2115%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.04%)</title><rect x="13.9655%" y="693" width="0.0442%" height="15" fill="rgb(247,221,28)" fg:x="6953" fg:w="22"/><text x="14.2155%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.04%)</title><rect x="13.9695%" y="677" width="0.0402%" height="15" fill="rgb(251,222,45)" fg:x="6955" fg:w="20"/><text x="14.2195%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.03%)</title><rect x="13.9755%" y="661" width="0.0341%" height="15" fill="rgb(217,162,53)" fg:x="6958" fg:w="17"/><text x="14.2255%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="13.9775%" y="645" width="0.0321%" height="15" fill="rgb(229,93,14)" fg:x="6959" fg:w="16"/><text x="14.2275%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="13.9775%" y="629" width="0.0321%" height="15" fill="rgb(209,67,49)" fg:x="6959" fg:w="16"/><text x="14.2275%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="13.9796%" y="613" width="0.0301%" height="15" fill="rgb(213,87,29)" fg:x="6960" fg:w="15"/><text x="14.2296%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="13.9956%" y="597" width="0.0141%" height="15" fill="rgb(205,151,52)" fg:x="6968" fg:w="7"/><text x="14.2456%" y="607.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.03%)</title><rect x="14.0097%" y="773" width="0.0261%" height="15" fill="rgb(253,215,39)" fg:x="6975" fg:w="13"/><text x="14.2597%" y="783.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="14.0257%" y="757" width="0.0100%" height="15" fill="rgb(221,220,41)" fg:x="6983" fg:w="5"/><text x="14.2757%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (44 samples, 0.09%)</title><rect x="14.0418%" y="773" width="0.0884%" height="15" fill="rgb(218,133,21)" fg:x="6991" fg:w="44"/><text x="14.2918%" y="783.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (645 samples, 1.30%)</title><rect x="13.0335%" y="789" width="1.2955%" height="15" fill="rgb(221,193,43)" fg:x="6489" fg:w="645"/><text x="13.2835%" y="799.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (96 samples, 0.19%)</title><rect x="14.1362%" y="773" width="0.1928%" height="15" fill="rgb(240,128,52)" fg:x="7038" fg:w="96"/><text x="14.3862%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.3190%" y="757" width="0.0100%" height="15" fill="rgb(253,114,12)" fg:x="7129" fg:w="5"/><text x="14.5690%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.3190%" y="741" width="0.0100%" height="15" fill="rgb(215,223,47)" fg:x="7129" fg:w="5"/><text x="14.5690%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.3190%" y="725" width="0.0100%" height="15" fill="rgb(248,225,23)" fg:x="7129" fg:w="5"/><text x="14.5690%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.3190%" y="709" width="0.0100%" height="15" fill="rgb(250,108,0)" fg:x="7129" fg:w="5"/><text x="14.5690%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.3190%" y="693" width="0.0100%" height="15" fill="rgb(228,208,7)" fg:x="7129" fg:w="5"/><text x="14.5690%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="14.3190%" y="677" width="0.0100%" height="15" fill="rgb(244,45,10)" fg:x="7129" fg:w="5"/><text x="14.5690%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="14.3290%" y="789" width="0.0121%" height="15" fill="rgb(207,125,25)" fg:x="7134" fg:w="6"/><text x="14.5790%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="14.3311%" y="773" width="0.0100%" height="15" fill="rgb(210,195,18)" fg:x="7135" fg:w="5"/><text x="14.5811%" y="783.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.01%)</title><rect x="14.3311%" y="757" width="0.0100%" height="15" fill="rgb(249,80,12)" fg:x="7135" fg:w="5"/><text x="14.5811%" y="767.50"></text></g><g><title>_int_realloc (5 samples, 0.01%)</title><rect x="14.3311%" y="741" width="0.0100%" height="15" fill="rgb(221,65,9)" fg:x="7135" fg:w="5"/><text x="14.5811%" y="751.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="14.3311%" y="725" width="0.0100%" height="15" fill="rgb(235,49,36)" fg:x="7135" fg:w="5"/><text x="14.5811%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.02%)</title><rect x="14.3471%" y="789" width="0.0161%" height="15" fill="rgb(225,32,20)" fg:x="7143" fg:w="8"/><text x="14.5971%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (7 samples, 0.01%)</title><rect x="14.3491%" y="773" width="0.0141%" height="15" fill="rgb(215,141,46)" fg:x="7144" fg:w="7"/><text x="14.5991%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="14.3632%" y="789" width="0.0141%" height="15" fill="rgb(250,160,47)" fg:x="7151" fg:w="7"/><text x="14.6132%" y="799.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (5 samples, 0.01%)</title><rect x="14.3853%" y="789" width="0.0100%" height="15" fill="rgb(216,222,40)" fg:x="7162" fg:w="5"/><text x="14.6353%" y="799.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.12%)</title><rect x="14.4797%" y="725" width="0.1205%" height="15" fill="rgb(234,217,39)" fg:x="7209" fg:w="60"/><text x="14.7297%" y="735.50"></text></g><g><title>_int_malloc (50 samples, 0.10%)</title><rect x="14.4998%" y="709" width="0.1004%" height="15" fill="rgb(207,178,40)" fg:x="7219" fg:w="50"/><text x="14.7498%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.15%)</title><rect x="14.4516%" y="741" width="0.1506%" height="15" fill="rgb(221,136,13)" fg:x="7195" fg:w="75"/><text x="14.7016%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="14.6082%" y="741" width="0.0100%" height="15" fill="rgb(249,199,10)" fg:x="7273" fg:w="5"/><text x="14.8582%" y="751.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (106 samples, 0.21%)</title><rect x="14.4114%" y="773" width="0.2129%" height="15" fill="rgb(249,222,13)" fg:x="7175" fg:w="106"/><text x="14.6614%" y="783.50"></text></g><g><title>datafusion::physical_plan::project_schema (90 samples, 0.18%)</title><rect x="14.4435%" y="757" width="0.1808%" height="15" fill="rgb(244,185,38)" fg:x="7191" fg:w="90"/><text x="14.6935%" y="767.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (115 samples, 0.23%)</title><rect x="14.3953%" y="789" width="0.2310%" height="15" fill="rgb(236,202,9)" fg:x="7167" fg:w="115"/><text x="14.6453%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="14.6424%" y="773" width="0.0121%" height="15" fill="rgb(250,229,37)" fg:x="7290" fg:w="6"/><text x="14.8924%" y="783.50"></text></g><g><title>__GI___libc_malloc (60 samples, 0.12%)</title><rect x="14.6685%" y="757" width="0.1205%" height="15" fill="rgb(206,174,23)" fg:x="7303" fg:w="60"/><text x="14.9185%" y="767.50"></text></g><g><title>_int_malloc (47 samples, 0.09%)</title><rect x="14.6946%" y="741" width="0.0944%" height="15" fill="rgb(211,33,43)" fg:x="7316" fg:w="47"/><text x="14.9446%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="14.7890%" y="757" width="0.0121%" height="15" fill="rgb(245,58,50)" fg:x="7363" fg:w="6"/><text x="15.0390%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="14.8051%" y="757" width="0.0161%" height="15" fill="rgb(244,68,36)" fg:x="7371" fg:w="8"/><text x="15.0551%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="14.8091%" y="741" width="0.0121%" height="15" fill="rgb(232,229,15)" fg:x="7373" fg:w="6"/><text x="15.0591%" y="751.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (107 samples, 0.21%)</title><rect x="14.6263%" y="789" width="0.2149%" height="15" fill="rgb(254,30,23)" fg:x="7282" fg:w="107"/><text x="14.8763%" y="799.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (92 samples, 0.18%)</title><rect x="14.6564%" y="773" width="0.1848%" height="15" fill="rgb(235,160,14)" fg:x="7297" fg:w="92"/><text x="14.9064%" y="783.50"></text></g><g><title>datafusion_expr::expr::create_name (10 samples, 0.02%)</title><rect x="14.8211%" y="757" width="0.0201%" height="15" fill="rgb(212,155,44)" fg:x="7379" fg:w="10"/><text x="15.0711%" y="767.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr::new (131 samples, 0.26%)</title><rect x="14.8412%" y="789" width="0.2631%" height="15" fill="rgb(226,2,50)" fg:x="7389" fg:w="131"/><text x="15.0912%" y="799.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (127 samples, 0.26%)</title><rect x="14.8493%" y="773" width="0.2551%" height="15" fill="rgb(234,177,6)" fg:x="7393" fg:w="127"/><text x="15.0993%" y="783.50"></text></g><g><title>__GI___libc_malloc (65 samples, 0.13%)</title><rect x="14.9738%" y="757" width="0.1306%" height="15" fill="rgb(217,24,9)" fg:x="7455" fg:w="65"/><text x="15.2238%" y="767.50"></text></g><g><title>_int_malloc (54 samples, 0.11%)</title><rect x="14.9959%" y="741" width="0.1085%" height="15" fill="rgb(220,13,46)" fg:x="7466" fg:w="54"/><text x="15.2459%" y="751.50"></text></g><g><title>malloc_consolidate (16 samples, 0.03%)</title><rect x="15.0722%" y="725" width="0.0321%" height="15" fill="rgb(239,221,27)" fg:x="7504" fg:w="16"/><text x="15.3222%" y="735.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="15.1124%" y="773" width="0.0141%" height="15" fill="rgb(222,198,25)" fg:x="7524" fg:w="7"/><text x="15.3624%" y="783.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (2,310 samples, 4.64%)</title><rect x="10.4927%" y="821" width="4.6398%" height="15" fill="rgb(211,99,13)" fg:x="5224" fg:w="2310"/><text x="10.7427%" y="831.50">&lt;fast..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (1,129 samples, 2.27%)</title><rect x="12.8648%" y="805" width="2.2677%" height="15" fill="rgb(232,111,31)" fg:x="6405" fg:w="1129"/><text x="13.1148%" y="815.50">f..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="15.1043%" y="789" width="0.0281%" height="15" fill="rgb(245,82,37)" fg:x="7520" fg:w="14"/><text x="15.3543%" y="799.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (2,314 samples, 4.65%)</title><rect x="10.4907%" y="837" width="4.6478%" height="15" fill="rgb(227,149,46)" fg:x="5223" fg:w="2314"/><text x="10.7407%" y="847.50">&lt;fast..</text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="26.6877%" y="773" width="0.0261%" height="15" fill="rgb(218,36,50)" fg:x="13287" fg:w="13"/><text x="26.9377%" y="783.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (32 samples, 0.06%)</title><rect x="26.6596%" y="789" width="0.0643%" height="15" fill="rgb(226,80,48)" fg:x="13273" fg:w="32"/><text x="26.9096%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (5 samples, 0.01%)</title><rect x="26.7138%" y="773" width="0.0100%" height="15" fill="rgb(238,224,15)" fg:x="13300" fg:w="5"/><text x="26.9638%" y="783.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.05%)</title><rect x="26.7259%" y="789" width="0.0522%" height="15" fill="rgb(241,136,10)" fg:x="13306" fg:w="26"/><text x="26.9759%" y="799.50"></text></g><g><title>_int_malloc (15 samples, 0.03%)</title><rect x="26.7479%" y="773" width="0.0301%" height="15" fill="rgb(208,32,45)" fg:x="13317" fg:w="15"/><text x="26.9979%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (29 samples, 0.06%)</title><rect x="26.7781%" y="789" width="0.0582%" height="15" fill="rgb(207,135,9)" fg:x="13332" fg:w="29"/><text x="27.0281%" y="799.50"></text></g><g><title>_int_free (94 samples, 0.19%)</title><rect x="27.1818%" y="757" width="0.1888%" height="15" fill="rgb(206,86,44)" fg:x="13533" fg:w="94"/><text x="27.4318%" y="767.50"></text></g><g><title>__posix_memalign (438 samples, 0.88%)</title><rect x="26.8363%" y="789" width="0.8797%" height="15" fill="rgb(245,177,15)" fg:x="13361" fg:w="438"/><text x="27.0863%" y="799.50"></text></g><g><title>_int_memalign (301 samples, 0.60%)</title><rect x="27.1115%" y="773" width="0.6046%" height="15" fill="rgb(206,64,50)" fg:x="13498" fg:w="301"/><text x="27.3615%" y="783.50"></text></g><g><title>_int_malloc (172 samples, 0.35%)</title><rect x="27.3706%" y="757" width="0.3455%" height="15" fill="rgb(234,36,40)" fg:x="13627" fg:w="172"/><text x="27.6206%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 samples, 0.36%)</title><rect x="27.7161%" y="789" width="0.3615%" height="15" fill="rgb(213,64,8)" fg:x="13799" fg:w="180"/><text x="27.9661%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 samples, 0.34%)</title><rect x="27.7341%" y="773" width="0.3435%" height="15" fill="rgb(210,75,36)" fg:x="13808" fg:w="171"/><text x="27.9841%" y="783.50"></text></g><g><title>__GI___libc_malloc (159 samples, 0.32%)</title><rect x="27.7583%" y="757" width="0.3194%" height="15" fill="rgb(229,88,21)" fg:x="13820" fg:w="159"/><text x="28.0083%" y="767.50"></text></g><g><title>_int_malloc (140 samples, 0.28%)</title><rect x="27.7964%" y="741" width="0.2812%" height="15" fill="rgb(252,204,47)" fg:x="13839" fg:w="140"/><text x="28.0464%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (117 samples, 0.24%)</title><rect x="27.8426%" y="725" width="0.2350%" height="15" fill="rgb(208,77,27)" fg:x="13862" fg:w="117"/><text x="28.0926%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (86 samples, 0.17%)</title><rect x="27.9049%" y="709" width="0.1727%" height="15" fill="rgb(221,76,26)" fg:x="13893" fg:w="86"/><text x="28.1549%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (68 samples, 0.14%)</title><rect x="27.9410%" y="693" width="0.1366%" height="15" fill="rgb(225,139,18)" fg:x="13911" fg:w="68"/><text x="28.1910%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (66 samples, 0.13%)</title><rect x="27.9450%" y="677" width="0.1326%" height="15" fill="rgb(230,137,11)" fg:x="13913" fg:w="66"/><text x="28.1950%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (63 samples, 0.13%)</title><rect x="27.9511%" y="661" width="0.1265%" height="15" fill="rgb(212,28,1)" fg:x="13916" fg:w="63"/><text x="28.2011%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (62 samples, 0.12%)</title><rect x="27.9531%" y="645" width="0.1245%" height="15" fill="rgb(248,164,17)" fg:x="13917" fg:w="62"/><text x="28.2031%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.09%)</title><rect x="27.9832%" y="629" width="0.0944%" height="15" fill="rgb(222,171,42)" fg:x="13932" fg:w="47"/><text x="28.2332%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.04%)</title><rect x="28.0374%" y="613" width="0.0402%" height="15" fill="rgb(243,84,45)" fg:x="13959" fg:w="20"/><text x="28.2874%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="28.0595%" y="597" width="0.0181%" height="15" fill="rgb(252,49,23)" fg:x="13970" fg:w="9"/><text x="28.3095%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="28.0676%" y="581" width="0.0100%" height="15" fill="rgb(215,19,7)" fg:x="13974" fg:w="5"/><text x="28.3176%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="28.0676%" y="565" width="0.0100%" height="15" fill="rgb(238,81,41)" fg:x="13974" fg:w="5"/><text x="28.3176%" y="575.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (793 samples, 1.59%)</title><rect x="26.5049%" y="805" width="1.5928%" height="15" fill="rgb(210,199,37)" fg:x="13196" fg:w="793"/><text x="26.7549%" y="815.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (10 samples, 0.02%)</title><rect x="28.0776%" y="789" width="0.0201%" height="15" fill="rgb(244,192,49)" fg:x="13979" fg:w="10"/><text x="28.3276%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.09%)</title><rect x="28.0977%" y="805" width="0.0944%" height="15" fill="rgb(226,211,11)" fg:x="13989" fg:w="47"/><text x="28.3477%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="28.1037%" y="789" width="0.0884%" height="15" fill="rgb(236,162,54)" fg:x="13992" fg:w="44"/><text x="28.3537%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="28.1037%" y="773" width="0.0884%" height="15" fill="rgb(220,229,9)" fg:x="13992" fg:w="44"/><text x="28.3537%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="28.1037%" y="757" width="0.0884%" height="15" fill="rgb(250,87,22)" fg:x="13992" fg:w="44"/><text x="28.3537%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="28.1037%" y="741" width="0.0884%" height="15" fill="rgb(239,43,17)" fg:x="13992" fg:w="44"/><text x="28.3537%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="28.1037%" y="725" width="0.0884%" height="15" fill="rgb(231,177,25)" fg:x="13992" fg:w="44"/><text x="28.3537%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (37 samples, 0.07%)</title><rect x="28.1178%" y="709" width="0.0743%" height="15" fill="rgb(219,179,1)" fg:x="13999" fg:w="37"/><text x="28.3678%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.07%)</title><rect x="28.1218%" y="693" width="0.0703%" height="15" fill="rgb(238,219,53)" fg:x="14001" fg:w="35"/><text x="28.3718%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.06%)</title><rect x="28.1298%" y="677" width="0.0623%" height="15" fill="rgb(232,167,36)" fg:x="14005" fg:w="31"/><text x="28.3798%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (30 samples, 0.06%)</title><rect x="28.1318%" y="661" width="0.0603%" height="15" fill="rgb(244,19,51)" fg:x="14006" fg:w="30"/><text x="28.3818%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="28.1379%" y="645" width="0.0542%" height="15" fill="rgb(224,6,22)" fg:x="14009" fg:w="27"/><text x="28.3879%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="28.1700%" y="629" width="0.0221%" height="15" fill="rgb(224,145,5)" fg:x="14025" fg:w="11"/><text x="28.4200%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="28.1720%" y="613" width="0.0201%" height="15" fill="rgb(234,130,49)" fg:x="14026" fg:w="10"/><text x="28.4220%" y="623.50"></text></g><g><title>__GI___libc_free (112 samples, 0.22%)</title><rect x="28.1921%" y="805" width="0.2250%" height="15" fill="rgb(254,6,2)" fg:x="14036" fg:w="112"/><text x="28.4421%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (922 samples, 1.85%)</title><rect x="31.3315%" y="773" width="1.8519%" height="15" fill="rgb(208,96,46)" fg:x="15599" fg:w="922"/><text x="31.5815%" y="783.50">[..</text></g><g><title>[[kernel.kallsyms]] (839 samples, 1.69%)</title><rect x="31.4982%" y="757" width="1.6852%" height="15" fill="rgb(239,3,39)" fg:x="15682" fg:w="839"/><text x="31.7482%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (838 samples, 1.68%)</title><rect x="31.5002%" y="741" width="1.6832%" height="15" fill="rgb(233,210,1)" fg:x="15683" fg:w="838"/><text x="31.7502%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (832 samples, 1.67%)</title><rect x="31.5122%" y="725" width="1.6711%" height="15" fill="rgb(244,137,37)" fg:x="15689" fg:w="832"/><text x="31.7622%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (814 samples, 1.63%)</title><rect x="31.5484%" y="709" width="1.6350%" height="15" fill="rgb(240,136,2)" fg:x="15707" fg:w="814"/><text x="31.7984%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (782 samples, 1.57%)</title><rect x="31.6127%" y="693" width="1.5707%" height="15" fill="rgb(239,18,37)" fg:x="15739" fg:w="782"/><text x="31.8627%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (709 samples, 1.42%)</title><rect x="31.7593%" y="677" width="1.4241%" height="15" fill="rgb(218,185,22)" fg:x="15812" fg:w="709"/><text x="32.0093%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (666 samples, 1.34%)</title><rect x="31.8457%" y="661" width="1.3377%" height="15" fill="rgb(225,218,4)" fg:x="15855" fg:w="666"/><text x="32.0957%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (495 samples, 0.99%)</title><rect x="32.1891%" y="645" width="0.9942%" height="15" fill="rgb(230,182,32)" fg:x="16026" fg:w="495"/><text x="32.4391%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (477 samples, 0.96%)</title><rect x="32.2253%" y="629" width="0.9581%" height="15" fill="rgb(242,56,43)" fg:x="16044" fg:w="477"/><text x="32.4753%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (455 samples, 0.91%)</title><rect x="32.2695%" y="613" width="0.9139%" height="15" fill="rgb(233,99,24)" fg:x="16066" fg:w="455"/><text x="32.5195%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (248 samples, 0.50%)</title><rect x="32.6852%" y="597" width="0.4981%" height="15" fill="rgb(234,209,42)" fg:x="16273" fg:w="248"/><text x="32.9352%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (167 samples, 0.34%)</title><rect x="32.8479%" y="581" width="0.3354%" height="15" fill="rgb(227,7,12)" fg:x="16354" fg:w="167"/><text x="33.0979%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (43 samples, 0.09%)</title><rect x="33.0970%" y="565" width="0.0864%" height="15" fill="rgb(245,203,43)" fg:x="16478" fg:w="43"/><text x="33.3470%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="33.1572%" y="549" width="0.0261%" height="15" fill="rgb(238,205,33)" fg:x="16508" fg:w="13"/><text x="33.4072%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="33.1653%" y="533" width="0.0181%" height="15" fill="rgb(231,56,7)" fg:x="16512" fg:w="9"/><text x="33.4153%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="33.1713%" y="517" width="0.0121%" height="15" fill="rgb(244,186,29)" fg:x="16515" fg:w="6"/><text x="33.4213%" y="527.50"></text></g><g><title>__GI___libc_malloc (2,376 samples, 4.77%)</title><rect x="28.4171%" y="805" width="4.7723%" height="15" fill="rgb(234,111,31)" fg:x="14148" fg:w="2376"/><text x="28.6671%" y="815.50">__GI__..</text></g><g><title>_int_malloc (2,143 samples, 4.30%)</title><rect x="28.8851%" y="789" width="4.3043%" height="15" fill="rgb(241,149,10)" fg:x="14381" fg:w="2143"/><text x="29.1351%" y="799.50">_int_..</text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="789" width="0.0141%" height="15" fill="rgb(249,206,44)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="773" width="0.0141%" height="15" fill="rgb(251,153,30)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="757" width="0.0141%" height="15" fill="rgb(239,152,38)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="741" width="0.0141%" height="15" fill="rgb(249,139,47)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="725" width="0.0141%" height="15" fill="rgb(244,64,35)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="709" width="0.0141%" height="15" fill="rgb(216,46,15)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="693" width="0.0141%" height="15" fill="rgb(250,74,19)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="677" width="0.0141%" height="15" fill="rgb(249,42,33)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="661" width="0.0141%" height="15" fill="rgb(242,149,17)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="35.2281%" y="645" width="0.0141%" height="15" fill="rgb(244,29,21)" fg:x="17539" fg:w="7"/><text x="35.4781%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="35.2301%" y="629" width="0.0121%" height="15" fill="rgb(220,130,37)" fg:x="17540" fg:w="6"/><text x="35.4801%" y="639.50"></text></g><g><title>__calloc (1,499 samples, 3.01%)</title><rect x="33.1894%" y="805" width="3.0108%" height="15" fill="rgb(211,67,2)" fg:x="16524" fg:w="1499"/><text x="33.4394%" y="815.50">__c..</text></g><g><title>_int_malloc (477 samples, 0.96%)</title><rect x="35.2421%" y="789" width="0.9581%" height="15" fill="rgb(235,68,52)" fg:x="17546" fg:w="477"/><text x="35.4921%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.01%)</title><rect x="36.1882%" y="773" width="0.0121%" height="15" fill="rgb(246,142,3)" fg:x="18017" fg:w="6"/><text x="36.4382%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (82 samples, 0.16%)</title><rect x="36.2002%" y="805" width="0.1647%" height="15" fill="rgb(241,25,7)" fg:x="18023" fg:w="82"/><text x="36.4502%" y="815.50"></text></g><g><title>_int_free (157 samples, 0.32%)</title><rect x="36.8329%" y="773" width="0.3153%" height="15" fill="rgb(242,119,39)" fg:x="18338" fg:w="157"/><text x="37.0829%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="39.3998%" y="757" width="0.0121%" height="15" fill="rgb(241,98,45)" fg:x="19616" fg:w="6"/><text x="39.6498%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="39.3998%" y="741" width="0.0121%" height="15" fill="rgb(254,28,30)" fg:x="19616" fg:w="6"/><text x="39.6498%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="39.3998%" y="725" width="0.0121%" height="15" fill="rgb(241,142,54)" fg:x="19616" fg:w="6"/><text x="39.6498%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="39.3998%" y="709" width="0.0121%" height="15" fill="rgb(222,85,15)" fg:x="19616" fg:w="6"/><text x="39.6498%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="39.3998%" y="693" width="0.0121%" height="15" fill="rgb(210,85,47)" fg:x="19616" fg:w="6"/><text x="39.6498%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="39.4019%" y="677" width="0.0100%" height="15" fill="rgb(224,206,25)" fg:x="19617" fg:w="5"/><text x="39.6519%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="39.4019%" y="661" width="0.0100%" height="15" fill="rgb(243,201,19)" fg:x="19617" fg:w="5"/><text x="39.6519%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="39.4019%" y="645" width="0.0100%" height="15" fill="rgb(236,59,4)" fg:x="19617" fg:w="5"/><text x="39.6519%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="741" width="0.0121%" height="15" fill="rgb(254,179,45)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="725" width="0.0121%" height="15" fill="rgb(226,14,10)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="709" width="0.0121%" height="15" fill="rgb(244,27,41)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="693" width="0.0121%" height="15" fill="rgb(235,35,32)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="677" width="0.0121%" height="15" fill="rgb(218,68,31)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="661" width="0.0121%" height="15" fill="rgb(207,120,37)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="645" width="0.0121%" height="15" fill="rgb(227,98,0)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="629" width="0.0121%" height="15" fill="rgb(207,7,3)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="613" width="0.0121%" height="15" fill="rgb(206,98,19)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="597" width="0.0121%" height="15" fill="rgb(217,5,26)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="40.9866%" y="581" width="0.0121%" height="15" fill="rgb(235,190,38)" fg:x="20406" fg:w="6"/><text x="41.2366%" y="591.50"></text></g><g><title>malloc_consolidate (827 samples, 1.66%)</title><rect x="39.4119%" y="757" width="1.6611%" height="15" fill="rgb(247,86,24)" fg:x="19622" fg:w="827"/><text x="39.6619%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (37 samples, 0.07%)</title><rect x="40.9987%" y="741" width="0.0743%" height="15" fill="rgb(205,101,16)" fg:x="20412" fg:w="37"/><text x="41.2487%" y="751.50"></text></g><g><title>__posix_memalign (2,463 samples, 4.95%)</title><rect x="36.3649%" y="805" width="4.9471%" height="15" fill="rgb(246,168,33)" fg:x="18105" fg:w="2463"/><text x="36.6149%" y="815.50">__posi..</text></g><g><title>_int_memalign (2,301 samples, 4.62%)</title><rect x="36.6903%" y="789" width="4.6217%" height="15" fill="rgb(231,114,1)" fg:x="18267" fg:w="2301"/><text x="36.9403%" y="799.50">_int_..</text></g><g><title>_int_malloc (2,073 samples, 4.16%)</title><rect x="37.1483%" y="773" width="4.1637%" height="15" fill="rgb(207,184,53)" fg:x="18495" fg:w="2073"/><text x="37.3983%" y="783.50">_int_..</text></g><g><title>unlink_chunk.isra.0 (119 samples, 0.24%)</title><rect x="41.0730%" y="757" width="0.2390%" height="15" fill="rgb(224,95,51)" fg:x="20449" fg:w="119"/><text x="41.3230%" y="767.50"></text></g><g><title>_int_free (570 samples, 1.14%)</title><rect x="41.3120%" y="805" width="1.1449%" height="15" fill="rgb(212,188,45)" fg:x="20568" fg:w="570"/><text x="41.5620%" y="815.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (241 samples, 0.48%)</title><rect x="42.4569%" y="805" width="0.4841%" height="15" fill="rgb(223,154,38)" fg:x="21138" fg:w="241"/><text x="42.7069%" y="815.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="42.9932%" y="789" width="0.0241%" height="15" fill="rgb(251,22,52)" fg:x="21405" fg:w="12"/><text x="43.2432%" y="799.50"></text></g><g><title>arrow_schema::field::Field::new (45 samples, 0.09%)</title><rect x="42.9409%" y="805" width="0.0904%" height="15" fill="rgb(229,209,22)" fg:x="21379" fg:w="45"/><text x="43.1909%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="43.0173%" y="789" width="0.0141%" height="15" fill="rgb(234,138,34)" fg:x="21417" fg:w="7"/><text x="43.2673%" y="799.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_add_epi64 (846 samples, 1.70%)</title><rect x="43.0313%" y="805" width="1.6992%" height="15" fill="rgb(212,95,11)" fg:x="21424" fg:w="846"/><text x="43.2813%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="789" width="0.0141%" height="15" fill="rgb(240,179,47)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="773" width="0.0141%" height="15" fill="rgb(240,163,11)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="757" width="0.0141%" height="15" fill="rgb(236,37,12)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="741" width="0.0141%" height="15" fill="rgb(232,164,16)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="725" width="0.0141%" height="15" fill="rgb(244,205,15)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="709" width="0.0141%" height="15" fill="rgb(223,117,47)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="44.7165%" y="693" width="0.0141%" height="15" fill="rgb(244,107,35)" fg:x="22263" fg:w="7"/><text x="44.9665%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="44.7185%" y="677" width="0.0121%" height="15" fill="rgb(205,140,8)" fg:x="22264" fg:w="6"/><text x="44.9685%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="44.7185%" y="661" width="0.0121%" height="15" fill="rgb(228,84,46)" fg:x="22264" fg:w="6"/><text x="44.9685%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="44.7205%" y="645" width="0.0100%" height="15" fill="rgb(254,188,9)" fg:x="22265" fg:w="5"/><text x="44.9705%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="44.7205%" y="629" width="0.0100%" height="15" fill="rgb(206,112,54)" fg:x="22265" fg:w="5"/><text x="44.9705%" y="639.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (1,844 samples, 3.70%)</title><rect x="44.7306%" y="805" width="3.7038%" height="15" fill="rgb(216,84,49)" fg:x="22270" fg:w="1844"/><text x="44.9806%" y="815.50">core..</text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.06%)</title><rect x="48.3781%" y="789" width="0.0562%" height="15" fill="rgb(214,194,35)" fg:x="24086" fg:w="28"/><text x="48.6281%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.06%)</title><rect x="48.3781%" y="773" width="0.0562%" height="15" fill="rgb(249,28,3)" fg:x="24086" fg:w="28"/><text x="48.6281%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.06%)</title><rect x="48.3781%" y="757" width="0.0562%" height="15" fill="rgb(222,56,52)" fg:x="24086" fg:w="28"/><text x="48.6281%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="48.3801%" y="741" width="0.0542%" height="15" fill="rgb(245,217,50)" fg:x="24087" fg:w="27"/><text x="48.6301%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="48.3801%" y="725" width="0.0542%" height="15" fill="rgb(213,201,24)" fg:x="24087" fg:w="27"/><text x="48.6301%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.05%)</title><rect x="48.3821%" y="709" width="0.0522%" height="15" fill="rgb(248,116,28)" fg:x="24088" fg:w="26"/><text x="48.6321%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.05%)</title><rect x="48.3861%" y="693" width="0.0482%" height="15" fill="rgb(219,72,43)" fg:x="24090" fg:w="24"/><text x="48.6361%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="48.3881%" y="677" width="0.0462%" height="15" fill="rgb(209,138,14)" fg:x="24091" fg:w="23"/><text x="48.6381%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.04%)</title><rect x="48.3942%" y="661" width="0.0402%" height="15" fill="rgb(222,18,33)" fg:x="24094" fg:w="20"/><text x="48.6442%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="48.3962%" y="645" width="0.0382%" height="15" fill="rgb(213,199,7)" fg:x="24095" fg:w="19"/><text x="48.6462%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.03%)</title><rect x="48.4002%" y="629" width="0.0341%" height="15" fill="rgb(250,110,10)" fg:x="24097" fg:w="17"/><text x="48.6502%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="48.4183%" y="613" width="0.0161%" height="15" fill="rgb(248,123,6)" fg:x="24106" fg:w="8"/><text x="48.6683%" y="623.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_reduce_add_epi64 (33 samples, 0.07%)</title><rect x="48.4343%" y="805" width="0.0663%" height="15" fill="rgb(206,91,31)" fg:x="24114" fg:w="33"/><text x="48.6843%" y="815.50"></text></g><g><title>core::core_arch::x86::avx512vbmi2::_mm512_mask_compressstoreu_epi8 (139 samples, 0.28%)</title><rect x="48.5046%" y="805" width="0.2792%" height="15" fill="rgb(211,154,13)" fg:x="24149" fg:w="139"/><text x="48.7546%" y="815.50"></text></g><g><title>core::core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64 (909 samples, 1.83%)</title><rect x="48.7838%" y="805" width="1.8258%" height="15" fill="rgb(225,148,7)" fg:x="24288" fg:w="909"/><text x="49.0338%" y="815.50">c..</text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="757" width="0.0100%" height="15" fill="rgb(220,160,43)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="741" width="0.0100%" height="15" fill="rgb(213,52,39)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="725" width="0.0100%" height="15" fill="rgb(243,137,7)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="709" width="0.0100%" height="15" fill="rgb(230,79,13)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="693" width="0.0100%" height="15" fill="rgb(247,105,23)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="677" width="0.0100%" height="15" fill="rgb(223,179,41)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="661" width="0.0100%" height="15" fill="rgb(218,9,34)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="52.9014%" y="645" width="0.0100%" height="15" fill="rgb(222,106,8)" fg:x="26338" fg:w="5"/><text x="53.1514%" y="655.50"></text></g><g><title>__GI___libc_free (22 samples, 0.04%)</title><rect x="52.9114%" y="757" width="0.0442%" height="15" fill="rgb(211,220,0)" fg:x="26343" fg:w="22"/><text x="53.1614%" y="767.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="52.9556%" y="757" width="0.0141%" height="15" fill="rgb(229,52,16)" fg:x="26365" fg:w="7"/><text x="53.2056%" y="767.50"></text></g><g><title>__memset_avx2_erms (56 samples, 0.11%)</title><rect x="53.1364%" y="741" width="0.1125%" height="15" fill="rgb(212,155,18)" fg:x="26455" fg:w="56"/><text x="53.3864%" y="751.50"></text></g><g><title>__memset_avx2_unaligned_erms (10 samples, 0.02%)</title><rect x="53.2488%" y="741" width="0.0201%" height="15" fill="rgb(242,21,14)" fg:x="26511" fg:w="10"/><text x="53.4988%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (141 samples, 0.28%)</title><rect x="53.8594%" y="725" width="0.2832%" height="15" fill="rgb(222,19,48)" fg:x="26815" fg:w="141"/><text x="54.1094%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (130 samples, 0.26%)</title><rect x="53.8815%" y="709" width="0.2611%" height="15" fill="rgb(232,45,27)" fg:x="26826" fg:w="130"/><text x="54.1315%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (130 samples, 0.26%)</title><rect x="53.8815%" y="693" width="0.2611%" height="15" fill="rgb(249,103,42)" fg:x="26826" fg:w="130"/><text x="54.1315%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (127 samples, 0.26%)</title><rect x="53.8876%" y="677" width="0.2551%" height="15" fill="rgb(246,81,33)" fg:x="26829" fg:w="127"/><text x="54.1376%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (123 samples, 0.25%)</title><rect x="53.8956%" y="661" width="0.2471%" height="15" fill="rgb(252,33,42)" fg:x="26833" fg:w="123"/><text x="54.1456%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (118 samples, 0.24%)</title><rect x="53.9056%" y="645" width="0.2370%" height="15" fill="rgb(209,212,41)" fg:x="26838" fg:w="118"/><text x="54.1556%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (109 samples, 0.22%)</title><rect x="53.9237%" y="629" width="0.2189%" height="15" fill="rgb(207,154,6)" fg:x="26847" fg:w="109"/><text x="54.1737%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (102 samples, 0.20%)</title><rect x="53.9378%" y="613" width="0.2049%" height="15" fill="rgb(223,64,47)" fg:x="26854" fg:w="102"/><text x="54.1878%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (75 samples, 0.15%)</title><rect x="53.9920%" y="597" width="0.1506%" height="15" fill="rgb(211,161,38)" fg:x="26881" fg:w="75"/><text x="54.2420%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (74 samples, 0.15%)</title><rect x="53.9940%" y="581" width="0.1486%" height="15" fill="rgb(219,138,40)" fg:x="26882" fg:w="74"/><text x="54.2440%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (66 samples, 0.13%)</title><rect x="54.0101%" y="565" width="0.1326%" height="15" fill="rgb(241,228,46)" fg:x="26890" fg:w="66"/><text x="54.2601%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (33 samples, 0.07%)</title><rect x="54.0764%" y="549" width="0.0663%" height="15" fill="rgb(223,209,38)" fg:x="26923" fg:w="33"/><text x="54.3264%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="54.1045%" y="533" width="0.0382%" height="15" fill="rgb(236,164,45)" fg:x="26937" fg:w="19"/><text x="54.3545%" y="543.50"></text></g><g><title>malloc_consolidate (251 samples, 0.50%)</title><rect x="54.1426%" y="725" width="0.5041%" height="15" fill="rgb(231,15,5)" fg:x="26956" fg:w="251"/><text x="54.3926%" y="735.50"></text></g><g><title>__calloc (888 samples, 1.78%)</title><rect x="52.9697%" y="757" width="1.7836%" height="15" fill="rgb(252,35,15)" fg:x="26372" fg:w="888"/><text x="53.2197%" y="767.50">_..</text></g><g><title>_int_malloc (739 samples, 1.48%)</title><rect x="53.2689%" y="741" width="1.4843%" height="15" fill="rgb(248,181,18)" fg:x="26521" fg:w="739"/><text x="53.5189%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (53 samples, 0.11%)</title><rect x="54.6468%" y="725" width="0.1065%" height="15" fill="rgb(233,39,42)" fg:x="27207" fg:w="53"/><text x="54.8968%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="54.9039%" y="741" width="0.0161%" height="15" fill="rgb(238,110,33)" fg:x="27335" fg:w="8"/><text x="55.1539%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="54.9039%" y="725" width="0.0161%" height="15" fill="rgb(233,195,10)" fg:x="27335" fg:w="8"/><text x="55.1539%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="54.9039%" y="709" width="0.0161%" height="15" fill="rgb(254,105,3)" fg:x="27335" fg:w="8"/><text x="55.1539%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="54.9039%" y="693" width="0.0161%" height="15" fill="rgb(221,225,9)" fg:x="27335" fg:w="8"/><text x="55.1539%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="54.9039%" y="677" width="0.0161%" height="15" fill="rgb(224,227,45)" fg:x="27335" fg:w="8"/><text x="55.1539%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="661" width="0.0141%" height="15" fill="rgb(229,198,43)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="645" width="0.0141%" height="15" fill="rgb(206,209,35)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="629" width="0.0141%" height="15" fill="rgb(245,195,53)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="613" width="0.0141%" height="15" fill="rgb(240,92,26)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="597" width="0.0141%" height="15" fill="rgb(207,40,23)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="581" width="0.0141%" height="15" fill="rgb(223,111,35)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="565" width="0.0141%" height="15" fill="rgb(229,147,28)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="54.9059%" y="549" width="0.0141%" height="15" fill="rgb(211,29,28)" fg:x="27336" fg:w="7"/><text x="55.1559%" y="559.50"></text></g><g><title>_int_free (66 samples, 0.13%)</title><rect x="54.9903%" y="725" width="0.1326%" height="15" fill="rgb(228,72,33)" fg:x="27378" fg:w="66"/><text x="55.2403%" y="735.50"></text></g><g><title>malloc_consolidate (45 samples, 0.09%)</title><rect x="55.4060%" y="709" width="0.0904%" height="15" fill="rgb(205,214,31)" fg:x="27585" fg:w="45"/><text x="55.6560%" y="719.50"></text></g><g><title>__posix_memalign (428 samples, 0.86%)</title><rect x="54.7532%" y="757" width="0.8597%" height="15" fill="rgb(224,111,15)" fg:x="27260" fg:w="428"/><text x="55.0032%" y="767.50"></text></g><g><title>_int_memalign (345 samples, 0.69%)</title><rect x="54.9200%" y="741" width="0.6930%" height="15" fill="rgb(253,21,26)" fg:x="27343" fg:w="345"/><text x="55.1700%" y="751.50"></text></g><g><title>_int_malloc (244 samples, 0.49%)</title><rect x="55.1228%" y="725" width="0.4901%" height="15" fill="rgb(245,139,43)" fg:x="27444" fg:w="244"/><text x="55.3728%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (58 samples, 0.12%)</title><rect x="55.4964%" y="709" width="0.1165%" height="15" fill="rgb(252,170,7)" fg:x="27630" fg:w="58"/><text x="55.7464%" y="719.50"></text></g><g><title>_int_free (130 samples, 0.26%)</title><rect x="55.6129%" y="757" width="0.2611%" height="15" fill="rgb(231,118,14)" fg:x="27688" fg:w="130"/><text x="55.8629%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="55.8359%" y="741" width="0.0382%" height="15" fill="rgb(238,83,0)" fg:x="27799" fg:w="19"/><text x="56.0859%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="55.8419%" y="725" width="0.0321%" height="15" fill="rgb(221,39,39)" fg:x="27802" fg:w="16"/><text x="56.0919%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="55.8419%" y="709" width="0.0321%" height="15" fill="rgb(222,119,46)" fg:x="27802" fg:w="16"/><text x="56.0919%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="55.8419%" y="693" width="0.0321%" height="15" fill="rgb(222,165,49)" fg:x="27802" fg:w="16"/><text x="56.0919%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="55.8419%" y="677" width="0.0321%" height="15" fill="rgb(219,113,52)" fg:x="27802" fg:w="16"/><text x="56.0919%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="55.8419%" y="661" width="0.0321%" height="15" fill="rgb(214,7,15)" fg:x="27802" fg:w="16"/><text x="56.0919%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="55.8459%" y="645" width="0.0281%" height="15" fill="rgb(235,32,4)" fg:x="27804" fg:w="14"/><text x="56.0959%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="55.8459%" y="629" width="0.0281%" height="15" fill="rgb(238,90,54)" fg:x="27804" fg:w="14"/><text x="56.0959%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="55.8539%" y="613" width="0.0201%" height="15" fill="rgb(213,208,19)" fg:x="27808" fg:w="10"/><text x="56.1039%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="55.8559%" y="597" width="0.0181%" height="15" fill="rgb(233,156,4)" fg:x="27809" fg:w="9"/><text x="56.1059%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="55.8580%" y="581" width="0.0161%" height="15" fill="rgb(207,194,5)" fg:x="27810" fg:w="8"/><text x="56.1080%" y="591.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (20,296 samples, 40.77%)</title><rect x="15.1646%" y="821" width="40.7657%" height="15" fill="rgb(206,111,30)" fg:x="7550" fg:w="20296"/><text x="15.4146%" y="831.50">&lt;fastfull_search::datasources::posting_table::PostingStream as futu..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (2,649 samples, 5.32%)</title><rect x="50.6096%" y="805" width="5.3207%" height="15" fill="rgb(243,70,54)" fg:x="25197" fg:w="2649"/><text x="50.8596%" y="815.50">fastful..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (2,607 samples, 5.24%)</title><rect x="50.6940%" y="789" width="5.2363%" height="15" fill="rgb(242,28,8)" fg:x="25239" fg:w="2607"/><text x="50.9440%" y="799.50">fastfu..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (2,590 samples, 5.20%)</title><rect x="50.7281%" y="773" width="5.2022%" height="15" fill="rgb(219,106,18)" fg:x="25256" fg:w="2590"/><text x="50.9781%" y="783.50">fastfu..</text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (28 samples, 0.06%)</title><rect x="55.8740%" y="757" width="0.0562%" height="15" fill="rgb(244,222,10)" fg:x="27818" fg:w="28"/><text x="56.1240%" y="767.50"></text></g><g><title>malloc_consolidate (23 samples, 0.05%)</title><rect x="56.0809%" y="741" width="0.0462%" height="15" fill="rgb(236,179,52)" fg:x="27921" fg:w="23"/><text x="56.3309%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (101 samples, 0.20%)</title><rect x="55.9303%" y="821" width="0.2029%" height="15" fill="rgb(213,23,39)" fg:x="27846" fg:w="101"/><text x="56.1803%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 samples, 0.20%)</title><rect x="55.9343%" y="805" width="0.1988%" height="15" fill="rgb(238,48,10)" fg:x="27848" fg:w="99"/><text x="56.1843%" y="815.50"></text></g><g><title>__GI___libc_realloc (96 samples, 0.19%)</title><rect x="55.9403%" y="789" width="0.1928%" height="15" fill="rgb(251,196,23)" fg:x="27851" fg:w="96"/><text x="56.1903%" y="799.50"></text></g><g><title>_int_realloc (92 samples, 0.18%)</title><rect x="55.9483%" y="773" width="0.1848%" height="15" fill="rgb(250,152,24)" fg:x="27855" fg:w="92"/><text x="56.1983%" y="783.50"></text></g><g><title>_int_malloc (83 samples, 0.17%)</title><rect x="55.9664%" y="757" width="0.1667%" height="15" fill="rgb(209,150,17)" fg:x="27864" fg:w="83"/><text x="56.2164%" y="767.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (20,410 samples, 40.99%)</title><rect x="15.1405%" y="837" width="40.9946%" height="15" fill="rgb(234,202,34)" fg:x="7538" fg:w="20410"/><text x="15.3905%" y="847.50">&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as..</text></g><g><title>__libc_read (247 samples, 0.50%)</title><rect x="56.1492%" y="821" width="0.4961%" height="15" fill="rgb(253,148,53)" fg:x="27955" fg:w="247"/><text x="56.3992%" y="831.50"></text></g><g><title>__libc_read (247 samples, 0.50%)</title><rect x="56.1492%" y="805" width="0.4961%" height="15" fill="rgb(218,129,16)" fg:x="27955" fg:w="247"/><text x="56.3992%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (244 samples, 0.49%)</title><rect x="56.1552%" y="789" width="0.4901%" height="15" fill="rgb(216,85,19)" fg:x="27958" fg:w="244"/><text x="56.4052%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (240 samples, 0.48%)</title><rect x="56.1633%" y="773" width="0.4821%" height="15" fill="rgb(235,228,7)" fg:x="27962" fg:w="240"/><text x="56.4133%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (234 samples, 0.47%)</title><rect x="56.1753%" y="757" width="0.4700%" height="15" fill="rgb(245,175,0)" fg:x="27968" fg:w="234"/><text x="56.4253%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (234 samples, 0.47%)</title><rect x="56.1753%" y="741" width="0.4700%" height="15" fill="rgb(208,168,36)" fg:x="27968" fg:w="234"/><text x="56.4253%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (231 samples, 0.46%)</title><rect x="56.1813%" y="725" width="0.4640%" height="15" fill="rgb(246,171,24)" fg:x="27971" fg:w="231"/><text x="56.4313%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (225 samples, 0.45%)</title><rect x="56.1934%" y="709" width="0.4519%" height="15" fill="rgb(215,142,24)" fg:x="27977" fg:w="225"/><text x="56.4434%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (218 samples, 0.44%)</title><rect x="56.2074%" y="693" width="0.4379%" height="15" fill="rgb(250,187,7)" fg:x="27984" fg:w="218"/><text x="56.4574%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (201 samples, 0.40%)</title><rect x="56.2416%" y="677" width="0.4037%" height="15" fill="rgb(228,66,33)" fg:x="28001" fg:w="201"/><text x="56.4916%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (184 samples, 0.37%)</title><rect x="56.2757%" y="661" width="0.3696%" height="15" fill="rgb(234,215,21)" fg:x="28018" fg:w="184"/><text x="56.5257%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (160 samples, 0.32%)</title><rect x="56.3239%" y="645" width="0.3214%" height="15" fill="rgb(222,191,20)" fg:x="28042" fg:w="160"/><text x="56.5739%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (140 samples, 0.28%)</title><rect x="56.3641%" y="629" width="0.2812%" height="15" fill="rgb(245,79,54)" fg:x="28062" fg:w="140"/><text x="56.6141%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.20%)</title><rect x="56.4424%" y="613" width="0.2029%" height="15" fill="rgb(240,10,37)" fg:x="28101" fg:w="101"/><text x="56.6924%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (94 samples, 0.19%)</title><rect x="56.4565%" y="597" width="0.1888%" height="15" fill="rgb(214,192,32)" fg:x="28108" fg:w="94"/><text x="56.7065%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (78 samples, 0.16%)</title><rect x="56.4886%" y="581" width="0.1567%" height="15" fill="rgb(209,36,54)" fg:x="28124" fg:w="78"/><text x="56.7386%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (50 samples, 0.10%)</title><rect x="56.5449%" y="565" width="0.1004%" height="15" fill="rgb(220,10,11)" fg:x="28152" fg:w="50"/><text x="56.7949%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="56.6152%" y="549" width="0.0301%" height="15" fill="rgb(221,106,17)" fg:x="28187" fg:w="15"/><text x="56.8652%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="56.6212%" y="533" width="0.0241%" height="15" fill="rgb(251,142,44)" fg:x="28190" fg:w="12"/><text x="56.8712%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="56.6232%" y="517" width="0.0221%" height="15" fill="rgb(238,13,15)" fg:x="28191" fg:w="11"/><text x="56.8732%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="56.6353%" y="501" width="0.0100%" height="15" fill="rgb(208,107,27)" fg:x="28197" fg:w="5"/><text x="56.8853%" y="511.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (264 samples, 0.53%)</title><rect x="56.1351%" y="837" width="0.5303%" height="15" fill="rgb(205,136,37)" fg:x="27948" fg:w="264"/><text x="56.3851%" y="847.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="56.6734%" y="837" width="0.0100%" height="15" fill="rgb(250,205,27)" fg:x="28216" fg:w="5"/><text x="56.9234%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (60 samples, 0.12%)</title><rect x="56.6835%" y="837" width="0.1205%" height="15" fill="rgb(210,80,43)" fg:x="28221" fg:w="60"/><text x="56.9335%" y="847.50"></text></g><g><title>malloc_consolidate (12 samples, 0.02%)</title><rect x="56.8482%" y="821" width="0.0241%" height="15" fill="rgb(247,160,36)" fg:x="28303" fg:w="12"/><text x="57.0982%" y="831.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.01%)</title><rect x="56.8602%" y="805" width="0.0121%" height="15" fill="rgb(234,13,49)" fg:x="28309" fg:w="6"/><text x="57.1102%" y="815.50"></text></g><g><title>_int_free (38 samples, 0.08%)</title><rect x="56.8040%" y="837" width="0.0763%" height="15" fill="rgb(234,122,0)" fg:x="28281" fg:w="38"/><text x="57.0540%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (20 samples, 0.04%)</title><rect x="56.8803%" y="837" width="0.0402%" height="15" fill="rgb(207,146,38)" fg:x="28319" fg:w="20"/><text x="57.1303%" y="847.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.03%)</title><rect x="56.8944%" y="821" width="0.0261%" height="15" fill="rgb(207,177,25)" fg:x="28326" fg:w="13"/><text x="57.1444%" y="831.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="56.9104%" y="805" width="0.0100%" height="15" fill="rgb(211,178,42)" fg:x="28334" fg:w="5"/><text x="57.1604%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="56.9325%" y="805" width="0.0201%" height="15" fill="rgb(230,69,54)" fg:x="28345" fg:w="10"/><text x="57.1825%" y="815.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="56.9345%" y="789" width="0.0181%" height="15" fill="rgb(214,135,41)" fg:x="28346" fg:w="9"/><text x="57.1845%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (30 samples, 0.06%)</title><rect x="57.0068%" y="613" width="0.0603%" height="15" fill="rgb(237,67,25)" fg:x="28382" fg:w="30"/><text x="57.2568%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.04%)</title><rect x="57.0229%" y="597" width="0.0442%" height="15" fill="rgb(222,189,50)" fg:x="28390" fg:w="22"/><text x="57.2729%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.04%)</title><rect x="57.0229%" y="581" width="0.0442%" height="15" fill="rgb(245,148,34)" fg:x="28390" fg:w="22"/><text x="57.2729%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.04%)</title><rect x="57.0269%" y="565" width="0.0402%" height="15" fill="rgb(222,29,6)" fg:x="28392" fg:w="20"/><text x="57.2769%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="57.0289%" y="549" width="0.0382%" height="15" fill="rgb(221,189,43)" fg:x="28393" fg:w="19"/><text x="57.2789%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="57.0350%" y="533" width="0.0321%" height="15" fill="rgb(207,36,27)" fg:x="28396" fg:w="16"/><text x="57.2850%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="57.0571%" y="517" width="0.0100%" height="15" fill="rgb(217,90,24)" fg:x="28407" fg:w="5"/><text x="57.3071%" y="527.50"></text></g><g><title>__GI___libc_free (5 samples, 0.01%)</title><rect x="57.0671%" y="613" width="0.0100%" height="15" fill="rgb(224,66,35)" fg:x="28412" fg:w="5"/><text x="57.3171%" y="623.50"></text></g><g><title>_int_free (32 samples, 0.06%)</title><rect x="57.0771%" y="613" width="0.0643%" height="15" fill="rgb(221,13,50)" fg:x="28417" fg:w="32"/><text x="57.3271%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="57.1294%" y="597" width="0.0121%" height="15" fill="rgb(236,68,49)" fg:x="28443" fg:w="6"/><text x="57.3794%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.18%)</title><rect x="56.9827%" y="629" width="0.1768%" height="15" fill="rgb(229,146,28)" fg:x="28370" fg:w="88"/><text x="57.2327%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (9 samples, 0.02%)</title><rect x="57.1414%" y="613" width="0.0181%" height="15" fill="rgb(225,31,38)" fg:x="28449" fg:w="9"/><text x="57.3914%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="57.1474%" y="597" width="0.0121%" height="15" fill="rgb(250,208,3)" fg:x="28452" fg:w="6"/><text x="57.3974%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="57.1595%" y="629" width="0.0321%" height="15" fill="rgb(246,54,23)" fg:x="28458" fg:w="16"/><text x="57.4095%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="57.1675%" y="613" width="0.0241%" height="15" fill="rgb(243,76,11)" fg:x="28462" fg:w="12"/><text x="57.4175%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="57.1675%" y="597" width="0.0241%" height="15" fill="rgb(245,21,50)" fg:x="28462" fg:w="12"/><text x="57.4175%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="57.1675%" y="581" width="0.0241%" height="15" fill="rgb(228,9,43)" fg:x="28462" fg:w="12"/><text x="57.4175%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="57.1695%" y="565" width="0.0221%" height="15" fill="rgb(208,100,47)" fg:x="28463" fg:w="11"/><text x="57.4195%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="57.1716%" y="549" width="0.0201%" height="15" fill="rgb(232,26,8)" fg:x="28464" fg:w="10"/><text x="57.4216%" y="559.50"></text></g><g><title>__GI___libc_free (47 samples, 0.09%)</title><rect x="57.1916%" y="629" width="0.0944%" height="15" fill="rgb(216,166,38)" fg:x="28474" fg:w="47"/><text x="57.4416%" y="639.50"></text></g><g><title>__GI_munmap (27 samples, 0.05%)</title><rect x="57.2860%" y="629" width="0.0542%" height="15" fill="rgb(251,202,51)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="613" width="0.0542%" height="15" fill="rgb(254,216,34)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="597" width="0.0542%" height="15" fill="rgb(251,32,27)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="581" width="0.0542%" height="15" fill="rgb(208,127,28)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="565" width="0.0542%" height="15" fill="rgb(224,137,22)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="549" width="0.0542%" height="15" fill="rgb(254,70,32)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="533" width="0.0542%" height="15" fill="rgb(229,75,37)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="517" width="0.0542%" height="15" fill="rgb(252,64,23)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="501" width="0.0542%" height="15" fill="rgb(232,162,48)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="485" width="0.0542%" height="15" fill="rgb(246,160,12)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="57.2860%" y="469" width="0.0542%" height="15" fill="rgb(247,166,0)" fg:x="28521" fg:w="27"/><text x="57.5360%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="57.3021%" y="453" width="0.0382%" height="15" fill="rgb(249,219,21)" fg:x="28529" fg:w="19"/><text x="57.5521%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="57.3021%" y="437" width="0.0382%" height="15" fill="rgb(205,209,3)" fg:x="28529" fg:w="19"/><text x="57.5521%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (18 samples, 0.04%)</title><rect x="57.3041%" y="421" width="0.0362%" height="15" fill="rgb(243,44,1)" fg:x="28530" fg:w="18"/><text x="57.5541%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="57.3202%" y="405" width="0.0201%" height="15" fill="rgb(206,159,16)" fg:x="28538" fg:w="10"/><text x="57.5702%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="57.3302%" y="389" width="0.0100%" height="15" fill="rgb(244,77,30)" fg:x="28543" fg:w="5"/><text x="57.5802%" y="399.50"></text></g><g><title>_int_free (43 samples, 0.09%)</title><rect x="57.3403%" y="629" width="0.0864%" height="15" fill="rgb(218,69,12)" fg:x="28548" fg:w="43"/><text x="57.5903%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="57.4286%" y="533" width="0.0261%" height="15" fill="rgb(212,87,7)" fg:x="28592" fg:w="13"/><text x="57.6786%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="57.4387%" y="517" width="0.0161%" height="15" fill="rgb(245,114,25)" fg:x="28597" fg:w="8"/><text x="57.6887%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="57.4447%" y="501" width="0.0100%" height="15" fill="rgb(210,61,42)" fg:x="28600" fg:w="5"/><text x="57.6947%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="57.4447%" y="485" width="0.0100%" height="15" fill="rgb(211,52,33)" fg:x="28600" fg:w="5"/><text x="57.6947%" y="495.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (263 samples, 0.53%)</title><rect x="57.4266%" y="549" width="0.5283%" height="15" fill="rgb(234,58,33)" fg:x="28591" fg:w="263"/><text x="57.6766%" y="559.50"></text></g><g><title>_int_free (249 samples, 0.50%)</title><rect x="57.4548%" y="533" width="0.5001%" height="15" fill="rgb(220,115,36)" fg:x="28605" fg:w="249"/><text x="57.7048%" y="543.50"></text></g><g><title>malloc_consolidate (241 samples, 0.48%)</title><rect x="57.4708%" y="517" width="0.4841%" height="15" fill="rgb(243,153,54)" fg:x="28613" fg:w="241"/><text x="57.7208%" y="527.50"></text></g><g><title>unlink_chunk.isra.0 (54 samples, 0.11%)</title><rect x="57.8464%" y="501" width="0.1085%" height="15" fill="rgb(251,47,18)" fg:x="28800" fg:w="54"/><text x="58.0964%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="57.9669%" y="533" width="0.0161%" height="15" fill="rgb(242,102,42)" fg:x="28860" fg:w="8"/><text x="58.2169%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="57.9710%" y="517" width="0.0121%" height="15" fill="rgb(234,31,38)" fg:x="28862" fg:w="6"/><text x="58.2210%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,16_usize&gt;&gt; (16 samples, 0.03%)</title><rect x="57.9629%" y="549" width="0.0321%" height="15" fill="rgb(221,117,51)" fg:x="28858" fg:w="16"/><text x="58.2129%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (537 samples, 1.08%)</title><rect x="56.9205%" y="837" width="1.0786%" height="15" fill="rgb(212,20,18)" fg:x="28339" fg:w="537"/><text x="57.1705%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (531 samples, 1.07%)</title><rect x="56.9325%" y="821" width="1.0665%" height="15" fill="rgb(245,133,36)" fg:x="28345" fg:w="531"/><text x="57.1825%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::catalog::catalog::MemoryCatalogList&gt; (517 samples, 1.04%)</title><rect x="56.9607%" y="805" width="1.0384%" height="15" fill="rgb(212,6,19)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (517 samples, 1.04%)</title><rect x="56.9607%" y="789" width="1.0384%" height="15" fill="rgb(218,1,36)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (517 samples, 1.04%)</title><rect x="56.9607%" y="773" width="1.0384%" height="15" fill="rgb(246,84,54)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::catalog::catalog::MemoryCatalogList&gt; (517 samples, 1.04%)</title><rect x="56.9607%" y="757" width="1.0384%" height="15" fill="rgb(242,110,6)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (517 samples, 1.04%)</title><rect x="56.9607%" y="741" width="1.0384%" height="15" fill="rgb(214,47,5)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (517 samples, 1.04%)</title><rect x="56.9607%" y="725" width="1.0384%" height="15" fill="rgb(218,159,25)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::catalog::catalog::MemoryCatalogList&gt; (517 samples, 1.04%)</title><rect x="56.9607%" y="709" width="1.0384%" height="15" fill="rgb(215,211,28)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (517 samples, 1.04%)</title><rect x="56.9607%" y="693" width="1.0384%" height="15" fill="rgb(238,59,32)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (517 samples, 1.04%)</title><rect x="56.9607%" y="677" width="1.0384%" height="15" fill="rgb(226,82,3)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingTable&gt; (517 samples, 1.04%)</title><rect x="56.9607%" y="661" width="1.0384%" height="15" fill="rgb(240,164,32)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (517 samples, 1.04%)</title><rect x="56.9607%" y="645" width="1.0384%" height="15" fill="rgb(232,46,7)" fg:x="28359" fg:w="517"/><text x="57.2107%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (285 samples, 0.57%)</title><rect x="57.4266%" y="629" width="0.5724%" height="15" fill="rgb(229,129,53)" fg:x="28591" fg:w="285"/><text x="57.6766%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt;&gt; (285 samples, 0.57%)</title><rect x="57.4266%" y="613" width="0.5724%" height="15" fill="rgb(234,188,29)" fg:x="28591" fg:w="285"/><text x="57.6766%" y="623.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (285 samples, 0.57%)</title><rect x="57.4266%" y="597" width="0.5724%" height="15" fill="rgb(246,141,4)" fg:x="28591" fg:w="285"/><text x="57.6766%" y="607.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (285 samples, 0.57%)</title><rect x="57.4266%" y="581" width="0.5724%" height="15" fill="rgb(229,23,39)" fg:x="28591" fg:w="285"/><text x="57.6766%" y="591.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (285 samples, 0.57%)</title><rect x="57.4266%" y="565" width="0.5724%" height="15" fill="rgb(206,12,3)" fg:x="28591" fg:w="285"/><text x="57.6766%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionState&gt; (15 samples, 0.03%)</title><rect x="57.9991%" y="837" width="0.0301%" height="15" fill="rgb(252,226,20)" fg:x="28876" fg:w="15"/><text x="58.2491%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (6 samples, 0.01%)</title><rect x="58.0172%" y="821" width="0.0121%" height="15" fill="rgb(216,123,35)" fg:x="28885" fg:w="6"/><text x="58.2672%" y="831.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="58.0413%" y="821" width="0.0241%" height="15" fill="rgb(212,68,40)" fg:x="28897" fg:w="12"/><text x="58.2913%" y="831.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="58.0674%" y="805" width="0.0221%" height="15" fill="rgb(254,125,32)" fg:x="28910" fg:w="11"/><text x="58.3174%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_expr::logical_plan::plan::Predicate&gt;&gt; (17 samples, 0.03%)</title><rect x="58.0654%" y="821" width="0.0341%" height="15" fill="rgb(253,97,22)" fg:x="28909" fg:w="17"/><text x="58.3154%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(datafusion_expr::logical_plan::plan::Predicate,f64,usize,usize)&gt; (5 samples, 0.01%)</title><rect x="58.0895%" y="805" width="0.0100%" height="15" fill="rgb(241,101,14)" fg:x="28921" fg:w="5"/><text x="58.3395%" y="815.50"></text></g><g><title>_int_free (18 samples, 0.04%)</title><rect x="58.1015%" y="805" width="0.0362%" height="15" fill="rgb(238,103,29)" fg:x="28927" fg:w="18"/><text x="58.3515%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="58.1437%" y="789" width="0.0100%" height="15" fill="rgb(233,195,47)" fg:x="28948" fg:w="5"/><text x="58.3937%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (10 samples, 0.02%)</title><rect x="58.1377%" y="805" width="0.0201%" height="15" fill="rgb(246,218,30)" fg:x="28945" fg:w="10"/><text x="58.3877%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (32 samples, 0.06%)</title><rect x="58.0995%" y="821" width="0.0643%" height="15" fill="rgb(219,145,47)" fg:x="28926" fg:w="32"/><text x="58.3495%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (68 samples, 0.14%)</title><rect x="58.0292%" y="837" width="0.1366%" height="15" fill="rgb(243,12,26)" fg:x="28891" fg:w="68"/><text x="58.2792%" y="847.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="58.2039%" y="805" width="0.0141%" height="15" fill="rgb(214,87,16)" fg:x="28978" fg:w="7"/><text x="58.4539%" y="815.50"></text></g><g><title>malloc_consolidate (8 samples, 0.02%)</title><rect x="58.3044%" y="773" width="0.0161%" height="15" fill="rgb(208,99,42)" fg:x="29028" fg:w="8"/><text x="58.5544%" y="783.50"></text></g><g><title>_int_free (26 samples, 0.05%)</title><rect x="58.2763%" y="789" width="0.0522%" height="15" fill="rgb(253,99,2)" fg:x="29014" fg:w="26"/><text x="58.5263%" y="799.50"></text></g><g><title>__GI___libc_free (5 samples, 0.01%)</title><rect x="58.3305%" y="773" width="0.0100%" height="15" fill="rgb(220,168,23)" fg:x="29041" fg:w="5"/><text x="58.5805%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[arrow_schema::field::Field]&gt; (12 samples, 0.02%)</title><rect x="58.3285%" y="789" width="0.0241%" height="15" fill="rgb(242,38,24)" fg:x="29040" fg:w="12"/><text x="58.5785%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;arrow_array::record_batch::RecordBatch&gt;&gt;&gt; (101 samples, 0.20%)</title><rect x="58.1658%" y="837" width="0.2029%" height="15" fill="rgb(225,182,9)" fg:x="28959" fg:w="101"/><text x="58.4158%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingStream&gt; (96 samples, 0.19%)</title><rect x="58.1758%" y="821" width="0.1928%" height="15" fill="rgb(243,178,37)" fg:x="28964" fg:w="96"/><text x="58.4258%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (75 samples, 0.15%)</title><rect x="58.2180%" y="805" width="0.1506%" height="15" fill="rgb(232,139,19)" fg:x="28985" fg:w="75"/><text x="58.4680%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (8 samples, 0.02%)</title><rect x="58.3526%" y="789" width="0.0161%" height="15" fill="rgb(225,201,24)" fg:x="29052" fg:w="8"/><text x="58.6026%" y="799.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="58.4249%" y="773" width="0.0141%" height="15" fill="rgb(221,47,46)" fg:x="29088" fg:w="7"/><text x="58.6749%" y="783.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="58.4389%" y="773" width="0.0121%" height="15" fill="rgb(249,23,13)" fg:x="29095" fg:w="6"/><text x="58.6889%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="58.4128%" y="789" width="0.0402%" height="15" fill="rgb(219,9,5)" fg:x="29082" fg:w="20"/><text x="58.6628%" y="799.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.05%)</title><rect x="58.4530%" y="789" width="0.0522%" height="15" fill="rgb(254,171,16)" fg:x="29102" fg:w="26"/><text x="58.7030%" y="799.50"></text></g><g><title>_int_malloc (16 samples, 0.03%)</title><rect x="58.4731%" y="773" width="0.0321%" height="15" fill="rgb(230,171,20)" fg:x="29112" fg:w="16"/><text x="58.7231%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (55 samples, 0.11%)</title><rect x="58.4108%" y="805" width="0.1105%" height="15" fill="rgb(210,71,41)" fg:x="29081" fg:w="55"/><text x="58.6608%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="58.5052%" y="789" width="0.0161%" height="15" fill="rgb(206,173,20)" fg:x="29128" fg:w="8"/><text x="58.7552%" y="799.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (66 samples, 0.13%)</title><rect x="58.3928%" y="821" width="0.1326%" height="15" fill="rgb(233,88,34)" fg:x="29072" fg:w="66"/><text x="58.6428%" y="831.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="58.5394%" y="821" width="0.0100%" height="15" fill="rgb(223,209,46)" fg:x="29145" fg:w="5"/><text x="58.7894%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (8 samples, 0.02%)</title><rect x="58.5514%" y="805" width="0.0161%" height="15" fill="rgb(250,43,18)" fg:x="29151" fg:w="8"/><text x="58.8014%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.01%)</title><rect x="58.5534%" y="789" width="0.0141%" height="15" fill="rgb(208,13,10)" fg:x="29152" fg:w="7"/><text x="58.8034%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.01%)</title><rect x="58.5534%" y="773" width="0.0141%" height="15" fill="rgb(212,200,36)" fg:x="29152" fg:w="7"/><text x="58.8034%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.01%)</title><rect x="58.5534%" y="757" width="0.0141%" height="15" fill="rgb(225,90,30)" fg:x="29152" fg:w="7"/><text x="58.8034%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.01%)</title><rect x="58.5534%" y="741" width="0.0141%" height="15" fill="rgb(236,182,39)" fg:x="29152" fg:w="7"/><text x="58.8034%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.01%)</title><rect x="58.5534%" y="725" width="0.0141%" height="15" fill="rgb(212,144,35)" fg:x="29152" fg:w="7"/><text x="58.8034%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (7 samples, 0.01%)</title><rect x="58.5534%" y="709" width="0.0141%" height="15" fill="rgb(228,63,44)" fg:x="29152" fg:w="7"/><text x="58.8034%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="58.6217%" y="677" width="0.0100%" height="15" fill="rgb(228,109,6)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.01%)</title><rect x="58.6217%" y="661" width="0.0100%" height="15" fill="rgb(238,117,24)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="671.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.01%)</title><rect x="58.6217%" y="645" width="0.0100%" height="15" fill="rgb(242,26,26)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="58.6217%" y="629" width="0.0100%" height="15" fill="rgb(221,92,48)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="58.6217%" y="613" width="0.0100%" height="15" fill="rgb(209,209,32)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="58.6217%" y="597" width="0.0100%" height="15" fill="rgb(221,70,22)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="58.6217%" y="581" width="0.0100%" height="15" fill="rgb(248,145,5)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="58.6217%" y="565" width="0.0100%" height="15" fill="rgb(226,116,26)" fg:x="29186" fg:w="5"/><text x="58.8717%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="58.6619%" y="405" width="0.0121%" height="15" fill="rgb(244,5,17)" fg:x="29206" fg:w="6"/><text x="58.9119%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="58.6619%" y="389" width="0.0121%" height="15" fill="rgb(252,159,33)" fg:x="29206" fg:w="6"/><text x="58.9119%" y="399.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.01%)</title><rect x="58.6619%" y="373" width="0.0121%" height="15" fill="rgb(206,71,0)" fg:x="29206" fg:w="6"/><text x="58.9119%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.01%)</title><rect x="58.6619%" y="357" width="0.0121%" height="15" fill="rgb(233,118,54)" fg:x="29206" fg:w="6"/><text x="58.9119%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="58.6619%" y="341" width="0.0121%" height="15" fill="rgb(234,83,48)" fg:x="29206" fg:w="6"/><text x="58.9119%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.01%)</title><rect x="58.6619%" y="325" width="0.0121%" height="15" fill="rgb(228,3,54)" fg:x="29206" fg:w="6"/><text x="58.9119%" y="335.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (14 samples, 0.03%)</title><rect x="58.6760%" y="357" width="0.0281%" height="15" fill="rgb(226,155,13)" fg:x="29213" fg:w="14"/><text x="58.9260%" y="367.50"></text></g><g><title>core::fmt::write (12 samples, 0.02%)</title><rect x="58.6800%" y="341" width="0.0241%" height="15" fill="rgb(241,28,37)" fg:x="29215" fg:w="12"/><text x="58.9300%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (11 samples, 0.02%)</title><rect x="58.6820%" y="325" width="0.0221%" height="15" fill="rgb(233,93,10)" fg:x="29216" fg:w="11"/><text x="58.9320%" y="335.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="58.7222%" y="53" width="0.0121%" height="15" fill="rgb(225,113,19)" fg:x="29236" fg:w="6"/><text x="58.9722%" y="63.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="58.7342%" y="53" width="0.0121%" height="15" fill="rgb(241,2,18)" fg:x="29242" fg:w="6"/><text x="58.9842%" y="63.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (51 samples, 0.10%)</title><rect x="58.6458%" y="421" width="0.1024%" height="15" fill="rgb(228,207,21)" fg:x="29198" fg:w="51"/><text x="58.8958%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (36 samples, 0.07%)</title><rect x="58.6760%" y="405" width="0.0723%" height="15" fill="rgb(213,211,35)" fg:x="29213" fg:w="36"/><text x="58.9260%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (36 samples, 0.07%)</title><rect x="58.6760%" y="389" width="0.0723%" height="15" fill="rgb(209,83,10)" fg:x="29213" fg:w="36"/><text x="58.9260%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (36 samples, 0.07%)</title><rect x="58.6760%" y="373" width="0.0723%" height="15" fill="rgb(209,164,1)" fg:x="29213" fg:w="36"/><text x="58.9260%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (22 samples, 0.04%)</title><rect x="58.7041%" y="357" width="0.0442%" height="15" fill="rgb(213,184,43)" fg:x="29227" fg:w="22"/><text x="58.9541%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.04%)</title><rect x="58.7041%" y="341" width="0.0442%" height="15" fill="rgb(231,61,34)" fg:x="29227" fg:w="22"/><text x="58.9541%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.04%)</title><rect x="58.7061%" y="325" width="0.0422%" height="15" fill="rgb(235,75,3)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="335.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.04%)</title><rect x="58.7061%" y="309" width="0.0422%" height="15" fill="rgb(220,106,47)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.04%)</title><rect x="58.7061%" y="293" width="0.0422%" height="15" fill="rgb(210,196,33)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.04%)</title><rect x="58.7061%" y="277" width="0.0422%" height="15" fill="rgb(229,154,42)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.04%)</title><rect x="58.7061%" y="261" width="0.0422%" height="15" fill="rgb(228,114,26)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="58.7061%" y="245" width="0.0422%" height="15" fill="rgb(208,144,1)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="58.7061%" y="229" width="0.0422%" height="15" fill="rgb(239,112,37)" fg:x="29228" fg:w="21"/><text x="58.9561%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.04%)</title><rect x="58.7101%" y="213" width="0.0382%" height="15" fill="rgb(210,96,50)" fg:x="29230" fg:w="19"/><text x="58.9601%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.04%)</title><rect x="58.7101%" y="197" width="0.0382%" height="15" fill="rgb(222,178,2)" fg:x="29230" fg:w="19"/><text x="58.9601%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.04%)</title><rect x="58.7121%" y="181" width="0.0362%" height="15" fill="rgb(226,74,18)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.04%)</title><rect x="58.7121%" y="165" width="0.0362%" height="15" fill="rgb(225,67,54)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.04%)</title><rect x="58.7121%" y="149" width="0.0362%" height="15" fill="rgb(251,92,32)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="159.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.04%)</title><rect x="58.7121%" y="133" width="0.0362%" height="15" fill="rgb(228,149,22)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="143.50"></text></g><g><title>__rdl_realloc (18 samples, 0.04%)</title><rect x="58.7121%" y="117" width="0.0362%" height="15" fill="rgb(243,54,13)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (18 samples, 0.04%)</title><rect x="58.7121%" y="101" width="0.0362%" height="15" fill="rgb(243,180,28)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="111.50"></text></g><g><title>__GI___libc_realloc (18 samples, 0.04%)</title><rect x="58.7121%" y="85" width="0.0362%" height="15" fill="rgb(208,167,24)" fg:x="29231" fg:w="18"/><text x="58.9621%" y="95.50"></text></g><g><title>_int_realloc (15 samples, 0.03%)</title><rect x="58.7181%" y="69" width="0.0301%" height="15" fill="rgb(245,73,45)" fg:x="29234" fg:w="15"/><text x="58.9681%" y="79.50"></text></g><g><title>core::fmt::Formatter::write_str (6 samples, 0.01%)</title><rect x="58.7483%" y="421" width="0.0121%" height="15" fill="rgb(237,203,48)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="58.7483%" y="405" width="0.0121%" height="15" fill="rgb(211,197,16)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="58.7483%" y="389" width="0.0121%" height="15" fill="rgb(243,99,51)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="399.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.01%)</title><rect x="58.7483%" y="373" width="0.0121%" height="15" fill="rgb(215,123,29)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.01%)</title><rect x="58.7483%" y="357" width="0.0121%" height="15" fill="rgb(239,186,37)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="58.7483%" y="341" width="0.0121%" height="15" fill="rgb(252,136,39)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.01%)</title><rect x="58.7483%" y="325" width="0.0121%" height="15" fill="rgb(223,213,32)" fg:x="29249" fg:w="6"/><text x="58.9983%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="58.7503%" y="309" width="0.0100%" height="15" fill="rgb(233,115,5)" fg:x="29250" fg:w="5"/><text x="59.0003%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="58.7503%" y="293" width="0.0100%" height="15" fill="rgb(207,226,44)" fg:x="29250" fg:w="5"/><text x="59.0003%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (8 samples, 0.02%)</title><rect x="58.7623%" y="405" width="0.0161%" height="15" fill="rgb(208,126,0)" fg:x="29256" fg:w="8"/><text x="59.0123%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (75 samples, 0.15%)</title><rect x="58.6398%" y="485" width="0.1506%" height="15" fill="rgb(244,66,21)" fg:x="29195" fg:w="75"/><text x="58.8898%" y="495.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (74 samples, 0.15%)</title><rect x="58.6418%" y="469" width="0.1486%" height="15" fill="rgb(222,97,12)" fg:x="29196" fg:w="74"/><text x="58.8918%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (73 samples, 0.15%)</title><rect x="58.6438%" y="453" width="0.1466%" height="15" fill="rgb(219,213,19)" fg:x="29197" fg:w="73"/><text x="58.8938%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (73 samples, 0.15%)</title><rect x="58.6438%" y="437" width="0.1466%" height="15" fill="rgb(252,169,30)" fg:x="29197" fg:w="73"/><text x="58.8938%" y="447.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (14 samples, 0.03%)</title><rect x="58.7623%" y="421" width="0.0281%" height="15" fill="rgb(206,32,51)" fg:x="29256" fg:w="14"/><text x="59.0123%" y="431.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (6 samples, 0.01%)</title><rect x="58.7784%" y="405" width="0.0121%" height="15" fill="rgb(250,172,42)" fg:x="29264" fg:w="6"/><text x="59.0284%" y="415.50"></text></g><g><title>core::num::flt2dec::decoder::decode (5 samples, 0.01%)</title><rect x="58.7804%" y="389" width="0.0100%" height="15" fill="rgb(209,34,43)" fg:x="29265" fg:w="5"/><text x="59.0304%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (77 samples, 0.15%)</title><rect x="58.6378%" y="565" width="0.1547%" height="15" fill="rgb(223,11,35)" fg:x="29194" fg:w="77"/><text x="58.8878%" y="575.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (76 samples, 0.15%)</title><rect x="58.6398%" y="549" width="0.1527%" height="15" fill="rgb(251,219,26)" fg:x="29195" fg:w="76"/><text x="58.8898%" y="559.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (76 samples, 0.15%)</title><rect x="58.6398%" y="533" width="0.1527%" height="15" fill="rgb(231,119,3)" fg:x="29195" fg:w="76"/><text x="58.8898%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (76 samples, 0.15%)</title><rect x="58.6398%" y="517" width="0.1527%" height="15" fill="rgb(216,97,11)" fg:x="29195" fg:w="76"/><text x="58.8898%" y="527.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (76 samples, 0.15%)</title><rect x="58.6398%" y="501" width="0.1527%" height="15" fill="rgb(223,59,9)" fg:x="29195" fg:w="76"/><text x="58.8898%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="58.7925%" y="453" width="0.0422%" height="15" fill="rgb(233,93,31)" fg:x="29271" fg:w="21"/><text x="59.0425%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="58.7925%" y="437" width="0.0422%" height="15" fill="rgb(239,81,33)" fg:x="29271" fg:w="21"/><text x="59.0425%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.04%)</title><rect x="58.7965%" y="421" width="0.0382%" height="15" fill="rgb(213,120,34)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.04%)</title><rect x="58.7965%" y="405" width="0.0382%" height="15" fill="rgb(243,49,53)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.04%)</title><rect x="58.7965%" y="389" width="0.0382%" height="15" fill="rgb(247,216,33)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.04%)</title><rect x="58.7965%" y="373" width="0.0382%" height="15" fill="rgb(226,26,14)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.04%)</title><rect x="58.7965%" y="357" width="0.0382%" height="15" fill="rgb(215,49,53)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="367.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.04%)</title><rect x="58.7965%" y="341" width="0.0382%" height="15" fill="rgb(245,162,40)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="351.50"></text></g><g><title>__rdl_realloc (19 samples, 0.04%)</title><rect x="58.7965%" y="325" width="0.0382%" height="15" fill="rgb(229,68,17)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (19 samples, 0.04%)</title><rect x="58.7965%" y="309" width="0.0382%" height="15" fill="rgb(213,182,10)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="319.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.04%)</title><rect x="58.7965%" y="293" width="0.0382%" height="15" fill="rgb(245,125,30)" fg:x="29273" fg:w="19"/><text x="59.0465%" y="303.50"></text></g><g><title>_int_realloc (17 samples, 0.03%)</title><rect x="58.8005%" y="277" width="0.0341%" height="15" fill="rgb(232,202,2)" fg:x="29275" fg:w="17"/><text x="59.0505%" y="287.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="58.8125%" y="261" width="0.0221%" height="15" fill="rgb(237,140,51)" fg:x="29281" fg:w="11"/><text x="59.0625%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_str (22 samples, 0.04%)</title><rect x="58.7925%" y="565" width="0.0442%" height="15" fill="rgb(236,157,25)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.04%)</title><rect x="58.7925%" y="549" width="0.0442%" height="15" fill="rgb(219,209,0)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.04%)</title><rect x="58.7925%" y="533" width="0.0442%" height="15" fill="rgb(240,116,54)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="543.50"></text></g><g><title>alloc::string::String::push_str (22 samples, 0.04%)</title><rect x="58.7925%" y="517" width="0.0442%" height="15" fill="rgb(216,10,36)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.04%)</title><rect x="58.7925%" y="501" width="0.0442%" height="15" fill="rgb(222,72,44)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.04%)</title><rect x="58.7925%" y="485" width="0.0442%" height="15" fill="rgb(232,159,9)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.04%)</title><rect x="58.7925%" y="469" width="0.0442%" height="15" fill="rgb(210,39,32)" fg:x="29271" fg:w="22"/><text x="59.0425%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (109 samples, 0.22%)</title><rect x="58.6197%" y="693" width="0.2189%" height="15" fill="rgb(216,194,45)" fg:x="29185" fg:w="109"/><text x="58.8697%" y="703.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (103 samples, 0.21%)</title><rect x="58.6318%" y="677" width="0.2069%" height="15" fill="rgb(218,18,35)" fg:x="29191" fg:w="103"/><text x="58.8818%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (103 samples, 0.21%)</title><rect x="58.6318%" y="661" width="0.2069%" height="15" fill="rgb(207,83,51)" fg:x="29191" fg:w="103"/><text x="58.8818%" y="671.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (103 samples, 0.21%)</title><rect x="58.6318%" y="645" width="0.2069%" height="15" fill="rgb(225,63,43)" fg:x="29191" fg:w="103"/><text x="58.8818%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (103 samples, 0.21%)</title><rect x="58.6318%" y="629" width="0.2069%" height="15" fill="rgb(207,57,36)" fg:x="29191" fg:w="103"/><text x="58.8818%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (100 samples, 0.20%)</title><rect x="58.6378%" y="613" width="0.2009%" height="15" fill="rgb(216,99,33)" fg:x="29194" fg:w="100"/><text x="58.8878%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (100 samples, 0.20%)</title><rect x="58.6378%" y="597" width="0.2009%" height="15" fill="rgb(225,42,16)" fg:x="29194" fg:w="100"/><text x="58.8878%" y="607.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (100 samples, 0.20%)</title><rect x="58.6378%" y="581" width="0.2009%" height="15" fill="rgb(220,201,45)" fg:x="29194" fg:w="100"/><text x="58.8878%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="58.8407%" y="597" width="0.0281%" height="15" fill="rgb(225,33,4)" fg:x="29295" fg:w="14"/><text x="59.0907%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.03%)</title><rect x="58.8407%" y="581" width="0.0281%" height="15" fill="rgb(224,33,50)" fg:x="29295" fg:w="14"/><text x="59.0907%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.03%)</title><rect x="58.8407%" y="565" width="0.0281%" height="15" fill="rgb(246,198,51)" fg:x="29295" fg:w="14"/><text x="59.0907%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.03%)</title><rect x="58.8407%" y="549" width="0.0281%" height="15" fill="rgb(205,22,4)" fg:x="29295" fg:w="14"/><text x="59.0907%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="58.8407%" y="533" width="0.0281%" height="15" fill="rgb(206,3,8)" fg:x="29295" fg:w="14"/><text x="59.0907%" y="543.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="58.8487%" y="517" width="0.0201%" height="15" fill="rgb(251,23,15)" fg:x="29299" fg:w="10"/><text x="59.0987%" y="527.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="58.8547%" y="501" width="0.0141%" height="15" fill="rgb(252,88,28)" fg:x="29302" fg:w="7"/><text x="59.1047%" y="511.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (132 samples, 0.27%)</title><rect x="58.6057%" y="725" width="0.2651%" height="15" fill="rgb(212,127,14)" fg:x="29178" fg:w="132"/><text x="58.8557%" y="735.50"></text></g><g><title>core::fmt::write (127 samples, 0.26%)</title><rect x="58.6157%" y="709" width="0.2551%" height="15" fill="rgb(247,145,37)" fg:x="29183" fg:w="127"/><text x="58.8657%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="58.8387%" y="693" width="0.0321%" height="15" fill="rgb(209,117,53)" fg:x="29294" fg:w="16"/><text x="59.0887%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="58.8387%" y="677" width="0.0321%" height="15" fill="rgb(212,90,42)" fg:x="29294" fg:w="16"/><text x="59.0887%" y="687.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.03%)</title><rect x="58.8387%" y="661" width="0.0321%" height="15" fill="rgb(218,164,37)" fg:x="29294" fg:w="16"/><text x="59.0887%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.03%)</title><rect x="58.8387%" y="645" width="0.0321%" height="15" fill="rgb(246,65,34)" fg:x="29294" fg:w="16"/><text x="59.0887%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.03%)</title><rect x="58.8387%" y="629" width="0.0321%" height="15" fill="rgb(231,100,33)" fg:x="29294" fg:w="16"/><text x="59.0887%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.03%)</title><rect x="58.8387%" y="613" width="0.0321%" height="15" fill="rgb(228,126,14)" fg:x="29294" fg:w="16"/><text x="59.0887%" y="623.50"></text></g><g><title>core::fmt::write (140 samples, 0.28%)</title><rect x="58.5956%" y="741" width="0.2812%" height="15" fill="rgb(215,173,21)" fg:x="29173" fg:w="140"/><text x="58.8456%" y="751.50"></text></g><g><title>datafusion_expr::expr_visitor::inspect_expr_pre (12 samples, 0.02%)</title><rect x="58.8768%" y="741" width="0.0241%" height="15" fill="rgb(210,6,40)" fg:x="29313" fg:w="12"/><text x="59.1268%" y="751.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (11 samples, 0.02%)</title><rect x="58.8788%" y="725" width="0.0221%" height="15" fill="rgb(212,48,18)" fg:x="29314" fg:w="11"/><text x="59.1288%" y="735.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (6 samples, 0.01%)</title><rect x="58.8889%" y="709" width="0.0121%" height="15" fill="rgb(230,214,11)" fg:x="29319" fg:w="6"/><text x="59.1389%" y="719.50"></text></g><g><title>_int_free (8 samples, 0.02%)</title><rect x="58.9531%" y="693" width="0.0161%" height="15" fill="rgb(254,105,39)" fg:x="29351" fg:w="8"/><text x="59.2031%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.08%)</title><rect x="58.9793%" y="549" width="0.0783%" height="15" fill="rgb(245,158,5)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.08%)</title><rect x="58.9793%" y="533" width="0.0783%" height="15" fill="rgb(249,208,11)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.08%)</title><rect x="58.9793%" y="517" width="0.0783%" height="15" fill="rgb(210,39,28)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.08%)</title><rect x="58.9793%" y="501" width="0.0783%" height="15" fill="rgb(211,56,53)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.08%)</title><rect x="58.9793%" y="485" width="0.0783%" height="15" fill="rgb(226,201,30)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (39 samples, 0.08%)</title><rect x="58.9793%" y="469" width="0.0783%" height="15" fill="rgb(239,101,34)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (39 samples, 0.08%)</title><rect x="58.9793%" y="453" width="0.0783%" height="15" fill="rgb(226,209,5)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="463.50"></text></g><g><title>alloc::alloc::realloc (39 samples, 0.08%)</title><rect x="58.9793%" y="437" width="0.0783%" height="15" fill="rgb(250,105,47)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="447.50"></text></g><g><title>__rdl_realloc (39 samples, 0.08%)</title><rect x="58.9793%" y="421" width="0.0783%" height="15" fill="rgb(230,72,3)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (39 samples, 0.08%)</title><rect x="58.9793%" y="405" width="0.0783%" height="15" fill="rgb(232,218,39)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="415.50"></text></g><g><title>__GI___libc_realloc (39 samples, 0.08%)</title><rect x="58.9793%" y="389" width="0.0783%" height="15" fill="rgb(248,166,6)" fg:x="29364" fg:w="39"/><text x="59.2293%" y="399.50"></text></g><g><title>_int_realloc (27 samples, 0.05%)</title><rect x="59.0034%" y="373" width="0.0542%" height="15" fill="rgb(247,89,20)" fg:x="29376" fg:w="27"/><text x="59.2534%" y="383.50"></text></g><g><title>_int_malloc (23 samples, 0.05%)</title><rect x="59.0114%" y="357" width="0.0462%" height="15" fill="rgb(248,130,54)" fg:x="29380" fg:w="23"/><text x="59.2614%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (41 samples, 0.08%)</title><rect x="58.9793%" y="645" width="0.0824%" height="15" fill="rgb(234,196,4)" fg:x="29364" fg:w="41"/><text x="59.2293%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (41 samples, 0.08%)</title><rect x="58.9793%" y="629" width="0.0824%" height="15" fill="rgb(250,143,31)" fg:x="29364" fg:w="41"/><text x="59.2293%" y="639.50"></text></g><g><title>alloc::string::String::push_str (41 samples, 0.08%)</title><rect x="58.9793%" y="613" width="0.0824%" height="15" fill="rgb(211,110,34)" fg:x="29364" fg:w="41"/><text x="59.2293%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41 samples, 0.08%)</title><rect x="58.9793%" y="597" width="0.0824%" height="15" fill="rgb(215,124,48)" fg:x="29364" fg:w="41"/><text x="59.2293%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41 samples, 0.08%)</title><rect x="58.9793%" y="581" width="0.0824%" height="15" fill="rgb(216,46,13)" fg:x="29364" fg:w="41"/><text x="59.2293%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41 samples, 0.08%)</title><rect x="58.9793%" y="565" width="0.0824%" height="15" fill="rgb(205,184,25)" fg:x="29364" fg:w="41"/><text x="59.2293%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (47 samples, 0.09%)</title><rect x="58.9692%" y="693" width="0.0944%" height="15" fill="rgb(228,1,10)" fg:x="29359" fg:w="47"/><text x="59.2192%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (43 samples, 0.09%)</title><rect x="58.9772%" y="677" width="0.0864%" height="15" fill="rgb(213,116,27)" fg:x="29363" fg:w="43"/><text x="59.2272%" y="687.50"></text></g><g><title>core::fmt::write (42 samples, 0.08%)</title><rect x="58.9793%" y="661" width="0.0844%" height="15" fill="rgb(241,95,50)" fg:x="29364" fg:w="42"/><text x="59.2293%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="59.0696%" y="677" width="0.0100%" height="15" fill="rgb(238,48,32)" fg:x="29409" fg:w="5"/><text x="59.3196%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (10 samples, 0.02%)</title><rect x="59.0636%" y="693" width="0.0201%" height="15" fill="rgb(235,113,49)" fg:x="29406" fg:w="10"/><text x="59.3136%" y="703.50"></text></g><g><title>_int_malloc (19 samples, 0.04%)</title><rect x="59.1279%" y="389" width="0.0382%" height="15" fill="rgb(205,127,43)" fg:x="29438" fg:w="19"/><text x="59.3779%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.08%)</title><rect x="59.0917%" y="517" width="0.0783%" height="15" fill="rgb(250,162,2)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (39 samples, 0.08%)</title><rect x="59.0917%" y="501" width="0.0783%" height="15" fill="rgb(220,13,41)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (39 samples, 0.08%)</title><rect x="59.0917%" y="485" width="0.0783%" height="15" fill="rgb(249,221,25)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="495.50"></text></g><g><title>alloc::alloc::realloc (39 samples, 0.08%)</title><rect x="59.0917%" y="469" width="0.0783%" height="15" fill="rgb(215,208,19)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="479.50"></text></g><g><title>__rdl_realloc (39 samples, 0.08%)</title><rect x="59.0917%" y="453" width="0.0783%" height="15" fill="rgb(236,175,2)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (39 samples, 0.08%)</title><rect x="59.0917%" y="437" width="0.0783%" height="15" fill="rgb(241,52,2)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="447.50"></text></g><g><title>__GI___libc_realloc (39 samples, 0.08%)</title><rect x="59.0917%" y="421" width="0.0783%" height="15" fill="rgb(248,140,14)" fg:x="29420" fg:w="39"/><text x="59.3417%" y="431.50"></text></g><g><title>_int_realloc (31 samples, 0.06%)</title><rect x="59.1078%" y="405" width="0.0623%" height="15" fill="rgb(253,22,42)" fg:x="29428" fg:w="31"/><text x="59.3578%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 0.08%)</title><rect x="59.0897%" y="581" width="0.0824%" height="15" fill="rgb(234,61,47)" fg:x="29419" fg:w="41"/><text x="59.3397%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.08%)</title><rect x="59.0897%" y="565" width="0.0824%" height="15" fill="rgb(208,226,15)" fg:x="29419" fg:w="41"/><text x="59.3397%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.08%)</title><rect x="59.0897%" y="549" width="0.0824%" height="15" fill="rgb(217,221,4)" fg:x="29419" fg:w="41"/><text x="59.3397%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.08%)</title><rect x="59.0897%" y="533" width="0.0824%" height="15" fill="rgb(212,174,34)" fg:x="29419" fg:w="41"/><text x="59.3397%" y="543.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (129 samples, 0.26%)</title><rect x="58.9150%" y="709" width="0.2591%" height="15" fill="rgb(253,83,4)" fg:x="29332" fg:w="129"/><text x="59.1650%" y="719.50"></text></g><g><title>core::fmt::write (45 samples, 0.09%)</title><rect x="59.0837%" y="693" width="0.0904%" height="15" fill="rgb(250,195,49)" fg:x="29416" fg:w="45"/><text x="59.3337%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (44 samples, 0.09%)</title><rect x="59.0857%" y="677" width="0.0884%" height="15" fill="rgb(241,192,25)" fg:x="29417" fg:w="44"/><text x="59.3357%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 0.08%)</title><rect x="59.0897%" y="661" width="0.0844%" height="15" fill="rgb(208,124,10)" fg:x="29419" fg:w="42"/><text x="59.3397%" y="671.50"></text></g><g><title>alloc::string::String::push_str (42 samples, 0.08%)</title><rect x="59.0897%" y="645" width="0.0844%" height="15" fill="rgb(222,33,0)" fg:x="29419" fg:w="42"/><text x="59.3397%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 0.08%)</title><rect x="59.0897%" y="629" width="0.0844%" height="15" fill="rgb(234,209,28)" fg:x="29419" fg:w="42"/><text x="59.3397%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 0.08%)</title><rect x="59.0897%" y="613" width="0.0844%" height="15" fill="rgb(224,11,23)" fg:x="29419" fg:w="42"/><text x="59.3397%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 0.08%)</title><rect x="59.0897%" y="597" width="0.0844%" height="15" fill="rgb(232,99,1)" fg:x="29419" fg:w="42"/><text x="59.3397%" y="607.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (303 samples, 0.61%)</title><rect x="58.5775%" y="773" width="0.6086%" height="15" fill="rgb(237,95,45)" fg:x="29164" fg:w="303"/><text x="58.8275%" y="783.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (302 samples, 0.61%)</title><rect x="58.5795%" y="757" width="0.6066%" height="15" fill="rgb(208,109,11)" fg:x="29165" fg:w="302"/><text x="58.8295%" y="767.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (142 samples, 0.29%)</title><rect x="58.9009%" y="741" width="0.2852%" height="15" fill="rgb(216,190,48)" fg:x="29325" fg:w="142"/><text x="59.1509%" y="751.50"></text></g><g><title>core::fmt::write (140 samples, 0.28%)</title><rect x="58.9049%" y="725" width="0.2812%" height="15" fill="rgb(251,171,36)" fg:x="29327" fg:w="140"/><text x="59.1549%" y="735.50"></text></g><g><title>core::fmt::run (6 samples, 0.01%)</title><rect x="59.1741%" y="709" width="0.0121%" height="15" fill="rgb(230,62,22)" fg:x="29461" fg:w="6"/><text x="59.4241%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (320 samples, 0.64%)</title><rect x="58.5494%" y="821" width="0.6427%" height="15" fill="rgb(225,114,35)" fg:x="29150" fg:w="320"/><text x="58.7994%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (311 samples, 0.62%)</title><rect x="58.5675%" y="805" width="0.6247%" height="15" fill="rgb(215,118,42)" fg:x="29159" fg:w="311"/><text x="58.8175%" y="815.50"></text></g><g><title>core::fmt::write (310 samples, 0.62%)</title><rect x="58.5695%" y="789" width="0.6227%" height="15" fill="rgb(243,119,21)" fg:x="29160" fg:w="310"/><text x="58.8195%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (17 samples, 0.03%)</title><rect x="59.1922%" y="821" width="0.0341%" height="15" fill="rgb(252,177,53)" fg:x="29470" fg:w="17"/><text x="59.4422%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (13 samples, 0.03%)</title><rect x="59.2002%" y="805" width="0.0261%" height="15" fill="rgb(237,209,29)" fg:x="29474" fg:w="13"/><text x="59.4502%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (7 samples, 0.01%)</title><rect x="59.2122%" y="789" width="0.0141%" height="15" fill="rgb(212,65,23)" fg:x="29480" fg:w="7"/><text x="59.4622%" y="799.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (12 samples, 0.02%)</title><rect x="59.2263%" y="821" width="0.0241%" height="15" fill="rgb(230,222,46)" fg:x="29487" fg:w="12"/><text x="59.4763%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="59.2384%" y="805" width="0.0121%" height="15" fill="rgb(215,135,32)" fg:x="29493" fg:w="6"/><text x="59.4884%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="59.2805%" y="789" width="0.0121%" height="15" fill="rgb(246,101,22)" fg:x="29514" fg:w="6"/><text x="59.5305%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="59.3066%" y="757" width="0.0161%" height="15" fill="rgb(206,107,13)" fg:x="29527" fg:w="8"/><text x="59.5566%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (21 samples, 0.04%)</title><rect x="59.2986%" y="789" width="0.0422%" height="15" fill="rgb(250,100,44)" fg:x="29523" fg:w="21"/><text x="59.5486%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.04%)</title><rect x="59.3046%" y="773" width="0.0362%" height="15" fill="rgb(231,147,38)" fg:x="29526" fg:w="18"/><text x="59.5546%" y="783.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (6 samples, 0.01%)</title><rect x="59.3287%" y="757" width="0.0121%" height="15" fill="rgb(229,8,40)" fg:x="29538" fg:w="6"/><text x="59.5787%" y="767.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="59.4051%" y="757" width="0.0181%" height="15" fill="rgb(221,135,30)" fg:x="29576" fg:w="9"/><text x="59.6551%" y="767.50"></text></g><g><title>_int_malloc (8 samples, 0.02%)</title><rect x="59.4071%" y="741" width="0.0161%" height="15" fill="rgb(249,193,18)" fg:x="29577" fg:w="8"/><text x="59.6571%" y="751.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="59.4292%" y="741" width="0.0100%" height="15" fill="rgb(209,133,39)" fg:x="29588" fg:w="5"/><text x="59.6792%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (54 samples, 0.11%)</title><rect x="59.3408%" y="789" width="0.1085%" height="15" fill="rgb(232,100,14)" fg:x="29544" fg:w="54"/><text x="59.5908%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (36 samples, 0.07%)</title><rect x="59.3769%" y="773" width="0.0723%" height="15" fill="rgb(224,185,1)" fg:x="29562" fg:w="36"/><text x="59.6269%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (12 samples, 0.02%)</title><rect x="59.4252%" y="757" width="0.0241%" height="15" fill="rgb(223,139,8)" fg:x="29586" fg:w="12"/><text x="59.6752%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="59.4934%" y="725" width="0.0121%" height="15" fill="rgb(232,213,38)" fg:x="29620" fg:w="6"/><text x="59.7434%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="59.4934%" y="709" width="0.0121%" height="15" fill="rgb(207,94,22)" fg:x="29620" fg:w="6"/><text x="59.7434%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="59.4934%" y="741" width="0.0181%" height="15" fill="rgb(219,183,54)" fg:x="29620" fg:w="9"/><text x="59.7434%" y="751.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="59.5115%" y="741" width="0.0241%" height="15" fill="rgb(216,185,54)" fg:x="29629" fg:w="12"/><text x="59.7615%" y="751.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="59.5236%" y="725" width="0.0121%" height="15" fill="rgb(254,217,39)" fg:x="29635" fg:w="6"/><text x="59.7736%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.05%)</title><rect x="59.4894%" y="757" width="0.0522%" height="15" fill="rgb(240,178,23)" fg:x="29618" fg:w="26"/><text x="59.7394%" y="767.50"></text></g><g><title>__GI___libc_malloc (70 samples, 0.14%)</title><rect x="59.5477%" y="757" width="0.1406%" height="15" fill="rgb(218,11,47)" fg:x="29647" fg:w="70"/><text x="59.7977%" y="767.50"></text></g><g><title>_int_malloc (51 samples, 0.10%)</title><rect x="59.5858%" y="741" width="0.1024%" height="15" fill="rgb(218,51,51)" fg:x="29666" fg:w="51"/><text x="59.8358%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (107 samples, 0.21%)</title><rect x="59.4774%" y="773" width="0.2149%" height="15" fill="rgb(238,126,27)" fg:x="29612" fg:w="107"/><text x="59.7274%" y="783.50"></text></g><g><title>__GI___libc_free (10 samples, 0.02%)</title><rect x="59.6923%" y="773" width="0.0201%" height="15" fill="rgb(249,202,22)" fg:x="29719" fg:w="10"/><text x="59.9423%" y="783.50"></text></g><g><title>_int_free (13 samples, 0.03%)</title><rect x="59.7124%" y="773" width="0.0261%" height="15" fill="rgb(254,195,49)" fg:x="29729" fg:w="13"/><text x="59.9624%" y="783.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="59.7425%" y="757" width="0.0141%" height="15" fill="rgb(208,123,14)" fg:x="29744" fg:w="7"/><text x="59.9925%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (12 samples, 0.02%)</title><rect x="59.7425%" y="773" width="0.0241%" height="15" fill="rgb(224,200,8)" fg:x="29744" fg:w="12"/><text x="59.9925%" y="783.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="59.7706%" y="757" width="0.0100%" height="15" fill="rgb(217,61,36)" fg:x="29758" fg:w="5"/><text x="60.0206%" y="767.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.04%)</title><rect x="59.7907%" y="741" width="0.0402%" height="15" fill="rgb(206,35,45)" fg:x="29768" fg:w="20"/><text x="60.0407%" y="751.50"></text></g><g><title>_int_malloc (14 samples, 0.03%)</title><rect x="59.8028%" y="725" width="0.0281%" height="15" fill="rgb(217,65,33)" fg:x="29774" fg:w="14"/><text x="60.0528%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.05%)</title><rect x="59.7827%" y="757" width="0.0542%" height="15" fill="rgb(222,158,48)" fg:x="29764" fg:w="27"/><text x="60.0327%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (44 samples, 0.09%)</title><rect x="59.7666%" y="773" width="0.0884%" height="15" fill="rgb(254,2,54)" fg:x="29756" fg:w="44"/><text x="60.0166%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (8 samples, 0.02%)</title><rect x="59.8389%" y="757" width="0.0161%" height="15" fill="rgb(250,143,38)" fg:x="29792" fg:w="8"/><text x="60.0889%" y="767.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (303 samples, 0.61%)</title><rect x="59.2604%" y="805" width="0.6086%" height="15" fill="rgb(248,25,0)" fg:x="29504" fg:w="303"/><text x="59.5104%" y="815.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (209 samples, 0.42%)</title><rect x="59.4493%" y="789" width="0.4198%" height="15" fill="rgb(206,152,27)" fg:x="29598" fg:w="209"/><text x="59.6993%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (7 samples, 0.01%)</title><rect x="59.8550%" y="773" width="0.0141%" height="15" fill="rgb(240,77,30)" fg:x="29800" fg:w="7"/><text x="60.1050%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="61.0119%" y="741" width="0.0161%" height="15" fill="rgb(231,5,3)" fg:x="30376" fg:w="8"/><text x="61.2619%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="61.0139%" y="725" width="0.0141%" height="15" fill="rgb(207,226,32)" fg:x="30377" fg:w="7"/><text x="61.2639%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="61.0139%" y="709" width="0.0141%" height="15" fill="rgb(222,207,47)" fg:x="30377" fg:w="7"/><text x="61.2639%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="61.0139%" y="693" width="0.0141%" height="15" fill="rgb(229,115,45)" fg:x="30377" fg:w="7"/><text x="61.2639%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="61.0139%" y="677" width="0.0141%" height="15" fill="rgb(224,191,6)" fg:x="30377" fg:w="7"/><text x="61.2639%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="61.0159%" y="661" width="0.0121%" height="15" fill="rgb(230,227,24)" fg:x="30378" fg:w="6"/><text x="61.2659%" y="671.50"></text></g><g><title>malloc_consolidate (326 samples, 0.65%)</title><rect x="60.5781%" y="757" width="0.6548%" height="15" fill="rgb(228,80,19)" fg:x="30160" fg:w="326"/><text x="60.8281%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (102 samples, 0.20%)</title><rect x="61.0280%" y="741" width="0.2049%" height="15" fill="rgb(247,229,0)" fg:x="30384" fg:w="102"/><text x="61.2780%" y="751.50"></text></g><g><title>__GI___libc_malloc (672 samples, 1.35%)</title><rect x="59.8891%" y="789" width="1.3497%" height="15" fill="rgb(237,194,15)" fg:x="29817" fg:w="672"/><text x="60.1391%" y="799.50"></text></g><g><title>_int_malloc (670 samples, 1.35%)</title><rect x="59.8931%" y="773" width="1.3457%" height="15" fill="rgb(219,203,20)" fg:x="29819" fg:w="670"/><text x="60.1431%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="61.2389%" y="789" width="0.0100%" height="15" fill="rgb(234,128,8)" fg:x="30489" fg:w="5"/><text x="61.4889%" y="799.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (1,440 samples, 2.89%)</title><rect x="58.3727%" y="837" width="2.8923%" height="15" fill="rgb(248,202,8)" fg:x="29062" fg:w="1440"/><text x="58.6227%" y="847.50">da..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (1,003 samples, 2.01%)</title><rect x="59.2504%" y="821" width="2.0146%" height="15" fill="rgb(206,104,37)" fg:x="29499" fg:w="1003"/><text x="59.5004%" y="831.50">d..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (692 samples, 1.39%)</title><rect x="59.8751%" y="805" width="1.3899%" height="15" fill="rgb(223,8,27)" fg:x="29810" fg:w="692"/><text x="60.1251%" y="815.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (7 samples, 0.01%)</title><rect x="61.2509%" y="789" width="0.0141%" height="15" fill="rgb(216,217,28)" fg:x="30495" fg:w="7"/><text x="61.5009%" y="799.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (49 samples, 0.10%)</title><rect x="61.2690%" y="821" width="0.0984%" height="15" fill="rgb(249,199,1)" fg:x="30504" fg:w="49"/><text x="61.5190%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.01%)</title><rect x="61.3554%" y="805" width="0.0121%" height="15" fill="rgb(240,85,17)" fg:x="30547" fg:w="6"/><text x="61.6054%" y="815.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="61.3895%" y="789" width="0.0141%" height="15" fill="rgb(206,108,45)" fg:x="30564" fg:w="7"/><text x="61.6395%" y="799.50"></text></g><g><title>datafusion::physical_plan::execute_stream (76 samples, 0.15%)</title><rect x="61.2650%" y="837" width="0.1527%" height="15" fill="rgb(245,210,41)" fg:x="30502" fg:w="76"/><text x="61.5150%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.04%)</title><rect x="61.3735%" y="821" width="0.0442%" height="15" fill="rgb(206,13,37)" fg:x="30556" fg:w="22"/><text x="61.6235%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (20 samples, 0.04%)</title><rect x="61.3775%" y="805" width="0.0402%" height="15" fill="rgb(250,61,18)" fg:x="30558" fg:w="20"/><text x="61.6275%" y="815.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="61.4036%" y="789" width="0.0141%" height="15" fill="rgb(235,172,48)" fg:x="30571" fg:w="7"/><text x="61.6536%" y="799.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (10 samples, 0.02%)</title><rect x="61.4176%" y="837" width="0.0201%" height="15" fill="rgb(249,201,17)" fg:x="30578" fg:w="10"/><text x="61.6676%" y="847.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.04%)</title><rect x="61.6024%" y="821" width="0.0442%" height="15" fill="rgb(219,208,6)" fg:x="30670" fg:w="22"/><text x="61.8524%" y="831.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="61.6205%" y="805" width="0.0261%" height="15" fill="rgb(248,31,23)" fg:x="30679" fg:w="13"/><text x="61.8705%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="61.6466%" y="821" width="0.0161%" height="15" fill="rgb(245,15,42)" fg:x="30692" fg:w="8"/><text x="61.8966%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.02%)</title><rect x="61.7390%" y="565" width="0.0181%" height="15" fill="rgb(222,217,39)" fg:x="30738" fg:w="9"/><text x="61.9890%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.02%)</title><rect x="61.7390%" y="549" width="0.0181%" height="15" fill="rgb(210,219,27)" fg:x="30738" fg:w="9"/><text x="61.9890%" y="559.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.02%)</title><rect x="61.7390%" y="533" width="0.0181%" height="15" fill="rgb(252,166,36)" fg:x="30738" fg:w="9"/><text x="61.9890%" y="543.50"></text></g><g><title>__rdl_realloc (9 samples, 0.02%)</title><rect x="61.7390%" y="517" width="0.0181%" height="15" fill="rgb(245,132,34)" fg:x="30738" fg:w="9"/><text x="61.9890%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.02%)</title><rect x="61.7390%" y="501" width="0.0181%" height="15" fill="rgb(236,54,3)" fg:x="30738" fg:w="9"/><text x="61.9890%" y="511.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.02%)</title><rect x="61.7390%" y="485" width="0.0181%" height="15" fill="rgb(241,173,43)" fg:x="30738" fg:w="9"/><text x="61.9890%" y="495.50"></text></g><g><title>_int_realloc (5 samples, 0.01%)</title><rect x="61.7470%" y="469" width="0.0100%" height="15" fill="rgb(215,190,9)" fg:x="30742" fg:w="5"/><text x="61.9970%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (15 samples, 0.03%)</title><rect x="61.7310%" y="789" width="0.0301%" height="15" fill="rgb(242,101,16)" fg:x="30734" fg:w="15"/><text x="61.9810%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.03%)</title><rect x="61.7330%" y="773" width="0.0281%" height="15" fill="rgb(223,190,21)" fg:x="30735" fg:w="14"/><text x="61.9830%" y="783.50"></text></g><g><title>core::fmt::write (14 samples, 0.03%)</title><rect x="61.7330%" y="757" width="0.0281%" height="15" fill="rgb(215,228,25)" fg:x="30735" fg:w="14"/><text x="61.9830%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.02%)</title><rect x="61.7370%" y="741" width="0.0241%" height="15" fill="rgb(225,36,22)" fg:x="30737" fg:w="12"/><text x="61.9870%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.02%)</title><rect x="61.7370%" y="725" width="0.0241%" height="15" fill="rgb(251,106,46)" fg:x="30737" fg:w="12"/><text x="61.9870%" y="735.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.02%)</title><rect x="61.7370%" y="709" width="0.0241%" height="15" fill="rgb(208,90,1)" fg:x="30737" fg:w="12"/><text x="61.9870%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.02%)</title><rect x="61.7370%" y="693" width="0.0241%" height="15" fill="rgb(243,10,4)" fg:x="30737" fg:w="12"/><text x="61.9870%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.02%)</title><rect x="61.7370%" y="677" width="0.0241%" height="15" fill="rgb(212,137,27)" fg:x="30737" fg:w="12"/><text x="61.9870%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.02%)</title><rect x="61.7370%" y="661" width="0.0241%" height="15" fill="rgb(231,220,49)" fg:x="30737" fg:w="12"/><text x="61.9870%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.02%)</title><rect x="61.7390%" y="645" width="0.0221%" height="15" fill="rgb(237,96,20)" fg:x="30738" fg:w="11"/><text x="61.9890%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.02%)</title><rect x="61.7390%" y="629" width="0.0221%" height="15" fill="rgb(239,229,30)" fg:x="30738" fg:w="11"/><text x="61.9890%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="61.7390%" y="613" width="0.0221%" height="15" fill="rgb(219,65,33)" fg:x="30738" fg:w="11"/><text x="61.9890%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.02%)</title><rect x="61.7390%" y="597" width="0.0221%" height="15" fill="rgb(243,134,7)" fg:x="30738" fg:w="11"/><text x="61.9890%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="61.7390%" y="581" width="0.0221%" height="15" fill="rgb(216,177,54)" fg:x="30738" fg:w="11"/><text x="61.9890%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.03%)</title><rect x="61.7892%" y="549" width="0.0301%" height="15" fill="rgb(211,160,20)" fg:x="30763" fg:w="15"/><text x="62.0392%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.03%)</title><rect x="61.7892%" y="533" width="0.0301%" height="15" fill="rgb(239,85,39)" fg:x="30763" fg:w="15"/><text x="62.0392%" y="543.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.03%)</title><rect x="61.7892%" y="517" width="0.0301%" height="15" fill="rgb(232,125,22)" fg:x="30763" fg:w="15"/><text x="62.0392%" y="527.50"></text></g><g><title>__rdl_realloc (15 samples, 0.03%)</title><rect x="61.7892%" y="501" width="0.0301%" height="15" fill="rgb(244,57,34)" fg:x="30763" fg:w="15"/><text x="62.0392%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (15 samples, 0.03%)</title><rect x="61.7892%" y="485" width="0.0301%" height="15" fill="rgb(214,203,32)" fg:x="30763" fg:w="15"/><text x="62.0392%" y="495.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.03%)</title><rect x="61.7892%" y="469" width="0.0301%" height="15" fill="rgb(207,58,43)" fg:x="30763" fg:w="15"/><text x="62.0392%" y="479.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="61.8194%" y="549" width="0.0141%" height="15" fill="rgb(215,193,15)" fg:x="30778" fg:w="7"/><text x="62.0694%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.05%)</title><rect x="61.7872%" y="565" width="0.0522%" height="15" fill="rgb(232,15,44)" fg:x="30762" fg:w="26"/><text x="62.0372%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.06%)</title><rect x="61.7792%" y="629" width="0.0623%" height="15" fill="rgb(212,3,48)" fg:x="30758" fg:w="31"/><text x="62.0292%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.06%)</title><rect x="61.7792%" y="613" width="0.0623%" height="15" fill="rgb(218,128,7)" fg:x="30758" fg:w="31"/><text x="62.0292%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.06%)</title><rect x="61.7832%" y="597" width="0.0582%" height="15" fill="rgb(226,216,39)" fg:x="30760" fg:w="29"/><text x="62.0332%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.06%)</title><rect x="61.7832%" y="581" width="0.0582%" height="15" fill="rgb(243,47,51)" fg:x="30760" fg:w="29"/><text x="62.0332%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (33 samples, 0.07%)</title><rect x="61.7792%" y="725" width="0.0663%" height="15" fill="rgb(241,183,40)" fg:x="30758" fg:w="33"/><text x="62.0292%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (33 samples, 0.07%)</title><rect x="61.7792%" y="709" width="0.0663%" height="15" fill="rgb(231,217,32)" fg:x="30758" fg:w="33"/><text x="62.0292%" y="719.50"></text></g><g><title>alloc::string::String::push_str (33 samples, 0.07%)</title><rect x="61.7792%" y="693" width="0.0663%" height="15" fill="rgb(229,61,38)" fg:x="30758" fg:w="33"/><text x="62.0292%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (33 samples, 0.07%)</title><rect x="61.7792%" y="677" width="0.0663%" height="15" fill="rgb(225,210,5)" fg:x="30758" fg:w="33"/><text x="62.0292%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (33 samples, 0.07%)</title><rect x="61.7792%" y="661" width="0.0663%" height="15" fill="rgb(231,79,45)" fg:x="30758" fg:w="33"/><text x="62.0292%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.07%)</title><rect x="61.7792%" y="645" width="0.0663%" height="15" fill="rgb(224,100,7)" fg:x="30758" fg:w="33"/><text x="62.0292%" y="655.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (74 samples, 0.15%)</title><rect x="61.7029%" y="805" width="0.1486%" height="15" fill="rgb(241,198,18)" fg:x="30720" fg:w="74"/><text x="61.9529%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (45 samples, 0.09%)</title><rect x="61.7611%" y="789" width="0.0904%" height="15" fill="rgb(252,97,53)" fg:x="30749" fg:w="45"/><text x="62.0111%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (38 samples, 0.08%)</title><rect x="61.7752%" y="773" width="0.0763%" height="15" fill="rgb(220,88,7)" fg:x="30756" fg:w="38"/><text x="62.0252%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (37 samples, 0.07%)</title><rect x="61.7772%" y="757" width="0.0743%" height="15" fill="rgb(213,176,14)" fg:x="30757" fg:w="37"/><text x="62.0272%" y="767.50"></text></g><g><title>core::fmt::write (37 samples, 0.07%)</title><rect x="61.7772%" y="741" width="0.0743%" height="15" fill="rgb(246,73,7)" fg:x="30757" fg:w="37"/><text x="62.0272%" y="751.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (218 samples, 0.44%)</title><rect x="61.4377%" y="837" width="0.4379%" height="15" fill="rgb(245,64,36)" fg:x="30588" fg:w="218"/><text x="61.6877%" y="847.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (102 samples, 0.20%)</title><rect x="61.6707%" y="821" width="0.2049%" height="15" fill="rgb(245,80,10)" fg:x="30704" fg:w="102"/><text x="61.9207%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.02%)</title><rect x="61.8515%" y="805" width="0.0241%" height="15" fill="rgb(232,107,50)" fg:x="30794" fg:w="12"/><text x="62.1015%" y="815.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="61.9077%" y="821" width="0.0141%" height="15" fill="rgb(253,3,0)" fg:x="30822" fg:w="7"/><text x="62.1577%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="61.9218%" y="821" width="0.0100%" height="15" fill="rgb(212,99,53)" fg:x="30829" fg:w="5"/><text x="62.1718%" y="831.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (34 samples, 0.07%)</title><rect x="61.8756%" y="837" width="0.0683%" height="15" fill="rgb(249,111,54)" fg:x="30806" fg:w="34"/><text x="62.1256%" y="847.50"></text></g><g><title>chrono::offset::utc::Utc::now (6 samples, 0.01%)</title><rect x="61.9318%" y="821" width="0.0121%" height="15" fill="rgb(249,55,30)" fg:x="30834" fg:w="6"/><text x="62.1818%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="61.9519%" y="821" width="0.0141%" height="15" fill="rgb(237,47,42)" fg:x="30844" fg:w="7"/><text x="62.2019%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="61.9519%" y="805" width="0.0141%" height="15" fill="rgb(211,20,18)" fg:x="30844" fg:w="7"/><text x="62.2019%" y="815.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.01%)</title><rect x="61.9519%" y="789" width="0.0141%" height="15" fill="rgb(231,203,46)" fg:x="30844" fg:w="7"/><text x="62.2019%" y="799.50"></text></g><g><title>_int_realloc (6 samples, 0.01%)</title><rect x="61.9539%" y="773" width="0.0121%" height="15" fill="rgb(237,142,3)" fg:x="30845" fg:w="6"/><text x="62.2039%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.02%)</title><rect x="61.9800%" y="805" width="0.0161%" height="15" fill="rgb(241,107,1)" fg:x="30858" fg:w="8"/><text x="62.2300%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="61.9800%" y="789" width="0.0161%" height="15" fill="rgb(229,83,13)" fg:x="30858" fg:w="8"/><text x="62.2300%" y="799.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.02%)</title><rect x="61.9800%" y="773" width="0.0161%" height="15" fill="rgb(241,91,40)" fg:x="30858" fg:w="8"/><text x="62.2300%" y="783.50"></text></g><g><title>_int_realloc (6 samples, 0.01%)</title><rect x="61.9841%" y="757" width="0.0121%" height="15" fill="rgb(225,3,45)" fg:x="30860" fg:w="6"/><text x="62.2341%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="61.9841%" y="741" width="0.0121%" height="15" fill="rgb(244,223,14)" fg:x="30860" fg:w="6"/><text x="62.2341%" y="751.50"></text></g><g><title>malloc_consolidate (5 samples, 0.01%)</title><rect x="61.9861%" y="725" width="0.0100%" height="15" fill="rgb(224,124,37)" fg:x="30861" fg:w="5"/><text x="62.2361%" y="735.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (32 samples, 0.06%)</title><rect x="61.9439%" y="837" width="0.0643%" height="15" fill="rgb(251,171,30)" fg:x="30840" fg:w="32"/><text x="62.1939%" y="847.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (21 samples, 0.04%)</title><rect x="61.9660%" y="821" width="0.0422%" height="15" fill="rgb(236,46,54)" fg:x="30851" fg:w="21"/><text x="62.2160%" y="831.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (6 samples, 0.01%)</title><rect x="61.9961%" y="805" width="0.0121%" height="15" fill="rgb(245,213,5)" fg:x="30866" fg:w="6"/><text x="62.2461%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;sqlparser::tokenizer::Token&gt; (5 samples, 0.01%)</title><rect x="62.0403%" y="805" width="0.0100%" height="15" fill="rgb(230,144,27)" fg:x="30888" fg:w="5"/><text x="62.2903%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="62.0704%" y="789" width="0.0141%" height="15" fill="rgb(220,86,6)" fg:x="30903" fg:w="7"/><text x="62.3204%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="62.0704%" y="773" width="0.0141%" height="15" fill="rgb(240,20,13)" fg:x="30903" fg:w="7"/><text x="62.3204%" y="783.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="62.0744%" y="757" width="0.0100%" height="15" fill="rgb(217,89,34)" fg:x="30905" fg:w="5"/><text x="62.3244%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.02%)</title><rect x="62.0845%" y="789" width="0.0161%" height="15" fill="rgb(229,13,5)" fg:x="30910" fg:w="8"/><text x="62.3345%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="62.0885%" y="773" width="0.0121%" height="15" fill="rgb(244,67,35)" fg:x="30912" fg:w="6"/><text x="62.3385%" y="783.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="62.0905%" y="757" width="0.0100%" height="15" fill="rgb(221,40,2)" fg:x="30913" fg:w="5"/><text x="62.3405%" y="767.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="62.1467%" y="773" width="0.0141%" height="15" fill="rgb(237,157,21)" fg:x="30941" fg:w="7"/><text x="62.3967%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (23 samples, 0.05%)</title><rect x="62.1729%" y="773" width="0.0462%" height="15" fill="rgb(222,94,11)" fg:x="30954" fg:w="23"/><text x="62.4229%" y="783.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.05%)</title><rect x="62.1729%" y="757" width="0.0462%" height="15" fill="rgb(249,113,6)" fg:x="30954" fg:w="23"/><text x="62.4229%" y="767.50"></text></g><g><title>_int_malloc (19 samples, 0.04%)</title><rect x="62.1809%" y="741" width="0.0382%" height="15" fill="rgb(238,137,36)" fg:x="30958" fg:w="19"/><text x="62.4309%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (5 samples, 0.01%)</title><rect x="62.2191%" y="773" width="0.0100%" height="15" fill="rgb(210,102,26)" fg:x="30977" fg:w="5"/><text x="62.4691%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (26 samples, 0.05%)</title><rect x="62.2291%" y="773" width="0.0522%" height="15" fill="rgb(218,30,30)" fg:x="30982" fg:w="26"/><text x="62.4791%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="62.2592%" y="757" width="0.0221%" height="15" fill="rgb(214,67,26)" fg:x="30997" fg:w="11"/><text x="62.5092%" y="767.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (158 samples, 0.32%)</title><rect x="62.0142%" y="821" width="0.3174%" height="15" fill="rgb(251,9,53)" fg:x="30875" fg:w="158"/><text x="62.2642%" y="831.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (140 samples, 0.28%)</title><rect x="62.0503%" y="805" width="0.2812%" height="15" fill="rgb(228,204,25)" fg:x="30893" fg:w="140"/><text x="62.3003%" y="815.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (115 samples, 0.23%)</title><rect x="62.1005%" y="789" width="0.2310%" height="15" fill="rgb(207,153,8)" fg:x="30918" fg:w="115"/><text x="62.3505%" y="799.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (25 samples, 0.05%)</title><rect x="62.2813%" y="773" width="0.0502%" height="15" fill="rgb(242,9,16)" fg:x="31008" fg:w="25"/><text x="62.5313%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.01%)</title><rect x="62.3175%" y="757" width="0.0141%" height="15" fill="rgb(217,211,10)" fg:x="31026" fg:w="7"/><text x="62.5675%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="62.3195%" y="741" width="0.0121%" height="15" fill="rgb(219,228,52)" fg:x="31027" fg:w="6"/><text x="62.5695%" y="751.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="62.3195%" y="725" width="0.0121%" height="15" fill="rgb(231,92,29)" fg:x="31027" fg:w="6"/><text x="62.5695%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="62.3315%" y="821" width="0.0241%" height="15" fill="rgb(232,8,23)" fg:x="31033" fg:w="12"/><text x="62.5815%" y="831.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.03%)</title><rect x="62.3556%" y="805" width="0.0261%" height="15" fill="rgb(216,211,34)" fg:x="31045" fg:w="13"/><text x="62.6056%" y="815.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (188 samples, 0.38%)</title><rect x="62.0082%" y="837" width="0.3776%" height="15" fill="rgb(236,151,0)" fg:x="30872" fg:w="188"/><text x="62.2582%" y="847.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (15 samples, 0.03%)</title><rect x="62.3556%" y="821" width="0.0301%" height="15" fill="rgb(209,168,3)" fg:x="31045" fg:w="15"/><text x="62.6056%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (133 samples, 0.27%)</title><rect x="62.3998%" y="581" width="0.2671%" height="15" fill="rgb(208,129,28)" fg:x="31067" fg:w="133"/><text x="62.6498%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (129 samples, 0.26%)</title><rect x="62.4079%" y="565" width="0.2591%" height="15" fill="rgb(229,78,22)" fg:x="31071" fg:w="129"/><text x="62.6579%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (124 samples, 0.25%)</title><rect x="62.4179%" y="549" width="0.2491%" height="15" fill="rgb(228,187,13)" fg:x="31076" fg:w="124"/><text x="62.6679%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (118 samples, 0.24%)</title><rect x="62.4300%" y="533" width="0.2370%" height="15" fill="rgb(240,119,24)" fg:x="31082" fg:w="118"/><text x="62.6800%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (112 samples, 0.22%)</title><rect x="62.4420%" y="517" width="0.2250%" height="15" fill="rgb(209,194,42)" fg:x="31088" fg:w="112"/><text x="62.6920%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (108 samples, 0.22%)</title><rect x="62.4500%" y="501" width="0.2169%" height="15" fill="rgb(247,200,46)" fg:x="31092" fg:w="108"/><text x="62.7000%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (100 samples, 0.20%)</title><rect x="62.4661%" y="485" width="0.2009%" height="15" fill="rgb(218,76,16)" fg:x="31100" fg:w="100"/><text x="62.7161%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (87 samples, 0.17%)</title><rect x="62.4922%" y="469" width="0.1747%" height="15" fill="rgb(225,21,48)" fg:x="31113" fg:w="87"/><text x="62.7422%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (75 samples, 0.15%)</title><rect x="62.5163%" y="453" width="0.1506%" height="15" fill="rgb(239,223,50)" fg:x="31125" fg:w="75"/><text x="62.7663%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (64 samples, 0.13%)</title><rect x="62.5384%" y="437" width="0.1285%" height="15" fill="rgb(244,45,21)" fg:x="31136" fg:w="64"/><text x="62.7884%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (48 samples, 0.10%)</title><rect x="62.5706%" y="421" width="0.0964%" height="15" fill="rgb(232,33,43)" fg:x="31152" fg:w="48"/><text x="62.8206%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (46 samples, 0.09%)</title><rect x="62.5746%" y="405" width="0.0924%" height="15" fill="rgb(209,8,3)" fg:x="31154" fg:w="46"/><text x="62.8246%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (46 samples, 0.09%)</title><rect x="62.5746%" y="389" width="0.0924%" height="15" fill="rgb(214,25,53)" fg:x="31154" fg:w="46"/><text x="62.8246%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (38 samples, 0.08%)</title><rect x="62.5906%" y="373" width="0.0763%" height="15" fill="rgb(254,186,54)" fg:x="31162" fg:w="38"/><text x="62.8406%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.05%)</title><rect x="62.6147%" y="357" width="0.0522%" height="15" fill="rgb(208,174,49)" fg:x="31174" fg:w="26"/><text x="62.8647%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.05%)</title><rect x="62.6147%" y="341" width="0.0522%" height="15" fill="rgb(233,191,51)" fg:x="31174" fg:w="26"/><text x="62.8647%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="62.6429%" y="325" width="0.0241%" height="15" fill="rgb(222,134,10)" fg:x="31188" fg:w="12"/><text x="62.8929%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="62.6449%" y="309" width="0.0221%" height="15" fill="rgb(230,226,20)" fg:x="31189" fg:w="11"/><text x="62.8949%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="62.6509%" y="293" width="0.0161%" height="15" fill="rgb(251,111,25)" fg:x="31192" fg:w="8"/><text x="62.9009%" y="303.50"></text></g><g><title>__libc_write (136 samples, 0.27%)</title><rect x="62.3978%" y="613" width="0.2732%" height="15" fill="rgb(224,40,46)" fg:x="31066" fg:w="136"/><text x="62.6478%" y="623.50"></text></g><g><title>__libc_write (135 samples, 0.27%)</title><rect x="62.3998%" y="597" width="0.2712%" height="15" fill="rgb(236,108,47)" fg:x="31067" fg:w="135"/><text x="62.6498%" y="607.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (138 samples, 0.28%)</title><rect x="62.3978%" y="677" width="0.2772%" height="15" fill="rgb(234,93,0)" fg:x="31066" fg:w="138"/><text x="62.6478%" y="687.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (138 samples, 0.28%)</title><rect x="62.3978%" y="661" width="0.2772%" height="15" fill="rgb(224,213,32)" fg:x="31066" fg:w="138"/><text x="62.6478%" y="671.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (138 samples, 0.28%)</title><rect x="62.3978%" y="645" width="0.2772%" height="15" fill="rgb(251,11,48)" fg:x="31066" fg:w="138"/><text x="62.6478%" y="655.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (138 samples, 0.28%)</title><rect x="62.3978%" y="629" width="0.2772%" height="15" fill="rgb(236,173,5)" fg:x="31066" fg:w="138"/><text x="62.6478%" y="639.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (141 samples, 0.28%)</title><rect x="62.3958%" y="709" width="0.2832%" height="15" fill="rgb(230,95,12)" fg:x="31065" fg:w="141"/><text x="62.6458%" y="719.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (141 samples, 0.28%)</title><rect x="62.3958%" y="693" width="0.2832%" height="15" fill="rgb(232,209,1)" fg:x="31065" fg:w="141"/><text x="62.6458%" y="703.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (142 samples, 0.29%)</title><rect x="62.3958%" y="741" width="0.2852%" height="15" fill="rgb(232,6,1)" fg:x="31065" fg:w="142"/><text x="62.6458%" y="751.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (142 samples, 0.29%)</title><rect x="62.3958%" y="725" width="0.2852%" height="15" fill="rgb(210,224,50)" fg:x="31065" fg:w="142"/><text x="62.6458%" y="735.50"></text></g><g><title>std::io::Write::write_fmt (151 samples, 0.30%)</title><rect x="62.3898%" y="773" width="0.3033%" height="15" fill="rgb(228,127,35)" fg:x="31062" fg:w="151"/><text x="62.6398%" y="783.50"></text></g><g><title>core::fmt::write (148 samples, 0.30%)</title><rect x="62.3958%" y="757" width="0.2973%" height="15" fill="rgb(245,102,45)" fg:x="31065" fg:w="148"/><text x="62.6458%" y="767.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (6 samples, 0.01%)</title><rect x="62.6810%" y="741" width="0.0121%" height="15" fill="rgb(214,1,49)" fg:x="31207" fg:w="6"/><text x="62.9310%" y="751.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (6 samples, 0.01%)</title><rect x="62.6810%" y="725" width="0.0121%" height="15" fill="rgb(226,163,40)" fg:x="31207" fg:w="6"/><text x="62.9310%" y="735.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (153 samples, 0.31%)</title><rect x="62.3878%" y="805" width="0.3073%" height="15" fill="rgb(239,212,28)" fg:x="31061" fg:w="153"/><text x="62.6378%" y="815.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (153 samples, 0.31%)</title><rect x="62.3878%" y="789" width="0.3073%" height="15" fill="rgb(220,20,13)" fg:x="31061" fg:w="153"/><text x="62.6378%" y="799.50"></text></g><g><title>std::io::stdio::_print (155 samples, 0.31%)</title><rect x="62.3858%" y="837" width="0.3113%" height="15" fill="rgb(210,164,35)" fg:x="31060" fg:w="155"/><text x="62.6358%" y="847.50"></text></g><g><title>std::io::stdio::print_to (154 samples, 0.31%)</title><rect x="62.3878%" y="821" width="0.3093%" height="15" fill="rgb(248,109,41)" fg:x="31061" fg:w="154"/><text x="62.6378%" y="831.50"></text></g><g><title>do_query::main::{{closure}} (27,339 samples, 54.91%)</title><rect x="7.7872%" y="869" width="54.9119%" height="15" fill="rgb(238,23,50)" fg:x="3877" fg:w="27339"/><text x="8.0372%" y="879.50">do_query::main::{{closure}}</text></g><g><title>do_query::main_inner::{{closure}} (27,339 samples, 54.91%)</title><rect x="7.7872%" y="853" width="54.9119%" height="15" fill="rgb(211,48,49)" fg:x="3877" fg:w="27339"/><text x="8.0372%" y="863.50">do_query::main_inner::{{closure}}</text></g><g><title>__rust_probestack (5 samples, 0.01%)</title><rect x="62.7292%" y="757" width="0.0100%" height="15" fill="rgb(223,36,21)" fg:x="31231" fg:w="5"/><text x="62.9792%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::jit::ast::Boolean&gt; (6 samples, 0.01%)</title><rect x="62.7413%" y="757" width="0.0121%" height="15" fill="rgb(207,123,46)" fg:x="31237" fg:w="6"/><text x="62.9913%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::jit::ast::Predicate&gt; (5 samples, 0.01%)</title><rect x="62.7433%" y="741" width="0.0100%" height="15" fill="rgb(240,218,32)" fg:x="31238" fg:w="5"/><text x="62.9933%" y="751.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::convert_predicate (10 samples, 0.02%)</title><rect x="62.7533%" y="757" width="0.0201%" height="15" fill="rgb(252,5,43)" fg:x="31243" fg:w="10"/><text x="63.0033%" y="767.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (38 samples, 0.08%)</title><rect x="62.6991%" y="853" width="0.0763%" height="15" fill="rgb(252,84,19)" fg:x="31216" fg:w="38"/><text x="62.9491%" y="863.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (38 samples, 0.08%)</title><rect x="62.6991%" y="837" width="0.0763%" height="15" fill="rgb(243,152,39)" fg:x="31216" fg:w="38"/><text x="62.9491%" y="847.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (38 samples, 0.08%)</title><rect x="62.6991%" y="821" width="0.0763%" height="15" fill="rgb(234,160,15)" fg:x="31216" fg:w="38"/><text x="62.9491%" y="831.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (38 samples, 0.08%)</title><rect x="62.6991%" y="805" width="0.0763%" height="15" fill="rgb(237,34,20)" fg:x="31216" fg:w="38"/><text x="62.9491%" y="815.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (38 samples, 0.08%)</title><rect x="62.6991%" y="789" width="0.0763%" height="15" fill="rgb(229,97,13)" fg:x="31216" fg:w="38"/><text x="62.9491%" y="799.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::new (38 samples, 0.08%)</title><rect x="62.6991%" y="773" width="0.0763%" height="15" fill="rgb(234,71,50)" fg:x="31216" fg:w="38"/><text x="62.9491%" y="783.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="62.8035%" y="485" width="0.0241%" height="15" fill="rgb(253,155,4)" fg:x="31268" fg:w="12"/><text x="63.0535%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (7 samples, 0.01%)</title><rect x="62.8136%" y="469" width="0.0141%" height="15" fill="rgb(222,185,37)" fg:x="31273" fg:w="7"/><text x="63.0636%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,16_usize&gt;&gt; (20 samples, 0.04%)</title><rect x="62.7935%" y="517" width="0.0402%" height="15" fill="rgb(251,177,13)" fg:x="31263" fg:w="20"/><text x="63.0435%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (15 samples, 0.03%)</title><rect x="62.8035%" y="501" width="0.0301%" height="15" fill="rgb(250,179,40)" fg:x="31268" fg:w="15"/><text x="63.0535%" y="511.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="62.8377%" y="485" width="0.0121%" height="15" fill="rgb(242,44,2)" fg:x="31285" fg:w="6"/><text x="63.0877%" y="495.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.08%)</title><rect x="62.7754%" y="533" width="0.0763%" height="15" fill="rgb(216,177,13)" fg:x="31254" fg:w="38"/><text x="63.0254%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,4_usize&gt;&gt; (9 samples, 0.02%)</title><rect x="62.8337%" y="517" width="0.0181%" height="15" fill="rgb(216,106,43)" fg:x="31283" fg:w="9"/><text x="63.0837%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (7 samples, 0.01%)</title><rect x="62.8377%" y="501" width="0.0141%" height="15" fill="rgb(216,183,2)" fg:x="31285" fg:w="7"/><text x="63.0877%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="62.8558%" y="533" width="0.0201%" height="15" fill="rgb(249,75,3)" fg:x="31294" fg:w="10"/><text x="63.1058%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="62.8638%" y="517" width="0.0121%" height="15" fill="rgb(219,67,39)" fg:x="31298" fg:w="6"/><text x="63.1138%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.8658%" y="501" width="0.0100%" height="15" fill="rgb(253,228,2)" fg:x="31299" fg:w="5"/><text x="63.1158%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.8658%" y="485" width="0.0100%" height="15" fill="rgb(235,138,27)" fg:x="31299" fg:w="5"/><text x="63.1158%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.8658%" y="469" width="0.0100%" height="15" fill="rgb(236,97,51)" fg:x="31299" fg:w="5"/><text x="63.1158%" y="479.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="62.8759%" y="533" width="0.0241%" height="15" fill="rgb(240,80,30)" fg:x="31304" fg:w="12"/><text x="63.1259%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="62.9120%" y="517" width="0.0321%" height="15" fill="rgb(230,178,19)" fg:x="31322" fg:w="16"/><text x="63.1620%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="62.9301%" y="501" width="0.0141%" height="15" fill="rgb(210,190,27)" fg:x="31331" fg:w="7"/><text x="63.1801%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="62.9301%" y="485" width="0.0141%" height="15" fill="rgb(222,107,31)" fg:x="31331" fg:w="7"/><text x="63.1801%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="62.9321%" y="469" width="0.0121%" height="15" fill="rgb(216,127,34)" fg:x="31332" fg:w="6"/><text x="63.1821%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="62.9321%" y="453" width="0.0121%" height="15" fill="rgb(234,116,52)" fg:x="31332" fg:w="6"/><text x="63.1821%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.9341%" y="437" width="0.0100%" height="15" fill="rgb(222,124,15)" fg:x="31333" fg:w="5"/><text x="63.1841%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="62.9482%" y="501" width="0.0121%" height="15" fill="rgb(231,179,28)" fg:x="31340" fg:w="6"/><text x="63.1982%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="62.9482%" y="485" width="0.0121%" height="15" fill="rgb(226,93,45)" fg:x="31340" fg:w="6"/><text x="63.1982%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="62.9482%" y="469" width="0.0121%" height="15" fill="rgb(215,8,51)" fg:x="31340" fg:w="6"/><text x="63.1982%" y="479.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="62.9441%" y="517" width="0.0201%" height="15" fill="rgb(223,106,5)" fg:x="31338" fg:w="10"/><text x="63.1941%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.9662%" y="485" width="0.0100%" height="15" fill="rgb(250,191,5)" fg:x="31349" fg:w="5"/><text x="63.2162%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.9662%" y="469" width="0.0100%" height="15" fill="rgb(242,132,44)" fg:x="31349" fg:w="5"/><text x="63.2162%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="62.9662%" y="453" width="0.0100%" height="15" fill="rgb(251,152,29)" fg:x="31349" fg:w="5"/><text x="63.2162%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="62.9763%" y="485" width="0.0402%" height="15" fill="rgb(218,179,5)" fg:x="31354" fg:w="20"/><text x="63.2263%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="63.0004%" y="469" width="0.0161%" height="15" fill="rgb(227,67,19)" fg:x="31366" fg:w="8"/><text x="63.2504%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.0024%" y="453" width="0.0141%" height="15" fill="rgb(233,119,31)" fg:x="31367" fg:w="7"/><text x="63.2524%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.0024%" y="437" width="0.0141%" height="15" fill="rgb(241,120,22)" fg:x="31367" fg:w="7"/><text x="63.2524%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.0024%" y="421" width="0.0141%" height="15" fill="rgb(224,102,30)" fg:x="31367" fg:w="7"/><text x="63.2524%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.0024%" y="405" width="0.0141%" height="15" fill="rgb(210,164,37)" fg:x="31367" fg:w="7"/><text x="63.2524%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.0044%" y="389" width="0.0121%" height="15" fill="rgb(226,191,16)" fg:x="31368" fg:w="6"/><text x="63.2544%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.0205%" y="469" width="0.0121%" height="15" fill="rgb(214,40,45)" fg:x="31376" fg:w="6"/><text x="63.2705%" y="479.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="63.0165%" y="485" width="0.0181%" height="15" fill="rgb(244,29,26)" fg:x="31374" fg:w="9"/><text x="63.2665%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="63.0486%" y="453" width="0.0181%" height="15" fill="rgb(216,16,5)" fg:x="31390" fg:w="9"/><text x="63.2986%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="63.0747%" y="421" width="0.0141%" height="15" fill="rgb(249,76,35)" fg:x="31403" fg:w="7"/><text x="63.3247%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="63.0928%" y="389" width="0.0100%" height="15" fill="rgb(207,11,44)" fg:x="31412" fg:w="5"/><text x="63.3428%" y="399.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="63.0888%" y="405" width="0.0201%" height="15" fill="rgb(228,190,49)" fg:x="31410" fg:w="10"/><text x="63.3388%" y="415.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.04%)</title><rect x="63.0687%" y="437" width="0.0442%" height="15" fill="rgb(214,173,12)" fg:x="31400" fg:w="22"/><text x="63.3187%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (12 samples, 0.02%)</title><rect x="63.0888%" y="421" width="0.0241%" height="15" fill="rgb(218,26,35)" fg:x="31410" fg:w="12"/><text x="63.3388%" y="431.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.08%)</title><rect x="63.0385%" y="469" width="0.0803%" height="15" fill="rgb(220,200,19)" fg:x="31385" fg:w="40"/><text x="63.2885%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (25 samples, 0.05%)</title><rect x="63.0687%" y="453" width="0.0502%" height="15" fill="rgb(239,95,49)" fg:x="31400" fg:w="25"/><text x="63.3187%" y="463.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.17%)</title><rect x="62.9642%" y="501" width="0.1727%" height="15" fill="rgb(235,85,53)" fg:x="31348" fg:w="86"/><text x="63.2142%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (51 samples, 0.10%)</title><rect x="63.0345%" y="485" width="0.1024%" height="15" fill="rgb(233,133,31)" fg:x="31383" fg:w="51"/><text x="63.2845%" y="495.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="63.1269%" y="469" width="0.0100%" height="15" fill="rgb(218,25,20)" fg:x="31429" fg:w="5"/><text x="63.3769%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,16_usize&gt;&gt; (130 samples, 0.26%)</title><rect x="62.9000%" y="533" width="0.2611%" height="15" fill="rgb(252,210,38)" fg:x="31316" fg:w="130"/><text x="63.1500%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (98 samples, 0.20%)</title><rect x="62.9642%" y="517" width="0.1968%" height="15" fill="rgb(242,134,21)" fg:x="31348" fg:w="98"/><text x="63.2142%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="63.1691%" y="517" width="0.0321%" height="15" fill="rgb(213,28,48)" fg:x="31450" fg:w="16"/><text x="63.4191%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="63.1791%" y="501" width="0.0221%" height="15" fill="rgb(250,196,2)" fg:x="31455" fg:w="11"/><text x="63.4291%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.1912%" y="485" width="0.0100%" height="15" fill="rgb(227,5,17)" fg:x="31461" fg:w="5"/><text x="63.4412%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.1912%" y="469" width="0.0100%" height="15" fill="rgb(221,226,24)" fg:x="31461" fg:w="5"/><text x="63.4412%" y="479.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="63.2012%" y="517" width="0.0121%" height="15" fill="rgb(211,5,48)" fg:x="31466" fg:w="6"/><text x="63.4512%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="63.2213%" y="485" width="0.0100%" height="15" fill="rgb(219,150,6)" fg:x="31476" fg:w="5"/><text x="63.4713%" y="495.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.03%)</title><rect x="63.2133%" y="501" width="0.0301%" height="15" fill="rgb(251,46,16)" fg:x="31472" fg:w="15"/><text x="63.4633%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (6 samples, 0.01%)</title><rect x="63.2314%" y="485" width="0.0121%" height="15" fill="rgb(220,204,40)" fg:x="31481" fg:w="6"/><text x="63.4814%" y="495.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (239 samples, 0.48%)</title><rect x="62.7754%" y="549" width="0.4800%" height="15" fill="rgb(211,85,2)" fg:x="31254" fg:w="239"/><text x="63.0254%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,4_usize&gt;&gt; (47 samples, 0.09%)</title><rect x="63.1611%" y="533" width="0.0944%" height="15" fill="rgb(229,17,7)" fg:x="31446" fg:w="47"/><text x="63.4111%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (21 samples, 0.04%)</title><rect x="63.2133%" y="517" width="0.0422%" height="15" fill="rgb(239,72,28)" fg:x="31472" fg:w="21"/><text x="63.4633%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.2615%" y="533" width="0.0100%" height="15" fill="rgb(230,47,54)" fg:x="31496" fg:w="5"/><text x="63.5115%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.2615%" y="517" width="0.0100%" height="15" fill="rgb(214,50,8)" fg:x="31496" fg:w="5"/><text x="63.5115%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.2615%" y="501" width="0.0100%" height="15" fill="rgb(216,198,43)" fg:x="31496" fg:w="5"/><text x="63.5115%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.2615%" y="485" width="0.0100%" height="15" fill="rgb(234,20,35)" fg:x="31496" fg:w="5"/><text x="63.5115%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (23 samples, 0.05%)</title><rect x="63.2715%" y="533" width="0.0462%" height="15" fill="rgb(254,45,19)" fg:x="31501" fg:w="23"/><text x="63.5215%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="63.2896%" y="517" width="0.0281%" height="15" fill="rgb(219,14,44)" fg:x="31510" fg:w="14"/><text x="63.5396%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="63.2916%" y="501" width="0.0261%" height="15" fill="rgb(217,220,26)" fg:x="31511" fg:w="13"/><text x="63.5416%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="63.2916%" y="485" width="0.0261%" height="15" fill="rgb(213,158,28)" fg:x="31511" fg:w="13"/><text x="63.5416%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="63.2936%" y="469" width="0.0241%" height="15" fill="rgb(252,51,52)" fg:x="31512" fg:w="12"/><text x="63.5436%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="63.2936%" y="453" width="0.0241%" height="15" fill="rgb(246,89,16)" fg:x="31512" fg:w="12"/><text x="63.5436%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.3037%" y="437" width="0.0141%" height="15" fill="rgb(216,158,49)" fg:x="31517" fg:w="7"/><text x="63.5537%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.3338%" y="517" width="0.0141%" height="15" fill="rgb(236,107,19)" fg:x="31532" fg:w="7"/><text x="63.5838%" y="527.50"></text></g><g><title>_int_free (18 samples, 0.04%)</title><rect x="63.3177%" y="533" width="0.0362%" height="15" fill="rgb(228,185,30)" fg:x="31524" fg:w="18"/><text x="63.5677%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="63.3619%" y="501" width="0.0181%" height="15" fill="rgb(246,134,8)" fg:x="31546" fg:w="9"/><text x="63.6119%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.3700%" y="485" width="0.0100%" height="15" fill="rgb(214,143,50)" fg:x="31550" fg:w="5"/><text x="63.6200%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.3700%" y="469" width="0.0100%" height="15" fill="rgb(228,75,8)" fg:x="31550" fg:w="5"/><text x="63.6200%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.3700%" y="453" width="0.0100%" height="15" fill="rgb(207,175,4)" fg:x="31550" fg:w="5"/><text x="63.6200%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (49 samples, 0.10%)</title><rect x="63.3800%" y="501" width="0.0984%" height="15" fill="rgb(205,108,24)" fg:x="31555" fg:w="49"/><text x="63.6300%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.05%)</title><rect x="63.4262%" y="485" width="0.0522%" height="15" fill="rgb(244,120,49)" fg:x="31578" fg:w="26"/><text x="63.6762%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="63.4463%" y="469" width="0.0321%" height="15" fill="rgb(223,47,38)" fg:x="31588" fg:w="16"/><text x="63.6963%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="63.4483%" y="453" width="0.0301%" height="15" fill="rgb(229,179,11)" fg:x="31589" fg:w="15"/><text x="63.6983%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="63.4483%" y="437" width="0.0301%" height="15" fill="rgb(231,122,1)" fg:x="31589" fg:w="15"/><text x="63.6983%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="63.4523%" y="421" width="0.0261%" height="15" fill="rgb(245,119,9)" fg:x="31591" fg:w="13"/><text x="63.7023%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="63.4543%" y="405" width="0.0241%" height="15" fill="rgb(241,163,25)" fg:x="31592" fg:w="12"/><text x="63.7043%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="63.4804%" y="485" width="0.0181%" height="15" fill="rgb(217,214,3)" fg:x="31605" fg:w="9"/><text x="63.7304%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.4844%" y="469" width="0.0141%" height="15" fill="rgb(240,86,28)" fg:x="31607" fg:w="7"/><text x="63.7344%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.4844%" y="453" width="0.0141%" height="15" fill="rgb(215,47,9)" fg:x="31607" fg:w="7"/><text x="63.7344%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.4865%" y="437" width="0.0121%" height="15" fill="rgb(252,25,45)" fg:x="31608" fg:w="6"/><text x="63.7365%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.4865%" y="421" width="0.0121%" height="15" fill="rgb(251,164,9)" fg:x="31608" fg:w="6"/><text x="63.7365%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.4885%" y="405" width="0.0100%" height="15" fill="rgb(233,194,0)" fg:x="31609" fg:w="5"/><text x="63.7385%" y="415.50"></text></g><g><title>_int_free (13 samples, 0.03%)</title><rect x="63.4784%" y="501" width="0.0261%" height="15" fill="rgb(249,111,24)" fg:x="31604" fg:w="13"/><text x="63.7284%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.5106%" y="469" width="0.0141%" height="15" fill="rgb(250,223,3)" fg:x="31620" fg:w="7"/><text x="63.7606%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5146%" y="453" width="0.0100%" height="15" fill="rgb(236,178,37)" fg:x="31622" fg:w="5"/><text x="63.7646%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5146%" y="437" width="0.0100%" height="15" fill="rgb(241,158,50)" fg:x="31622" fg:w="5"/><text x="63.7646%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5146%" y="421" width="0.0100%" height="15" fill="rgb(213,121,41)" fg:x="31622" fg:w="5"/><text x="63.7646%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5146%" y="405" width="0.0100%" height="15" fill="rgb(240,92,3)" fg:x="31622" fg:w="5"/><text x="63.7646%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (25 samples, 0.05%)</title><rect x="63.5266%" y="469" width="0.0502%" height="15" fill="rgb(205,123,3)" fg:x="31628" fg:w="25"/><text x="63.7766%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="63.5568%" y="453" width="0.0201%" height="15" fill="rgb(205,97,47)" fg:x="31643" fg:w="10"/><text x="63.8068%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5668%" y="437" width="0.0100%" height="15" fill="rgb(247,152,14)" fg:x="31648" fg:w="5"/><text x="63.8168%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5668%" y="421" width="0.0100%" height="15" fill="rgb(248,195,53)" fg:x="31648" fg:w="5"/><text x="63.8168%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.5949%" y="437" width="0.0121%" height="15" fill="rgb(226,201,16)" fg:x="31662" fg:w="6"/><text x="63.8449%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5969%" y="421" width="0.0100%" height="15" fill="rgb(205,98,0)" fg:x="31663" fg:w="5"/><text x="63.8469%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5969%" y="405" width="0.0100%" height="15" fill="rgb(214,191,48)" fg:x="31663" fg:w="5"/><text x="63.8469%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.5969%" y="389" width="0.0100%" height="15" fill="rgb(237,112,39)" fg:x="31663" fg:w="5"/><text x="63.8469%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (21 samples, 0.04%)</title><rect x="63.6070%" y="437" width="0.0422%" height="15" fill="rgb(247,203,27)" fg:x="31668" fg:w="21"/><text x="63.8570%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="63.6291%" y="421" width="0.0201%" height="15" fill="rgb(235,124,28)" fg:x="31679" fg:w="10"/><text x="63.8791%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="63.6311%" y="405" width="0.0181%" height="15" fill="rgb(208,207,46)" fg:x="31680" fg:w="9"/><text x="63.8811%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="63.6311%" y="389" width="0.0181%" height="15" fill="rgb(234,176,4)" fg:x="31680" fg:w="9"/><text x="63.8811%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="63.6311%" y="373" width="0.0181%" height="15" fill="rgb(230,133,28)" fg:x="31680" fg:w="9"/><text x="63.8811%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="63.6331%" y="357" width="0.0161%" height="15" fill="rgb(211,137,40)" fg:x="31681" fg:w="8"/><text x="63.8831%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.6371%" y="341" width="0.0121%" height="15" fill="rgb(254,35,13)" fg:x="31683" fg:w="6"/><text x="63.8871%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="63.6592%" y="405" width="0.0141%" height="15" fill="rgb(225,49,51)" fg:x="31694" fg:w="7"/><text x="63.9092%" y="415.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="63.6753%" y="389" width="0.0100%" height="15" fill="rgb(251,10,15)" fg:x="31702" fg:w="5"/><text x="63.9253%" y="399.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="63.6512%" y="421" width="0.0382%" height="15" fill="rgb(228,207,15)" fg:x="31690" fg:w="19"/><text x="63.9012%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (7 samples, 0.01%)</title><rect x="63.6753%" y="405" width="0.0141%" height="15" fill="rgb(241,99,19)" fg:x="31702" fg:w="7"/><text x="63.9253%" y="415.50"></text></g><g><title>__GI___libc_free (9 samples, 0.02%)</title><rect x="63.6893%" y="421" width="0.0181%" height="15" fill="rgb(207,104,49)" fg:x="31709" fg:w="9"/><text x="63.9393%" y="431.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.12%)</title><rect x="63.5849%" y="453" width="0.1245%" height="15" fill="rgb(234,99,18)" fg:x="31657" fg:w="62"/><text x="63.8349%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (29 samples, 0.06%)</title><rect x="63.6512%" y="437" width="0.0582%" height="15" fill="rgb(213,191,49)" fg:x="31690" fg:w="29"/><text x="63.9012%" y="447.50"></text></g><g><title>__GI___libc_free (14 samples, 0.03%)</title><rect x="63.7134%" y="453" width="0.0281%" height="15" fill="rgb(210,226,19)" fg:x="31721" fg:w="14"/><text x="63.9634%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.7315%" y="437" width="0.0100%" height="15" fill="rgb(229,97,18)" fg:x="31730" fg:w="5"/><text x="63.9815%" y="447.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 0.24%)</title><rect x="63.5045%" y="485" width="0.2410%" height="15" fill="rgb(211,167,15)" fg:x="31617" fg:w="120"/><text x="63.7545%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (80 samples, 0.16%)</title><rect x="63.5849%" y="469" width="0.1607%" height="15" fill="rgb(210,169,34)" fg:x="31657" fg:w="80"/><text x="63.8349%" y="479.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="63.7456%" y="485" width="0.0100%" height="15" fill="rgb(241,121,31)" fg:x="31737" fg:w="5"/><text x="63.9956%" y="495.50"></text></g><g><title>__GI___libc_free (17 samples, 0.03%)</title><rect x="63.7556%" y="485" width="0.0341%" height="15" fill="rgb(232,40,11)" fg:x="31742" fg:w="17"/><text x="64.0056%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="63.7677%" y="469" width="0.0221%" height="15" fill="rgb(205,86,26)" fg:x="31748" fg:w="11"/><text x="64.0177%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.7757%" y="453" width="0.0141%" height="15" fill="rgb(231,126,28)" fg:x="31752" fg:w="7"/><text x="64.0257%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="63.7757%" y="437" width="0.0141%" height="15" fill="rgb(219,221,18)" fg:x="31752" fg:w="7"/><text x="64.0257%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.7797%" y="421" width="0.0100%" height="15" fill="rgb(211,40,0)" fg:x="31754" fg:w="5"/><text x="64.0297%" y="431.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (221 samples, 0.44%)</title><rect x="63.3539%" y="517" width="0.4439%" height="15" fill="rgb(239,85,43)" fg:x="31542" fg:w="221"/><text x="63.6039%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (146 samples, 0.29%)</title><rect x="63.5045%" y="501" width="0.2932%" height="15" fill="rgb(231,55,21)" fg:x="31617" fg:w="146"/><text x="63.7545%" y="511.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="63.7978%" y="517" width="0.0221%" height="15" fill="rgb(225,184,43)" fg:x="31763" fg:w="11"/><text x="64.0478%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,16_usize&gt;&gt; (290 samples, 0.58%)</title><rect x="63.2555%" y="549" width="0.5825%" height="15" fill="rgb(251,158,41)" fg:x="31493" fg:w="290"/><text x="63.5055%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (241 samples, 0.48%)</title><rect x="63.3539%" y="533" width="0.4841%" height="15" fill="rgb(234,159,37)" fg:x="31542" fg:w="241"/><text x="63.6039%" y="543.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="63.8279%" y="517" width="0.0100%" height="15" fill="rgb(216,204,22)" fg:x="31778" fg:w="5"/><text x="64.0779%" y="527.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="63.8661%" y="485" width="0.0141%" height="15" fill="rgb(214,17,3)" fg:x="31797" fg:w="7"/><text x="64.1161%" y="495.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="63.8520%" y="517" width="0.0362%" height="15" fill="rgb(212,111,17)" fg:x="31790" fg:w="18"/><text x="64.1020%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (11 samples, 0.02%)</title><rect x="63.8661%" y="501" width="0.0221%" height="15" fill="rgb(221,157,24)" fg:x="31797" fg:w="11"/><text x="64.1161%" y="511.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (557 samples, 1.12%)</title><rect x="62.7754%" y="565" width="1.1188%" height="15" fill="rgb(252,16,13)" fg:x="31254" fg:w="557"/><text x="63.0254%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,4_usize&gt;&gt; (28 samples, 0.06%)</title><rect x="63.8379%" y="549" width="0.0562%" height="15" fill="rgb(221,62,2)" fg:x="31783" fg:w="28"/><text x="64.0879%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (21 samples, 0.04%)</title><rect x="63.8520%" y="533" width="0.0422%" height="15" fill="rgb(247,87,22)" fg:x="31790" fg:w="21"/><text x="64.1020%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="63.9002%" y="517" width="0.0221%" height="15" fill="rgb(215,73,9)" fg:x="31814" fg:w="11"/><text x="64.1502%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="63.9103%" y="501" width="0.0121%" height="15" fill="rgb(207,175,33)" fg:x="31819" fg:w="6"/><text x="64.1603%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.9123%" y="485" width="0.0100%" height="15" fill="rgb(243,129,54)" fg:x="31820" fg:w="5"/><text x="64.1623%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.9123%" y="469" width="0.0100%" height="15" fill="rgb(227,119,45)" fg:x="31820" fg:w="5"/><text x="64.1623%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.9123%" y="453" width="0.0100%" height="15" fill="rgb(205,109,36)" fg:x="31820" fg:w="5"/><text x="64.1623%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="63.9123%" y="437" width="0.0100%" height="15" fill="rgb(205,6,39)" fg:x="31820" fg:w="5"/><text x="64.1623%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="63.9404%" y="485" width="0.0121%" height="15" fill="rgb(221,32,16)" fg:x="31834" fg:w="6"/><text x="64.1904%" y="495.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="63.9665%" y="437" width="0.0100%" height="15" fill="rgb(228,144,50)" fg:x="31847" fg:w="5"/><text x="64.2165%" y="447.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="63.9585%" y="469" width="0.0221%" height="15" fill="rgb(229,201,53)" fg:x="31843" fg:w="11"/><text x="64.2085%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (7 samples, 0.01%)</title><rect x="63.9665%" y="453" width="0.0141%" height="15" fill="rgb(249,153,27)" fg:x="31847" fg:w="7"/><text x="64.2165%" y="463.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.05%)</title><rect x="63.9303%" y="501" width="0.0542%" height="15" fill="rgb(227,106,25)" fg:x="31829" fg:w="27"/><text x="64.1803%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (13 samples, 0.03%)</title><rect x="63.9585%" y="485" width="0.0261%" height="15" fill="rgb(230,65,29)" fg:x="31843" fg:w="13"/><text x="64.2085%" y="495.50"></text></g><g><title>&lt;art_tree::node::FlatNode&lt;V,_&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.10%)</title><rect x="63.8942%" y="533" width="0.1024%" height="15" fill="rgb(221,57,46)" fg:x="31811" fg:w="51"/><text x="64.1442%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (33 samples, 0.07%)</title><rect x="63.9303%" y="517" width="0.0663%" height="15" fill="rgb(229,161,17)" fg:x="31829" fg:w="33"/><text x="64.1803%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::FlatNode&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;,16_usize&gt;&gt; (56 samples, 0.11%)</title><rect x="63.8942%" y="565" width="0.1125%" height="15" fill="rgb(222,213,11)" fg:x="31811" fg:w="56"/><text x="64.1442%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt; (56 samples, 0.11%)</title><rect x="63.8942%" y="549" width="0.1125%" height="15" fill="rgb(235,35,13)" fg:x="31811" fg:w="56"/><text x="64.1442%" y="559.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="63.9966%" y="533" width="0.0100%" height="15" fill="rgb(233,158,34)" fg:x="31862" fg:w="5"/><text x="64.2466%" y="543.50"></text></g><g><title>do_query::main_inner::{{closure}} (652 samples, 1.31%)</title><rect x="62.6991%" y="869" width="1.3096%" height="15" fill="rgb(215,151,48)" fg:x="31216" fg:w="652"/><text x="62.9491%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="853" width="1.2333%" height="15" fill="rgb(229,84,14)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="837" width="1.2333%" height="15" fill="rgb(229,68,14)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::catalog::catalog::MemoryCatalogList&gt; (614 samples, 1.23%)</title><rect x="62.7754%" y="821" width="1.2333%" height="15" fill="rgb(243,106,26)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (614 samples, 1.23%)</title><rect x="62.7754%" y="805" width="1.2333%" height="15" fill="rgb(206,45,38)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="789" width="1.2333%" height="15" fill="rgb(226,6,15)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::catalog::catalog::MemoryCatalogList&gt; (614 samples, 1.23%)</title><rect x="62.7754%" y="773" width="1.2333%" height="15" fill="rgb(232,22,54)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (614 samples, 1.23%)</title><rect x="62.7754%" y="757" width="1.2333%" height="15" fill="rgb(229,222,32)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="741" width="1.2333%" height="15" fill="rgb(228,62,29)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::catalog::catalog::MemoryCatalogList&gt; (614 samples, 1.23%)</title><rect x="62.7754%" y="725" width="1.2333%" height="15" fill="rgb(251,103,34)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (614 samples, 1.23%)</title><rect x="62.7754%" y="709" width="1.2333%" height="15" fill="rgb(233,12,30)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="693" width="1.2333%" height="15" fill="rgb(238,52,0)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingTable&gt; (614 samples, 1.23%)</title><rect x="62.7754%" y="677" width="1.2333%" height="15" fill="rgb(223,98,5)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="661" width="1.2333%" height="15" fill="rgb(228,75,37)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (614 samples, 1.23%)</title><rect x="62.7754%" y="645" width="1.2333%" height="15" fill="rgb(205,115,49)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;art_tree::node::TypedNode&lt;art_tree::keys::ByteString,adaptive_hybrid_trie::ah_trie::ChildNode&gt;&gt;&gt; (614 samples, 1.23%)</title><rect x="62.7754%" y="629" width="1.2333%" height="15" fill="rgb(250,154,43)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="639.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (614 samples, 1.23%)</title><rect x="62.7754%" y="613" width="1.2333%" height="15" fill="rgb(226,43,29)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="623.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (614 samples, 1.23%)</title><rect x="62.7754%" y="597" width="1.2333%" height="15" fill="rgb(249,228,39)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="607.50"></text></g><g><title>&lt;art_tree::node::Node48&lt;V&gt; as core::ops::drop::Drop&gt;::drop (614 samples, 1.23%)</title><rect x="62.7754%" y="581" width="1.2333%" height="15" fill="rgb(216,79,43)" fg:x="31254" fg:w="614"/><text x="63.0254%" y="591.50"></text></g><g><title>malloc_consolidate (48 samples, 0.10%)</title><rect x="64.0187%" y="869" width="0.0964%" height="15" fill="rgb(228,95,12)" fg:x="31873" fg:w="48"/><text x="64.2687%" y="879.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (5 samples, 0.01%)</title><rect x="64.1171%" y="869" width="0.0100%" height="15" fill="rgb(249,221,15)" fg:x="31922" fg:w="5"/><text x="64.3671%" y="879.50"></text></g><g><title>__GI___libc_free (18 samples, 0.04%)</title><rect x="64.1975%" y="805" width="0.0362%" height="15" fill="rgb(233,34,13)" fg:x="31962" fg:w="18"/><text x="64.4475%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (187 samples, 0.38%)</title><rect x="64.4827%" y="789" width="0.3756%" height="15" fill="rgb(214,103,39)" fg:x="32104" fg:w="187"/><text x="64.7327%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (177 samples, 0.36%)</title><rect x="64.5028%" y="773" width="0.3555%" height="15" fill="rgb(251,126,39)" fg:x="32114" fg:w="177"/><text x="64.7528%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (177 samples, 0.36%)</title><rect x="64.5028%" y="757" width="0.3555%" height="15" fill="rgb(214,216,36)" fg:x="32114" fg:w="177"/><text x="64.7528%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (175 samples, 0.35%)</title><rect x="64.5068%" y="741" width="0.3515%" height="15" fill="rgb(220,221,8)" fg:x="32116" fg:w="175"/><text x="64.7568%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (171 samples, 0.34%)</title><rect x="64.5148%" y="725" width="0.3435%" height="15" fill="rgb(240,216,3)" fg:x="32120" fg:w="171"/><text x="64.7648%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (167 samples, 0.34%)</title><rect x="64.5229%" y="709" width="0.3354%" height="15" fill="rgb(232,218,17)" fg:x="32124" fg:w="167"/><text x="64.7729%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (162 samples, 0.33%)</title><rect x="64.5329%" y="693" width="0.3254%" height="15" fill="rgb(229,163,45)" fg:x="32129" fg:w="162"/><text x="64.7829%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (159 samples, 0.32%)</title><rect x="64.5389%" y="677" width="0.3194%" height="15" fill="rgb(231,110,42)" fg:x="32132" fg:w="159"/><text x="64.7889%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (130 samples, 0.26%)</title><rect x="64.5972%" y="661" width="0.2611%" height="15" fill="rgb(208,170,48)" fg:x="32161" fg:w="130"/><text x="64.8472%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (128 samples, 0.26%)</title><rect x="64.6012%" y="645" width="0.2571%" height="15" fill="rgb(239,116,25)" fg:x="32163" fg:w="128"/><text x="64.8512%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (122 samples, 0.25%)</title><rect x="64.6133%" y="629" width="0.2450%" height="15" fill="rgb(219,200,50)" fg:x="32169" fg:w="122"/><text x="64.8633%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (63 samples, 0.13%)</title><rect x="64.7318%" y="613" width="0.1265%" height="15" fill="rgb(245,200,0)" fg:x="32228" fg:w="63"/><text x="64.9818%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.08%)</title><rect x="64.7759%" y="597" width="0.0824%" height="15" fill="rgb(245,119,33)" fg:x="32250" fg:w="41"/><text x="65.0259%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="64.8382%" y="581" width="0.0201%" height="15" fill="rgb(231,125,12)" fg:x="32281" fg:w="10"/><text x="65.0882%" y="591.50"></text></g><g><title>_int_free (313 samples, 0.63%)</title><rect x="64.2336%" y="805" width="0.6287%" height="15" fill="rgb(216,96,41)" fg:x="31980" fg:w="313"/><text x="64.4836%" y="815.50"></text></g><g><title>__GI___libc_free (8 samples, 0.02%)</title><rect x="64.8784%" y="773" width="0.0161%" height="15" fill="rgb(248,43,45)" fg:x="32301" fg:w="8"/><text x="65.1284%" y="783.50"></text></g><g><title>_int_free (33 samples, 0.07%)</title><rect x="64.8945%" y="773" width="0.0663%" height="15" fill="rgb(217,222,7)" fg:x="32309" fg:w="33"/><text x="65.1445%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.09%)</title><rect x="64.8744%" y="789" width="0.0884%" height="15" fill="rgb(233,28,6)" fg:x="32299" fg:w="44"/><text x="65.1244%" y="799.50"></text></g><g><title>__GI___libc_free (34 samples, 0.07%)</title><rect x="64.9768%" y="789" width="0.0683%" height="15" fill="rgb(231,218,15)" fg:x="32350" fg:w="34"/><text x="65.2268%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (194 samples, 0.39%)</title><rect x="64.8623%" y="805" width="0.3897%" height="15" fill="rgb(226,171,48)" fg:x="32293" fg:w="194"/><text x="65.1123%" y="815.50"></text></g><g><title>_int_free (103 samples, 0.21%)</title><rect x="65.0451%" y="789" width="0.2069%" height="15" fill="rgb(235,201,9)" fg:x="32384" fg:w="103"/><text x="65.2951%" y="799.50"></text></g><g><title>__GI___libc_free (20 samples, 0.04%)</title><rect x="65.2861%" y="789" width="0.0402%" height="15" fill="rgb(217,80,15)" fg:x="32504" fg:w="20"/><text x="65.5361%" y="799.50"></text></g><g><title>_int_free (87 samples, 0.17%)</title><rect x="65.3263%" y="789" width="0.1747%" height="15" fill="rgb(219,152,8)" fg:x="32524" fg:w="87"/><text x="65.5763%" y="799.50"></text></g><g><title>__GI___libc_free (15 samples, 0.03%)</title><rect x="65.5553%" y="757" width="0.0301%" height="15" fill="rgb(243,107,38)" fg:x="32638" fg:w="15"/><text x="65.8053%" y="767.50"></text></g><g><title>_int_free (43 samples, 0.09%)</title><rect x="65.5854%" y="757" width="0.0864%" height="15" fill="rgb(231,17,5)" fg:x="32653" fg:w="43"/><text x="65.8354%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (41 samples, 0.08%)</title><rect x="65.6718%" y="757" width="0.0824%" height="15" fill="rgb(209,25,54)" fg:x="32696" fg:w="41"/><text x="65.9218%" y="767.50"></text></g><g><title>_int_free (24 samples, 0.05%)</title><rect x="65.7059%" y="741" width="0.0482%" height="15" fill="rgb(219,0,2)" fg:x="32713" fg:w="24"/><text x="65.9559%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (795 samples, 1.60%)</title><rect x="64.1674%" y="821" width="1.5968%" height="15" fill="rgb(246,9,5)" fg:x="31947" fg:w="795"/><text x="64.4174%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (255 samples, 0.51%)</title><rect x="65.2520%" y="805" width="0.5122%" height="15" fill="rgb(226,159,4)" fg:x="32487" fg:w="255"/><text x="65.5020%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (131 samples, 0.26%)</title><rect x="65.5010%" y="789" width="0.2631%" height="15" fill="rgb(219,175,34)" fg:x="32611" fg:w="131"/><text x="65.7510%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (118 samples, 0.24%)</title><rect x="65.5271%" y="773" width="0.2370%" height="15" fill="rgb(236,10,46)" fg:x="32624" fg:w="118"/><text x="65.7771%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (5 samples, 0.01%)</title><rect x="65.7541%" y="757" width="0.0100%" height="15" fill="rgb(240,211,16)" fg:x="32737" fg:w="5"/><text x="66.0041%" y="767.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="65.7722%" y="805" width="0.0161%" height="15" fill="rgb(205,3,43)" fg:x="32746" fg:w="8"/><text x="66.0222%" y="815.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="65.7883%" y="805" width="0.0121%" height="15" fill="rgb(245,7,22)" fg:x="32754" fg:w="6"/><text x="66.0383%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="789" width="0.0141%" height="15" fill="rgb(239,132,32)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="773" width="0.0141%" height="15" fill="rgb(228,202,34)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="757" width="0.0141%" height="15" fill="rgb(254,200,22)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="741" width="0.0141%" height="15" fill="rgb(219,10,39)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="725" width="0.0141%" height="15" fill="rgb(226,210,39)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="709" width="0.0141%" height="15" fill="rgb(208,219,16)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="693" width="0.0141%" height="15" fill="rgb(216,158,51)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="677" width="0.0141%" height="15" fill="rgb(233,14,44)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="661" width="0.0141%" height="15" fill="rgb(237,97,39)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="645" width="0.0141%" height="15" fill="rgb(218,198,43)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="65.8646%" y="629" width="0.0141%" height="15" fill="rgb(231,104,20)" fg:x="32792" fg:w="7"/><text x="66.1146%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (28 samples, 0.06%)</title><rect x="65.8786%" y="789" width="0.0562%" height="15" fill="rgb(254,36,13)" fg:x="32799" fg:w="28"/><text x="66.1286%" y="799.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (74 samples, 0.15%)</title><rect x="65.8043%" y="805" width="0.1486%" height="15" fill="rgb(248,14,50)" fg:x="32762" fg:w="74"/><text x="66.0543%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.02%)</title><rect x="65.9349%" y="789" width="0.0181%" height="15" fill="rgb(217,107,29)" fg:x="32827" fg:w="9"/><text x="66.1849%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="65.9409%" y="773" width="0.0121%" height="15" fill="rgb(251,169,33)" fg:x="32830" fg:w="6"/><text x="66.1909%" y="783.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (6 samples, 0.01%)</title><rect x="65.9751%" y="789" width="0.0121%" height="15" fill="rgb(217,108,32)" fg:x="32847" fg:w="6"/><text x="66.2251%" y="799.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="65.9771%" y="773" width="0.0100%" height="15" fill="rgb(219,66,42)" fg:x="32848" fg:w="5"/><text x="66.2271%" y="783.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="65.9871%" y="789" width="0.0121%" height="15" fill="rgb(206,180,7)" fg:x="32853" fg:w="6"/><text x="66.2371%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream&gt; (5 samples, 0.01%)</title><rect x="66.0172%" y="789" width="0.0100%" height="15" fill="rgb(208,226,31)" fg:x="32868" fg:w="5"/><text x="66.2672%" y="799.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (8 samples, 0.02%)</title><rect x="66.0373%" y="757" width="0.0161%" height="15" fill="rgb(218,26,49)" fg:x="32878" fg:w="8"/><text x="66.2873%" y="767.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (8 samples, 0.02%)</title><rect x="66.0373%" y="741" width="0.0161%" height="15" fill="rgb(233,197,48)" fg:x="32878" fg:w="8"/><text x="66.2873%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (145 samples, 0.29%)</title><rect x="65.7642%" y="821" width="0.2912%" height="15" fill="rgb(252,181,51)" fg:x="32742" fg:w="145"/><text x="66.0142%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (51 samples, 0.10%)</title><rect x="65.9530%" y="805" width="0.1024%" height="15" fill="rgb(253,90,19)" fg:x="32836" fg:w="51"/><text x="66.2030%" y="815.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (14 samples, 0.03%)</title><rect x="66.0273%" y="789" width="0.0281%" height="15" fill="rgb(215,171,30)" fg:x="32873" fg:w="14"/><text x="66.2773%" y="799.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (14 samples, 0.03%)</title><rect x="66.0273%" y="773" width="0.0281%" height="15" fill="rgb(214,222,9)" fg:x="32873" fg:w="14"/><text x="66.2773%" y="783.50"></text></g><g><title>&lt;datafusion::execution::context::SessionConfig as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="66.0594%" y="805" width="0.0100%" height="15" fill="rgb(223,3,22)" fg:x="32889" fg:w="5"/><text x="66.3094%" y="815.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (8 samples, 0.02%)</title><rect x="66.0554%" y="821" width="0.0161%" height="15" fill="rgb(225,196,46)" fg:x="32887" fg:w="8"/><text x="66.3054%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange&gt; (5 samples, 0.01%)</title><rect x="66.0895%" y="773" width="0.0100%" height="15" fill="rgb(209,110,37)" fg:x="32904" fg:w="5"/><text x="66.3395%" y="783.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (8 samples, 0.02%)</title><rect x="66.1056%" y="757" width="0.0161%" height="15" fill="rgb(249,89,12)" fg:x="32912" fg:w="8"/><text x="66.3556%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="66.1116%" y="741" width="0.0100%" height="15" fill="rgb(226,27,33)" fg:x="32915" fg:w="5"/><text x="66.3616%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (5 samples, 0.01%)</title><rect x="66.1116%" y="725" width="0.0100%" height="15" fill="rgb(213,82,22)" fg:x="32915" fg:w="5"/><text x="66.3616%" y="735.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="66.2763%" y="693" width="0.0121%" height="15" fill="rgb(248,140,0)" fg:x="32997" fg:w="6"/><text x="66.5263%" y="703.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (49 samples, 0.10%)</title><rect x="66.2000%" y="741" width="0.0984%" height="15" fill="rgb(228,106,3)" fg:x="32959" fg:w="49"/><text x="66.4500%" y="751.50"></text></g><g><title>__posix_memalign (37 samples, 0.07%)</title><rect x="66.2241%" y="725" width="0.0743%" height="15" fill="rgb(209,23,37)" fg:x="32971" fg:w="37"/><text x="66.4741%" y="735.50"></text></g><g><title>_int_memalign (11 samples, 0.02%)</title><rect x="66.2763%" y="709" width="0.0221%" height="15" fill="rgb(241,93,50)" fg:x="32997" fg:w="11"/><text x="66.5263%" y="719.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="66.2884%" y="693" width="0.0100%" height="15" fill="rgb(253,46,43)" fg:x="33003" fg:w="5"/><text x="66.5384%" y="703.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.04%)</title><rect x="66.3165%" y="709" width="0.0382%" height="15" fill="rgb(226,206,43)" fg:x="33017" fg:w="19"/><text x="66.5665%" y="719.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="66.3286%" y="693" width="0.0261%" height="15" fill="rgb(217,54,7)" fg:x="33023" fg:w="13"/><text x="66.5786%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.05%)</title><rect x="66.3085%" y="725" width="0.0482%" height="15" fill="rgb(223,5,52)" fg:x="33013" fg:w="24"/><text x="66.5585%" y="735.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (29 samples, 0.06%)</title><rect x="66.3024%" y="741" width="0.0582%" height="15" fill="rgb(206,52,46)" fg:x="33010" fg:w="29"/><text x="66.5524%" y="751.50"></text></g><g><title>__posix_memalign (13 samples, 0.03%)</title><rect x="66.3788%" y="709" width="0.0261%" height="15" fill="rgb(253,136,11)" fg:x="33048" fg:w="13"/><text x="66.6288%" y="719.50"></text></g><g><title>_int_memalign (13 samples, 0.03%)</title><rect x="66.3788%" y="693" width="0.0261%" height="15" fill="rgb(208,106,33)" fg:x="33048" fg:w="13"/><text x="66.6288%" y="703.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="66.3828%" y="677" width="0.0221%" height="15" fill="rgb(206,54,4)" fg:x="33050" fg:w="11"/><text x="66.6328%" y="687.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (23 samples, 0.05%)</title><rect x="66.3627%" y="725" width="0.0462%" height="15" fill="rgb(213,3,15)" fg:x="33040" fg:w="23"/><text x="66.6127%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="66.4089%" y="725" width="0.0100%" height="15" fill="rgb(252,211,39)" fg:x="33063" fg:w="5"/><text x="66.6589%" y="735.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (75 samples, 0.15%)</title><rect x="66.3607%" y="741" width="0.1506%" height="15" fill="rgb(223,6,36)" fg:x="33039" fg:w="75"/><text x="66.6107%" y="751.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (43 samples, 0.09%)</title><rect x="66.4250%" y="725" width="0.0864%" height="15" fill="rgb(252,169,45)" fg:x="33071" fg:w="43"/><text x="66.6750%" y="735.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (42 samples, 0.08%)</title><rect x="66.4270%" y="709" width="0.0844%" height="15" fill="rgb(212,48,26)" fg:x="33072" fg:w="42"/><text x="66.6770%" y="719.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (38 samples, 0.08%)</title><rect x="66.4350%" y="693" width="0.0763%" height="15" fill="rgb(251,102,48)" fg:x="33076" fg:w="38"/><text x="66.6850%" y="703.50"></text></g><g><title>__calloc (13 samples, 0.03%)</title><rect x="66.5194%" y="741" width="0.0261%" height="15" fill="rgb(243,208,16)" fg:x="33118" fg:w="13"/><text x="66.7694%" y="751.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="66.5234%" y="725" width="0.0221%" height="15" fill="rgb(219,96,24)" fg:x="33120" fg:w="11"/><text x="66.7734%" y="735.50"></text></g><g><title>_int_free (8 samples, 0.02%)</title><rect x="66.5475%" y="741" width="0.0161%" height="15" fill="rgb(219,33,29)" fg:x="33132" fg:w="8"/><text x="66.7975%" y="751.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.04%)</title><rect x="66.6238%" y="725" width="0.0362%" height="15" fill="rgb(223,176,5)" fg:x="33170" fg:w="18"/><text x="66.8738%" y="735.50"></text></g><g><title>_int_malloc (10 samples, 0.02%)</title><rect x="66.6399%" y="709" width="0.0201%" height="15" fill="rgb(228,140,14)" fg:x="33178" fg:w="10"/><text x="66.8899%" y="719.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (53 samples, 0.11%)</title><rect x="66.5636%" y="741" width="0.1065%" height="15" fill="rgb(217,179,31)" fg:x="33140" fg:w="53"/><text x="66.8136%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.01%)</title><rect x="66.6700%" y="741" width="0.0141%" height="15" fill="rgb(230,9,30)" fg:x="33193" fg:w="7"/><text x="66.9200%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (7 samples, 0.01%)</title><rect x="66.6700%" y="725" width="0.0141%" height="15" fill="rgb(230,136,20)" fg:x="33193" fg:w="7"/><text x="66.9200%" y="735.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (6 samples, 0.01%)</title><rect x="66.6841%" y="741" width="0.0121%" height="15" fill="rgb(215,210,22)" fg:x="33200" fg:w="6"/><text x="66.9341%" y="751.50"></text></g><g><title>arrow_array::array::Array::null_count (5 samples, 0.01%)</title><rect x="66.6861%" y="725" width="0.0100%" height="15" fill="rgb(218,43,5)" fg:x="33201" fg:w="5"/><text x="66.9361%" y="735.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (288 samples, 0.58%)</title><rect x="66.1217%" y="757" width="0.5785%" height="15" fill="rgb(216,11,5)" fg:x="32920" fg:w="288"/><text x="66.3717%" y="767.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (33 samples, 0.07%)</title><rect x="66.7001%" y="741" width="0.0663%" height="15" fill="rgb(209,82,29)" fg:x="33208" fg:w="33"/><text x="66.9501%" y="751.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.06%)</title><rect x="66.7022%" y="725" width="0.0643%" height="15" fill="rgb(244,115,12)" fg:x="33209" fg:w="32"/><text x="66.9522%" y="735.50"></text></g><g><title>_int_malloc (30 samples, 0.06%)</title><rect x="66.7062%" y="709" width="0.0603%" height="15" fill="rgb(222,82,18)" fg:x="33211" fg:w="30"/><text x="66.9562%" y="719.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (10 samples, 0.02%)</title><rect x="66.7664%" y="741" width="0.0201%" height="15" fill="rgb(249,227,8)" fg:x="33241" fg:w="10"/><text x="67.0164%" y="751.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (359 samples, 0.72%)</title><rect x="66.0895%" y="789" width="0.7211%" height="15" fill="rgb(253,141,45)" fg:x="32904" fg:w="359"/><text x="66.3395%" y="799.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (354 samples, 0.71%)</title><rect x="66.0996%" y="773" width="0.7110%" height="15" fill="rgb(234,184,4)" fg:x="32909" fg:w="354"/><text x="66.3496%" y="783.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (55 samples, 0.11%)</title><rect x="66.7001%" y="757" width="0.1105%" height="15" fill="rgb(218,194,23)" fg:x="33208" fg:w="55"/><text x="66.9501%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.02%)</title><rect x="66.7905%" y="741" width="0.0201%" height="15" fill="rgb(235,66,41)" fg:x="33253" fg:w="10"/><text x="67.0405%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (10 samples, 0.02%)</title><rect x="66.7905%" y="725" width="0.0201%" height="15" fill="rgb(245,217,1)" fg:x="33253" fg:w="10"/><text x="67.0405%" y="735.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="66.7986%" y="709" width="0.0121%" height="15" fill="rgb(229,91,1)" fg:x="33257" fg:w="6"/><text x="67.0486%" y="719.50"></text></g><g><title>&lt;dashmap::iter_set::OwningIter&lt;K,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (326 samples, 0.65%)</title><rect x="66.8267%" y="757" width="0.6548%" height="15" fill="rgb(207,101,30)" fg:x="33271" fg:w="326"/><text x="67.0767%" y="767.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="67.4855%" y="741" width="0.0121%" height="15" fill="rgb(223,82,49)" fg:x="33599" fg:w="6"/><text x="67.7355%" y="751.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="67.4815%" y="757" width="0.0181%" height="15" fill="rgb(218,167,17)" fg:x="33597" fg:w="9"/><text x="67.7315%" y="767.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (7 samples, 0.01%)</title><rect x="67.4995%" y="757" width="0.0141%" height="15" fill="rgb(208,103,14)" fg:x="33606" fg:w="7"/><text x="67.7495%" y="767.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (12 samples, 0.02%)</title><rect x="67.5397%" y="741" width="0.0241%" height="15" fill="rgb(238,20,8)" fg:x="33626" fg:w="12"/><text x="67.7897%" y="751.50"></text></g><g><title>malloc_consolidate (20 samples, 0.04%)</title><rect x="67.6663%" y="693" width="0.0402%" height="15" fill="rgb(218,80,54)" fg:x="33689" fg:w="20"/><text x="67.9163%" y="703.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (447 samples, 0.90%)</title><rect x="66.8106%" y="789" width="0.8978%" height="15" fill="rgb(240,144,17)" fg:x="33263" fg:w="447"/><text x="67.0606%" y="799.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (447 samples, 0.90%)</title><rect x="66.8106%" y="773" width="0.8978%" height="15" fill="rgb(245,27,50)" fg:x="33263" fg:w="447"/><text x="67.0606%" y="783.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (97 samples, 0.19%)</title><rect x="67.5136%" y="757" width="0.1948%" height="15" fill="rgb(251,51,7)" fg:x="33613" fg:w="97"/><text x="67.7636%" y="767.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (72 samples, 0.14%)</title><rect x="67.5638%" y="741" width="0.1446%" height="15" fill="rgb(245,217,29)" fg:x="33638" fg:w="72"/><text x="67.8138%" y="751.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.06%)</title><rect x="67.6442%" y="725" width="0.0643%" height="15" fill="rgb(221,176,29)" fg:x="33678" fg:w="32"/><text x="67.8942%" y="735.50"></text></g><g><title>_int_malloc (29 samples, 0.06%)</title><rect x="67.6502%" y="709" width="0.0582%" height="15" fill="rgb(212,180,24)" fg:x="33681" fg:w="29"/><text x="67.9002%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="67.7647%" y="773" width="0.0161%" height="15" fill="rgb(254,24,2)" fg:x="33738" fg:w="8"/><text x="68.0147%" y="783.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="67.7667%" y="757" width="0.0141%" height="15" fill="rgb(230,100,2)" fg:x="33739" fg:w="7"/><text x="68.0167%" y="767.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="67.7687%" y="741" width="0.0121%" height="15" fill="rgb(219,142,25)" fg:x="33740" fg:w="6"/><text x="68.0187%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="67.7828%" y="773" width="0.0141%" height="15" fill="rgb(240,73,43)" fg:x="33747" fg:w="7"/><text x="68.0328%" y="783.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="67.7988%" y="773" width="0.0100%" height="15" fill="rgb(214,114,15)" fg:x="33755" fg:w="5"/><text x="68.0488%" y="783.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="67.8129%" y="773" width="0.0100%" height="15" fill="rgb(207,130,4)" fg:x="33762" fg:w="5"/><text x="68.0629%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="68.4898%" y="757" width="0.0281%" height="15" fill="rgb(221,25,40)" fg:x="34099" fg:w="14"/><text x="68.7398%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="68.4898%" y="741" width="0.0281%" height="15" fill="rgb(241,184,7)" fg:x="34099" fg:w="14"/><text x="68.7398%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="68.4898%" y="725" width="0.0281%" height="15" fill="rgb(235,159,4)" fg:x="34099" fg:w="14"/><text x="68.7398%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="68.4898%" y="709" width="0.0281%" height="15" fill="rgb(214,87,48)" fg:x="34099" fg:w="14"/><text x="68.7398%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.03%)</title><rect x="68.4898%" y="693" width="0.0281%" height="15" fill="rgb(246,198,24)" fg:x="34099" fg:w="14"/><text x="68.7398%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="68.4918%" y="677" width="0.0261%" height="15" fill="rgb(209,66,40)" fg:x="34100" fg:w="13"/><text x="68.7418%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="68.4938%" y="661" width="0.0241%" height="15" fill="rgb(233,147,39)" fg:x="34101" fg:w="12"/><text x="68.7438%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="68.4938%" y="645" width="0.0241%" height="15" fill="rgb(231,145,52)" fg:x="34101" fg:w="12"/><text x="68.7438%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="68.4958%" y="629" width="0.0221%" height="15" fill="rgb(206,20,26)" fg:x="34102" fg:w="11"/><text x="68.7458%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="68.4958%" y="613" width="0.0221%" height="15" fill="rgb(238,220,4)" fg:x="34102" fg:w="11"/><text x="68.7458%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="68.4958%" y="597" width="0.0221%" height="15" fill="rgb(252,195,42)" fg:x="34102" fg:w="11"/><text x="68.7458%" y="607.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="68.5199%" y="757" width="0.0201%" height="15" fill="rgb(209,10,6)" fg:x="34114" fg:w="10"/><text x="68.7699%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 0.06%)</title><rect x="68.5460%" y="757" width="0.0562%" height="15" fill="rgb(229,3,52)" fg:x="34127" fg:w="28"/><text x="68.7960%" y="767.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (456 samples, 0.92%)</title><rect x="67.8229%" y="773" width="0.9159%" height="15" fill="rgb(253,49,37)" fg:x="33767" fg:w="456"/><text x="68.0729%" y="783.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (66 samples, 0.13%)</title><rect x="68.6063%" y="757" width="0.1326%" height="15" fill="rgb(240,103,49)" fg:x="34157" fg:w="66"/><text x="68.8563%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="68.7529%" y="773" width="0.0100%" height="15" fill="rgb(250,182,30)" fg:x="34230" fg:w="5"/><text x="69.0029%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (5 samples, 0.01%)</title><rect x="68.7529%" y="757" width="0.0100%" height="15" fill="rgb(248,8,30)" fg:x="34230" fg:w="5"/><text x="69.0029%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="68.7690%" y="773" width="0.0121%" height="15" fill="rgb(237,120,30)" fg:x="34238" fg:w="6"/><text x="69.0190%" y="783.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (7 samples, 0.01%)</title><rect x="68.7810%" y="773" width="0.0141%" height="15" fill="rgb(221,146,34)" fg:x="34244" fg:w="7"/><text x="69.0310%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="68.8031%" y="741" width="0.0141%" height="15" fill="rgb(242,55,13)" fg:x="34255" fg:w="7"/><text x="69.0531%" y="751.50"></text></g><g><title>__GI___libc_malloc (45 samples, 0.09%)</title><rect x="68.8393%" y="709" width="0.0904%" height="15" fill="rgb(242,112,31)" fg:x="34273" fg:w="45"/><text x="69.0893%" y="719.50"></text></g><g><title>_int_malloc (36 samples, 0.07%)</title><rect x="68.8573%" y="693" width="0.0723%" height="15" fill="rgb(249,192,27)" fg:x="34282" fg:w="36"/><text x="69.1073%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.11%)</title><rect x="68.8252%" y="725" width="0.1085%" height="15" fill="rgb(208,204,44)" fg:x="34266" fg:w="54"/><text x="69.0752%" y="735.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (75 samples, 0.15%)</title><rect x="68.8011%" y="757" width="0.1506%" height="15" fill="rgb(208,93,54)" fg:x="34254" fg:w="75"/><text x="69.0511%" y="767.50"></text></g><g><title>datafusion::physical_plan::project_schema (64 samples, 0.13%)</title><rect x="68.8232%" y="741" width="0.1285%" height="15" fill="rgb(242,1,31)" fg:x="34265" fg:w="64"/><text x="69.0732%" y="751.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (79 samples, 0.16%)</title><rect x="68.7951%" y="773" width="0.1587%" height="15" fill="rgb(241,83,25)" fg:x="34251" fg:w="79"/><text x="69.0451%" y="783.50"></text></g><g><title>__GI___libc_malloc (50 samples, 0.10%)</title><rect x="68.9819%" y="741" width="0.1004%" height="15" fill="rgb(205,169,50)" fg:x="34344" fg:w="50"/><text x="69.2319%" y="751.50"></text></g><g><title>_int_malloc (40 samples, 0.08%)</title><rect x="69.0019%" y="725" width="0.0803%" height="15" fill="rgb(239,186,37)" fg:x="34354" fg:w="40"/><text x="69.2519%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="69.0883%" y="741" width="0.0100%" height="15" fill="rgb(205,221,10)" fg:x="34397" fg:w="5"/><text x="69.3383%" y="751.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="69.1024%" y="725" width="0.0100%" height="15" fill="rgb(218,196,15)" fg:x="34404" fg:w="5"/><text x="69.3524%" y="735.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (80 samples, 0.16%)</title><rect x="68.9537%" y="773" width="0.1607%" height="15" fill="rgb(218,196,35)" fg:x="34330" fg:w="80"/><text x="69.2037%" y="783.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (72 samples, 0.14%)</title><rect x="68.9698%" y="757" width="0.1446%" height="15" fill="rgb(233,63,24)" fg:x="34338" fg:w="72"/><text x="69.2198%" y="767.50"></text></g><g><title>datafusion_expr::expr::create_name (8 samples, 0.02%)</title><rect x="69.0984%" y="741" width="0.0161%" height="15" fill="rgb(225,8,4)" fg:x="34402" fg:w="8"/><text x="69.3484%" y="751.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr::new (74 samples, 0.15%)</title><rect x="69.1144%" y="773" width="0.1486%" height="15" fill="rgb(234,105,35)" fg:x="34410" fg:w="74"/><text x="69.3644%" y="783.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (73 samples, 0.15%)</title><rect x="69.1164%" y="757" width="0.1466%" height="15" fill="rgb(236,21,32)" fg:x="34411" fg:w="73"/><text x="69.3664%" y="767.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.07%)</title><rect x="69.1948%" y="741" width="0.0683%" height="15" fill="rgb(228,109,6)" fg:x="34450" fg:w="34"/><text x="69.4448%" y="751.50"></text></g><g><title>_int_malloc (34 samples, 0.07%)</title><rect x="69.1948%" y="725" width="0.0683%" height="15" fill="rgb(229,215,31)" fg:x="34450" fg:w="34"/><text x="69.4448%" y="735.50"></text></g><g><title>malloc_consolidate (14 samples, 0.03%)</title><rect x="69.2349%" y="709" width="0.0281%" height="15" fill="rgb(221,52,54)" fg:x="34470" fg:w="14"/><text x="69.4849%" y="719.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (1,591 samples, 3.20%)</title><rect x="66.0775%" y="805" width="3.1956%" height="15" fill="rgb(252,129,43)" fg:x="32898" fg:w="1591"/><text x="66.3275%" y="815.50">&lt;fa..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (777 samples, 1.56%)</title><rect x="67.7125%" y="789" width="1.5606%" height="15" fill="rgb(248,183,27)" fg:x="33712" fg:w="777"/><text x="67.9625%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="69.2631%" y="773" width="0.0100%" height="15" fill="rgb(250,0,22)" fg:x="34484" fg:w="5"/><text x="69.5131%" y="783.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (1,597 samples, 3.21%)</title><rect x="66.0715%" y="821" width="3.2077%" height="15" fill="rgb(213,166,10)" fg:x="32895" fg:w="1597"/><text x="66.3215%" y="831.50">&lt;fa..</text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="76.3312%" y="757" width="0.0121%" height="15" fill="rgb(207,163,36)" fg:x="38003" fg:w="6"/><text x="76.5812%" y="767.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (14 samples, 0.03%)</title><rect x="76.3272%" y="773" width="0.0281%" height="15" fill="rgb(208,122,22)" fg:x="38001" fg:w="14"/><text x="76.5772%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (6 samples, 0.01%)</title><rect x="76.3432%" y="757" width="0.0121%" height="15" fill="rgb(207,104,49)" fg:x="38009" fg:w="6"/><text x="76.5932%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="773" width="0.0121%" height="15" fill="rgb(248,211,50)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="757" width="0.0121%" height="15" fill="rgb(217,13,45)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="741" width="0.0121%" height="15" fill="rgb(211,216,49)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="725" width="0.0121%" height="15" fill="rgb(221,58,53)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="709" width="0.0121%" height="15" fill="rgb(220,112,41)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="693" width="0.0121%" height="15" fill="rgb(236,38,28)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="677" width="0.0121%" height="15" fill="rgb(227,195,22)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="661" width="0.0121%" height="15" fill="rgb(214,55,33)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="645" width="0.0121%" height="15" fill="rgb(248,80,13)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="629" width="0.0121%" height="15" fill="rgb(238,52,6)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="613" width="0.0121%" height="15" fill="rgb(224,198,47)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="597" width="0.0121%" height="15" fill="rgb(233,171,20)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="76.3553%" y="581" width="0.0121%" height="15" fill="rgb(241,30,25)" fg:x="38015" fg:w="6"/><text x="76.6053%" y="591.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.03%)</title><rect x="76.3673%" y="773" width="0.0261%" height="15" fill="rgb(207,171,38)" fg:x="38021" fg:w="13"/><text x="76.6173%" y="783.50"></text></g><g><title>_int_malloc (9 samples, 0.02%)</title><rect x="76.3754%" y="757" width="0.0181%" height="15" fill="rgb(234,70,1)" fg:x="38025" fg:w="9"/><text x="76.6254%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="76.3934%" y="773" width="0.0241%" height="15" fill="rgb(232,178,18)" fg:x="38034" fg:w="12"/><text x="76.6434%" y="783.50"></text></g><g><title>_int_free (64 samples, 0.13%)</title><rect x="76.6244%" y="741" width="0.1285%" height="15" fill="rgb(241,78,40)" fg:x="38149" fg:w="64"/><text x="76.8744%" y="751.50"></text></g><g><title>__posix_memalign (337 samples, 0.68%)</title><rect x="76.4175%" y="773" width="0.6769%" height="15" fill="rgb(222,35,25)" fg:x="38046" fg:w="337"/><text x="76.6675%" y="783.50"></text></g><g><title>_int_memalign (260 samples, 0.52%)</title><rect x="76.5722%" y="757" width="0.5222%" height="15" fill="rgb(207,92,16)" fg:x="38123" fg:w="260"/><text x="76.8222%" y="767.50"></text></g><g><title>_int_malloc (170 samples, 0.34%)</title><rect x="76.7530%" y="741" width="0.3415%" height="15" fill="rgb(216,59,51)" fg:x="38213" fg:w="170"/><text x="77.0030%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (175 samples, 0.35%)</title><rect x="77.0944%" y="773" width="0.3515%" height="15" fill="rgb(213,80,28)" fg:x="38383" fg:w="175"/><text x="77.3444%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (165 samples, 0.33%)</title><rect x="77.1145%" y="757" width="0.3314%" height="15" fill="rgb(220,93,7)" fg:x="38393" fg:w="165"/><text x="77.3645%" y="767.50"></text></g><g><title>__GI___libc_malloc (162 samples, 0.33%)</title><rect x="77.1205%" y="741" width="0.3254%" height="15" fill="rgb(225,24,44)" fg:x="38396" fg:w="162"/><text x="77.3705%" y="751.50"></text></g><g><title>_int_malloc (156 samples, 0.31%)</title><rect x="77.1326%" y="725" width="0.3133%" height="15" fill="rgb(243,74,40)" fg:x="38402" fg:w="156"/><text x="77.3826%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (133 samples, 0.27%)</title><rect x="77.1788%" y="709" width="0.2671%" height="15" fill="rgb(228,39,7)" fg:x="38425" fg:w="133"/><text x="77.4288%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.20%)</title><rect x="77.2431%" y="693" width="0.2029%" height="15" fill="rgb(227,79,8)" fg:x="38457" fg:w="101"/><text x="77.4931%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.20%)</title><rect x="77.2491%" y="677" width="0.1968%" height="15" fill="rgb(236,58,11)" fg:x="38460" fg:w="98"/><text x="77.4991%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.20%)</title><rect x="77.2491%" y="661" width="0.1968%" height="15" fill="rgb(249,63,35)" fg:x="38460" fg:w="98"/><text x="77.4991%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (97 samples, 0.19%)</title><rect x="77.2511%" y="645" width="0.1948%" height="15" fill="rgb(252,114,16)" fg:x="38461" fg:w="97"/><text x="77.5011%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (96 samples, 0.19%)</title><rect x="77.2531%" y="629" width="0.1928%" height="15" fill="rgb(254,151,24)" fg:x="38462" fg:w="96"/><text x="77.5031%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (89 samples, 0.18%)</title><rect x="77.2672%" y="613" width="0.1788%" height="15" fill="rgb(253,54,39)" fg:x="38469" fg:w="89"/><text x="77.5172%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (84 samples, 0.17%)</title><rect x="77.2772%" y="597" width="0.1687%" height="15" fill="rgb(243,25,45)" fg:x="38474" fg:w="84"/><text x="77.5272%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (75 samples, 0.15%)</title><rect x="77.2953%" y="581" width="0.1506%" height="15" fill="rgb(234,134,9)" fg:x="38483" fg:w="75"/><text x="77.5453%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (67 samples, 0.13%)</title><rect x="77.3113%" y="565" width="0.1346%" height="15" fill="rgb(227,166,31)" fg:x="38491" fg:w="67"/><text x="77.5613%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.13%)</title><rect x="77.3154%" y="549" width="0.1306%" height="15" fill="rgb(245,143,41)" fg:x="38493" fg:w="65"/><text x="77.5654%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (59 samples, 0.12%)</title><rect x="77.3274%" y="533" width="0.1185%" height="15" fill="rgb(238,181,32)" fg:x="38499" fg:w="59"/><text x="77.5774%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.06%)</title><rect x="77.3816%" y="517" width="0.0643%" height="15" fill="rgb(224,113,18)" fg:x="38526" fg:w="32"/><text x="77.6316%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.05%)</title><rect x="77.3997%" y="501" width="0.0462%" height="15" fill="rgb(240,229,28)" fg:x="38535" fg:w="23"/><text x="77.6497%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="77.4319%" y="485" width="0.0141%" height="15" fill="rgb(250,185,3)" fg:x="38551" fg:w="7"/><text x="77.6819%" y="495.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (621 samples, 1.25%)</title><rect x="76.2127%" y="789" width="1.2473%" height="15" fill="rgb(212,59,25)" fg:x="37944" fg:w="621"/><text x="76.4627%" y="799.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (7 samples, 0.01%)</title><rect x="77.4459%" y="773" width="0.0141%" height="15" fill="rgb(221,87,20)" fg:x="38558" fg:w="7"/><text x="77.6959%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (92 samples, 0.18%)</title><rect x="77.4600%" y="789" width="0.1848%" height="15" fill="rgb(213,74,28)" fg:x="38565" fg:w="92"/><text x="77.7100%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (91 samples, 0.18%)</title><rect x="77.4620%" y="773" width="0.1828%" height="15" fill="rgb(224,132,34)" fg:x="38566" fg:w="91"/><text x="77.7120%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (91 samples, 0.18%)</title><rect x="77.4620%" y="757" width="0.1828%" height="15" fill="rgb(222,101,24)" fg:x="38566" fg:w="91"/><text x="77.7120%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (91 samples, 0.18%)</title><rect x="77.4620%" y="741" width="0.1828%" height="15" fill="rgb(254,142,4)" fg:x="38566" fg:w="91"/><text x="77.7120%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (90 samples, 0.18%)</title><rect x="77.4640%" y="725" width="0.1808%" height="15" fill="rgb(230,229,49)" fg:x="38567" fg:w="90"/><text x="77.7140%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (88 samples, 0.18%)</title><rect x="77.4680%" y="709" width="0.1768%" height="15" fill="rgb(238,70,47)" fg:x="38569" fg:w="88"/><text x="77.7180%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (87 samples, 0.17%)</title><rect x="77.4700%" y="693" width="0.1747%" height="15" fill="rgb(231,160,17)" fg:x="38570" fg:w="87"/><text x="77.7200%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (87 samples, 0.17%)</title><rect x="77.4700%" y="677" width="0.1747%" height="15" fill="rgb(218,68,53)" fg:x="38570" fg:w="87"/><text x="77.7200%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (86 samples, 0.17%)</title><rect x="77.4720%" y="661" width="0.1727%" height="15" fill="rgb(236,111,10)" fg:x="38571" fg:w="86"/><text x="77.7220%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (84 samples, 0.17%)</title><rect x="77.4760%" y="645" width="0.1687%" height="15" fill="rgb(224,34,41)" fg:x="38573" fg:w="84"/><text x="77.7260%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (83 samples, 0.17%)</title><rect x="77.4781%" y="629" width="0.1667%" height="15" fill="rgb(241,118,19)" fg:x="38574" fg:w="83"/><text x="77.7281%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.05%)</title><rect x="77.5966%" y="613" width="0.0482%" height="15" fill="rgb(238,129,25)" fg:x="38633" fg:w="24"/><text x="77.8466%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.04%)</title><rect x="77.6066%" y="597" width="0.0382%" height="15" fill="rgb(238,22,31)" fg:x="38638" fg:w="19"/><text x="77.8566%" y="607.50"></text></g><g><title>__GI___libc_free (77 samples, 0.15%)</title><rect x="77.6448%" y="789" width="0.1547%" height="15" fill="rgb(222,174,48)" fg:x="38657" fg:w="77"/><text x="77.8948%" y="799.50"></text></g><g><title>__GI___libc_malloc (2,030 samples, 4.08%)</title><rect x="77.7994%" y="789" width="4.0774%" height="15" fill="rgb(206,152,40)" fg:x="38734" fg:w="2030"/><text x="78.0494%" y="799.50">__GI..</text></g><g><title>_int_malloc (1,870 samples, 3.76%)</title><rect x="78.1208%" y="773" width="3.7560%" height="15" fill="rgb(218,99,54)" fg:x="38894" fg:w="1870"/><text x="78.3708%" y="783.50">_int..</text></g><g><title>[[kernel.kallsyms]] (892 samples, 1.79%)</title><rect x="80.0852%" y="757" width="1.7916%" height="15" fill="rgb(220,174,26)" fg:x="39872" fg:w="892"/><text x="80.3352%" y="767.50">[..</text></g><g><title>[[kernel.kallsyms]] (837 samples, 1.68%)</title><rect x="80.1956%" y="741" width="1.6812%" height="15" fill="rgb(245,116,9)" fg:x="39927" fg:w="837"/><text x="80.4456%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (836 samples, 1.68%)</title><rect x="80.1976%" y="725" width="1.6792%" height="15" fill="rgb(209,72,35)" fg:x="39928" fg:w="836"/><text x="80.4476%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (829 samples, 1.67%)</title><rect x="80.2117%" y="709" width="1.6651%" height="15" fill="rgb(226,126,21)" fg:x="39935" fg:w="829"/><text x="80.4617%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (815 samples, 1.64%)</title><rect x="80.2398%" y="693" width="1.6370%" height="15" fill="rgb(227,192,1)" fg:x="39949" fg:w="815"/><text x="80.4898%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (794 samples, 1.59%)</title><rect x="80.2820%" y="677" width="1.5948%" height="15" fill="rgb(237,180,29)" fg:x="39970" fg:w="794"/><text x="80.5320%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (748 samples, 1.50%)</title><rect x="80.3744%" y="661" width="1.5024%" height="15" fill="rgb(230,197,35)" fg:x="40016" fg:w="748"/><text x="80.6244%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (709 samples, 1.42%)</title><rect x="80.4527%" y="645" width="1.4241%" height="15" fill="rgb(246,193,31)" fg:x="40055" fg:w="709"/><text x="80.7027%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (574 samples, 1.15%)</title><rect x="80.7239%" y="629" width="1.1529%" height="15" fill="rgb(241,36,4)" fg:x="40190" fg:w="574"/><text x="80.9739%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (556 samples, 1.12%)</title><rect x="80.7600%" y="613" width="1.1168%" height="15" fill="rgb(241,130,17)" fg:x="40208" fg:w="556"/><text x="81.0100%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (535 samples, 1.07%)</title><rect x="80.8022%" y="597" width="1.0746%" height="15" fill="rgb(206,137,32)" fg:x="40229" fg:w="535"/><text x="81.0522%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (259 samples, 0.52%)</title><rect x="81.3566%" y="581" width="0.5202%" height="15" fill="rgb(237,228,51)" fg:x="40505" fg:w="259"/><text x="81.6066%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (179 samples, 0.36%)</title><rect x="81.5173%" y="565" width="0.3595%" height="15" fill="rgb(243,6,42)" fg:x="40585" fg:w="179"/><text x="81.7673%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (50 samples, 0.10%)</title><rect x="81.7764%" y="549" width="0.1004%" height="15" fill="rgb(251,74,28)" fg:x="40714" fg:w="50"/><text x="82.0264%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="81.8447%" y="533" width="0.0321%" height="15" fill="rgb(218,20,49)" fg:x="40748" fg:w="16"/><text x="82.0947%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="81.8587%" y="517" width="0.0181%" height="15" fill="rgb(238,28,14)" fg:x="40755" fg:w="9"/><text x="82.1087%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="81.8647%" y="501" width="0.0121%" height="15" fill="rgb(229,40,46)" fg:x="40758" fg:w="6"/><text x="82.1147%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="773" width="0.0221%" height="15" fill="rgb(244,195,20)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="757" width="0.0221%" height="15" fill="rgb(253,56,35)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="741" width="0.0221%" height="15" fill="rgb(210,149,44)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="725" width="0.0221%" height="15" fill="rgb(240,135,12)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="709" width="0.0221%" height="15" fill="rgb(251,24,50)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="693" width="0.0221%" height="15" fill="rgb(243,200,47)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="677" width="0.0221%" height="15" fill="rgb(224,166,26)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="661" width="0.0221%" height="15" fill="rgb(233,0,47)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="645" width="0.0221%" height="15" fill="rgb(253,80,5)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="629" width="0.0221%" height="15" fill="rgb(214,133,25)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="83.1703%" y="613" width="0.0221%" height="15" fill="rgb(209,27,14)" fg:x="41408" fg:w="11"/><text x="83.4203%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="83.1783%" y="597" width="0.0141%" height="15" fill="rgb(219,102,51)" fg:x="41412" fg:w="7"/><text x="83.4283%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="83.1783%" y="581" width="0.0141%" height="15" fill="rgb(237,18,16)" fg:x="41412" fg:w="7"/><text x="83.4283%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="757" width="0.0161%" height="15" fill="rgb(241,85,17)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="741" width="0.0161%" height="15" fill="rgb(236,90,42)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="725" width="0.0161%" height="15" fill="rgb(249,57,21)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="709" width="0.0161%" height="15" fill="rgb(243,12,36)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="693" width="0.0161%" height="15" fill="rgb(253,128,47)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="677" width="0.0161%" height="15" fill="rgb(207,33,20)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="661" width="0.0161%" height="15" fill="rgb(233,215,35)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="645" width="0.0161%" height="15" fill="rgb(249,188,52)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="629" width="0.0161%" height="15" fill="rgb(225,12,32)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="613" width="0.0161%" height="15" fill="rgb(247,98,14)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="83.9777%" y="597" width="0.0161%" height="15" fill="rgb(247,219,48)" fg:x="41810" fg:w="8"/><text x="84.2277%" y="607.50"></text></g><g><title>__calloc (1,055 samples, 2.12%)</title><rect x="81.8768%" y="789" width="2.1190%" height="15" fill="rgb(253,60,48)" fg:x="40764" fg:w="1055"/><text x="82.1268%" y="799.50">_..</text></g><g><title>_int_malloc (400 samples, 0.80%)</title><rect x="83.1924%" y="773" width="0.8034%" height="15" fill="rgb(245,15,52)" fg:x="41419" fg:w="400"/><text x="83.4424%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (52 samples, 0.10%)</title><rect x="83.9958%" y="789" width="0.1044%" height="15" fill="rgb(220,133,28)" fg:x="41819" fg:w="52"/><text x="84.2458%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="773" width="0.0100%" height="15" fill="rgb(217,180,4)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="757" width="0.0100%" height="15" fill="rgb(251,24,1)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="741" width="0.0100%" height="15" fill="rgb(212,185,49)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="725" width="0.0100%" height="15" fill="rgb(215,175,22)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="709" width="0.0100%" height="15" fill="rgb(250,205,14)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="693" width="0.0100%" height="15" fill="rgb(225,211,22)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="677" width="0.0100%" height="15" fill="rgb(251,179,42)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="661" width="0.0100%" height="15" fill="rgb(208,216,51)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="645" width="0.0100%" height="15" fill="rgb(235,36,11)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="629" width="0.0100%" height="15" fill="rgb(213,189,28)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="84.0902%" y="613" width="0.0100%" height="15" fill="rgb(227,203,42)" fg:x="41866" fg:w="5"/><text x="84.3402%" y="623.50"></text></g><g><title>_int_free (110 samples, 0.22%)</title><rect x="84.3795%" y="757" width="0.2209%" height="15" fill="rgb(244,72,36)" fg:x="42010" fg:w="110"/><text x="84.6295%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="741" width="0.0121%" height="15" fill="rgb(213,53,17)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="725" width="0.0121%" height="15" fill="rgb(207,167,3)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="709" width="0.0121%" height="15" fill="rgb(216,98,30)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="693" width="0.0121%" height="15" fill="rgb(236,123,15)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="677" width="0.0121%" height="15" fill="rgb(248,81,50)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="661" width="0.0121%" height="15" fill="rgb(214,120,4)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="645" width="0.0121%" height="15" fill="rgb(208,179,34)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="629" width="0.0121%" height="15" fill="rgb(227,140,7)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="85.9662%" y="613" width="0.0121%" height="15" fill="rgb(214,22,6)" fg:x="42800" fg:w="6"/><text x="86.2162%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="85.9682%" y="597" width="0.0100%" height="15" fill="rgb(207,137,27)" fg:x="42801" fg:w="5"/><text x="86.2182%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="85.9682%" y="581" width="0.0100%" height="15" fill="rgb(210,8,46)" fg:x="42801" fg:w="5"/><text x="86.2182%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="86.9143%" y="725" width="0.0261%" height="15" fill="rgb(240,16,54)" fg:x="43272" fg:w="13"/><text x="87.1643%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="86.9163%" y="709" width="0.0241%" height="15" fill="rgb(211,209,29)" fg:x="43273" fg:w="12"/><text x="87.1663%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="86.9163%" y="693" width="0.0241%" height="15" fill="rgb(226,228,24)" fg:x="43273" fg:w="12"/><text x="87.1663%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="86.9163%" y="677" width="0.0241%" height="15" fill="rgb(222,84,9)" fg:x="43273" fg:w="12"/><text x="87.1663%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="86.9163%" y="661" width="0.0241%" height="15" fill="rgb(234,203,30)" fg:x="43273" fg:w="12"/><text x="87.1663%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="86.9163%" y="645" width="0.0241%" height="15" fill="rgb(238,109,14)" fg:x="43273" fg:w="12"/><text x="87.1663%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.9183%" y="629" width="0.0221%" height="15" fill="rgb(233,206,34)" fg:x="43274" fg:w="11"/><text x="87.1683%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.9183%" y="613" width="0.0221%" height="15" fill="rgb(220,167,47)" fg:x="43274" fg:w="11"/><text x="87.1683%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="86.9203%" y="597" width="0.0201%" height="15" fill="rgb(238,105,10)" fg:x="43275" fg:w="10"/><text x="87.1703%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="86.9203%" y="581" width="0.0201%" height="15" fill="rgb(213,227,17)" fg:x="43275" fg:w="10"/><text x="87.1703%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="86.9203%" y="565" width="0.0201%" height="15" fill="rgb(217,132,38)" fg:x="43275" fg:w="10"/><text x="87.1703%" y="575.50"></text></g><g><title>malloc_consolidate (508 samples, 1.02%)</title><rect x="85.9783%" y="741" width="1.0203%" height="15" fill="rgb(242,146,4)" fg:x="42806" fg:w="508"/><text x="86.2283%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (29 samples, 0.06%)</title><rect x="86.9404%" y="725" width="0.0582%" height="15" fill="rgb(212,61,9)" fg:x="43285" fg:w="29"/><text x="87.1904%" y="735.50"></text></g><g><title>__posix_memalign (1,525 samples, 3.06%)</title><rect x="84.1003%" y="789" width="3.0630%" height="15" fill="rgb(247,126,22)" fg:x="41871" fg:w="1525"/><text x="84.3503%" y="799.50">__p..</text></g><g><title>_int_memalign (1,430 samples, 2.87%)</title><rect x="84.2911%" y="773" width="2.8722%" height="15" fill="rgb(220,196,2)" fg:x="41966" fg:w="1430"/><text x="84.5411%" y="783.50">_i..</text></g><g><title>_int_malloc (1,276 samples, 2.56%)</title><rect x="84.6004%" y="757" width="2.5629%" height="15" fill="rgb(208,46,4)" fg:x="42120" fg:w="1276"/><text x="84.8504%" y="767.50">_i..</text></g><g><title>unlink_chunk.isra.0 (82 samples, 0.16%)</title><rect x="86.9986%" y="741" width="0.1647%" height="15" fill="rgb(252,104,46)" fg:x="43314" fg:w="82"/><text x="87.2486%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="773" width="0.0321%" height="15" fill="rgb(237,152,48)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="757" width="0.0321%" height="15" fill="rgb(221,59,37)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="741" width="0.0321%" height="15" fill="rgb(209,202,51)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="725" width="0.0321%" height="15" fill="rgb(228,81,30)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="709" width="0.0321%" height="15" fill="rgb(227,42,39)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="693" width="0.0321%" height="15" fill="rgb(221,26,2)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.03%)</title><rect x="87.8864%" y="677" width="0.0321%" height="15" fill="rgb(254,61,31)" fg:x="43756" fg:w="16"/><text x="88.1364%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="87.8924%" y="661" width="0.0261%" height="15" fill="rgb(222,173,38)" fg:x="43759" fg:w="13"/><text x="88.1424%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="87.8924%" y="645" width="0.0261%" height="15" fill="rgb(218,50,12)" fg:x="43759" fg:w="13"/><text x="88.1424%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="87.8924%" y="629" width="0.0261%" height="15" fill="rgb(223,88,40)" fg:x="43759" fg:w="13"/><text x="88.1424%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.03%)</title><rect x="87.8924%" y="613" width="0.0261%" height="15" fill="rgb(237,54,19)" fg:x="43759" fg:w="13"/><text x="88.1424%" y="623.50"></text></g><g><title>_int_free (382 samples, 0.77%)</title><rect x="87.1633%" y="789" width="0.7673%" height="15" fill="rgb(251,129,25)" fg:x="43396" fg:w="382"/><text x="87.4133%" y="799.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (173 samples, 0.35%)</title><rect x="87.9306%" y="789" width="0.3475%" height="15" fill="rgb(238,97,19)" fg:x="43778" fg:w="173"/><text x="88.1806%" y="799.50"></text></g><g><title>arrow_schema::field::Field::new (23 samples, 0.05%)</title><rect x="88.2781%" y="789" width="0.0462%" height="15" fill="rgb(240,169,18)" fg:x="43951" fg:w="23"/><text x="88.5281%" y="799.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_add_epi64 (556 samples, 1.12%)</title><rect x="88.3243%" y="789" width="1.1168%" height="15" fill="rgb(230,187,49)" fg:x="43974" fg:w="556"/><text x="88.5743%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="773" width="0.0161%" height="15" fill="rgb(209,44,26)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="757" width="0.0161%" height="15" fill="rgb(244,0,6)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="741" width="0.0161%" height="15" fill="rgb(248,18,21)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="725" width="0.0161%" height="15" fill="rgb(245,180,19)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="709" width="0.0161%" height="15" fill="rgb(252,118,36)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="693" width="0.0161%" height="15" fill="rgb(210,224,19)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="677" width="0.0161%" height="15" fill="rgb(218,30,24)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="661" width="0.0161%" height="15" fill="rgb(219,75,50)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="645" width="0.0161%" height="15" fill="rgb(234,72,50)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="629" width="0.0161%" height="15" fill="rgb(219,100,48)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="89.4250%" y="613" width="0.0161%" height="15" fill="rgb(253,5,41)" fg:x="44522" fg:w="8"/><text x="89.6750%" y="623.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (1,156 samples, 2.32%)</title><rect x="89.4410%" y="789" width="2.3219%" height="15" fill="rgb(247,181,11)" fg:x="44530" fg:w="1156"/><text x="89.6910%" y="799.50">c..</text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.06%)</title><rect x="91.7006%" y="773" width="0.0623%" height="15" fill="rgb(222,223,25)" fg:x="45655" fg:w="31"/><text x="91.9506%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (30 samples, 0.06%)</title><rect x="91.7027%" y="757" width="0.0603%" height="15" fill="rgb(214,198,28)" fg:x="45656" fg:w="30"/><text x="91.9527%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (30 samples, 0.06%)</title><rect x="91.7027%" y="741" width="0.0603%" height="15" fill="rgb(230,46,43)" fg:x="45656" fg:w="30"/><text x="91.9527%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.06%)</title><rect x="91.7047%" y="725" width="0.0582%" height="15" fill="rgb(233,65,53)" fg:x="45657" fg:w="29"/><text x="91.9547%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.06%)</title><rect x="91.7047%" y="709" width="0.0582%" height="15" fill="rgb(221,121,27)" fg:x="45657" fg:w="29"/><text x="91.9547%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.06%)</title><rect x="91.7047%" y="693" width="0.0582%" height="15" fill="rgb(247,70,47)" fg:x="45657" fg:w="29"/><text x="91.9547%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.06%)</title><rect x="91.7047%" y="677" width="0.0582%" height="15" fill="rgb(228,85,35)" fg:x="45657" fg:w="29"/><text x="91.9547%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.06%)</title><rect x="91.7047%" y="661" width="0.0582%" height="15" fill="rgb(209,50,18)" fg:x="45657" fg:w="29"/><text x="91.9547%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.05%)</title><rect x="91.7107%" y="645" width="0.0522%" height="15" fill="rgb(250,19,35)" fg:x="45660" fg:w="26"/><text x="91.9607%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.05%)</title><rect x="91.7127%" y="629" width="0.0502%" height="15" fill="rgb(253,107,29)" fg:x="45661" fg:w="25"/><text x="91.9627%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.05%)</title><rect x="91.7127%" y="613" width="0.0502%" height="15" fill="rgb(252,179,29)" fg:x="45661" fg:w="25"/><text x="91.9627%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="91.7509%" y="597" width="0.0121%" height="15" fill="rgb(238,194,6)" fg:x="45680" fg:w="6"/><text x="92.0009%" y="607.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_reduce_add_epi64 (22 samples, 0.04%)</title><rect x="91.7629%" y="789" width="0.0442%" height="15" fill="rgb(238,164,29)" fg:x="45686" fg:w="22"/><text x="92.0129%" y="799.50"></text></g><g><title>core::core_arch::x86::avx512vbmi2::_mm512_mask_compressstoreu_epi8 (78 samples, 0.16%)</title><rect x="91.8071%" y="789" width="0.1567%" height="15" fill="rgb(224,25,9)" fg:x="45708" fg:w="78"/><text x="92.0571%" y="799.50"></text></g><g><title>core::core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64 (534 samples, 1.07%)</title><rect x="91.9638%" y="789" width="1.0726%" height="15" fill="rgb(244,153,23)" fg:x="45786" fg:w="534"/><text x="92.2138%" y="799.50"></text></g><g><title>__GI___libc_free (15 samples, 0.03%)</title><rect x="94.4504%" y="741" width="0.0301%" height="15" fill="rgb(212,203,14)" fg:x="47024" fg:w="15"/><text x="94.7004%" y="751.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="94.4805%" y="741" width="0.0121%" height="15" fill="rgb(220,164,20)" fg:x="47039" fg:w="6"/><text x="94.7305%" y="751.50"></text></g><g><title>__memset_avx2_erms (28 samples, 0.06%)</title><rect x="94.5849%" y="725" width="0.0562%" height="15" fill="rgb(222,203,48)" fg:x="47091" fg:w="28"/><text x="94.8349%" y="735.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.01%)</title><rect x="94.6412%" y="725" width="0.0100%" height="15" fill="rgb(215,159,22)" fg:x="47119" fg:w="5"/><text x="94.8912%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (105 samples, 0.21%)</title><rect x="95.0067%" y="709" width="0.2109%" height="15" fill="rgb(216,183,47)" fg:x="47301" fg:w="105"/><text x="95.2567%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.20%)</title><rect x="95.0148%" y="693" width="0.2029%" height="15" fill="rgb(229,195,25)" fg:x="47305" fg:w="101"/><text x="95.2648%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.20%)</title><rect x="95.0148%" y="677" width="0.2029%" height="15" fill="rgb(224,132,51)" fg:x="47305" fg:w="101"/><text x="95.2648%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (100 samples, 0.20%)</title><rect x="95.0168%" y="661" width="0.2009%" height="15" fill="rgb(240,63,7)" fg:x="47306" fg:w="100"/><text x="95.2668%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (100 samples, 0.20%)</title><rect x="95.0168%" y="645" width="0.2009%" height="15" fill="rgb(249,182,41)" fg:x="47306" fg:w="100"/><text x="95.2668%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (96 samples, 0.19%)</title><rect x="95.0248%" y="629" width="0.1928%" height="15" fill="rgb(243,47,26)" fg:x="47310" fg:w="96"/><text x="95.2748%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (93 samples, 0.19%)</title><rect x="95.0308%" y="613" width="0.1868%" height="15" fill="rgb(233,48,2)" fg:x="47313" fg:w="93"/><text x="95.2808%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (89 samples, 0.18%)</title><rect x="95.0389%" y="597" width="0.1788%" height="15" fill="rgb(244,165,34)" fg:x="47317" fg:w="89"/><text x="95.2889%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (73 samples, 0.15%)</title><rect x="95.0710%" y="581" width="0.1466%" height="15" fill="rgb(207,89,7)" fg:x="47333" fg:w="73"/><text x="95.3210%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (71 samples, 0.14%)</title><rect x="95.0750%" y="565" width="0.1426%" height="15" fill="rgb(244,117,36)" fg:x="47335" fg:w="71"/><text x="95.3250%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (68 samples, 0.14%)</title><rect x="95.0810%" y="549" width="0.1366%" height="15" fill="rgb(226,144,34)" fg:x="47338" fg:w="68"/><text x="95.3310%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (39 samples, 0.08%)</title><rect x="95.1393%" y="533" width="0.0783%" height="15" fill="rgb(213,23,19)" fg:x="47367" fg:w="39"/><text x="95.3893%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.05%)</title><rect x="95.1634%" y="517" width="0.0542%" height="15" fill="rgb(217,75,12)" fg:x="47379" fg:w="27"/><text x="95.4134%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="95.2056%" y="501" width="0.0121%" height="15" fill="rgb(224,159,17)" fg:x="47400" fg:w="6"/><text x="95.4556%" y="511.50"></text></g><g><title>malloc_consolidate (128 samples, 0.26%)</title><rect x="95.2176%" y="709" width="0.2571%" height="15" fill="rgb(217,118,1)" fg:x="47406" fg:w="128"/><text x="95.4676%" y="719.50"></text></g><g><title>__calloc (526 samples, 1.06%)</title><rect x="94.4925%" y="741" width="1.0565%" height="15" fill="rgb(232,180,48)" fg:x="47045" fg:w="526"/><text x="94.7425%" y="751.50"></text></g><g><title>_int_malloc (447 samples, 0.90%)</title><rect x="94.6512%" y="725" width="0.8978%" height="15" fill="rgb(230,27,33)" fg:x="47124" fg:w="447"/><text x="94.9012%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (37 samples, 0.07%)</title><rect x="95.4747%" y="709" width="0.0743%" height="15" fill="rgb(205,31,21)" fg:x="47534" fg:w="37"/><text x="95.7247%" y="719.50"></text></g><g><title>_int_free (57 samples, 0.11%)</title><rect x="95.6575%" y="709" width="0.1145%" height="15" fill="rgb(253,59,4)" fg:x="47625" fg:w="57"/><text x="95.9075%" y="719.50"></text></g><g><title>malloc_consolidate (33 samples, 0.07%)</title><rect x="95.9688%" y="693" width="0.0663%" height="15" fill="rgb(224,201,9)" fg:x="47780" fg:w="33"/><text x="96.2188%" y="703.50"></text></g><g><title>__posix_memalign (278 samples, 0.56%)</title><rect x="95.5490%" y="741" width="0.5584%" height="15" fill="rgb(229,206,30)" fg:x="47571" fg:w="278"/><text x="95.7990%" y="751.50"></text></g><g><title>_int_memalign (243 samples, 0.49%)</title><rect x="95.6193%" y="725" width="0.4881%" height="15" fill="rgb(212,67,47)" fg:x="47606" fg:w="243"/><text x="95.8693%" y="735.50"></text></g><g><title>_int_malloc (167 samples, 0.34%)</title><rect x="95.7720%" y="709" width="0.3354%" height="15" fill="rgb(211,96,50)" fg:x="47682" fg:w="167"/><text x="96.0220%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (36 samples, 0.07%)</title><rect x="96.0351%" y="693" width="0.0723%" height="15" fill="rgb(252,114,18)" fg:x="47813" fg:w="36"/><text x="96.2851%" y="703.50"></text></g><g><title>_int_free (83 samples, 0.17%)</title><rect x="96.1074%" y="741" width="0.1667%" height="15" fill="rgb(223,58,37)" fg:x="47849" fg:w="83"/><text x="96.3574%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="725" width="0.0100%" height="15" fill="rgb(237,70,4)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="709" width="0.0100%" height="15" fill="rgb(244,85,46)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="693" width="0.0100%" height="15" fill="rgb(223,39,52)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="677" width="0.0100%" height="15" fill="rgb(218,200,14)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="661" width="0.0100%" height="15" fill="rgb(208,171,16)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="645" width="0.0100%" height="15" fill="rgb(234,200,18)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="629" width="0.0100%" height="15" fill="rgb(228,45,11)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.2641%" y="613" width="0.0100%" height="15" fill="rgb(237,182,11)" fg:x="47927" fg:w="5"/><text x="96.5141%" y="623.50"></text></g><g><title>core::core_arch::x86::avx512f::_mm512_loadu_epi64 (18 samples, 0.04%)</title><rect x="96.2741%" y="741" width="0.0362%" height="15" fill="rgb(241,175,49)" fg:x="47932" fg:w="18"/><text x="96.5241%" y="751.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (13,451 samples, 27.02%)</title><rect x="69.2972%" y="805" width="27.0171%" height="15" fill="rgb(247,38,35)" fg:x="34501" fg:w="13451"/><text x="69.5472%" y="815.50">&lt;fastfull_search::datasources::posting_tabl..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (1,632 samples, 3.28%)</title><rect x="93.0363%" y="789" width="3.2780%" height="15" fill="rgb(228,39,49)" fg:x="46320" fg:w="1632"/><text x="93.2863%" y="799.50">fas..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (1,611 samples, 3.24%)</title><rect x="93.0785%" y="773" width="3.2358%" height="15" fill="rgb(226,101,26)" fg:x="46341" fg:w="1611"/><text x="93.3285%" y="783.50">fas..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (1,601 samples, 3.22%)</title><rect x="93.0986%" y="757" width="3.2157%" height="15" fill="rgb(206,141,19)" fg:x="46351" fg:w="1601"/><text x="93.3486%" y="767.50">fas..</text></g><g><title>malloc_consolidate (18 samples, 0.04%)</title><rect x="96.4147%" y="725" width="0.0362%" height="15" fill="rgb(211,200,13)" fg:x="48002" fg:w="18"/><text x="96.6647%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (70 samples, 0.14%)</title><rect x="96.3143%" y="805" width="0.1406%" height="15" fill="rgb(241,121,6)" fg:x="47952" fg:w="70"/><text x="96.5643%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (69 samples, 0.14%)</title><rect x="96.3163%" y="789" width="0.1386%" height="15" fill="rgb(234,221,29)" fg:x="47953" fg:w="69"/><text x="96.5663%" y="799.50"></text></g><g><title>__GI___libc_realloc (68 samples, 0.14%)</title><rect x="96.3183%" y="773" width="0.1366%" height="15" fill="rgb(229,136,5)" fg:x="47954" fg:w="68"/><text x="96.5683%" y="783.50"></text></g><g><title>_int_realloc (56 samples, 0.11%)</title><rect x="96.3424%" y="757" width="0.1125%" height="15" fill="rgb(238,36,11)" fg:x="47966" fg:w="56"/><text x="96.5924%" y="767.50"></text></g><g><title>_int_malloc (50 samples, 0.10%)</title><rect x="96.3545%" y="741" width="0.1004%" height="15" fill="rgb(251,55,41)" fg:x="47972" fg:w="50"/><text x="96.6045%" y="751.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (13,531 samples, 27.18%)</title><rect x="69.2791%" y="821" width="27.1778%" height="15" fill="rgb(242,34,40)" fg:x="34492" fg:w="13531"/><text x="69.5291%" y="831.50">&lt;futures_util::stream::try_stream::try_colle..</text></g><g><title>[[kernel.kallsyms]] (124 samples, 0.25%)</title><rect x="96.4589%" y="773" width="0.2491%" height="15" fill="rgb(215,42,17)" fg:x="48024" fg:w="124"/><text x="96.7089%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (119 samples, 0.24%)</title><rect x="96.4690%" y="757" width="0.2390%" height="15" fill="rgb(207,44,46)" fg:x="48029" fg:w="119"/><text x="96.7190%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (119 samples, 0.24%)</title><rect x="96.4690%" y="741" width="0.2390%" height="15" fill="rgb(211,206,28)" fg:x="48029" fg:w="119"/><text x="96.7190%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (118 samples, 0.24%)</title><rect x="96.4710%" y="725" width="0.2370%" height="15" fill="rgb(237,167,16)" fg:x="48030" fg:w="118"/><text x="96.7210%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (117 samples, 0.24%)</title><rect x="96.4730%" y="709" width="0.2350%" height="15" fill="rgb(233,66,6)" fg:x="48031" fg:w="117"/><text x="96.7230%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (114 samples, 0.23%)</title><rect x="96.4790%" y="693" width="0.2290%" height="15" fill="rgb(246,123,29)" fg:x="48034" fg:w="114"/><text x="96.7290%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (107 samples, 0.21%)</title><rect x="96.4931%" y="677" width="0.2149%" height="15" fill="rgb(209,62,40)" fg:x="48041" fg:w="107"/><text x="96.7431%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (83 samples, 0.17%)</title><rect x="96.5413%" y="661" width="0.1667%" height="15" fill="rgb(218,4,25)" fg:x="48065" fg:w="83"/><text x="96.7913%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (74 samples, 0.15%)</title><rect x="96.5593%" y="645" width="0.1486%" height="15" fill="rgb(253,91,49)" fg:x="48074" fg:w="74"/><text x="96.8093%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (59 samples, 0.12%)</title><rect x="96.5895%" y="629" width="0.1185%" height="15" fill="rgb(228,155,29)" fg:x="48089" fg:w="59"/><text x="96.8395%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (51 samples, 0.10%)</title><rect x="96.6055%" y="613" width="0.1024%" height="15" fill="rgb(243,57,37)" fg:x="48097" fg:w="51"/><text x="96.8555%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (40 samples, 0.08%)</title><rect x="96.6276%" y="597" width="0.0803%" height="15" fill="rgb(244,167,17)" fg:x="48108" fg:w="40"/><text x="96.8776%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (39 samples, 0.08%)</title><rect x="96.6296%" y="581" width="0.0783%" height="15" fill="rgb(207,181,38)" fg:x="48109" fg:w="39"/><text x="96.8796%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.06%)</title><rect x="96.6457%" y="565" width="0.0623%" height="15" fill="rgb(211,8,23)" fg:x="48117" fg:w="31"/><text x="96.8957%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.04%)</title><rect x="96.6678%" y="549" width="0.0402%" height="15" fill="rgb(235,11,44)" fg:x="48128" fg:w="20"/><text x="96.9178%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="96.6979%" y="533" width="0.0100%" height="15" fill="rgb(248,18,52)" fg:x="48143" fg:w="5"/><text x="96.9479%" y="543.50"></text></g><g><title>__libc_read (125 samples, 0.25%)</title><rect x="96.4589%" y="805" width="0.2511%" height="15" fill="rgb(208,4,7)" fg:x="48024" fg:w="125"/><text x="96.7089%" y="815.50"></text></g><g><title>__libc_read (125 samples, 0.25%)</title><rect x="96.4589%" y="789" width="0.2511%" height="15" fill="rgb(240,17,39)" fg:x="48024" fg:w="125"/><text x="96.7089%" y="799.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.26%)</title><rect x="96.4569%" y="821" width="0.2551%" height="15" fill="rgb(207,170,3)" fg:x="48023" fg:w="127"/><text x="96.7069%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (25 samples, 0.05%)</title><rect x="96.7321%" y="821" width="0.0502%" height="15" fill="rgb(236,100,52)" fg:x="48160" fg:w="25"/><text x="96.9821%" y="831.50"></text></g><g><title>_int_free (19 samples, 0.04%)</title><rect x="96.7823%" y="821" width="0.0382%" height="15" fill="rgb(246,78,51)" fg:x="48185" fg:w="19"/><text x="97.0323%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (7 samples, 0.01%)</title><rect x="96.8205%" y="821" width="0.0141%" height="15" fill="rgb(211,17,15)" fg:x="48204" fg:w="7"/><text x="97.0705%" y="831.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="96.8245%" y="805" width="0.0100%" height="15" fill="rgb(209,59,46)" fg:x="48206" fg:w="5"/><text x="97.0745%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.03%)</title><rect x="96.8345%" y="821" width="0.0261%" height="15" fill="rgb(210,92,25)" fg:x="48211" fg:w="13"/><text x="97.0845%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.02%)</title><rect x="96.8405%" y="805" width="0.0201%" height="15" fill="rgb(238,174,52)" fg:x="48214" fg:w="10"/><text x="97.0905%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="96.8446%" y="789" width="0.0161%" height="15" fill="rgb(230,73,7)" fg:x="48216" fg:w="8"/><text x="97.0946%" y="799.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="96.8486%" y="773" width="0.0121%" height="15" fill="rgb(243,124,40)" fg:x="48218" fg:w="6"/><text x="97.0986%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionState&gt; (16 samples, 0.03%)</title><rect x="96.8606%" y="821" width="0.0321%" height="15" fill="rgb(244,170,11)" fg:x="48224" fg:w="16"/><text x="97.1106%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (7 samples, 0.01%)</title><rect x="96.8787%" y="805" width="0.0141%" height="15" fill="rgb(207,114,54)" fg:x="48233" fg:w="7"/><text x="97.1287%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="96.8827%" y="789" width="0.0100%" height="15" fill="rgb(205,42,20)" fg:x="48235" fg:w="5"/><text x="97.1327%" y="799.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="96.8968%" y="805" width="0.0100%" height="15" fill="rgb(230,30,28)" fg:x="48242" fg:w="5"/><text x="97.1468%" y="815.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="96.9088%" y="789" width="0.0241%" height="15" fill="rgb(205,73,54)" fg:x="48248" fg:w="12"/><text x="97.1588%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_expr::logical_plan::plan::Predicate&gt;&gt; (17 samples, 0.03%)</title><rect x="96.9068%" y="805" width="0.0341%" height="15" fill="rgb(254,227,23)" fg:x="48247" fg:w="17"/><text x="97.1568%" y="815.50"></text></g><g><title>_int_free (13 samples, 0.03%)</title><rect x="96.9470%" y="789" width="0.0261%" height="15" fill="rgb(228,202,34)" fg:x="48267" fg:w="13"/><text x="97.1970%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (6 samples, 0.01%)</title><rect x="96.9731%" y="789" width="0.0121%" height="15" fill="rgb(222,225,37)" fg:x="48280" fg:w="6"/><text x="97.2231%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (47 samples, 0.09%)</title><rect x="96.8928%" y="821" width="0.0944%" height="15" fill="rgb(221,14,54)" fg:x="48240" fg:w="47"/><text x="97.1428%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (23 samples, 0.05%)</title><rect x="96.9410%" y="805" width="0.0462%" height="15" fill="rgb(254,102,2)" fg:x="48264" fg:w="23"/><text x="97.1910%" y="815.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="97.0032%" y="789" width="0.0181%" height="15" fill="rgb(232,104,17)" fg:x="48295" fg:w="9"/><text x="97.2532%" y="799.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="97.0555%" y="773" width="0.0201%" height="15" fill="rgb(250,220,14)" fg:x="48321" fg:w="10"/><text x="97.3055%" y="783.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="97.0776%" y="757" width="0.0121%" height="15" fill="rgb(241,158,9)" fg:x="48332" fg:w="6"/><text x="97.3276%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[arrow_schema::field::Field]&gt; (13 samples, 0.03%)</title><rect x="97.0755%" y="773" width="0.0261%" height="15" fill="rgb(246,9,43)" fg:x="48331" fg:w="13"/><text x="97.3255%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="97.1137%" y="757" width="0.0100%" height="15" fill="rgb(206,73,33)" fg:x="48350" fg:w="5"/><text x="97.3637%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;arrow_array::record_batch::RecordBatch&gt;&gt;&gt; (69 samples, 0.14%)</title><rect x="96.9872%" y="821" width="0.1386%" height="15" fill="rgb(222,79,8)" fg:x="48287" fg:w="69"/><text x="97.2372%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingStream&gt; (66 samples, 0.13%)</title><rect x="96.9932%" y="805" width="0.1326%" height="15" fill="rgb(234,8,54)" fg:x="48290" fg:w="66"/><text x="97.2432%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (52 samples, 0.10%)</title><rect x="97.0213%" y="789" width="0.1044%" height="15" fill="rgb(209,134,38)" fg:x="48304" fg:w="52"/><text x="97.2713%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (12 samples, 0.02%)</title><rect x="97.1017%" y="773" width="0.0241%" height="15" fill="rgb(230,127,29)" fg:x="48344" fg:w="12"/><text x="97.3517%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="97.1619%" y="757" width="0.0100%" height="15" fill="rgb(242,44,41)" fg:x="48374" fg:w="5"/><text x="97.4119%" y="767.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="97.1720%" y="757" width="0.0100%" height="15" fill="rgb(222,56,43)" fg:x="48379" fg:w="5"/><text x="97.4220%" y="767.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="97.1539%" y="773" width="0.0301%" height="15" fill="rgb(238,39,47)" fg:x="48370" fg:w="15"/><text x="97.4039%" y="783.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.05%)</title><rect x="97.1840%" y="773" width="0.0462%" height="15" fill="rgb(226,79,43)" fg:x="48385" fg:w="23"/><text x="97.4340%" y="783.50"></text></g><g><title>_int_malloc (16 samples, 0.03%)</title><rect x="97.1981%" y="757" width="0.0321%" height="15" fill="rgb(242,105,53)" fg:x="48392" fg:w="16"/><text x="97.4481%" y="767.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (42 samples, 0.08%)</title><rect x="97.1478%" y="805" width="0.0844%" height="15" fill="rgb(251,132,46)" fg:x="48367" fg:w="42"/><text x="97.3978%" y="815.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (39 samples, 0.08%)</title><rect x="97.1539%" y="789" width="0.0783%" height="15" fill="rgb(231,77,14)" fg:x="48370" fg:w="39"/><text x="97.4039%" y="799.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (11 samples, 0.02%)</title><rect x="97.3105%" y="341" width="0.0221%" height="15" fill="rgb(240,135,9)" fg:x="48448" fg:w="11"/><text x="97.5605%" y="351.50"></text></g><g><title>core::fmt::write (8 samples, 0.02%)</title><rect x="97.3166%" y="325" width="0.0161%" height="15" fill="rgb(248,109,14)" fg:x="48451" fg:w="8"/><text x="97.5666%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (7 samples, 0.01%)</title><rect x="97.3186%" y="309" width="0.0141%" height="15" fill="rgb(227,146,52)" fg:x="48452" fg:w="7"/><text x="97.5686%" y="319.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="97.3407%" y="37" width="0.0121%" height="15" fill="rgb(232,54,3)" fg:x="48463" fg:w="6"/><text x="97.5907%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="97.3326%" y="229" width="0.0422%" height="15" fill="rgb(229,201,43)" fg:x="48459" fg:w="21"/><text x="97.5826%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="97.3326%" y="213" width="0.0422%" height="15" fill="rgb(252,161,33)" fg:x="48459" fg:w="21"/><text x="97.5826%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.04%)</title><rect x="97.3346%" y="197" width="0.0402%" height="15" fill="rgb(226,146,40)" fg:x="48460" fg:w="20"/><text x="97.5846%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.04%)</title><rect x="97.3346%" y="181" width="0.0402%" height="15" fill="rgb(219,47,25)" fg:x="48460" fg:w="20"/><text x="97.5846%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.04%)</title><rect x="97.3367%" y="165" width="0.0382%" height="15" fill="rgb(250,135,13)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.04%)</title><rect x="97.3367%" y="149" width="0.0382%" height="15" fill="rgb(219,229,18)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.04%)</title><rect x="97.3367%" y="133" width="0.0382%" height="15" fill="rgb(217,152,27)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="143.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.04%)</title><rect x="97.3367%" y="117" width="0.0382%" height="15" fill="rgb(225,71,47)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="127.50"></text></g><g><title>__rdl_realloc (19 samples, 0.04%)</title><rect x="97.3367%" y="101" width="0.0382%" height="15" fill="rgb(220,139,14)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (19 samples, 0.04%)</title><rect x="97.3367%" y="85" width="0.0382%" height="15" fill="rgb(247,54,32)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="95.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.04%)</title><rect x="97.3367%" y="69" width="0.0382%" height="15" fill="rgb(252,131,39)" fg:x="48461" fg:w="19"/><text x="97.5867%" y="79.50"></text></g><g><title>_int_realloc (18 samples, 0.04%)</title><rect x="97.3387%" y="53" width="0.0362%" height="15" fill="rgb(210,108,39)" fg:x="48462" fg:w="18"/><text x="97.5887%" y="63.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="97.3527%" y="37" width="0.0221%" height="15" fill="rgb(205,23,29)" fg:x="48469" fg:w="11"/><text x="97.6027%" y="47.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (39 samples, 0.08%)</title><rect x="97.2985%" y="405" width="0.0783%" height="15" fill="rgb(246,139,46)" fg:x="48442" fg:w="39"/><text x="97.5485%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (33 samples, 0.07%)</title><rect x="97.3105%" y="389" width="0.0663%" height="15" fill="rgb(250,81,26)" fg:x="48448" fg:w="33"/><text x="97.5605%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (33 samples, 0.07%)</title><rect x="97.3105%" y="373" width="0.0663%" height="15" fill="rgb(214,104,7)" fg:x="48448" fg:w="33"/><text x="97.5605%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (33 samples, 0.07%)</title><rect x="97.3105%" y="357" width="0.0663%" height="15" fill="rgb(233,189,8)" fg:x="48448" fg:w="33"/><text x="97.5605%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (22 samples, 0.04%)</title><rect x="97.3326%" y="341" width="0.0442%" height="15" fill="rgb(228,141,17)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.04%)</title><rect x="97.3326%" y="325" width="0.0442%" height="15" fill="rgb(247,157,1)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.04%)</title><rect x="97.3326%" y="309" width="0.0442%" height="15" fill="rgb(249,225,5)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="319.50"></text></g><g><title>alloc::string::String::push_str (22 samples, 0.04%)</title><rect x="97.3326%" y="293" width="0.0442%" height="15" fill="rgb(242,55,13)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.04%)</title><rect x="97.3326%" y="277" width="0.0442%" height="15" fill="rgb(230,49,50)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.04%)</title><rect x="97.3326%" y="261" width="0.0442%" height="15" fill="rgb(241,111,38)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.04%)</title><rect x="97.3326%" y="245" width="0.0442%" height="15" fill="rgb(252,155,4)" fg:x="48459" fg:w="22"/><text x="97.5826%" y="255.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (5 samples, 0.01%)</title><rect x="97.3788%" y="389" width="0.0100%" height="15" fill="rgb(212,69,32)" fg:x="48482" fg:w="5"/><text x="97.6288%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (52 samples, 0.10%)</title><rect x="97.2905%" y="549" width="0.1044%" height="15" fill="rgb(243,107,47)" fg:x="48438" fg:w="52"/><text x="97.5405%" y="559.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (51 samples, 0.10%)</title><rect x="97.2925%" y="533" width="0.1024%" height="15" fill="rgb(247,130,12)" fg:x="48439" fg:w="51"/><text x="97.5425%" y="543.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (51 samples, 0.10%)</title><rect x="97.2925%" y="517" width="0.1024%" height="15" fill="rgb(233,74,16)" fg:x="48439" fg:w="51"/><text x="97.5425%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (51 samples, 0.10%)</title><rect x="97.2925%" y="501" width="0.1024%" height="15" fill="rgb(208,58,18)" fg:x="48439" fg:w="51"/><text x="97.5425%" y="511.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (51 samples, 0.10%)</title><rect x="97.2925%" y="485" width="0.1024%" height="15" fill="rgb(242,225,1)" fg:x="48439" fg:w="51"/><text x="97.5425%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (51 samples, 0.10%)</title><rect x="97.2925%" y="469" width="0.1024%" height="15" fill="rgb(249,39,40)" fg:x="48439" fg:w="51"/><text x="97.5425%" y="479.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (48 samples, 0.10%)</title><rect x="97.2985%" y="453" width="0.0964%" height="15" fill="rgb(207,72,44)" fg:x="48442" fg:w="48"/><text x="97.5485%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (48 samples, 0.10%)</title><rect x="97.2985%" y="437" width="0.0964%" height="15" fill="rgb(215,193,12)" fg:x="48442" fg:w="48"/><text x="97.5485%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (48 samples, 0.10%)</title><rect x="97.2985%" y="421" width="0.0964%" height="15" fill="rgb(248,41,39)" fg:x="48442" fg:w="48"/><text x="97.5485%" y="431.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (8 samples, 0.02%)</title><rect x="97.3788%" y="405" width="0.0161%" height="15" fill="rgb(253,85,4)" fg:x="48482" fg:w="8"/><text x="97.6288%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="97.3969%" y="437" width="0.0100%" height="15" fill="rgb(243,70,31)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="97.3969%" y="421" width="0.0100%" height="15" fill="rgb(253,195,26)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="97.3969%" y="405" width="0.0100%" height="15" fill="rgb(243,42,11)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="97.3969%" y="389" width="0.0100%" height="15" fill="rgb(239,66,17)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="97.3969%" y="373" width="0.0100%" height="15" fill="rgb(217,132,21)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="97.3969%" y="357" width="0.0100%" height="15" fill="rgb(252,202,21)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="97.3969%" y="341" width="0.0100%" height="15" fill="rgb(233,98,36)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="351.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="97.3969%" y="325" width="0.0100%" height="15" fill="rgb(216,153,54)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="335.50"></text></g><g><title>__rdl_realloc (5 samples, 0.01%)</title><rect x="97.3969%" y="309" width="0.0100%" height="15" fill="rgb(250,99,7)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.01%)</title><rect x="97.3969%" y="293" width="0.0100%" height="15" fill="rgb(207,56,50)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="303.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.01%)</title><rect x="97.3969%" y="277" width="0.0100%" height="15" fill="rgb(244,61,34)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="287.50"></text></g><g><title>_int_realloc (5 samples, 0.01%)</title><rect x="97.3969%" y="261" width="0.0100%" height="15" fill="rgb(241,50,38)" fg:x="48491" fg:w="5"/><text x="97.6469%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (67 samples, 0.13%)</title><rect x="97.2744%" y="677" width="0.1346%" height="15" fill="rgb(212,166,30)" fg:x="48430" fg:w="67"/><text x="97.5244%" y="687.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (61 samples, 0.12%)</title><rect x="97.2864%" y="661" width="0.1225%" height="15" fill="rgb(249,127,32)" fg:x="48436" fg:w="61"/><text x="97.5364%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (61 samples, 0.12%)</title><rect x="97.2864%" y="645" width="0.1225%" height="15" fill="rgb(209,103,0)" fg:x="48436" fg:w="61"/><text x="97.5364%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (61 samples, 0.12%)</title><rect x="97.2864%" y="629" width="0.1225%" height="15" fill="rgb(238,209,51)" fg:x="48436" fg:w="61"/><text x="97.5364%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (61 samples, 0.12%)</title><rect x="97.2864%" y="613" width="0.1225%" height="15" fill="rgb(237,56,23)" fg:x="48436" fg:w="61"/><text x="97.5364%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (60 samples, 0.12%)</title><rect x="97.2884%" y="597" width="0.1205%" height="15" fill="rgb(215,153,46)" fg:x="48437" fg:w="60"/><text x="97.5384%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (60 samples, 0.12%)</title><rect x="97.2884%" y="581" width="0.1205%" height="15" fill="rgb(224,49,31)" fg:x="48437" fg:w="60"/><text x="97.5384%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (60 samples, 0.12%)</title><rect x="97.2884%" y="565" width="0.1205%" height="15" fill="rgb(250,18,42)" fg:x="48437" fg:w="60"/><text x="97.5384%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (7 samples, 0.01%)</title><rect x="97.3949%" y="549" width="0.0141%" height="15" fill="rgb(215,176,39)" fg:x="48490" fg:w="7"/><text x="97.6449%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="97.3969%" y="533" width="0.0121%" height="15" fill="rgb(223,77,29)" fg:x="48491" fg:w="6"/><text x="97.6469%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.01%)</title><rect x="97.3969%" y="517" width="0.0121%" height="15" fill="rgb(234,94,52)" fg:x="48491" fg:w="6"/><text x="97.6469%" y="527.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.01%)</title><rect x="97.3969%" y="501" width="0.0121%" height="15" fill="rgb(220,154,50)" fg:x="48491" fg:w="6"/><text x="97.6469%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.01%)</title><rect x="97.3969%" y="485" width="0.0121%" height="15" fill="rgb(212,11,10)" fg:x="48491" fg:w="6"/><text x="97.6469%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.01%)</title><rect x="97.3969%" y="469" width="0.0121%" height="15" fill="rgb(205,166,19)" fg:x="48491" fg:w="6"/><text x="97.6469%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.01%)</title><rect x="97.3969%" y="453" width="0.0121%" height="15" fill="rgb(244,198,16)" fg:x="48491" fg:w="6"/><text x="97.6469%" y="463.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.02%)</title><rect x="97.4110%" y="501" width="0.0161%" height="15" fill="rgb(219,69,12)" fg:x="48498" fg:w="8"/><text x="97.6610%" y="511.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="97.4130%" y="485" width="0.0141%" height="15" fill="rgb(245,30,7)" fg:x="48499" fg:w="7"/><text x="97.6630%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="97.4090%" y="581" width="0.0201%" height="15" fill="rgb(218,221,48)" fg:x="48497" fg:w="10"/><text x="97.6590%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="97.4090%" y="565" width="0.0201%" height="15" fill="rgb(216,66,15)" fg:x="48497" fg:w="10"/><text x="97.6590%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="97.4090%" y="549" width="0.0201%" height="15" fill="rgb(226,122,50)" fg:x="48497" fg:w="10"/><text x="97.6590%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.02%)</title><rect x="97.4090%" y="533" width="0.0201%" height="15" fill="rgb(239,156,16)" fg:x="48497" fg:w="10"/><text x="97.6590%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="97.4090%" y="517" width="0.0201%" height="15" fill="rgb(224,27,38)" fg:x="48497" fg:w="10"/><text x="97.6590%" y="527.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (80 samples, 0.16%)</title><rect x="97.2704%" y="709" width="0.1607%" height="15" fill="rgb(224,39,27)" fg:x="48428" fg:w="80"/><text x="97.5204%" y="719.50"></text></g><g><title>core::fmt::write (78 samples, 0.16%)</title><rect x="97.2744%" y="693" width="0.1567%" height="15" fill="rgb(215,92,29)" fg:x="48430" fg:w="78"/><text x="97.5244%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="97.4090%" y="677" width="0.0221%" height="15" fill="rgb(207,159,16)" fg:x="48497" fg:w="11"/><text x="97.6590%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="97.4090%" y="661" width="0.0221%" height="15" fill="rgb(238,163,47)" fg:x="48497" fg:w="11"/><text x="97.6590%" y="671.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.02%)</title><rect x="97.4090%" y="645" width="0.0221%" height="15" fill="rgb(219,91,49)" fg:x="48497" fg:w="11"/><text x="97.6590%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.02%)</title><rect x="97.4090%" y="629" width="0.0221%" height="15" fill="rgb(227,167,31)" fg:x="48497" fg:w="11"/><text x="97.6590%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="97.4090%" y="613" width="0.0221%" height="15" fill="rgb(234,80,54)" fg:x="48497" fg:w="11"/><text x="97.6590%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.02%)</title><rect x="97.4090%" y="597" width="0.0221%" height="15" fill="rgb(212,114,2)" fg:x="48497" fg:w="11"/><text x="97.6590%" y="607.50"></text></g><g><title>core::fmt::write (84 samples, 0.17%)</title><rect x="97.2684%" y="725" width="0.1687%" height="15" fill="rgb(234,50,24)" fg:x="48427" fg:w="84"/><text x="97.5184%" y="735.50"></text></g><g><title>datafusion_expr::expr_visitor::inspect_expr_pre (9 samples, 0.02%)</title><rect x="97.4371%" y="725" width="0.0181%" height="15" fill="rgb(221,68,8)" fg:x="48511" fg:w="9"/><text x="97.6871%" y="735.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (9 samples, 0.02%)</title><rect x="97.4371%" y="709" width="0.0181%" height="15" fill="rgb(254,180,31)" fg:x="48511" fg:w="9"/><text x="97.6871%" y="719.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (7 samples, 0.01%)</title><rect x="97.4411%" y="693" width="0.0141%" height="15" fill="rgb(247,130,50)" fg:x="48513" fg:w="7"/><text x="97.6911%" y="703.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="97.5074%" y="341" width="0.0221%" height="15" fill="rgb(211,109,4)" fg:x="48546" fg:w="11"/><text x="97.7574%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.04%)</title><rect x="97.4953%" y="629" width="0.0362%" height="15" fill="rgb(238,50,21)" fg:x="48540" fg:w="18"/><text x="97.7453%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.03%)</title><rect x="97.4973%" y="613" width="0.0341%" height="15" fill="rgb(225,57,45)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="623.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.03%)</title><rect x="97.4973%" y="597" width="0.0341%" height="15" fill="rgb(209,196,50)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.03%)</title><rect x="97.4973%" y="581" width="0.0341%" height="15" fill="rgb(242,140,13)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.03%)</title><rect x="97.4973%" y="565" width="0.0341%" height="15" fill="rgb(217,111,7)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.03%)</title><rect x="97.4973%" y="549" width="0.0341%" height="15" fill="rgb(253,193,51)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.03%)</title><rect x="97.4973%" y="533" width="0.0341%" height="15" fill="rgb(252,70,29)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.03%)</title><rect x="97.4973%" y="517" width="0.0341%" height="15" fill="rgb(232,127,12)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.03%)</title><rect x="97.4973%" y="501" width="0.0341%" height="15" fill="rgb(211,180,21)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.03%)</title><rect x="97.4973%" y="485" width="0.0341%" height="15" fill="rgb(229,72,13)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.03%)</title><rect x="97.4973%" y="469" width="0.0341%" height="15" fill="rgb(240,211,49)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.03%)</title><rect x="97.4973%" y="453" width="0.0341%" height="15" fill="rgb(219,149,40)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.03%)</title><rect x="97.4973%" y="437" width="0.0341%" height="15" fill="rgb(210,127,46)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="447.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.03%)</title><rect x="97.4973%" y="421" width="0.0341%" height="15" fill="rgb(220,106,7)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="431.50"></text></g><g><title>__rdl_realloc (17 samples, 0.03%)</title><rect x="97.4973%" y="405" width="0.0341%" height="15" fill="rgb(249,31,22)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (17 samples, 0.03%)</title><rect x="97.4973%" y="389" width="0.0341%" height="15" fill="rgb(253,1,49)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="399.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.03%)</title><rect x="97.4973%" y="373" width="0.0341%" height="15" fill="rgb(227,144,33)" fg:x="48541" fg:w="17"/><text x="97.7473%" y="383.50"></text></g><g><title>_int_realloc (14 samples, 0.03%)</title><rect x="97.5034%" y="357" width="0.0281%" height="15" fill="rgb(249,163,44)" fg:x="48544" fg:w="14"/><text x="97.7534%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (23 samples, 0.05%)</title><rect x="97.4893%" y="677" width="0.0462%" height="15" fill="rgb(234,15,39)" fg:x="48537" fg:w="23"/><text x="97.7393%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (21 samples, 0.04%)</title><rect x="97.4933%" y="661" width="0.0422%" height="15" fill="rgb(207,66,16)" fg:x="48539" fg:w="21"/><text x="97.7433%" y="671.50"></text></g><g><title>core::fmt::write (21 samples, 0.04%)</title><rect x="97.4933%" y="645" width="0.0422%" height="15" fill="rgb(233,112,24)" fg:x="48539" fg:w="21"/><text x="97.7433%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (6 samples, 0.01%)</title><rect x="97.5355%" y="677" width="0.0121%" height="15" fill="rgb(230,90,22)" fg:x="48560" fg:w="6"/><text x="97.7855%" y="687.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="97.5757%" y="373" width="0.0121%" height="15" fill="rgb(229,61,13)" fg:x="48580" fg:w="6"/><text x="97.8257%" y="383.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="97.5877%" y="373" width="0.0100%" height="15" fill="rgb(225,57,24)" fg:x="48586" fg:w="5"/><text x="97.8377%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.05%)</title><rect x="97.5536%" y="565" width="0.0482%" height="15" fill="rgb(208,169,48)" fg:x="48569" fg:w="24"/><text x="97.8036%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.05%)</title><rect x="97.5536%" y="549" width="0.0482%" height="15" fill="rgb(244,218,51)" fg:x="48569" fg:w="24"/><text x="97.8036%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.05%)</title><rect x="97.5556%" y="533" width="0.0462%" height="15" fill="rgb(214,148,10)" fg:x="48570" fg:w="23"/><text x="97.8056%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.05%)</title><rect x="97.5556%" y="517" width="0.0462%" height="15" fill="rgb(225,174,27)" fg:x="48570" fg:w="23"/><text x="97.8056%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.04%)</title><rect x="97.5576%" y="501" width="0.0442%" height="15" fill="rgb(230,96,26)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.04%)</title><rect x="97.5576%" y="485" width="0.0442%" height="15" fill="rgb(232,10,30)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.04%)</title><rect x="97.5576%" y="469" width="0.0442%" height="15" fill="rgb(222,8,50)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="479.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.04%)</title><rect x="97.5576%" y="453" width="0.0442%" height="15" fill="rgb(213,81,27)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="463.50"></text></g><g><title>__rdl_realloc (22 samples, 0.04%)</title><rect x="97.5576%" y="437" width="0.0442%" height="15" fill="rgb(245,50,10)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (22 samples, 0.04%)</title><rect x="97.5576%" y="421" width="0.0442%" height="15" fill="rgb(216,100,18)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="431.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.04%)</title><rect x="97.5576%" y="405" width="0.0442%" height="15" fill="rgb(236,147,54)" fg:x="48571" fg:w="22"/><text x="97.8076%" y="415.50"></text></g><g><title>_int_realloc (18 samples, 0.04%)</title><rect x="97.5656%" y="389" width="0.0362%" height="15" fill="rgb(205,143,26)" fg:x="48575" fg:w="18"/><text x="97.8156%" y="399.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (69 samples, 0.14%)</title><rect x="97.4652%" y="693" width="0.1386%" height="15" fill="rgb(236,26,9)" fg:x="48525" fg:w="69"/><text x="97.7152%" y="703.50"></text></g><g><title>core::fmt::write (28 samples, 0.06%)</title><rect x="97.5476%" y="677" width="0.0562%" height="15" fill="rgb(221,165,53)" fg:x="48566" fg:w="28"/><text x="97.7976%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.05%)</title><rect x="97.5516%" y="661" width="0.0522%" height="15" fill="rgb(214,110,17)" fg:x="48568" fg:w="26"/><text x="97.8016%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.05%)</title><rect x="97.5516%" y="645" width="0.0522%" height="15" fill="rgb(237,197,12)" fg:x="48568" fg:w="26"/><text x="97.8016%" y="655.50"></text></g><g><title>alloc::string::String::push_str (26 samples, 0.05%)</title><rect x="97.5516%" y="629" width="0.0522%" height="15" fill="rgb(205,84,17)" fg:x="48568" fg:w="26"/><text x="97.8016%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.05%)</title><rect x="97.5516%" y="613" width="0.0522%" height="15" fill="rgb(237,18,45)" fg:x="48568" fg:w="26"/><text x="97.8016%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.05%)</title><rect x="97.5516%" y="597" width="0.0522%" height="15" fill="rgb(221,87,14)" fg:x="48568" fg:w="26"/><text x="97.8016%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.05%)</title><rect x="97.5516%" y="581" width="0.0522%" height="15" fill="rgb(238,186,15)" fg:x="48568" fg:w="26"/><text x="97.8016%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (179 samples, 0.36%)</title><rect x="97.2503%" y="805" width="0.3595%" height="15" fill="rgb(208,115,11)" fg:x="48418" fg:w="179"/><text x="97.5003%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (175 samples, 0.35%)</title><rect x="97.2583%" y="789" width="0.3515%" height="15" fill="rgb(254,175,0)" fg:x="48422" fg:w="175"/><text x="97.5083%" y="799.50"></text></g><g><title>core::fmt::write (174 samples, 0.35%)</title><rect x="97.2603%" y="773" width="0.3495%" height="15" fill="rgb(227,24,42)" fg:x="48423" fg:w="174"/><text x="97.5103%" y="783.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (174 samples, 0.35%)</title><rect x="97.2603%" y="757" width="0.3495%" height="15" fill="rgb(223,211,37)" fg:x="48423" fg:w="174"/><text x="97.5103%" y="767.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (174 samples, 0.35%)</title><rect x="97.2603%" y="741" width="0.3495%" height="15" fill="rgb(235,49,27)" fg:x="48423" fg:w="174"/><text x="97.5103%" y="751.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (77 samples, 0.15%)</title><rect x="97.4552%" y="725" width="0.1547%" height="15" fill="rgb(254,97,51)" fg:x="48520" fg:w="77"/><text x="97.7052%" y="735.50"></text></g><g><title>core::fmt::write (75 samples, 0.15%)</title><rect x="97.4592%" y="709" width="0.1506%" height="15" fill="rgb(249,51,40)" fg:x="48522" fg:w="75"/><text x="97.7092%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (5 samples, 0.01%)</title><rect x="97.6098%" y="805" width="0.0100%" height="15" fill="rgb(210,128,45)" fg:x="48597" fg:w="5"/><text x="97.8598%" y="815.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (5 samples, 0.01%)</title><rect x="97.6199%" y="805" width="0.0100%" height="15" fill="rgb(224,137,50)" fg:x="48602" fg:w="5"/><text x="97.8699%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="97.6199%" y="789" width="0.0100%" height="15" fill="rgb(242,15,9)" fg:x="48602" fg:w="5"/><text x="97.8699%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="97.6741%" y="741" width="0.0201%" height="15" fill="rgb(233,187,41)" fg:x="48629" fg:w="10"/><text x="97.9241%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (19 samples, 0.04%)</title><rect x="97.6661%" y="773" width="0.0382%" height="15" fill="rgb(227,2,29)" fg:x="48625" fg:w="19"/><text x="97.9161%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.04%)</title><rect x="97.6661%" y="757" width="0.0382%" height="15" fill="rgb(222,70,3)" fg:x="48625" fg:w="19"/><text x="97.9161%" y="767.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.02%)</title><rect x="97.7364%" y="741" width="0.0181%" height="15" fill="rgb(213,11,42)" fg:x="48660" fg:w="9"/><text x="97.9864%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (32 samples, 0.06%)</title><rect x="97.7042%" y="773" width="0.0643%" height="15" fill="rgb(225,150,9)" fg:x="48644" fg:w="32"/><text x="97.9542%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (22 samples, 0.04%)</title><rect x="97.7243%" y="757" width="0.0442%" height="15" fill="rgb(230,162,45)" fg:x="48654" fg:w="22"/><text x="97.9743%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (6 samples, 0.01%)</title><rect x="97.7564%" y="741" width="0.0121%" height="15" fill="rgb(222,14,52)" fg:x="48670" fg:w="6"/><text x="98.0064%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="97.7765%" y="741" width="0.0161%" height="15" fill="rgb(254,198,14)" fg:x="48680" fg:w="8"/><text x="98.0265%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.13%)</title><rect x="97.7745%" y="757" width="0.1265%" height="15" fill="rgb(220,217,30)" fg:x="48679" fg:w="63"/><text x="98.0245%" y="767.50"></text></g><g><title>__GI___libc_malloc (52 samples, 0.10%)</title><rect x="97.7966%" y="741" width="0.1044%" height="15" fill="rgb(215,146,41)" fg:x="48690" fg:w="52"/><text x="98.0466%" y="751.50"></text></g><g><title>_int_malloc (38 samples, 0.08%)</title><rect x="97.8247%" y="725" width="0.0763%" height="15" fill="rgb(217,27,36)" fg:x="48704" fg:w="38"/><text x="98.0747%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="709" width="0.0100%" height="15" fill="rgb(219,218,39)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="693" width="0.0100%" height="15" fill="rgb(219,4,42)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="677" width="0.0100%" height="15" fill="rgb(249,119,36)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="661" width="0.0100%" height="15" fill="rgb(209,23,33)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="645" width="0.0100%" height="15" fill="rgb(211,10,0)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="629" width="0.0100%" height="15" fill="rgb(208,99,37)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="613" width="0.0100%" height="15" fill="rgb(213,132,31)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="597" width="0.0100%" height="15" fill="rgb(243,129,40)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="581" width="0.0100%" height="15" fill="rgb(210,66,33)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="565" width="0.0100%" height="15" fill="rgb(209,189,4)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.01%)</title><rect x="97.8910%" y="549" width="0.0100%" height="15" fill="rgb(214,107,37)" fg:x="48737" fg:w="5"/><text x="98.1410%" y="559.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="97.9011%" y="757" width="0.0141%" height="15" fill="rgb(245,88,54)" fg:x="48742" fg:w="7"/><text x="98.1511%" y="767.50"></text></g><g><title>_int_free (14 samples, 0.03%)</title><rect x="97.9151%" y="757" width="0.0281%" height="15" fill="rgb(205,146,20)" fg:x="48749" fg:w="14"/><text x="98.1651%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="97.9473%" y="741" width="0.0121%" height="15" fill="rgb(220,161,25)" fg:x="48765" fg:w="6"/><text x="98.1973%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (9 samples, 0.02%)</title><rect x="97.9452%" y="757" width="0.0181%" height="15" fill="rgb(215,152,15)" fg:x="48764" fg:w="9"/><text x="98.1952%" y="767.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.03%)</title><rect x="97.9754%" y="725" width="0.0321%" height="15" fill="rgb(233,192,44)" fg:x="48779" fg:w="16"/><text x="98.2254%" y="735.50"></text></g><g><title>_int_malloc (13 samples, 0.03%)</title><rect x="97.9814%" y="709" width="0.0261%" height="15" fill="rgb(240,170,46)" fg:x="48782" fg:w="13"/><text x="98.2314%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.04%)</title><rect x="97.9714%" y="741" width="0.0382%" height="15" fill="rgb(207,104,33)" fg:x="48777" fg:w="19"/><text x="98.2214%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (33 samples, 0.07%)</title><rect x="97.9633%" y="757" width="0.0663%" height="15" fill="rgb(219,21,39)" fg:x="48773" fg:w="33"/><text x="98.2133%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (9 samples, 0.02%)</title><rect x="98.0115%" y="741" width="0.0181%" height="15" fill="rgb(214,133,29)" fg:x="48797" fg:w="9"/><text x="98.2615%" y="751.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (198 samples, 0.40%)</title><rect x="97.6379%" y="789" width="0.3977%" height="15" fill="rgb(226,93,6)" fg:x="48611" fg:w="198"/><text x="97.8879%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (133 samples, 0.27%)</title><rect x="97.7685%" y="773" width="0.2671%" height="15" fill="rgb(252,222,34)" fg:x="48676" fg:w="133"/><text x="98.0185%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="725" width="0.0181%" height="15" fill="rgb(252,92,48)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="709" width="0.0181%" height="15" fill="rgb(245,223,24)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="693" width="0.0181%" height="15" fill="rgb(205,176,3)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="677" width="0.0181%" height="15" fill="rgb(235,151,15)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="661" width="0.0181%" height="15" fill="rgb(237,209,11)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="645" width="0.0181%" height="15" fill="rgb(243,227,24)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="629" width="0.0181%" height="15" fill="rgb(239,193,16)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="98.6764%" y="613" width="0.0181%" height="15" fill="rgb(231,27,9)" fg:x="49128" fg:w="9"/><text x="98.9264%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="98.6804%" y="597" width="0.0141%" height="15" fill="rgb(219,169,10)" fg:x="49130" fg:w="7"/><text x="98.9304%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="98.6804%" y="581" width="0.0141%" height="15" fill="rgb(244,229,43)" fg:x="49130" fg:w="7"/><text x="98.9304%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="98.6804%" y="565" width="0.0141%" height="15" fill="rgb(254,38,20)" fg:x="49130" fg:w="7"/><text x="98.9304%" y="575.50"></text></g><g><title>malloc_consolidate (205 samples, 0.41%)</title><rect x="98.3911%" y="741" width="0.4118%" height="15" fill="rgb(250,47,30)" fg:x="48986" fg:w="205"/><text x="98.6411%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (54 samples, 0.11%)</title><rect x="98.6944%" y="725" width="0.1085%" height="15" fill="rgb(224,124,36)" fg:x="49137" fg:w="54"/><text x="98.9444%" y="735.50"></text></g><g><title>__GI___libc_malloc (377 samples, 0.76%)</title><rect x="98.0537%" y="773" width="0.7572%" height="15" fill="rgb(246,68,51)" fg:x="48818" fg:w="377"/><text x="98.3037%" y="783.50"></text></g><g><title>_int_malloc (376 samples, 0.76%)</title><rect x="98.0557%" y="757" width="0.7552%" height="15" fill="rgb(253,43,49)" fg:x="48819" fg:w="376"/><text x="98.3057%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="98.8109%" y="773" width="0.0121%" height="15" fill="rgb(219,54,36)" fg:x="49195" fg:w="6"/><text x="99.0609%" y="783.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (845 samples, 1.70%)</title><rect x="97.1338%" y="821" width="1.6972%" height="15" fill="rgb(227,133,34)" fg:x="48360" fg:w="845"/><text x="97.3838%" y="831.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (598 samples, 1.20%)</title><rect x="97.6299%" y="805" width="1.2011%" height="15" fill="rgb(247,227,15)" fg:x="48607" fg:w="598"/><text x="97.8799%" y="815.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (393 samples, 0.79%)</title><rect x="98.0417%" y="789" width="0.7894%" height="15" fill="rgb(229,96,14)" fg:x="48812" fg:w="393"/><text x="98.2917%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="98.8672%" y="789" width="0.0100%" height="15" fill="rgb(220,79,17)" fg:x="49223" fg:w="5"/><text x="99.1172%" y="799.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (27 samples, 0.05%)</title><rect x="98.8310%" y="805" width="0.0542%" height="15" fill="rgb(205,131,53)" fg:x="49205" fg:w="27"/><text x="99.0810%" y="815.50"></text></g><g><title>datafusion::physical_plan::execute_stream (42 samples, 0.08%)</title><rect x="98.8310%" y="821" width="0.0844%" height="15" fill="rgb(209,50,29)" fg:x="49205" fg:w="42"/><text x="99.0810%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.03%)</title><rect x="98.8893%" y="805" width="0.0261%" height="15" fill="rgb(245,86,46)" fg:x="49234" fg:w="13"/><text x="99.1393%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (13 samples, 0.03%)</title><rect x="98.8893%" y="789" width="0.0261%" height="15" fill="rgb(235,66,46)" fg:x="49234" fg:w="13"/><text x="99.1393%" y="799.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (9 samples, 0.02%)</title><rect x="98.9154%" y="821" width="0.0181%" height="15" fill="rgb(232,148,31)" fg:x="49247" fg:w="9"/><text x="99.1654%" y="831.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new_with_predicate (5 samples, 0.01%)</title><rect x="98.9234%" y="805" width="0.0100%" height="15" fill="rgb(217,149,8)" fg:x="49251" fg:w="5"/><text x="99.1734%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="99.0600%" y="805" width="0.0161%" height="15" fill="rgb(209,183,11)" fg:x="49319" fg:w="8"/><text x="99.3100%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="99.0600%" y="789" width="0.0161%" height="15" fill="rgb(208,55,20)" fg:x="49319" fg:w="8"/><text x="99.3100%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="99.0600%" y="773" width="0.0161%" height="15" fill="rgb(218,39,14)" fg:x="49319" fg:w="8"/><text x="99.3100%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="99.0600%" y="757" width="0.0161%" height="15" fill="rgb(216,169,33)" fg:x="49319" fg:w="8"/><text x="99.3100%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="99.0600%" y="741" width="0.0161%" height="15" fill="rgb(233,80,24)" fg:x="49319" fg:w="8"/><text x="99.3100%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.02%)</title><rect x="99.0600%" y="725" width="0.0161%" height="15" fill="rgb(213,179,31)" fg:x="49319" fg:w="8"/><text x="99.3100%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="99.0620%" y="709" width="0.0141%" height="15" fill="rgb(209,19,5)" fg:x="49320" fg:w="7"/><text x="99.3120%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="99.0620%" y="693" width="0.0141%" height="15" fill="rgb(219,18,35)" fg:x="49320" fg:w="7"/><text x="99.3120%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="99.0620%" y="677" width="0.0141%" height="15" fill="rgb(209,169,16)" fg:x="49320" fg:w="7"/><text x="99.3120%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="99.0620%" y="661" width="0.0141%" height="15" fill="rgb(245,90,51)" fg:x="49320" fg:w="7"/><text x="99.3120%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="99.0620%" y="645" width="0.0141%" height="15" fill="rgb(220,99,45)" fg:x="49320" fg:w="7"/><text x="99.3120%" y="655.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.04%)</title><rect x="99.0761%" y="805" width="0.0442%" height="15" fill="rgb(249,89,25)" fg:x="49327" fg:w="22"/><text x="99.3261%" y="815.50"></text></g><g><title>_int_malloc (17 samples, 0.03%)</title><rect x="99.0861%" y="789" width="0.0341%" height="15" fill="rgb(239,193,0)" fg:x="49332" fg:w="17"/><text x="99.3361%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="99.1504%" y="789" width="0.0141%" height="15" fill="rgb(231,126,1)" fg:x="49364" fg:w="7"/><text x="99.4004%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="99.1544%" y="773" width="0.0100%" height="15" fill="rgb(243,166,3)" fg:x="49366" fg:w="5"/><text x="99.4044%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (11 samples, 0.02%)</title><rect x="99.1785%" y="773" width="0.0221%" height="15" fill="rgb(223,22,34)" fg:x="49378" fg:w="11"/><text x="99.4285%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.02%)</title><rect x="99.1825%" y="757" width="0.0181%" height="15" fill="rgb(251,52,51)" fg:x="49380" fg:w="9"/><text x="99.4325%" y="767.50"></text></g><g><title>core::fmt::write (7 samples, 0.01%)</title><rect x="99.1865%" y="741" width="0.0141%" height="15" fill="rgb(221,165,28)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="99.1865%" y="725" width="0.0141%" height="15" fill="rgb(218,121,47)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="99.1865%" y="709" width="0.0141%" height="15" fill="rgb(209,120,9)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="719.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.01%)</title><rect x="99.1865%" y="693" width="0.0141%" height="15" fill="rgb(236,68,12)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="99.1865%" y="677" width="0.0141%" height="15" fill="rgb(225,194,26)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="99.1865%" y="661" width="0.0141%" height="15" fill="rgb(231,84,39)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.01%)</title><rect x="99.1865%" y="645" width="0.0141%" height="15" fill="rgb(210,11,45)" fg:x="49382" fg:w="7"/><text x="99.4365%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="99.1885%" y="629" width="0.0121%" height="15" fill="rgb(224,54,52)" fg:x="49383" fg:w="6"/><text x="99.4385%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="99.1885%" y="613" width="0.0121%" height="15" fill="rgb(238,102,14)" fg:x="49383" fg:w="6"/><text x="99.4385%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.02%)</title><rect x="99.2147%" y="533" width="0.0181%" height="15" fill="rgb(243,160,52)" fg:x="49396" fg:w="9"/><text x="99.4647%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.02%)</title><rect x="99.2147%" y="517" width="0.0181%" height="15" fill="rgb(216,114,19)" fg:x="49396" fg:w="9"/><text x="99.4647%" y="527.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.02%)</title><rect x="99.2147%" y="501" width="0.0181%" height="15" fill="rgb(244,166,37)" fg:x="49396" fg:w="9"/><text x="99.4647%" y="511.50"></text></g><g><title>__rdl_realloc (9 samples, 0.02%)</title><rect x="99.2147%" y="485" width="0.0181%" height="15" fill="rgb(246,29,44)" fg:x="49396" fg:w="9"/><text x="99.4647%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9 samples, 0.02%)</title><rect x="99.2147%" y="469" width="0.0181%" height="15" fill="rgb(215,56,53)" fg:x="49396" fg:w="9"/><text x="99.4647%" y="479.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.02%)</title><rect x="99.2147%" y="453" width="0.0181%" height="15" fill="rgb(217,60,2)" fg:x="49396" fg:w="9"/><text x="99.4647%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="99.2147%" y="549" width="0.0201%" height="15" fill="rgb(207,26,24)" fg:x="49396" fg:w="10"/><text x="99.4647%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="99.2126%" y="613" width="0.0241%" height="15" fill="rgb(252,210,15)" fg:x="49395" fg:w="12"/><text x="99.4626%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.02%)</title><rect x="99.2126%" y="597" width="0.0241%" height="15" fill="rgb(253,209,26)" fg:x="49395" fg:w="12"/><text x="99.4626%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="99.2126%" y="581" width="0.0241%" height="15" fill="rgb(238,170,14)" fg:x="49395" fg:w="12"/><text x="99.4626%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.02%)</title><rect x="99.2126%" y="565" width="0.0241%" height="15" fill="rgb(216,178,15)" fg:x="49395" fg:w="12"/><text x="99.4626%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="99.2126%" y="709" width="0.0321%" height="15" fill="rgb(250,197,2)" fg:x="49395" fg:w="16"/><text x="99.4626%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="99.2126%" y="693" width="0.0321%" height="15" fill="rgb(212,70,42)" fg:x="49395" fg:w="16"/><text x="99.4626%" y="703.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.03%)</title><rect x="99.2126%" y="677" width="0.0321%" height="15" fill="rgb(227,213,9)" fg:x="49395" fg:w="16"/><text x="99.4626%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.03%)</title><rect x="99.2126%" y="661" width="0.0321%" height="15" fill="rgb(245,99,25)" fg:x="49395" fg:w="16"/><text x="99.4626%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.03%)</title><rect x="99.2126%" y="645" width="0.0321%" height="15" fill="rgb(250,82,29)" fg:x="49395" fg:w="16"/><text x="99.4626%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.03%)</title><rect x="99.2126%" y="629" width="0.0321%" height="15" fill="rgb(241,226,54)" fg:x="49395" fg:w="16"/><text x="99.4626%" y="639.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (43 samples, 0.09%)</title><rect x="99.1644%" y="789" width="0.0864%" height="15" fill="rgb(221,99,41)" fg:x="49371" fg:w="43"/><text x="99.4144%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (25 samples, 0.05%)</title><rect x="99.2006%" y="773" width="0.0502%" height="15" fill="rgb(213,90,21)" fg:x="49389" fg:w="25"/><text x="99.4506%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (21 samples, 0.04%)</title><rect x="99.2086%" y="757" width="0.0422%" height="15" fill="rgb(205,208,24)" fg:x="49393" fg:w="21"/><text x="99.4586%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (20 samples, 0.04%)</title><rect x="99.2106%" y="741" width="0.0402%" height="15" fill="rgb(246,31,12)" fg:x="49394" fg:w="20"/><text x="99.4606%" y="751.50"></text></g><g><title>core::fmt::write (19 samples, 0.04%)</title><rect x="99.2126%" y="725" width="0.0382%" height="15" fill="rgb(213,154,6)" fg:x="49395" fg:w="19"/><text x="99.4626%" y="735.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (161 samples, 0.32%)</title><rect x="98.9335%" y="821" width="0.3234%" height="15" fill="rgb(222,163,29)" fg:x="49256" fg:w="161"/><text x="99.1835%" y="831.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (61 samples, 0.12%)</title><rect x="99.1343%" y="805" width="0.1225%" height="15" fill="rgb(227,201,8)" fg:x="49356" fg:w="61"/><text x="99.3843%" y="815.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.01%)</title><rect x="99.2649%" y="805" width="0.0100%" height="15" fill="rgb(233,9,32)" fg:x="49421" fg:w="5"/><text x="99.5149%" y="815.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (13 samples, 0.03%)</title><rect x="99.2568%" y="821" width="0.0261%" height="15" fill="rgb(217,54,24)" fg:x="49417" fg:w="13"/><text x="99.5068%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="99.2930%" y="789" width="0.0100%" height="15" fill="rgb(235,192,0)" fg:x="49435" fg:w="5"/><text x="99.5430%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="99.2930%" y="773" width="0.0100%" height="15" fill="rgb(235,45,9)" fg:x="49435" fg:w="5"/><text x="99.5430%" y="783.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.01%)</title><rect x="99.2930%" y="757" width="0.0100%" height="15" fill="rgb(246,42,40)" fg:x="49435" fg:w="5"/><text x="99.5430%" y="767.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (12 samples, 0.02%)</title><rect x="99.2829%" y="821" width="0.0241%" height="15" fill="rgb(248,111,24)" fg:x="49430" fg:w="12"/><text x="99.5329%" y="831.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (7 samples, 0.01%)</title><rect x="99.2930%" y="805" width="0.0141%" height="15" fill="rgb(249,65,22)" fg:x="49435" fg:w="7"/><text x="99.5430%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.01%)</title><rect x="99.3814%" y="757" width="0.0100%" height="15" fill="rgb(238,111,51)" fg:x="49479" fg:w="5"/><text x="99.6314%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.02%)</title><rect x="99.3914%" y="757" width="0.0241%" height="15" fill="rgb(250,118,22)" fg:x="49484" fg:w="12"/><text x="99.6414%" y="767.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="99.3934%" y="741" width="0.0221%" height="15" fill="rgb(234,84,26)" fg:x="49485" fg:w="11"/><text x="99.6434%" y="751.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="99.4055%" y="725" width="0.0100%" height="15" fill="rgb(243,172,12)" fg:x="49491" fg:w="5"/><text x="99.6555%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (9 samples, 0.02%)</title><rect x="99.4155%" y="757" width="0.0181%" height="15" fill="rgb(236,150,49)" fg:x="49496" fg:w="9"/><text x="99.6655%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (29 samples, 0.06%)</title><rect x="99.4336%" y="757" width="0.0582%" height="15" fill="rgb(225,197,26)" fg:x="49505" fg:w="29"/><text x="99.6836%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="99.4738%" y="741" width="0.0181%" height="15" fill="rgb(214,17,42)" fg:x="49525" fg:w="9"/><text x="99.7238%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="99.5019%" y="741" width="0.0121%" height="15" fill="rgb(224,165,40)" fg:x="49539" fg:w="6"/><text x="99.7519%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="99.5039%" y="725" width="0.0100%" height="15" fill="rgb(246,100,4)" fg:x="49540" fg:w="5"/><text x="99.7539%" y="735.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (106 samples, 0.21%)</title><rect x="99.3070%" y="805" width="0.2129%" height="15" fill="rgb(222,103,0)" fg:x="49442" fg:w="106"/><text x="99.5570%" y="815.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (97 samples, 0.19%)</title><rect x="99.3251%" y="789" width="0.1948%" height="15" fill="rgb(227,189,26)" fg:x="49451" fg:w="97"/><text x="99.5751%" y="799.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (84 samples, 0.17%)</title><rect x="99.3512%" y="773" width="0.1687%" height="15" fill="rgb(214,202,17)" fg:x="49464" fg:w="84"/><text x="99.6012%" y="783.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (14 samples, 0.03%)</title><rect x="99.4918%" y="757" width="0.0281%" height="15" fill="rgb(229,111,3)" fg:x="49534" fg:w="14"/><text x="99.7418%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="99.5200%" y="805" width="0.0261%" height="15" fill="rgb(229,172,15)" fg:x="49548" fg:w="13"/><text x="99.7700%" y="815.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (127 samples, 0.26%)</title><rect x="99.3070%" y="821" width="0.2551%" height="15" fill="rgb(230,224,35)" fg:x="49442" fg:w="127"/><text x="99.5570%" y="831.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (8 samples, 0.02%)</title><rect x="99.5461%" y="805" width="0.0161%" height="15" fill="rgb(251,141,6)" fg:x="49561" fg:w="8"/><text x="99.7961%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (89 samples, 0.18%)</title><rect x="99.5702%" y="565" width="0.1788%" height="15" fill="rgb(225,208,6)" fg:x="49573" fg:w="89"/><text x="99.8202%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (85 samples, 0.17%)</title><rect x="99.5782%" y="549" width="0.1707%" height="15" fill="rgb(246,181,16)" fg:x="49577" fg:w="85"/><text x="99.8282%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (81 samples, 0.16%)</title><rect x="99.5862%" y="533" width="0.1627%" height="15" fill="rgb(227,129,36)" fg:x="49581" fg:w="81"/><text x="99.8362%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (80 samples, 0.16%)</title><rect x="99.5882%" y="517" width="0.1607%" height="15" fill="rgb(248,117,24)" fg:x="49582" fg:w="80"/><text x="99.8382%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (80 samples, 0.16%)</title><rect x="99.5882%" y="501" width="0.1607%" height="15" fill="rgb(214,185,35)" fg:x="49582" fg:w="80"/><text x="99.8382%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (77 samples, 0.15%)</title><rect x="99.5943%" y="485" width="0.1547%" height="15" fill="rgb(236,150,34)" fg:x="49585" fg:w="77"/><text x="99.8443%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (72 samples, 0.14%)</title><rect x="99.6043%" y="469" width="0.1446%" height="15" fill="rgb(243,228,27)" fg:x="49590" fg:w="72"/><text x="99.8543%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (61 samples, 0.12%)</title><rect x="99.6264%" y="453" width="0.1225%" height="15" fill="rgb(245,77,44)" fg:x="49601" fg:w="61"/><text x="99.8764%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (57 samples, 0.11%)</title><rect x="99.6344%" y="437" width="0.1145%" height="15" fill="rgb(235,214,42)" fg:x="49605" fg:w="57"/><text x="99.8844%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (57 samples, 0.11%)</title><rect x="99.6344%" y="421" width="0.1145%" height="15" fill="rgb(221,74,3)" fg:x="49605" fg:w="57"/><text x="99.8844%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (45 samples, 0.09%)</title><rect x="99.6585%" y="405" width="0.0904%" height="15" fill="rgb(206,121,29)" fg:x="49617" fg:w="45"/><text x="99.9085%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="99.6606%" y="389" width="0.0884%" height="15" fill="rgb(249,131,53)" fg:x="49618" fg:w="44"/><text x="99.9106%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.09%)</title><rect x="99.6606%" y="373" width="0.0884%" height="15" fill="rgb(236,170,29)" fg:x="49618" fg:w="44"/><text x="99.9106%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (33 samples, 0.07%)</title><rect x="99.6826%" y="357" width="0.0663%" height="15" fill="rgb(247,96,15)" fg:x="49629" fg:w="33"/><text x="99.9326%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.05%)</title><rect x="99.7007%" y="341" width="0.0482%" height="15" fill="rgb(211,210,7)" fg:x="49638" fg:w="24"/><text x="99.9507%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.04%)</title><rect x="99.7088%" y="325" width="0.0402%" height="15" fill="rgb(240,88,50)" fg:x="49642" fg:w="20"/><text x="99.9588%" y="335.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (93 samples, 0.19%)</title><rect x="99.5682%" y="661" width="0.1868%" height="15" fill="rgb(209,229,26)" fg:x="49572" fg:w="93"/><text x="99.8182%" y="671.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (93 samples, 0.19%)</title><rect x="99.5682%" y="645" width="0.1868%" height="15" fill="rgb(210,68,23)" fg:x="49572" fg:w="93"/><text x="99.8182%" y="655.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (93 samples, 0.19%)</title><rect x="99.5682%" y="629" width="0.1868%" height="15" fill="rgb(229,180,13)" fg:x="49572" fg:w="93"/><text x="99.8182%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (93 samples, 0.19%)</title><rect x="99.5682%" y="613" width="0.1868%" height="15" fill="rgb(236,53,44)" fg:x="49572" fg:w="93"/><text x="99.8182%" y="623.50"></text></g><g><title>__libc_write (93 samples, 0.19%)</title><rect x="99.5682%" y="597" width="0.1868%" height="15" fill="rgb(244,214,29)" fg:x="49572" fg:w="93"/><text x="99.8182%" y="607.50"></text></g><g><title>__libc_write (93 samples, 0.19%)</title><rect x="99.5682%" y="581" width="0.1868%" height="15" fill="rgb(220,75,29)" fg:x="49572" fg:w="93"/><text x="99.8182%" y="591.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (97 samples, 0.19%)</title><rect x="99.5641%" y="725" width="0.1948%" height="15" fill="rgb(214,183,37)" fg:x="49570" fg:w="97"/><text x="99.8141%" y="735.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (97 samples, 0.19%)</title><rect x="99.5641%" y="709" width="0.1948%" height="15" fill="rgb(239,117,29)" fg:x="49570" fg:w="97"/><text x="99.8141%" y="719.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (97 samples, 0.19%)</title><rect x="99.5641%" y="693" width="0.1948%" height="15" fill="rgb(237,171,35)" fg:x="49570" fg:w="97"/><text x="99.8141%" y="703.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (97 samples, 0.19%)</title><rect x="99.5641%" y="677" width="0.1948%" height="15" fill="rgb(229,178,53)" fg:x="49570" fg:w="97"/><text x="99.8141%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (102 samples, 0.20%)</title><rect x="99.5621%" y="757" width="0.2049%" height="15" fill="rgb(210,102,19)" fg:x="49569" fg:w="102"/><text x="99.8121%" y="767.50"></text></g><g><title>core::fmt::write (101 samples, 0.20%)</title><rect x="99.5641%" y="741" width="0.2029%" height="15" fill="rgb(235,127,22)" fg:x="49570" fg:w="101"/><text x="99.8141%" y="751.50"></text></g><g><title>std::io::stdio::_print (103 samples, 0.21%)</title><rect x="99.5621%" y="821" width="0.2069%" height="15" fill="rgb(244,31,31)" fg:x="49569" fg:w="103"/><text x="99.8121%" y="831.50"></text></g><g><title>std::io::stdio::print_to (103 samples, 0.21%)</title><rect x="99.5621%" y="805" width="0.2069%" height="15" fill="rgb(231,43,21)" fg:x="49569" fg:w="103"/><text x="99.8121%" y="815.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (103 samples, 0.21%)</title><rect x="99.5621%" y="789" width="0.2069%" height="15" fill="rgb(217,131,35)" fg:x="49569" fg:w="103"/><text x="99.8121%" y="799.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (103 samples, 0.21%)</title><rect x="99.5621%" y="773" width="0.2069%" height="15" fill="rgb(221,149,4)" fg:x="49569" fg:w="103"/><text x="99.8121%" y="783.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (17,746 samples, 35.64%)</title><rect x="64.1292%" y="869" width="35.6438%" height="15" fill="rgb(232,170,28)" fg:x="31928" fg:w="17746"/><text x="64.3792%" y="879.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>do_query::main::{{closure}} (17,746 samples, 35.64%)</title><rect x="64.1292%" y="853" width="35.6438%" height="15" fill="rgb(238,56,10)" fg:x="31928" fg:w="17746"/><text x="64.3792%" y="863.50">do_query::main::{{closure}}</text></g><g><title>do_query::main_inner::{{closure}} (17,746 samples, 35.64%)</title><rect x="64.1292%" y="837" width="35.6438%" height="15" fill="rgb(235,196,14)" fg:x="31928" fg:w="17746"/><text x="64.3792%" y="847.50">do_query::main_inner::{{closure}}</text></g><g><title>[unknown] (46,448 samples, 93.29%)</title><rect x="6.5077%" y="885" width="93.2934%" height="15" fill="rgb(216,45,48)" fg:x="3240" fg:w="46448"/><text x="6.7577%" y="895.50">[unknown]</text></g><g><title>unlink_chunk.isra.0 (14 samples, 0.03%)</title><rect x="99.7730%" y="869" width="0.0281%" height="15" fill="rgb(238,213,17)" fg:x="49674" fg:w="14"/><text x="100.0230%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="99.8092%" y="885" width="0.0141%" height="15" fill="rgb(212,13,2)" fg:x="49692" fg:w="7"/><text x="100.0592%" y="895.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="99.8232%" y="885" width="0.0241%" height="15" fill="rgb(240,114,20)" fg:x="49699" fg:w="12"/><text x="100.0732%" y="895.50"></text></g><g><title>_int_malloc (5 samples, 0.01%)</title><rect x="99.8473%" y="885" width="0.0100%" height="15" fill="rgb(228,41,40)" fg:x="49711" fg:w="5"/><text x="100.0973%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="99.8634%" y="885" width="0.0100%" height="15" fill="rgb(244,132,35)" fg:x="49719" fg:w="5"/><text x="100.1134%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.01%)</title><rect x="99.8735%" y="885" width="0.0100%" height="15" fill="rgb(253,189,4)" fg:x="49724" fg:w="5"/><text x="100.1235%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.02%)</title><rect x="99.9076%" y="885" width="0.0161%" height="15" fill="rgb(224,37,19)" fg:x="49741" fg:w="8"/><text x="100.1576%" y="895.50"></text></g><g><title>malloc_consolidate (8 samples, 0.02%)</title><rect x="99.9498%" y="869" width="0.0161%" height="15" fill="rgb(235,223,18)" fg:x="49762" fg:w="8"/><text x="100.1998%" y="879.50"></text></g><g><title>main_arena (13 samples, 0.03%)</title><rect x="99.9498%" y="885" width="0.0261%" height="15" fill="rgb(235,163,25)" fg:x="49762" fg:w="13"/><text x="100.1998%" y="895.50"></text></g><g><title>unlink_chunk.isra.0 (5 samples, 0.01%)</title><rect x="99.9659%" y="869" width="0.0100%" height="15" fill="rgb(217,145,28)" fg:x="49770" fg:w="5"/><text x="100.2159%" y="879.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="99.9759%" y="885" width="0.0141%" height="15" fill="rgb(223,223,32)" fg:x="49775" fg:w="7"/><text x="100.2259%" y="895.50"></text></g><g><title>all (49,787 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(227,189,39)" fg:x="0" fg:w="49787"/><text x="0.2500%" y="927.50"></text></g><g><title>do_query (49,787 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,10,22)" fg:x="0" fg:w="49787"/><text x="0.2500%" y="911.50">do_query</text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (5 samples, 0.01%)</title><rect x="99.9900%" y="885" width="0.0100%" height="15" fill="rgb(248,46,39)" fg:x="49782" fg:w="5"/><text x="100.2400%" y="895.50"></text></g></svg></svg>