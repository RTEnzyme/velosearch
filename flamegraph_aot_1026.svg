<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="64759"><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (9 samples, 0.01%)</title><rect x="0.0031%" y="837" width="0.0139%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="9"/><text x="0.2531%" y="847.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.03%)</title><rect x="0.0031%" y="853" width="0.0278%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="18"/><text x="0.2531%" y="863.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (14 samples, 0.02%)</title><rect x="0.0309%" y="853" width="0.0216%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="14"/><text x="0.2809%" y="863.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.02%)</title><rect x="0.0309%" y="837" width="0.0216%" height="15" fill="rgb(248,212,6)" fg:x="20" fg:w="14"/><text x="0.2809%" y="847.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="0.0309%" y="821" width="0.0216%" height="15" fill="rgb(208,68,35)" fg:x="20" fg:w="14"/><text x="0.2809%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.03%)</title><rect x="0.0633%" y="837" width="0.0309%" height="15" fill="rgb(232,128,0)" fg:x="41" fg:w="20"/><text x="0.3133%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="0.1282%" y="837" width="0.0232%" height="15" fill="rgb(207,160,47)" fg:x="83" fg:w="15"/><text x="0.3782%" y="847.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.03%)</title><rect x="0.1652%" y="837" width="0.0309%" height="15" fill="rgb(228,23,34)" fg:x="107" fg:w="20"/><text x="0.4152%" y="847.50"></text></g><g><title>__calloc (47 samples, 0.07%)</title><rect x="0.1961%" y="837" width="0.0726%" height="15" fill="rgb(218,30,26)" fg:x="127" fg:w="47"/><text x="0.4461%" y="847.50"></text></g><g><title>__posix_memalign (24 samples, 0.04%)</title><rect x="0.2780%" y="837" width="0.0371%" height="15" fill="rgb(220,122,19)" fg:x="180" fg:w="24"/><text x="0.5280%" y="847.50"></text></g><g><title>_int_free (86 samples, 0.13%)</title><rect x="0.3150%" y="837" width="0.1328%" height="15" fill="rgb(250,228,42)" fg:x="204" fg:w="86"/><text x="0.5650%" y="847.50"></text></g><g><title>_int_malloc (15 samples, 0.02%)</title><rect x="0.4478%" y="837" width="0.0232%" height="15" fill="rgb(240,193,28)" fg:x="290" fg:w="15"/><text x="0.6978%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="0.4895%" y="837" width="0.0170%" height="15" fill="rgb(216,20,37)" fg:x="317" fg:w="11"/><text x="0.7395%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.02%)</title><rect x="0.5250%" y="837" width="0.0247%" height="15" fill="rgb(206,188,39)" fg:x="340" fg:w="16"/><text x="0.7750%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (11 samples, 0.02%)</title><rect x="0.5914%" y="837" width="0.0170%" height="15" fill="rgb(217,207,13)" fg:x="383" fg:w="11"/><text x="0.8414%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (8 samples, 0.01%)</title><rect x="0.6084%" y="837" width="0.0124%" height="15" fill="rgb(231,73,38)" fg:x="394" fg:w="8"/><text x="0.8584%" y="847.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (9 samples, 0.01%)</title><rect x="0.6578%" y="837" width="0.0139%" height="15" fill="rgb(225,20,46)" fg:x="426" fg:w="9"/><text x="0.9078%" y="847.50"></text></g><g><title>[[heap]] (452 samples, 0.70%)</title><rect x="0.0571%" y="853" width="0.6980%" height="15" fill="rgb(210,31,41)" fg:x="37" fg:w="452"/><text x="0.3071%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (36 samples, 0.06%)</title><rect x="0.6995%" y="837" width="0.0556%" height="15" fill="rgb(221,200,47)" fg:x="453" fg:w="36"/><text x="0.9495%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (739 samples, 1.14%)</title><rect x="0.7551%" y="853" width="1.1412%" height="15" fill="rgb(226,26,5)" fg:x="489" fg:w="739"/><text x="1.0051%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.02%)</title><rect x="1.9024%" y="837" width="0.0232%" height="15" fill="rgb(249,33,26)" fg:x="1232" fg:w="15"/><text x="2.1524%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.01%)</title><rect x="1.9117%" y="821" width="0.0139%" height="15" fill="rgb(235,183,28)" fg:x="1238" fg:w="9"/><text x="2.1617%" y="831.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.01%)</title><rect x="1.9117%" y="805" width="0.0139%" height="15" fill="rgb(221,5,38)" fg:x="1238" fg:w="9"/><text x="2.1617%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.01%)</title><rect x="1.9117%" y="789" width="0.0139%" height="15" fill="rgb(247,18,42)" fg:x="1238" fg:w="9"/><text x="2.1617%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="1.9117%" y="773" width="0.0139%" height="15" fill="rgb(241,131,45)" fg:x="1238" fg:w="9"/><text x="2.1617%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.01%)</title><rect x="1.9117%" y="757" width="0.0139%" height="15" fill="rgb(249,31,29)" fg:x="1238" fg:w="9"/><text x="2.1617%" y="767.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (36 samples, 0.06%)</title><rect x="1.9333%" y="837" width="0.0556%" height="15" fill="rgb(225,111,53)" fg:x="1252" fg:w="36"/><text x="2.1833%" y="847.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="2.0569%" y="837" width="0.0185%" height="15" fill="rgb(238,160,17)" fg:x="1332" fg:w="12"/><text x="2.3069%" y="847.50"></text></g><g><title>_int_free (35 samples, 0.05%)</title><rect x="2.1032%" y="837" width="0.0540%" height="15" fill="rgb(214,148,48)" fg:x="1362" fg:w="35"/><text x="2.3532%" y="847.50"></text></g><g><title>_int_malloc (49 samples, 0.08%)</title><rect x="2.1572%" y="837" width="0.0757%" height="15" fill="rgb(232,36,49)" fg:x="1397" fg:w="49"/><text x="2.4072%" y="847.50"></text></g><g><title>_int_memalign (43 samples, 0.07%)</title><rect x="2.2329%" y="837" width="0.0664%" height="15" fill="rgb(209,103,24)" fg:x="1446" fg:w="43"/><text x="2.4829%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.01%)</title><rect x="2.3101%" y="837" width="0.0124%" height="15" fill="rgb(229,88,8)" fg:x="1496" fg:w="8"/><text x="2.5601%" y="847.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (9 samples, 0.01%)</title><rect x="2.3302%" y="837" width="0.0139%" height="15" fill="rgb(213,181,19)" fg:x="1509" fg:w="9"/><text x="2.5802%" y="847.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (9 samples, 0.01%)</title><rect x="2.3750%" y="837" width="0.0139%" height="15" fill="rgb(254,191,54)" fg:x="1538" fg:w="9"/><text x="2.6250%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.01%)</title><rect x="2.3750%" y="821" width="0.0139%" height="15" fill="rgb(241,83,37)" fg:x="1538" fg:w="9"/><text x="2.6250%" y="831.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (9 samples, 0.01%)</title><rect x="2.3750%" y="805" width="0.0139%" height="15" fill="rgb(233,36,39)" fg:x="1538" fg:w="9"/><text x="2.6250%" y="815.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (9 samples, 0.01%)</title><rect x="2.4583%" y="837" width="0.0139%" height="15" fill="rgb(226,3,54)" fg:x="1592" fg:w="9"/><text x="2.7083%" y="847.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (8 samples, 0.01%)</title><rect x="2.4722%" y="837" width="0.0124%" height="15" fill="rgb(245,192,40)" fg:x="1601" fg:w="8"/><text x="2.7222%" y="847.50"></text></g><g><title>[[stack]] (382 samples, 0.59%)</title><rect x="1.8963%" y="853" width="0.5899%" height="15" fill="rgb(238,167,29)" fg:x="1228" fg:w="382"/><text x="2.1463%" y="863.50"></text></g><g><title>[[vdso]] (12 samples, 0.02%)</title><rect x="2.4861%" y="853" width="0.0185%" height="15" fill="rgb(232,182,51)" fg:x="1610" fg:w="12"/><text x="2.7361%" y="863.50"></text></g><g><title>[do_query] (8 samples, 0.01%)</title><rect x="2.5371%" y="837" width="0.0124%" height="15" fill="rgb(231,60,39)" fg:x="1643" fg:w="8"/><text x="2.7871%" y="847.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="2.5587%" y="837" width="0.0108%" height="15" fill="rgb(208,69,12)" fg:x="1657" fg:w="7"/><text x="2.8087%" y="847.50"></text></g><g><title>[do_query] (49 samples, 0.08%)</title><rect x="2.5139%" y="853" width="0.0757%" height="15" fill="rgb(235,93,37)" fg:x="1628" fg:w="49"/><text x="2.7639%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="2.6020%" y="837" width="0.0139%" height="15" fill="rgb(213,116,39)" fg:x="1685" fg:w="9"/><text x="2.8520%" y="847.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.03%)</title><rect x="2.5896%" y="853" width="0.0309%" height="15" fill="rgb(222,207,29)" fg:x="1677" fg:w="20"/><text x="2.8396%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="19.1618%" y="661" width="0.0185%" height="15" fill="rgb(206,96,30)" fg:x="12409" fg:w="12"/><text x="19.4118%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (102 samples, 0.16%)</title><rect x="19.0244%" y="837" width="0.1575%" height="15" fill="rgb(218,138,4)" fg:x="12320" fg:w="102"/><text x="19.2744%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="821" width="0.1560%" height="15" fill="rgb(250,191,14)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="805" width="0.1560%" height="15" fill="rgb(239,60,40)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="789" width="0.1560%" height="15" fill="rgb(206,27,48)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="773" width="0.1560%" height="15" fill="rgb(225,35,8)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="757" width="0.1560%" height="15" fill="rgb(250,213,24)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="741" width="0.1560%" height="15" fill="rgb(247,123,22)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (101 samples, 0.16%)</title><rect x="19.0259%" y="725" width="0.1560%" height="15" fill="rgb(231,138,38)" fg:x="12321" fg:w="101"/><text x="19.2759%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.15%)</title><rect x="19.0306%" y="709" width="0.1513%" height="15" fill="rgb(231,145,46)" fg:x="12324" fg:w="98"/><text x="19.2806%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (96 samples, 0.15%)</title><rect x="19.0336%" y="693" width="0.1482%" height="15" fill="rgb(251,118,11)" fg:x="12326" fg:w="96"/><text x="19.2836%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (94 samples, 0.15%)</title><rect x="19.0367%" y="677" width="0.1452%" height="15" fill="rgb(217,147,25)" fg:x="12328" fg:w="94"/><text x="19.2867%" y="687.50"></text></g><g><title>[perf-777996.map] (10,727 samples, 16.56%)</title><rect x="2.6205%" y="853" width="16.5645%" height="15" fill="rgb(247,81,37)" fg:x="1697" fg:w="10727"/><text x="2.8705%" y="863.50">[perf-777996.map]</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="19.2035%" y="837" width="0.0170%" height="15" fill="rgb(209,12,38)" fg:x="12436" fg:w="11"/><text x="19.4535%" y="847.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (10 samples, 0.02%)</title><rect x="19.2220%" y="837" width="0.0154%" height="15" fill="rgb(227,1,9)" fg:x="12448" fg:w="10"/><text x="19.4720%" y="847.50"></text></g><g><title>__GI___libc_malloc (91 samples, 0.14%)</title><rect x="19.3147%" y="837" width="0.1405%" height="15" fill="rgb(248,47,43)" fg:x="12508" fg:w="91"/><text x="19.5647%" y="847.50"></text></g><g><title>__calloc (41 samples, 0.06%)</title><rect x="19.4598%" y="837" width="0.0633%" height="15" fill="rgb(221,10,30)" fg:x="12602" fg:w="41"/><text x="19.7098%" y="847.50"></text></g><g><title>__posix_memalign (23 samples, 0.04%)</title><rect x="19.5371%" y="837" width="0.0355%" height="15" fill="rgb(210,229,1)" fg:x="12652" fg:w="23"/><text x="19.7871%" y="847.50"></text></g><g><title>_int_free (197 samples, 0.30%)</title><rect x="19.5757%" y="837" width="0.3042%" height="15" fill="rgb(222,148,37)" fg:x="12677" fg:w="197"/><text x="19.8257%" y="847.50"></text></g><g><title>_int_malloc (139 samples, 0.21%)</title><rect x="19.8799%" y="837" width="0.2146%" height="15" fill="rgb(234,67,33)" fg:x="12874" fg:w="139"/><text x="20.1299%" y="847.50"></text></g><g><title>_int_memalign (56 samples, 0.09%)</title><rect x="20.0945%" y="837" width="0.0865%" height="15" fill="rgb(247,98,35)" fg:x="13013" fg:w="56"/><text x="20.3445%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="20.1933%" y="837" width="0.0170%" height="15" fill="rgb(247,138,52)" fg:x="13077" fg:w="11"/><text x="20.4433%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.01%)</title><rect x="20.2103%" y="837" width="0.0108%" height="15" fill="rgb(213,79,30)" fg:x="13088" fg:w="7"/><text x="20.4603%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.03%)</title><rect x="20.2350%" y="837" width="0.0293%" height="15" fill="rgb(246,177,23)" fg:x="13104" fg:w="19"/><text x="20.4850%" y="847.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (18 samples, 0.03%)</title><rect x="20.2767%" y="837" width="0.0278%" height="15" fill="rgb(230,62,27)" fg:x="13131" fg:w="18"/><text x="20.5267%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.02%)</title><rect x="20.3400%" y="837" width="0.0201%" height="15" fill="rgb(216,154,8)" fg:x="13172" fg:w="13"/><text x="20.5900%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (13 samples, 0.02%)</title><rect x="20.3632%" y="837" width="0.0201%" height="15" fill="rgb(244,35,45)" fg:x="13187" fg:w="13"/><text x="20.6132%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (15 samples, 0.02%)</title><rect x="20.3833%" y="837" width="0.0232%" height="15" fill="rgb(251,115,12)" fg:x="13200" fg:w="15"/><text x="20.6333%" y="847.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::convert_predicate (15 samples, 0.02%)</title><rect x="20.5083%" y="725" width="0.0232%" height="15" fill="rgb(240,54,50)" fg:x="13281" fg:w="15"/><text x="20.7583%" y="735.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (43 samples, 0.07%)</title><rect x="20.4667%" y="821" width="0.0664%" height="15" fill="rgb(233,84,52)" fg:x="13254" fg:w="43"/><text x="20.7167%" y="831.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (43 samples, 0.07%)</title><rect x="20.4667%" y="805" width="0.0664%" height="15" fill="rgb(207,117,47)" fg:x="13254" fg:w="43"/><text x="20.7167%" y="815.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (43 samples, 0.07%)</title><rect x="20.4667%" y="789" width="0.0664%" height="15" fill="rgb(249,43,39)" fg:x="13254" fg:w="43"/><text x="20.7167%" y="799.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (43 samples, 0.07%)</title><rect x="20.4667%" y="773" width="0.0664%" height="15" fill="rgb(209,38,44)" fg:x="13254" fg:w="43"/><text x="20.7167%" y="783.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (43 samples, 0.07%)</title><rect x="20.4667%" y="757" width="0.0664%" height="15" fill="rgb(236,212,23)" fg:x="13254" fg:w="43"/><text x="20.7167%" y="767.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::new (43 samples, 0.07%)</title><rect x="20.4667%" y="741" width="0.0664%" height="15" fill="rgb(242,79,21)" fg:x="13254" fg:w="43"/><text x="20.7167%" y="751.50"></text></g><g><title>do_query::main_inner::_{{closure}} (44 samples, 0.07%)</title><rect x="20.4667%" y="837" width="0.0679%" height="15" fill="rgb(211,96,35)" fg:x="13254" fg:w="44"/><text x="20.7167%" y="847.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (22 samples, 0.03%)</title><rect x="20.5392%" y="837" width="0.0340%" height="15" fill="rgb(253,215,40)" fg:x="13301" fg:w="22"/><text x="20.7892%" y="847.50"></text></g><g><title>malloc_consolidate (60 samples, 0.09%)</title><rect x="20.5871%" y="837" width="0.0927%" height="15" fill="rgb(211,81,21)" fg:x="13332" fg:w="60"/><text x="20.8371%" y="847.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="20.7786%" y="773" width="0.0232%" height="15" fill="rgb(208,190,38)" fg:x="13456" fg:w="15"/><text x="21.0286%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="20.7724%" y="789" width="0.0340%" height="15" fill="rgb(235,213,38)" fg:x="13452" fg:w="22"/><text x="21.0224%" y="799.50"></text></g><g><title>__GI___libc_free (83 samples, 0.13%)</title><rect x="20.9392%" y="773" width="0.1282%" height="15" fill="rgb(237,122,38)" fg:x="13560" fg:w="83"/><text x="21.1892%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (149 samples, 0.23%)</title><rect x="21.7792%" y="757" width="0.2301%" height="15" fill="rgb(244,218,35)" fg:x="14104" fg:w="149"/><text x="22.0292%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (102 samples, 0.16%)</title><rect x="21.8518%" y="741" width="0.1575%" height="15" fill="rgb(240,68,47)" fg:x="14151" fg:w="102"/><text x="22.1018%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (102 samples, 0.16%)</title><rect x="21.8518%" y="725" width="0.1575%" height="15" fill="rgb(210,16,53)" fg:x="14151" fg:w="102"/><text x="22.1018%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.15%)</title><rect x="21.8580%" y="709" width="0.1513%" height="15" fill="rgb(235,124,12)" fg:x="14155" fg:w="98"/><text x="22.1080%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (92 samples, 0.14%)</title><rect x="21.8672%" y="693" width="0.1421%" height="15" fill="rgb(224,169,11)" fg:x="14161" fg:w="92"/><text x="22.1172%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (67 samples, 0.10%)</title><rect x="21.9058%" y="677" width="0.1035%" height="15" fill="rgb(250,166,2)" fg:x="14186" fg:w="67"/><text x="22.1558%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.05%)</title><rect x="21.9552%" y="661" width="0.0540%" height="15" fill="rgb(242,216,29)" fg:x="14218" fg:w="35"/><text x="22.2052%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="21.9861%" y="645" width="0.0232%" height="15" fill="rgb(230,116,27)" fg:x="14238" fg:w="15"/><text x="22.2361%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="21.9877%" y="629" width="0.0216%" height="15" fill="rgb(228,99,48)" fg:x="14239" fg:w="14"/><text x="22.2377%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="21.9892%" y="613" width="0.0201%" height="15" fill="rgb(253,11,6)" fg:x="14240" fg:w="13"/><text x="22.2392%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="21.9892%" y="597" width="0.0201%" height="15" fill="rgb(247,143,39)" fg:x="14240" fg:w="13"/><text x="22.2392%" y="607.50"></text></g><g><title>_int_free (613 samples, 0.95%)</title><rect x="21.0673%" y="773" width="0.9466%" height="15" fill="rgb(236,97,10)" fg:x="13643" fg:w="613"/><text x="21.3173%" y="783.50"></text></g><g><title>__GI___libc_free (51 samples, 0.08%)</title><rect x="22.1838%" y="741" width="0.0788%" height="15" fill="rgb(233,208,19)" fg:x="14366" fg:w="51"/><text x="22.4338%" y="751.50"></text></g><g><title>_int_free (128 samples, 0.20%)</title><rect x="22.2625%" y="741" width="0.1977%" height="15" fill="rgb(216,164,2)" fg:x="14417" fg:w="128"/><text x="22.5125%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (228 samples, 0.35%)</title><rect x="22.1236%" y="757" width="0.3521%" height="15" fill="rgb(220,129,5)" fg:x="14327" fg:w="228"/><text x="22.3736%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (10 samples, 0.02%)</title><rect x="22.4602%" y="741" width="0.0154%" height="15" fill="rgb(242,17,10)" fg:x="14545" fg:w="10"/><text x="22.7102%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="22.4756%" y="757" width="0.0232%" height="15" fill="rgb(242,107,0)" fg:x="14555" fg:w="15"/><text x="22.7256%" y="767.50"></text></g><g><title>__GI___libc_free (79 samples, 0.12%)</title><rect x="22.4988%" y="757" width="0.1220%" height="15" fill="rgb(251,28,31)" fg:x="14570" fg:w="79"/><text x="22.7488%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (766 samples, 1.18%)</title><rect x="22.0139%" y="773" width="1.1828%" height="15" fill="rgb(233,223,10)" fg:x="14256" fg:w="766"/><text x="22.2639%" y="783.50"></text></g><g><title>_int_free (373 samples, 0.58%)</title><rect x="22.6208%" y="757" width="0.5760%" height="15" fill="rgb(215,21,27)" fg:x="14649" fg:w="373"/><text x="22.8708%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="757" width="0.0108%" height="15" fill="rgb(232,23,21)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="741" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="725" width="0.0108%" height="15" fill="rgb(226,81,46)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="709" width="0.0108%" height="15" fill="rgb(247,70,30)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="693" width="0.0108%" height="15" fill="rgb(212,68,19)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="677" width="0.0108%" height="15" fill="rgb(240,187,13)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="661" width="0.0108%" height="15" fill="rgb(223,113,26)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="645" width="0.0108%" height="15" fill="rgb(206,192,2)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="629" width="0.0108%" height="15" fill="rgb(241,108,4)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="613" width="0.0108%" height="15" fill="rgb(247,173,49)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="597" width="0.0108%" height="15" fill="rgb(224,114,35)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="581" width="0.0108%" height="15" fill="rgb(245,159,27)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="23.3558%" y="565" width="0.0108%" height="15" fill="rgb(245,172,44)" fg:x="15125" fg:w="7"/><text x="23.6058%" y="575.50"></text></g><g><title>__GI___libc_free (87 samples, 0.13%)</title><rect x="23.3666%" y="757" width="0.1343%" height="15" fill="rgb(236,23,11)" fg:x="15132" fg:w="87"/><text x="23.6166%" y="767.50"></text></g><g><title>_int_free (387 samples, 0.60%)</title><rect x="23.5010%" y="757" width="0.5976%" height="15" fill="rgb(205,117,38)" fg:x="15219" fg:w="387"/><text x="23.7510%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt;&gt; (7 samples, 0.01%)</title><rect x="24.2020%" y="741" width="0.0108%" height="15" fill="rgb(237,72,25)" fg:x="15673" fg:w="7"/><text x="24.4520%" y="751.50"></text></g><g><title>__GI___libc_free (20 samples, 0.03%)</title><rect x="24.3765%" y="725" width="0.0309%" height="15" fill="rgb(244,70,9)" fg:x="15786" fg:w="20"/><text x="24.6265%" y="735.50"></text></g><g><title>_int_free (210 samples, 0.32%)</title><rect x="24.4074%" y="725" width="0.3243%" height="15" fill="rgb(217,125,39)" fg:x="15806" fg:w="210"/><text x="24.6574%" y="735.50"></text></g><g><title>__GI___libc_free (42 samples, 0.06%)</title><rect x="24.8398%" y="709" width="0.0649%" height="15" fill="rgb(235,36,10)" fg:x="16086" fg:w="42"/><text x="25.0898%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (255 samples, 0.39%)</title><rect x="24.7317%" y="725" width="0.3938%" height="15" fill="rgb(251,123,47)" fg:x="16016" fg:w="255"/><text x="24.9817%" y="735.50"></text></g><g><title>_int_free (143 samples, 0.22%)</title><rect x="24.9046%" y="709" width="0.2208%" height="15" fill="rgb(221,13,13)" fg:x="16128" fg:w="143"/><text x="25.1546%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,817 samples, 4.35%)</title><rect x="20.8064%" y="789" width="4.3500%" height="15" fill="rgb(238,131,9)" fg:x="13474" fg:w="2817"/><text x="21.0564%" y="799.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (1,269 samples, 1.96%)</title><rect x="23.1968%" y="773" width="1.9596%" height="15" fill="rgb(211,50,8)" fg:x="15022" fg:w="1269"/><text x="23.4468%" y="783.50">c..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (685 samples, 1.06%)</title><rect x="24.0986%" y="757" width="1.0578%" height="15" fill="rgb(245,182,24)" fg:x="15606" fg:w="685"/><text x="24.3486%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (611 samples, 0.94%)</title><rect x="24.2129%" y="741" width="0.9435%" height="15" fill="rgb(242,14,37)" fg:x="15680" fg:w="611"/><text x="24.4629%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (20 samples, 0.03%)</title><rect x="25.1255%" y="725" width="0.0309%" height="15" fill="rgb(246,228,12)" fg:x="16271" fg:w="20"/><text x="25.3755%" y="735.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="25.1749%" y="773" width="0.0170%" height="15" fill="rgb(213,55,15)" fg:x="16303" fg:w="11"/><text x="25.4249%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (51 samples, 0.08%)</title><rect x="25.2938%" y="757" width="0.0788%" height="15" fill="rgb(209,9,3)" fg:x="16380" fg:w="51"/><text x="25.5438%" y="767.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (131 samples, 0.20%)</title><rect x="25.1965%" y="773" width="0.2023%" height="15" fill="rgb(230,59,30)" fg:x="16317" fg:w="131"/><text x="25.4465%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.03%)</title><rect x="25.3725%" y="757" width="0.0263%" height="15" fill="rgb(209,121,21)" fg:x="16431" fg:w="17"/><text x="25.6225%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="25.3849%" y="741" width="0.0139%" height="15" fill="rgb(220,109,13)" fg:x="16439" fg:w="9"/><text x="25.6349%" y="751.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (7 samples, 0.01%)</title><rect x="25.4343%" y="757" width="0.0108%" height="15" fill="rgb(232,18,1)" fg:x="16471" fg:w="7"/><text x="25.6843%" y="767.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (14 samples, 0.02%)</title><rect x="25.5161%" y="725" width="0.0216%" height="15" fill="rgb(215,41,42)" fg:x="16524" fg:w="14"/><text x="25.7661%" y="735.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (13 samples, 0.02%)</title><rect x="25.5177%" y="709" width="0.0201%" height="15" fill="rgb(224,123,36)" fg:x="16525" fg:w="13"/><text x="25.7677%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (249 samples, 0.38%)</title><rect x="25.1563%" y="789" width="0.3845%" height="15" fill="rgb(240,125,3)" fg:x="16291" fg:w="249"/><text x="25.4063%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (92 samples, 0.14%)</title><rect x="25.3988%" y="773" width="0.1421%" height="15" fill="rgb(205,98,50)" fg:x="16448" fg:w="92"/><text x="25.6488%" y="783.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (29 samples, 0.04%)</title><rect x="25.4961%" y="757" width="0.0448%" height="15" fill="rgb(205,185,37)" fg:x="16511" fg:w="29"/><text x="25.7461%" y="767.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (27 samples, 0.04%)</title><rect x="25.4992%" y="741" width="0.0417%" height="15" fill="rgb(238,207,15)" fg:x="16513" fg:w="27"/><text x="25.7492%" y="751.50"></text></g><g><title>&lt;datafusion::execution::context::SessionConfig as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="25.5517%" y="773" width="0.0201%" height="15" fill="rgb(213,199,42)" fg:x="16547" fg:w="13"/><text x="25.8017%" y="783.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="25.5764%" y="773" width="0.0124%" height="15" fill="rgb(235,201,11)" fg:x="16563" fg:w="8"/><text x="25.8264%" y="783.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (32 samples, 0.05%)</title><rect x="25.5409%" y="789" width="0.0494%" height="15" fill="rgb(207,46,11)" fg:x="16540" fg:w="32"/><text x="25.7909%" y="799.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::schema (9 samples, 0.01%)</title><rect x="25.6119%" y="757" width="0.0139%" height="15" fill="rgb(241,35,35)" fg:x="16586" fg:w="9"/><text x="25.8619%" y="767.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="25.6366%" y="725" width="0.0139%" height="15" fill="rgb(243,32,47)" fg:x="16602" fg:w="9"/><text x="25.8866%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange&gt; (24 samples, 0.04%)</title><rect x="25.6273%" y="741" width="0.0371%" height="15" fill="rgb(247,202,23)" fg:x="16596" fg:w="24"/><text x="25.8773%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (9 samples, 0.01%)</title><rect x="25.6505%" y="725" width="0.0139%" height="15" fill="rgb(219,102,11)" fg:x="16611" fg:w="9"/><text x="25.9005%" y="735.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (18 samples, 0.03%)</title><rect x="25.6937%" y="725" width="0.0278%" height="15" fill="rgb(243,110,44)" fg:x="16639" fg:w="18"/><text x="25.9437%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (14 samples, 0.02%)</title><rect x="25.6999%" y="709" width="0.0216%" height="15" fill="rgb(222,74,54)" fg:x="16643" fg:w="14"/><text x="25.9499%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (14 samples, 0.02%)</title><rect x="25.6999%" y="693" width="0.0216%" height="15" fill="rgb(216,99,12)" fg:x="16643" fg:w="14"/><text x="25.9499%" y="703.50"></text></g><g><title>__posix_memalign (39 samples, 0.06%)</title><rect x="25.8790%" y="693" width="0.0602%" height="15" fill="rgb(226,22,26)" fg:x="16759" fg:w="39"/><text x="26.1290%" y="703.50"></text></g><g><title>_int_memalign (8 samples, 0.01%)</title><rect x="25.9269%" y="677" width="0.0124%" height="15" fill="rgb(217,163,10)" fg:x="16790" fg:w="8"/><text x="26.1769%" y="687.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (63 samples, 0.10%)</title><rect x="25.8451%" y="709" width="0.0973%" height="15" fill="rgb(213,25,53)" fg:x="16737" fg:w="63"/><text x="26.0951%" y="719.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.05%)</title><rect x="25.9732%" y="677" width="0.0494%" height="15" fill="rgb(252,105,26)" fg:x="16820" fg:w="32"/><text x="26.2232%" y="687.50"></text></g><g><title>_int_malloc (22 samples, 0.03%)</title><rect x="25.9887%" y="661" width="0.0340%" height="15" fill="rgb(220,39,43)" fg:x="16830" fg:w="22"/><text x="26.2387%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.06%)</title><rect x="25.9670%" y="693" width="0.0587%" height="15" fill="rgb(229,68,48)" fg:x="16816" fg:w="38"/><text x="26.2170%" y="703.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (56 samples, 0.09%)</title><rect x="25.9485%" y="709" width="0.0865%" height="15" fill="rgb(252,8,32)" fg:x="16804" fg:w="56"/><text x="26.1985%" y="719.50"></text></g><g><title>__posix_memalign (19 samples, 0.03%)</title><rect x="26.0751%" y="677" width="0.0293%" height="15" fill="rgb(223,20,43)" fg:x="16886" fg:w="19"/><text x="26.3251%" y="687.50"></text></g><g><title>_int_memalign (14 samples, 0.02%)</title><rect x="26.0829%" y="661" width="0.0216%" height="15" fill="rgb(229,81,49)" fg:x="16891" fg:w="14"/><text x="26.3329%" y="671.50"></text></g><g><title>_int_malloc (9 samples, 0.01%)</title><rect x="26.0906%" y="645" width="0.0139%" height="15" fill="rgb(236,28,36)" fg:x="16896" fg:w="9"/><text x="26.3406%" y="655.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (44 samples, 0.07%)</title><rect x="26.0381%" y="693" width="0.0679%" height="15" fill="rgb(249,185,26)" fg:x="16862" fg:w="44"/><text x="26.2881%" y="703.50"></text></g><g><title>alloc::vec::from_elem (9 samples, 0.01%)</title><rect x="26.1076%" y="693" width="0.0139%" height="15" fill="rgb(249,174,33)" fg:x="16907" fg:w="9"/><text x="26.3576%" y="703.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (107 samples, 0.17%)</title><rect x="26.0350%" y="709" width="0.1652%" height="15" fill="rgb(233,201,37)" fg:x="16860" fg:w="107"/><text x="26.2850%" y="719.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (51 samples, 0.08%)</title><rect x="26.1215%" y="693" width="0.0788%" height="15" fill="rgb(221,78,26)" fg:x="16916" fg:w="51"/><text x="26.3715%" y="703.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (50 samples, 0.08%)</title><rect x="26.1230%" y="677" width="0.0772%" height="15" fill="rgb(250,127,30)" fg:x="16917" fg:w="50"/><text x="26.3730%" y="687.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="26.2064%" y="709" width="0.0170%" height="15" fill="rgb(230,49,44)" fg:x="16971" fg:w="11"/><text x="26.4564%" y="719.50"></text></g><g><title>__calloc (42 samples, 0.06%)</title><rect x="26.2234%" y="709" width="0.0649%" height="15" fill="rgb(229,67,23)" fg:x="16982" fg:w="42"/><text x="26.4734%" y="719.50"></text></g><g><title>_int_malloc (31 samples, 0.05%)</title><rect x="26.2404%" y="693" width="0.0479%" height="15" fill="rgb(249,83,47)" fg:x="16993" fg:w="31"/><text x="26.4904%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="26.2697%" y="677" width="0.0185%" height="15" fill="rgb(215,43,3)" fg:x="17012" fg:w="12"/><text x="26.5197%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="26.2743%" y="661" width="0.0139%" height="15" fill="rgb(238,154,13)" fg:x="17015" fg:w="9"/><text x="26.5243%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="26.2743%" y="645" width="0.0139%" height="15" fill="rgb(219,56,2)" fg:x="17015" fg:w="9"/><text x="26.5243%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="26.2743%" y="629" width="0.0139%" height="15" fill="rgb(233,0,4)" fg:x="17015" fg:w="9"/><text x="26.5243%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="26.2743%" y="613" width="0.0139%" height="15" fill="rgb(235,30,7)" fg:x="17015" fg:w="9"/><text x="26.5243%" y="623.50"></text></g><g><title>__GI___libc_malloc (44 samples, 0.07%)</title><rect x="26.4010%" y="693" width="0.0679%" height="15" fill="rgb(250,79,13)" fg:x="17097" fg:w="44"/><text x="26.6510%" y="703.50"></text></g><g><title>_int_malloc (30 samples, 0.05%)</title><rect x="26.4226%" y="677" width="0.0463%" height="15" fill="rgb(211,146,34)" fg:x="17111" fg:w="30"/><text x="26.6726%" y="687.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (137 samples, 0.21%)</title><rect x="26.2960%" y="709" width="0.2116%" height="15" fill="rgb(228,22,38)" fg:x="17029" fg:w="137"/><text x="26.5460%" y="719.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (10 samples, 0.02%)</title><rect x="26.4921%" y="693" width="0.0154%" height="15" fill="rgb(235,168,5)" fg:x="17156" fg:w="10"/><text x="26.7421%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.02%)</title><rect x="26.5075%" y="709" width="0.0247%" height="15" fill="rgb(221,155,16)" fg:x="17166" fg:w="16"/><text x="26.7575%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (14 samples, 0.02%)</title><rect x="26.5106%" y="693" width="0.0216%" height="15" fill="rgb(215,215,53)" fg:x="17168" fg:w="14"/><text x="26.7606%" y="703.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (534 samples, 0.82%)</title><rect x="25.7262%" y="725" width="0.8246%" height="15" fill="rgb(223,4,10)" fg:x="16660" fg:w="534"/><text x="25.9762%" y="735.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (63 samples, 0.10%)</title><rect x="26.5523%" y="709" width="0.0973%" height="15" fill="rgb(234,103,6)" fg:x="17195" fg:w="63"/><text x="26.8023%" y="719.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.10%)</title><rect x="26.5523%" y="693" width="0.0973%" height="15" fill="rgb(227,97,0)" fg:x="17195" fg:w="63"/><text x="26.8023%" y="703.50"></text></g><g><title>_int_malloc (51 samples, 0.08%)</title><rect x="26.5708%" y="677" width="0.0788%" height="15" fill="rgb(234,150,53)" fg:x="17207" fg:w="51"/><text x="26.8208%" y="687.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (19 samples, 0.03%)</title><rect x="26.6496%" y="709" width="0.0293%" height="15" fill="rgb(228,201,54)" fg:x="17258" fg:w="19"/><text x="26.8996%" y="719.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (705 samples, 1.09%)</title><rect x="25.6273%" y="757" width="1.0887%" height="15" fill="rgb(222,22,37)" fg:x="16596" fg:w="705"/><text x="25.8773%" y="767.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (681 samples, 1.05%)</title><rect x="25.6644%" y="741" width="1.0516%" height="15" fill="rgb(237,53,32)" fg:x="16620" fg:w="681"/><text x="25.9144%" y="751.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (107 samples, 0.17%)</title><rect x="26.5507%" y="725" width="0.1652%" height="15" fill="rgb(233,25,53)" fg:x="17194" fg:w="107"/><text x="26.8007%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.04%)</title><rect x="26.6805%" y="709" width="0.0355%" height="15" fill="rgb(210,40,34)" fg:x="17278" fg:w="23"/><text x="26.9305%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (20 samples, 0.03%)</title><rect x="26.6851%" y="693" width="0.0309%" height="15" fill="rgb(241,220,44)" fg:x="17281" fg:w="20"/><text x="26.9351%" y="703.50"></text></g><g><title>&lt;dashmap::iter_set::OwningIter&lt;K,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (603 samples, 0.93%)</title><rect x="26.7376%" y="725" width="0.9311%" height="15" fill="rgb(235,28,35)" fg:x="17315" fg:w="603"/><text x="26.9876%" y="735.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="27.6749%" y="709" width="0.0108%" height="15" fill="rgb(210,56,17)" fg:x="17922" fg:w="7"/><text x="27.9249%" y="719.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="27.6687%" y="725" width="0.0185%" height="15" fill="rgb(224,130,29)" fg:x="17918" fg:w="12"/><text x="27.9187%" y="735.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (16 samples, 0.02%)</title><rect x="27.6873%" y="725" width="0.0247%" height="15" fill="rgb(235,212,8)" fg:x="17930" fg:w="16"/><text x="27.9373%" y="735.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="27.7490%" y="677" width="0.0216%" height="15" fill="rgb(223,33,50)" fg:x="17970" fg:w="14"/><text x="27.9990%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.02%)</title><rect x="27.7475%" y="709" width="0.0247%" height="15" fill="rgb(219,149,13)" fg:x="17969" fg:w="16"/><text x="27.9975%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.02%)</title><rect x="27.7490%" y="693" width="0.0232%" height="15" fill="rgb(250,156,29)" fg:x="17970" fg:w="15"/><text x="27.9990%" y="703.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (17 samples, 0.03%)</title><rect x="27.7722%" y="709" width="0.0263%" height="15" fill="rgb(216,193,19)" fg:x="17985" fg:w="17"/><text x="28.0222%" y="719.50"></text></g><g><title>malloc_consolidate (35 samples, 0.05%)</title><rect x="27.9266%" y="661" width="0.0540%" height="15" fill="rgb(216,135,14)" fg:x="18085" fg:w="35"/><text x="28.1766%" y="671.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (820 samples, 1.27%)</title><rect x="26.7160%" y="757" width="1.2662%" height="15" fill="rgb(241,47,5)" fg:x="17301" fg:w="820"/><text x="26.9660%" y="767.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (820 samples, 1.27%)</title><rect x="26.7160%" y="741" width="1.2662%" height="15" fill="rgb(233,42,35)" fg:x="17301" fg:w="820"/><text x="26.9660%" y="751.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (175 samples, 0.27%)</title><rect x="27.7120%" y="725" width="0.2702%" height="15" fill="rgb(231,13,6)" fg:x="17946" fg:w="175"/><text x="27.9620%" y="735.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (119 samples, 0.18%)</title><rect x="27.7985%" y="709" width="0.1838%" height="15" fill="rgb(207,181,40)" fg:x="18002" fg:w="119"/><text x="28.0485%" y="719.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.11%)</title><rect x="27.8772%" y="693" width="0.1050%" height="15" fill="rgb(254,173,49)" fg:x="18053" fg:w="68"/><text x="28.1272%" y="703.50"></text></g><g><title>_int_malloc (62 samples, 0.10%)</title><rect x="27.8865%" y="677" width="0.0957%" height="15" fill="rgb(221,1,38)" fg:x="18059" fg:w="62"/><text x="28.1365%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.03%)</title><rect x="28.0502%" y="741" width="0.0293%" height="15" fill="rgb(206,124,46)" fg:x="18165" fg:w="19"/><text x="28.3002%" y="751.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.03%)</title><rect x="28.0517%" y="725" width="0.0278%" height="15" fill="rgb(249,21,11)" fg:x="18166" fg:w="18"/><text x="28.3017%" y="735.50"></text></g><g><title>_int_malloc (12 samples, 0.02%)</title><rect x="28.0610%" y="709" width="0.0185%" height="15" fill="rgb(222,201,40)" fg:x="18172" fg:w="12"/><text x="28.3110%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="28.0996%" y="725" width="0.0108%" height="15" fill="rgb(235,61,29)" fg:x="18197" fg:w="7"/><text x="28.3496%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 0.04%)</title><rect x="28.0841%" y="741" width="0.0371%" height="15" fill="rgb(219,207,3)" fg:x="18187" fg:w="24"/><text x="28.3341%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.01%)</title><rect x="28.1104%" y="725" width="0.0108%" height="15" fill="rgb(222,56,46)" fg:x="18204" fg:w="7"/><text x="28.3604%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="29.1002%" y="725" width="0.0124%" height="15" fill="rgb(239,76,54)" fg:x="18845" fg:w="8"/><text x="29.3502%" y="735.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.03%)</title><rect x="29.1156%" y="725" width="0.0293%" height="15" fill="rgb(231,124,27)" fg:x="18855" fg:w="19"/><text x="29.3656%" y="735.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="29.1342%" y="709" width="0.0108%" height="15" fill="rgb(249,195,6)" fg:x="18867" fg:w="7"/><text x="29.3842%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (58 samples, 0.09%)</title><rect x="29.1527%" y="725" width="0.0896%" height="15" fill="rgb(237,174,47)" fg:x="18879" fg:w="58"/><text x="29.4027%" y="735.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="29.2423%" y="725" width="0.0139%" height="15" fill="rgb(206,201,31)" fg:x="18937" fg:w="9"/><text x="29.4923%" y="735.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (862 samples, 1.33%)</title><rect x="28.1397%" y="741" width="1.3311%" height="15" fill="rgb(231,57,52)" fg:x="18223" fg:w="862"/><text x="28.3897%" y="751.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (135 samples, 0.21%)</title><rect x="29.2623%" y="725" width="0.2085%" height="15" fill="rgb(248,177,22)" fg:x="18950" fg:w="135"/><text x="29.5123%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.01%)</title><rect x="29.4785%" y="741" width="0.0124%" height="15" fill="rgb(215,211,37)" fg:x="19090" fg:w="8"/><text x="29.7285%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="29.4909%" y="741" width="0.0124%" height="15" fill="rgb(241,128,51)" fg:x="19098" fg:w="8"/><text x="29.7409%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.01%)</title><rect x="29.5032%" y="741" width="0.0139%" height="15" fill="rgb(227,165,31)" fg:x="19106" fg:w="9"/><text x="29.7532%" y="751.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.12%)</title><rect x="29.6052%" y="677" width="0.1174%" height="15" fill="rgb(228,167,24)" fg:x="19172" fg:w="76"/><text x="29.8552%" y="687.50"></text></g><g><title>_int_malloc (63 samples, 0.10%)</title><rect x="29.6252%" y="661" width="0.0973%" height="15" fill="rgb(228,143,12)" fg:x="19185" fg:w="63"/><text x="29.8752%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.15%)</title><rect x="29.5758%" y="693" width="0.1529%" height="15" fill="rgb(249,149,8)" fg:x="19153" fg:w="99"/><text x="29.8258%" y="703.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (129 samples, 0.20%)</title><rect x="29.5388%" y="725" width="0.1992%" height="15" fill="rgb(243,35,44)" fg:x="19129" fg:w="129"/><text x="29.7888%" y="735.50"></text></g><g><title>datafusion::physical_plan::project_schema (112 samples, 0.17%)</title><rect x="29.5650%" y="709" width="0.1729%" height="15" fill="rgb(246,89,9)" fg:x="19146" fg:w="112"/><text x="29.8150%" y="719.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (137 samples, 0.21%)</title><rect x="29.5295%" y="741" width="0.2116%" height="15" fill="rgb(233,213,13)" fg:x="19123" fg:w="137"/><text x="29.7795%" y="751.50"></text></g><g><title>__GI___libc_malloc (76 samples, 0.12%)</title><rect x="29.7966%" y="709" width="0.1174%" height="15" fill="rgb(233,141,41)" fg:x="19296" fg:w="76"/><text x="30.0466%" y="719.50"></text></g><g><title>_int_malloc (56 samples, 0.09%)</title><rect x="29.8275%" y="693" width="0.0865%" height="15" fill="rgb(239,167,4)" fg:x="19316" fg:w="56"/><text x="30.0775%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.02%)</title><rect x="29.9202%" y="709" width="0.0216%" height="15" fill="rgb(209,217,16)" fg:x="19376" fg:w="14"/><text x="30.1702%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="29.9310%" y="693" width="0.0108%" height="15" fill="rgb(219,88,35)" fg:x="19383" fg:w="7"/><text x="30.1810%" y="703.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (140 samples, 0.22%)</title><rect x="29.7410%" y="741" width="0.2162%" height="15" fill="rgb(220,193,23)" fg:x="19260" fg:w="140"/><text x="29.9910%" y="751.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (125 samples, 0.19%)</title><rect x="29.7642%" y="725" width="0.1930%" height="15" fill="rgb(230,90,52)" fg:x="19275" fg:w="125"/><text x="30.0142%" y="735.50"></text></g><g><title>datafusion_expr::expr::create_name (10 samples, 0.02%)</title><rect x="29.9418%" y="709" width="0.0154%" height="15" fill="rgb(252,106,19)" fg:x="19390" fg:w="10"/><text x="30.1918%" y="719.50"></text></g><g><title>malloc_consolidate (25 samples, 0.04%)</title><rect x="30.0900%" y="677" width="0.0386%" height="15" fill="rgb(206,74,20)" fg:x="19486" fg:w="25"/><text x="30.3400%" y="687.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr::new (115 samples, 0.18%)</title><rect x="29.9572%" y="741" width="0.1776%" height="15" fill="rgb(230,138,44)" fg:x="19400" fg:w="115"/><text x="30.2072%" y="751.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (106 samples, 0.16%)</title><rect x="29.9711%" y="725" width="0.1637%" height="15" fill="rgb(235,182,43)" fg:x="19409" fg:w="106"/><text x="30.2211%" y="735.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.10%)</title><rect x="30.0375%" y="709" width="0.0973%" height="15" fill="rgb(242,16,51)" fg:x="19452" fg:w="63"/><text x="30.2875%" y="719.50"></text></g><g><title>_int_malloc (61 samples, 0.09%)</title><rect x="30.0406%" y="693" width="0.0942%" height="15" fill="rgb(248,9,4)" fg:x="19454" fg:w="61"/><text x="30.2906%" y="703.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (2,956 samples, 4.56%)</title><rect x="25.5949%" y="773" width="4.5646%" height="15" fill="rgb(210,31,22)" fg:x="16575" fg:w="2956"/><text x="25.8449%" y="783.50">&lt;fast..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (1,406 samples, 2.17%)</title><rect x="27.9884%" y="757" width="2.1711%" height="15" fill="rgb(239,54,39)" fg:x="18125" fg:w="1406"/><text x="28.2384%" y="767.50">f..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.02%)</title><rect x="30.1348%" y="741" width="0.0247%" height="15" fill="rgb(230,99,41)" fg:x="19515" fg:w="16"/><text x="30.3848%" y="751.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (2,967 samples, 4.58%)</title><rect x="25.5903%" y="789" width="4.5816%" height="15" fill="rgb(253,106,12)" fg:x="16572" fg:w="2967"/><text x="25.8403%" y="799.50">&lt;fast..</text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (26 samples, 0.04%)</title><rect x="56.2099%" y="725" width="0.0401%" height="15" fill="rgb(213,46,41)" fg:x="36401" fg:w="26"/><text x="56.4599%" y="735.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (186 samples, 0.29%)</title><rect x="55.9783%" y="741" width="0.2872%" height="15" fill="rgb(215,133,35)" fg:x="36251" fg:w="186"/><text x="56.2283%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (10 samples, 0.02%)</title><rect x="56.2501%" y="725" width="0.0154%" height="15" fill="rgb(213,28,5)" fg:x="36427" fg:w="10"/><text x="56.5001%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="741" width="0.0232%" height="15" fill="rgb(215,77,49)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="725" width="0.0232%" height="15" fill="rgb(248,100,22)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="709" width="0.0232%" height="15" fill="rgb(208,67,9)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="693" width="0.0232%" height="15" fill="rgb(219,133,21)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="677" width="0.0232%" height="15" fill="rgb(246,46,29)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="661" width="0.0232%" height="15" fill="rgb(246,185,52)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="645" width="0.0232%" height="15" fill="rgb(252,136,11)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="629" width="0.0232%" height="15" fill="rgb(219,138,53)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="613" width="0.0232%" height="15" fill="rgb(211,51,23)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="597" width="0.0232%" height="15" fill="rgb(247,221,28)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="56.2655%" y="581" width="0.0232%" height="15" fill="rgb(251,222,45)" fg:x="36437" fg:w="15"/><text x="56.5155%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="56.2686%" y="565" width="0.0201%" height="15" fill="rgb(217,162,53)" fg:x="36439" fg:w="13"/><text x="56.5186%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="56.2686%" y="549" width="0.0201%" height="15" fill="rgb(229,93,14)" fg:x="36439" fg:w="13"/><text x="56.5186%" y="559.50"></text></g><g><title>__GI___libc_malloc (141 samples, 0.22%)</title><rect x="56.2887%" y="741" width="0.2177%" height="15" fill="rgb(209,67,49)" fg:x="36452" fg:w="141"/><text x="56.5387%" y="751.50"></text></g><g><title>_int_malloc (98 samples, 0.15%)</title><rect x="56.3551%" y="725" width="0.1513%" height="15" fill="rgb(213,87,29)" fg:x="36495" fg:w="98"/><text x="56.6051%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.01%)</title><rect x="56.4956%" y="709" width="0.0108%" height="15" fill="rgb(205,151,52)" fg:x="36586" fg:w="7"/><text x="56.7456%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="56.5064%" y="741" width="0.0108%" height="15" fill="rgb(253,215,39)" fg:x="36593" fg:w="7"/><text x="56.7564%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="725" width="0.0124%" height="15" fill="rgb(221,220,41)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="709" width="0.0124%" height="15" fill="rgb(218,133,21)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="693" width="0.0124%" height="15" fill="rgb(221,193,43)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="677" width="0.0124%" height="15" fill="rgb(240,128,52)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="661" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="645" width="0.0124%" height="15" fill="rgb(215,223,47)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="629" width="0.0124%" height="15" fill="rgb(248,225,23)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="613" width="0.0124%" height="15" fill="rgb(250,108,0)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="597" width="0.0124%" height="15" fill="rgb(228,208,7)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="581" width="0.0124%" height="15" fill="rgb(244,45,10)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="57.0948%" y="565" width="0.0124%" height="15" fill="rgb(207,125,25)" fg:x="36974" fg:w="8"/><text x="57.3448%" y="575.50"></text></g><g><title>_int_free (338 samples, 0.52%)</title><rect x="57.2368%" y="709" width="0.5219%" height="15" fill="rgb(210,195,18)" fg:x="37066" fg:w="338"/><text x="57.4868%" y="719.50"></text></g><g><title>__posix_memalign (1,389 samples, 2.14%)</title><rect x="56.5172%" y="741" width="2.1449%" height="15" fill="rgb(249,80,12)" fg:x="36600" fg:w="1389"/><text x="56.7672%" y="751.50">_..</text></g><g><title>_int_memalign (1,007 samples, 1.55%)</title><rect x="57.1071%" y="725" width="1.5550%" height="15" fill="rgb(221,65,9)" fg:x="36982" fg:w="1007"/><text x="57.3571%" y="735.50"></text></g><g><title>_int_malloc (585 samples, 0.90%)</title><rect x="57.7588%" y="709" width="0.9033%" height="15" fill="rgb(235,49,36)" fg:x="37404" fg:w="585"/><text x="58.0088%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (308 samples, 0.48%)</title><rect x="58.6621%" y="741" width="0.4756%" height="15" fill="rgb(225,32,20)" fg:x="37989" fg:w="308"/><text x="58.9121%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (295 samples, 0.46%)</title><rect x="58.6822%" y="725" width="0.4555%" height="15" fill="rgb(215,141,46)" fg:x="38002" fg:w="295"/><text x="58.9322%" y="735.50"></text></g><g><title>__GI___libc_malloc (283 samples, 0.44%)</title><rect x="58.7007%" y="709" width="0.4370%" height="15" fill="rgb(250,160,47)" fg:x="38014" fg:w="283"/><text x="58.9507%" y="719.50"></text></g><g><title>_int_malloc (237 samples, 0.37%)</title><rect x="58.7718%" y="693" width="0.3660%" height="15" fill="rgb(216,222,40)" fg:x="38060" fg:w="237"/><text x="59.0218%" y="703.50"></text></g><g><title>unlink_chunk.isra.0 (103 samples, 0.16%)</title><rect x="58.9787%" y="677" width="0.1591%" height="15" fill="rgb(234,217,39)" fg:x="38194" fg:w="103"/><text x="59.2287%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (40 samples, 0.06%)</title><rect x="59.0760%" y="661" width="0.0618%" height="15" fill="rgb(207,178,40)" fg:x="38257" fg:w="40"/><text x="59.3260%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.05%)</title><rect x="59.0899%" y="645" width="0.0479%" height="15" fill="rgb(221,136,13)" fg:x="38266" fg:w="31"/><text x="59.3399%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.05%)</title><rect x="59.0899%" y="629" width="0.0479%" height="15" fill="rgb(249,199,10)" fg:x="38266" fg:w="31"/><text x="59.3399%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.05%)</title><rect x="59.0899%" y="613" width="0.0479%" height="15" fill="rgb(249,222,13)" fg:x="38266" fg:w="31"/><text x="59.3399%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.04%)</title><rect x="59.0929%" y="597" width="0.0448%" height="15" fill="rgb(244,185,38)" fg:x="38268" fg:w="29"/><text x="59.3429%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="59.1022%" y="581" width="0.0355%" height="15" fill="rgb(236,202,9)" fg:x="38274" fg:w="23"/><text x="59.3522%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="59.1254%" y="565" width="0.0124%" height="15" fill="rgb(250,229,37)" fg:x="38289" fg:w="8"/><text x="59.3754%" y="575.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (2,573 samples, 3.97%)</title><rect x="55.2526%" y="757" width="3.9732%" height="15" fill="rgb(206,174,23)" fg:x="35781" fg:w="2573"/><text x="55.5026%" y="767.50">&lt;arr..</text></g><g><title>arrow_data::data::ArrayData::new_unchecked (57 samples, 0.09%)</title><rect x="59.1377%" y="741" width="0.0880%" height="15" fill="rgb(211,33,43)" fg:x="38297" fg:w="57"/><text x="59.3877%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.03%)</title><rect x="59.5284%" y="581" width="0.0263%" height="15" fill="rgb(245,58,50)" fg:x="38550" fg:w="17"/><text x="59.7784%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="59.5392%" y="565" width="0.0154%" height="15" fill="rgb(244,68,36)" fg:x="38557" fg:w="10"/><text x="59.7892%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (214 samples, 0.33%)</title><rect x="59.2257%" y="757" width="0.3305%" height="15" fill="rgb(232,229,15)" fg:x="38354" fg:w="214"/><text x="59.4757%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (199 samples, 0.31%)</title><rect x="59.2489%" y="741" width="0.3073%" height="15" fill="rgb(254,30,23)" fg:x="38369" fg:w="199"/><text x="59.4989%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (199 samples, 0.31%)</title><rect x="59.2489%" y="725" width="0.3073%" height="15" fill="rgb(235,160,14)" fg:x="38369" fg:w="199"/><text x="59.4989%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (199 samples, 0.31%)</title><rect x="59.2489%" y="709" width="0.3073%" height="15" fill="rgb(212,155,44)" fg:x="38369" fg:w="199"/><text x="59.4989%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (199 samples, 0.31%)</title><rect x="59.2489%" y="693" width="0.3073%" height="15" fill="rgb(226,2,50)" fg:x="38369" fg:w="199"/><text x="59.4989%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (195 samples, 0.30%)</title><rect x="59.2551%" y="677" width="0.3011%" height="15" fill="rgb(234,177,6)" fg:x="38373" fg:w="195"/><text x="59.5051%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (187 samples, 0.29%)</title><rect x="59.2674%" y="661" width="0.2888%" height="15" fill="rgb(217,24,9)" fg:x="38381" fg:w="187"/><text x="59.5174%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (183 samples, 0.28%)</title><rect x="59.2736%" y="645" width="0.2826%" height="15" fill="rgb(220,13,46)" fg:x="38385" fg:w="183"/><text x="59.5236%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (179 samples, 0.28%)</title><rect x="59.2798%" y="629" width="0.2764%" height="15" fill="rgb(239,221,27)" fg:x="38389" fg:w="179"/><text x="59.5298%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (178 samples, 0.27%)</title><rect x="59.2813%" y="613" width="0.2749%" height="15" fill="rgb(222,198,25)" fg:x="38390" fg:w="178"/><text x="59.5313%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (167 samples, 0.26%)</title><rect x="59.2983%" y="597" width="0.2579%" height="15" fill="rgb(211,99,13)" fg:x="38401" fg:w="167"/><text x="59.5483%" y="607.50"></text></g><g><title>__GI___libc_free (238 samples, 0.37%)</title><rect x="59.5577%" y="757" width="0.3675%" height="15" fill="rgb(232,111,31)" fg:x="38569" fg:w="238"/><text x="59.8077%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (563 samples, 0.87%)</title><rect x="66.2889%" y="725" width="0.8694%" height="15" fill="rgb(245,82,37)" fg:x="42928" fg:w="563"/><text x="66.5389%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (428 samples, 0.66%)</title><rect x="66.4973%" y="709" width="0.6609%" height="15" fill="rgb(227,149,46)" fg:x="43063" fg:w="428"/><text x="66.7473%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (420 samples, 0.65%)</title><rect x="66.5097%" y="693" width="0.6486%" height="15" fill="rgb(218,36,50)" fg:x="43071" fg:w="420"/><text x="66.7597%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (398 samples, 0.61%)</title><rect x="66.5436%" y="677" width="0.6146%" height="15" fill="rgb(226,80,48)" fg:x="43093" fg:w="398"/><text x="66.7936%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (367 samples, 0.57%)</title><rect x="66.5915%" y="661" width="0.5667%" height="15" fill="rgb(238,224,15)" fg:x="43124" fg:w="367"/><text x="66.8415%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (284 samples, 0.44%)</title><rect x="66.7197%" y="645" width="0.4385%" height="15" fill="rgb(241,136,10)" fg:x="43207" fg:w="284"/><text x="66.9697%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (108 samples, 0.17%)</title><rect x="66.9915%" y="629" width="0.1668%" height="15" fill="rgb(208,32,45)" fg:x="43383" fg:w="108"/><text x="67.2415%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (48 samples, 0.07%)</title><rect x="67.0841%" y="613" width="0.0741%" height="15" fill="rgb(207,135,9)" fg:x="43443" fg:w="48"/><text x="67.3341%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.06%)</title><rect x="67.0949%" y="597" width="0.0633%" height="15" fill="rgb(206,86,44)" fg:x="43450" fg:w="41"/><text x="67.3449%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (37 samples, 0.06%)</title><rect x="67.1011%" y="581" width="0.0571%" height="15" fill="rgb(245,177,15)" fg:x="43454" fg:w="37"/><text x="67.3511%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.06%)</title><rect x="67.1026%" y="565" width="0.0556%" height="15" fill="rgb(206,64,50)" fg:x="43455" fg:w="36"/><text x="67.3526%" y="575.50"></text></g><g><title>__GI___libc_malloc (4,689 samples, 7.24%)</title><rect x="59.9253%" y="757" width="7.2407%" height="15" fill="rgb(234,36,40)" fg:x="38807" fg:w="4689"/><text x="60.1753%" y="767.50">__GI___lib..</text></g><g><title>_int_malloc (3,993 samples, 6.17%)</title><rect x="61.0000%" y="741" width="6.1659%" height="15" fill="rgb(213,64,8)" fg:x="39503" fg:w="3993"/><text x="61.2500%" y="751.50">_int_mal..</text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="69.7247%" y="741" width="0.0355%" height="15" fill="rgb(210,75,36)" fg:x="45153" fg:w="23"/><text x="69.9747%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="69.7247%" y="725" width="0.0355%" height="15" fill="rgb(229,88,21)" fg:x="45153" fg:w="23"/><text x="69.9747%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="69.7247%" y="709" width="0.0355%" height="15" fill="rgb(252,204,47)" fg:x="45153" fg:w="23"/><text x="69.9747%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="69.7247%" y="693" width="0.0355%" height="15" fill="rgb(208,77,27)" fg:x="45153" fg:w="23"/><text x="69.9747%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="69.7247%" y="677" width="0.0355%" height="15" fill="rgb(221,76,26)" fg:x="45153" fg:w="23"/><text x="69.9747%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="69.7262%" y="661" width="0.0340%" height="15" fill="rgb(225,139,18)" fg:x="45154" fg:w="22"/><text x="69.9762%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="69.7262%" y="645" width="0.0340%" height="15" fill="rgb(230,137,11)" fg:x="45154" fg:w="22"/><text x="69.9762%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="69.7262%" y="629" width="0.0340%" height="15" fill="rgb(212,28,1)" fg:x="45154" fg:w="22"/><text x="69.9762%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="69.7262%" y="613" width="0.0340%" height="15" fill="rgb(248,164,17)" fg:x="45154" fg:w="22"/><text x="69.9762%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="69.7262%" y="597" width="0.0340%" height="15" fill="rgb(222,171,42)" fg:x="45154" fg:w="22"/><text x="69.9762%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="69.7262%" y="581" width="0.0340%" height="15" fill="rgb(243,84,45)" fg:x="45154" fg:w="22"/><text x="69.9762%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (594 samples, 0.92%)</title><rect x="71.5036%" y="725" width="0.9172%" height="15" fill="rgb(252,49,23)" fg:x="46305" fg:w="594"/><text x="71.7536%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (420 samples, 0.65%)</title><rect x="71.7723%" y="709" width="0.6486%" height="15" fill="rgb(215,19,7)" fg:x="46479" fg:w="420"/><text x="72.0223%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (411 samples, 0.63%)</title><rect x="71.7862%" y="693" width="0.6347%" height="15" fill="rgb(238,81,41)" fg:x="46488" fg:w="411"/><text x="72.0362%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (377 samples, 0.58%)</title><rect x="71.8387%" y="677" width="0.5822%" height="15" fill="rgb(210,199,37)" fg:x="46522" fg:w="377"/><text x="72.0887%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (333 samples, 0.51%)</title><rect x="71.9066%" y="661" width="0.5142%" height="15" fill="rgb(244,192,49)" fg:x="46566" fg:w="333"/><text x="72.1566%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (246 samples, 0.38%)</title><rect x="72.0410%" y="645" width="0.3799%" height="15" fill="rgb(226,211,11)" fg:x="46653" fg:w="246"/><text x="72.2910%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (73 samples, 0.11%)</title><rect x="72.3081%" y="629" width="0.1127%" height="15" fill="rgb(236,162,54)" fg:x="46826" fg:w="73"/><text x="72.5581%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="72.3868%" y="613" width="0.0340%" height="15" fill="rgb(220,229,9)" fg:x="46877" fg:w="22"/><text x="72.6368%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="72.4054%" y="597" width="0.0154%" height="15" fill="rgb(250,87,22)" fg:x="46889" fg:w="10"/><text x="72.6554%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="72.4069%" y="581" width="0.0139%" height="15" fill="rgb(239,43,17)" fg:x="46890" fg:w="9"/><text x="72.6569%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="72.4085%" y="565" width="0.0124%" height="15" fill="rgb(231,177,25)" fg:x="46891" fg:w="8"/><text x="72.6585%" y="575.50"></text></g><g><title>_int_malloc (1,730 samples, 2.67%)</title><rect x="69.7602%" y="741" width="2.6714%" height="15" fill="rgb(219,179,1)" fg:x="45176" fg:w="1730"/><text x="70.0102%" y="751.50">_i..</text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.01%)</title><rect x="72.4208%" y="725" width="0.0108%" height="15" fill="rgb(238,219,53)" fg:x="46899" fg:w="7"/><text x="72.6708%" y="735.50"></text></g><g><title>__calloc (3,414 samples, 5.27%)</title><rect x="67.1660%" y="757" width="5.2719%" height="15" fill="rgb(232,167,36)" fg:x="43496" fg:w="3414"/><text x="67.4160%" y="767.50">__call..</text></g><g><title>_int_free (358 samples, 0.55%)</title><rect x="73.3257%" y="725" width="0.5528%" height="15" fill="rgb(244,19,51)" fg:x="47485" fg:w="358"/><text x="73.5757%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.04%)</title><rect x="77.2881%" y="709" width="0.0448%" height="15" fill="rgb(224,6,22)" fg:x="50051" fg:w="29"/><text x="77.5381%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.04%)</title><rect x="77.2881%" y="693" width="0.0448%" height="15" fill="rgb(224,145,5)" fg:x="50051" fg:w="29"/><text x="77.5381%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.04%)</title><rect x="77.2881%" y="677" width="0.0448%" height="15" fill="rgb(234,130,49)" fg:x="50051" fg:w="29"/><text x="77.5381%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.04%)</title><rect x="77.2912%" y="661" width="0.0417%" height="15" fill="rgb(254,6,2)" fg:x="50053" fg:w="27"/><text x="77.5412%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.04%)</title><rect x="77.2912%" y="645" width="0.0417%" height="15" fill="rgb(208,96,46)" fg:x="50053" fg:w="27"/><text x="77.5412%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.04%)</title><rect x="77.2912%" y="629" width="0.0417%" height="15" fill="rgb(239,3,39)" fg:x="50053" fg:w="27"/><text x="77.5412%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (27 samples, 0.04%)</title><rect x="77.2912%" y="613" width="0.0417%" height="15" fill="rgb(233,210,1)" fg:x="50053" fg:w="27"/><text x="77.5412%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (26 samples, 0.04%)</title><rect x="77.2927%" y="597" width="0.0401%" height="15" fill="rgb(244,137,37)" fg:x="50054" fg:w="26"/><text x="77.5427%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (25 samples, 0.04%)</title><rect x="77.2943%" y="581" width="0.0386%" height="15" fill="rgb(240,136,2)" fg:x="50055" fg:w="25"/><text x="77.5443%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="77.2958%" y="565" width="0.0371%" height="15" fill="rgb(239,18,37)" fg:x="50056" fg:w="24"/><text x="77.5458%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="77.2958%" y="549" width="0.0371%" height="15" fill="rgb(218,185,22)" fg:x="50056" fg:w="24"/><text x="77.5458%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="77.3221%" y="533" width="0.0108%" height="15" fill="rgb(225,218,4)" fg:x="50073" fg:w="7"/><text x="77.5721%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="77.3221%" y="517" width="0.0108%" height="15" fill="rgb(230,182,32)" fg:x="50073" fg:w="7"/><text x="77.5721%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (68 samples, 0.11%)</title><rect x="80.2746%" y="693" width="0.1050%" height="15" fill="rgb(242,56,43)" fg:x="51985" fg:w="68"/><text x="80.5246%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.07%)</title><rect x="80.3116%" y="677" width="0.0679%" height="15" fill="rgb(233,99,24)" fg:x="52009" fg:w="44"/><text x="80.5616%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.07%)</title><rect x="80.3116%" y="661" width="0.0679%" height="15" fill="rgb(234,209,42)" fg:x="52009" fg:w="44"/><text x="80.5616%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (38 samples, 0.06%)</title><rect x="80.3209%" y="645" width="0.0587%" height="15" fill="rgb(227,7,12)" fg:x="52015" fg:w="38"/><text x="80.5709%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.06%)</title><rect x="80.3240%" y="629" width="0.0556%" height="15" fill="rgb(245,203,43)" fg:x="52017" fg:w="36"/><text x="80.5740%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.05%)</title><rect x="80.3317%" y="613" width="0.0479%" height="15" fill="rgb(238,205,33)" fg:x="52022" fg:w="31"/><text x="80.5817%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (18 samples, 0.03%)</title><rect x="80.3518%" y="597" width="0.0278%" height="15" fill="rgb(231,56,7)" fg:x="52035" fg:w="18"/><text x="80.6018%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.02%)</title><rect x="80.3549%" y="581" width="0.0247%" height="15" fill="rgb(244,186,29)" fg:x="52037" fg:w="16"/><text x="80.6049%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="80.3564%" y="565" width="0.0232%" height="15" fill="rgb(234,111,31)" fg:x="52038" fg:w="15"/><text x="80.6064%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="80.3579%" y="549" width="0.0216%" height="15" fill="rgb(241,149,10)" fg:x="52039" fg:w="14"/><text x="80.6079%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="80.3579%" y="533" width="0.0216%" height="15" fill="rgb(249,206,44)" fg:x="52039" fg:w="14"/><text x="80.6079%" y="543.50"></text></g><g><title>malloc_consolidate (2,078 samples, 3.21%)</title><rect x="77.3329%" y="709" width="3.2088%" height="15" fill="rgb(251,153,30)" fg:x="50080" fg:w="2078"/><text x="77.5829%" y="719.50">mal..</text></g><g><title>unlink_chunk.isra.0 (105 samples, 0.16%)</title><rect x="80.3796%" y="693" width="0.1621%" height="15" fill="rgb(239,152,38)" fg:x="52053" fg:w="105"/><text x="80.6296%" y="703.50"></text></g><g><title>__posix_memalign (5,504 samples, 8.50%)</title><rect x="72.4378%" y="757" width="8.4992%" height="15" fill="rgb(249,139,47)" fg:x="46910" fg:w="5504"/><text x="72.6878%" y="767.50">__posix_mema..</text></g><g><title>_int_memalign (5,097 samples, 7.87%)</title><rect x="73.0663%" y="741" width="7.8707%" height="15" fill="rgb(244,64,35)" fg:x="47317" fg:w="5097"/><text x="73.3163%" y="751.50">_int_memali..</text></g><g><title>_int_malloc (4,571 samples, 7.06%)</title><rect x="73.8785%" y="725" width="7.0585%" height="15" fill="rgb(216,46,15)" fg:x="47843" fg:w="4571"/><text x="74.1285%" y="735.50">_int_mall..</text></g><g><title>unlink_chunk.isra.0 (256 samples, 0.40%)</title><rect x="80.5417%" y="709" width="0.3953%" height="15" fill="rgb(250,74,19)" fg:x="52158" fg:w="256"/><text x="80.7917%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="741" width="0.0216%" height="15" fill="rgb(249,42,33)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="725" width="0.0216%" height="15" fill="rgb(242,149,17)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="709" width="0.0216%" height="15" fill="rgb(244,29,21)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="693" width="0.0216%" height="15" fill="rgb(220,130,37)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="677" width="0.0216%" height="15" fill="rgb(211,67,2)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="661" width="0.0216%" height="15" fill="rgb(235,68,52)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="645" width="0.0216%" height="15" fill="rgb(246,142,3)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="629" width="0.0216%" height="15" fill="rgb(241,25,7)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="613" width="0.0216%" height="15" fill="rgb(242,119,39)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="597" width="0.0216%" height="15" fill="rgb(241,98,45)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="82.8487%" y="581" width="0.0216%" height="15" fill="rgb(254,28,30)" fg:x="53652" fg:w="14"/><text x="83.0987%" y="591.50"></text></g><g><title>malloc_consolidate (20 samples, 0.03%)</title><rect x="82.8703%" y="741" width="0.0309%" height="15" fill="rgb(241,142,54)" fg:x="53666" fg:w="20"/><text x="83.1203%" y="751.50"></text></g><g><title>_int_free (1,283 samples, 1.98%)</title><rect x="80.9370%" y="757" width="1.9812%" height="15" fill="rgb(222,85,15)" fg:x="52414" fg:w="1283"/><text x="81.1870%" y="767.50">_..</text></g><g><title>unlink_chunk.isra.0 (11 samples, 0.02%)</title><rect x="82.9012%" y="741" width="0.0170%" height="15" fill="rgb(210,85,47)" fg:x="53686" fg:w="11"/><text x="83.1512%" y="751.50"></text></g><g><title>arrow_array::array::Array::len (9 samples, 0.01%)</title><rect x="82.9846%" y="741" width="0.0139%" height="15" fill="rgb(224,206,25)" fg:x="53740" fg:w="9"/><text x="83.2346%" y="751.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (624 samples, 0.96%)</title><rect x="82.9182%" y="757" width="0.9636%" height="15" fill="rgb(243,201,19)" fg:x="53697" fg:w="624"/><text x="83.1682%" y="767.50"></text></g><g><title>arrow_array::array::Array::null_count (572 samples, 0.88%)</title><rect x="82.9985%" y="741" width="0.8833%" height="15" fill="rgb(236,59,4)" fg:x="53749" fg:w="572"/><text x="83.2485%" y="751.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.03%)</title><rect x="83.9374%" y="741" width="0.0263%" height="15" fill="rgb(254,179,45)" fg:x="54357" fg:w="17"/><text x="84.1874%" y="751.50"></text></g><g><title>arrow_schema::field::Field::new (62 samples, 0.10%)</title><rect x="83.8818%" y="757" width="0.0957%" height="15" fill="rgb(226,14,10)" fg:x="54321" fg:w="62"/><text x="84.1318%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.01%)</title><rect x="83.9636%" y="741" width="0.0139%" height="15" fill="rgb(244,27,41)" fg:x="54374" fg:w="9"/><text x="84.2136%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="709" width="0.0124%" height="15" fill="rgb(235,35,32)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="693" width="0.0124%" height="15" fill="rgb(218,68,31)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="677" width="0.0124%" height="15" fill="rgb(207,120,37)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="661" width="0.0124%" height="15" fill="rgb(227,98,0)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="645" width="0.0124%" height="15" fill="rgb(207,7,3)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="629" width="0.0124%" height="15" fill="rgb(206,98,19)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="613" width="0.0124%" height="15" fill="rgb(217,5,26)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="597" width="0.0124%" height="15" fill="rgb(235,190,38)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="581" width="0.0124%" height="15" fill="rgb(247,86,24)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="565" width="0.0124%" height="15" fill="rgb(205,101,16)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="85.0260%" y="549" width="0.0124%" height="15" fill="rgb(246,168,33)" fg:x="55062" fg:w="8"/><text x="85.2760%" y="559.50"></text></g><g><title>__GI___libc_free (65 samples, 0.10%)</title><rect x="85.0384%" y="709" width="0.1004%" height="15" fill="rgb(231,114,1)" fg:x="55070" fg:w="65"/><text x="85.2884%" y="719.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.04%)</title><rect x="85.1387%" y="709" width="0.0448%" height="15" fill="rgb(207,184,53)" fg:x="55135" fg:w="29"/><text x="85.3887%" y="719.50"></text></g><g><title>__memset_avx2_erms (121 samples, 0.19%)</title><rect x="85.5063%" y="693" width="0.1868%" height="15" fill="rgb(224,95,51)" fg:x="55373" fg:w="121"/><text x="85.7563%" y="703.50"></text></g><g><title>__memset_avx2_unaligned_erms (26 samples, 0.04%)</title><rect x="85.6931%" y="693" width="0.0401%" height="15" fill="rgb(212,188,45)" fg:x="55494" fg:w="26"/><text x="85.9431%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (91 samples, 0.14%)</title><rect x="86.7571%" y="677" width="0.1405%" height="15" fill="rgb(223,154,38)" fg:x="56183" fg:w="91"/><text x="87.0071%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (69 samples, 0.11%)</title><rect x="86.7910%" y="661" width="0.1065%" height="15" fill="rgb(251,22,52)" fg:x="56205" fg:w="69"/><text x="87.0410%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (69 samples, 0.11%)</title><rect x="86.7910%" y="645" width="0.1065%" height="15" fill="rgb(229,209,22)" fg:x="56205" fg:w="69"/><text x="87.0410%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (67 samples, 0.10%)</title><rect x="86.7941%" y="629" width="0.1035%" height="15" fill="rgb(234,138,34)" fg:x="56207" fg:w="67"/><text x="87.0441%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (58 samples, 0.09%)</title><rect x="86.8080%" y="613" width="0.0896%" height="15" fill="rgb(212,95,11)" fg:x="56216" fg:w="58"/><text x="87.0580%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.07%)</title><rect x="86.8250%" y="597" width="0.0726%" height="15" fill="rgb(240,179,47)" fg:x="56227" fg:w="47"/><text x="87.0750%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="86.8605%" y="581" width="0.0371%" height="15" fill="rgb(240,163,11)" fg:x="56250" fg:w="24"/><text x="87.1105%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (16 samples, 0.02%)</title><rect x="86.8729%" y="565" width="0.0247%" height="15" fill="rgb(236,37,12)" fg:x="56258" fg:w="16"/><text x="87.1229%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="86.8744%" y="549" width="0.0232%" height="15" fill="rgb(232,164,16)" fg:x="56259" fg:w="15"/><text x="87.1244%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="86.8744%" y="533" width="0.0232%" height="15" fill="rgb(244,205,15)" fg:x="56259" fg:w="15"/><text x="87.1244%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="86.8760%" y="517" width="0.0216%" height="15" fill="rgb(223,117,47)" fg:x="56260" fg:w="14"/><text x="87.1260%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="86.8837%" y="501" width="0.0139%" height="15" fill="rgb(244,107,35)" fg:x="56265" fg:w="9"/><text x="87.1337%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="86.8852%" y="485" width="0.0124%" height="15" fill="rgb(205,140,8)" fg:x="56266" fg:w="8"/><text x="87.1352%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="86.8868%" y="469" width="0.0108%" height="15" fill="rgb(228,84,46)" fg:x="56267" fg:w="7"/><text x="87.1368%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="86.8868%" y="453" width="0.0108%" height="15" fill="rgb(254,188,9)" fg:x="56267" fg:w="7"/><text x="87.1368%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="86.8868%" y="437" width="0.0108%" height="15" fill="rgb(206,112,54)" fg:x="56267" fg:w="7"/><text x="87.1368%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="86.8868%" y="421" width="0.0108%" height="15" fill="rgb(216,84,49)" fg:x="56267" fg:w="7"/><text x="87.1368%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="86.8868%" y="405" width="0.0108%" height="15" fill="rgb(214,194,35)" fg:x="56267" fg:w="7"/><text x="87.1368%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="86.8868%" y="389" width="0.0108%" height="15" fill="rgb(249,28,3)" fg:x="56267" fg:w="7"/><text x="87.1368%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.06%)</title><rect x="87.8334%" y="661" width="0.0556%" height="15" fill="rgb(222,56,52)" fg:x="56880" fg:w="36"/><text x="88.0834%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="87.8519%" y="645" width="0.0371%" height="15" fill="rgb(245,217,50)" fg:x="56892" fg:w="24"/><text x="88.1019%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="87.8534%" y="629" width="0.0355%" height="15" fill="rgb(213,201,24)" fg:x="56893" fg:w="23"/><text x="88.1034%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (22 samples, 0.03%)</title><rect x="87.8550%" y="613" width="0.0340%" height="15" fill="rgb(248,116,28)" fg:x="56894" fg:w="22"/><text x="88.1050%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (20 samples, 0.03%)</title><rect x="87.8581%" y="597" width="0.0309%" height="15" fill="rgb(219,72,43)" fg:x="56896" fg:w="20"/><text x="88.1081%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.03%)</title><rect x="87.8627%" y="581" width="0.0263%" height="15" fill="rgb(209,138,14)" fg:x="56899" fg:w="17"/><text x="88.1127%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="87.8735%" y="565" width="0.0154%" height="15" fill="rgb(222,18,33)" fg:x="56906" fg:w="10"/><text x="88.1235%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="87.8781%" y="549" width="0.0108%" height="15" fill="rgb(213,199,7)" fg:x="56909" fg:w="7"/><text x="88.1281%" y="559.50"></text></g><g><title>malloc_consolidate (647 samples, 1.00%)</title><rect x="86.8976%" y="677" width="0.9991%" height="15" fill="rgb(250,110,10)" fg:x="56274" fg:w="647"/><text x="87.1476%" y="687.50"></text></g><g><title>__calloc (1,868 samples, 2.88%)</title><rect x="85.1835%" y="709" width="2.8845%" height="15" fill="rgb(248,123,6)" fg:x="55164" fg:w="1868"/><text x="85.4335%" y="719.50">__..</text></g><g><title>_int_malloc (1,512 samples, 2.33%)</title><rect x="85.7333%" y="693" width="2.3348%" height="15" fill="rgb(206,91,31)" fg:x="55520" fg:w="1512"/><text x="85.9833%" y="703.50">_..</text></g><g><title>unlink_chunk.isra.0 (111 samples, 0.17%)</title><rect x="87.8967%" y="677" width="0.1714%" height="15" fill="rgb(211,154,13)" fg:x="56921" fg:w="111"/><text x="88.1467%" y="687.50"></text></g><g><title>_int_free (197 samples, 0.30%)</title><rect x="88.4340%" y="677" width="0.3042%" height="15" fill="rgb(225,148,7)" fg:x="57269" fg:w="197"/><text x="88.6840%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="661" width="0.0124%" height="15" fill="rgb(220,160,43)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="645" width="0.0124%" height="15" fill="rgb(213,52,39)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="629" width="0.0124%" height="15" fill="rgb(243,137,7)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="613" width="0.0124%" height="15" fill="rgb(230,79,13)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="597" width="0.0124%" height="15" fill="rgb(247,105,23)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="581" width="0.0124%" height="15" fill="rgb(223,179,41)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="565" width="0.0124%" height="15" fill="rgb(218,9,34)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="549" width="0.0124%" height="15" fill="rgb(222,106,8)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="88.7259%" y="533" width="0.0124%" height="15" fill="rgb(211,220,0)" fg:x="57458" fg:w="8"/><text x="88.9759%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="88.7274%" y="517" width="0.0108%" height="15" fill="rgb(229,52,16)" fg:x="57459" fg:w="7"/><text x="88.9774%" y="527.50"></text></g><g><title>malloc_consolidate (88 samples, 0.14%)</title><rect x="89.3899%" y="661" width="0.1359%" height="15" fill="rgb(212,155,18)" fg:x="57888" fg:w="88"/><text x="89.6399%" y="671.50"></text></g><g><title>__posix_memalign (1,099 samples, 1.70%)</title><rect x="88.0681%" y="709" width="1.6971%" height="15" fill="rgb(242,21,14)" fg:x="57032" fg:w="1099"/><text x="88.3181%" y="719.50"></text></g><g><title>_int_memalign (921 samples, 1.42%)</title><rect x="88.3429%" y="693" width="1.4222%" height="15" fill="rgb(222,19,48)" fg:x="57210" fg:w="921"/><text x="88.5929%" y="703.50"></text></g><g><title>_int_malloc (665 samples, 1.03%)</title><rect x="88.7382%" y="677" width="1.0269%" height="15" fill="rgb(232,45,27)" fg:x="57466" fg:w="665"/><text x="88.9882%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (155 samples, 0.24%)</title><rect x="89.5258%" y="661" width="0.2393%" height="15" fill="rgb(249,103,42)" fg:x="57976" fg:w="155"/><text x="89.7758%" y="671.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (39,451 samples, 60.92%)</title><rect x="30.2105%" y="773" width="60.9197%" height="15" fill="rgb(246,81,33)" fg:x="19564" fg:w="39451"/><text x="30.4605%" y="783.50">&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_ne..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (4,632 samples, 7.15%)</title><rect x="83.9775%" y="757" width="7.1527%" height="15" fill="rgb(252,33,42)" fg:x="54383" fg:w="4632"/><text x="84.2275%" y="767.50">fastfull_s..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (4,561 samples, 7.04%)</title><rect x="84.0872%" y="741" width="7.0430%" height="15" fill="rgb(209,212,41)" fg:x="54454" fg:w="4561"/><text x="84.3372%" y="751.50">fastfull_..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (4,527 samples, 6.99%)</title><rect x="84.1397%" y="725" width="6.9905%" height="15" fill="rgb(207,154,6)" fg:x="54488" fg:w="4527"/><text x="84.3897%" y="735.50">fastfull_..</text></g><g><title>_int_free (884 samples, 1.37%)</title><rect x="89.7651%" y="709" width="1.3651%" height="15" fill="rgb(223,64,47)" fg:x="58131" fg:w="884"/><text x="90.0151%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.03%)</title><rect x="91.1039%" y="693" width="0.0263%" height="15" fill="rgb(211,161,38)" fg:x="58998" fg:w="17"/><text x="91.3539%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="91.1070%" y="677" width="0.0232%" height="15" fill="rgb(219,138,40)" fg:x="59000" fg:w="15"/><text x="91.3570%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.02%)</title><rect x="91.1070%" y="661" width="0.0232%" height="15" fill="rgb(241,228,46)" fg:x="59000" fg:w="15"/><text x="91.3570%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="91.1086%" y="645" width="0.0216%" height="15" fill="rgb(223,209,38)" fg:x="59001" fg:w="14"/><text x="91.3586%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="91.1086%" y="629" width="0.0216%" height="15" fill="rgb(236,164,45)" fg:x="59001" fg:w="14"/><text x="91.3586%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="91.1086%" y="613" width="0.0216%" height="15" fill="rgb(231,15,5)" fg:x="59001" fg:w="14"/><text x="91.3586%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="91.1132%" y="597" width="0.0170%" height="15" fill="rgb(252,35,15)" fg:x="59004" fg:w="11"/><text x="91.3632%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="91.1132%" y="581" width="0.0170%" height="15" fill="rgb(248,181,18)" fg:x="59004" fg:w="11"/><text x="91.3632%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="91.1147%" y="565" width="0.0154%" height="15" fill="rgb(233,39,42)" fg:x="59005" fg:w="10"/><text x="91.3647%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="91.1163%" y="549" width="0.0139%" height="15" fill="rgb(238,110,33)" fg:x="59006" fg:w="9"/><text x="91.3663%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="91.1163%" y="533" width="0.0139%" height="15" fill="rgb(233,195,10)" fg:x="59006" fg:w="9"/><text x="91.3663%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="91.1827%" y="709" width="0.0185%" height="15" fill="rgb(254,105,3)" fg:x="59049" fg:w="12"/><text x="91.4327%" y="719.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="91.2012%" y="709" width="0.0108%" height="15" fill="rgb(221,225,9)" fg:x="59061" fg:w="7"/><text x="91.4512%" y="719.50"></text></g><g><title>malloc_consolidate (66 samples, 0.10%)</title><rect x="91.3850%" y="693" width="0.1019%" height="15" fill="rgb(224,227,45)" fg:x="59180" fg:w="66"/><text x="91.6350%" y="703.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="91.4715%" y="677" width="0.0154%" height="15" fill="rgb(229,198,43)" fg:x="59236" fg:w="10"/><text x="91.7215%" y="687.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (39,715 samples, 61.33%)</title><rect x="30.1719%" y="789" width="61.3274%" height="15" fill="rgb(206,209,35)" fg:x="19539" fg:w="39715"/><text x="30.4219%" y="799.50">&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::po..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 samples, 0.37%)</title><rect x="91.1302%" y="773" width="0.3691%" height="15" fill="rgb(245,195,53)" fg:x="59015" fg:w="239"/><text x="91.3802%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (234 samples, 0.36%)</title><rect x="91.1379%" y="757" width="0.3613%" height="15" fill="rgb(240,92,26)" fg:x="59020" fg:w="234"/><text x="91.3879%" y="767.50"></text></g><g><title>__GI___libc_realloc (227 samples, 0.35%)</title><rect x="91.1487%" y="741" width="0.3505%" height="15" fill="rgb(207,40,23)" fg:x="59027" fg:w="227"/><text x="91.3987%" y="751.50"></text></g><g><title>_int_realloc (206 samples, 0.32%)</title><rect x="91.1811%" y="725" width="0.3181%" height="15" fill="rgb(223,111,35)" fg:x="59048" fg:w="206"/><text x="91.4311%" y="735.50"></text></g><g><title>_int_malloc (186 samples, 0.29%)</title><rect x="91.2120%" y="709" width="0.2872%" height="15" fill="rgb(229,147,28)" fg:x="59068" fg:w="186"/><text x="91.4620%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.01%)</title><rect x="91.4869%" y="693" width="0.0124%" height="15" fill="rgb(211,29,28)" fg:x="59246" fg:w="8"/><text x="91.7369%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (126 samples, 0.19%)</title><rect x="91.5101%" y="741" width="0.1946%" height="15" fill="rgb(228,72,33)" fg:x="59261" fg:w="126"/><text x="91.7601%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (120 samples, 0.19%)</title><rect x="91.5193%" y="725" width="0.1853%" height="15" fill="rgb(205,214,31)" fg:x="59267" fg:w="120"/><text x="91.7693%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (118 samples, 0.18%)</title><rect x="91.5224%" y="709" width="0.1822%" height="15" fill="rgb(224,111,15)" fg:x="59269" fg:w="118"/><text x="91.7724%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (118 samples, 0.18%)</title><rect x="91.5224%" y="693" width="0.1822%" height="15" fill="rgb(253,21,26)" fg:x="59269" fg:w="118"/><text x="91.7724%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (113 samples, 0.17%)</title><rect x="91.5301%" y="677" width="0.1745%" height="15" fill="rgb(245,139,43)" fg:x="59274" fg:w="113"/><text x="91.7801%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (110 samples, 0.17%)</title><rect x="91.5348%" y="661" width="0.1699%" height="15" fill="rgb(252,170,7)" fg:x="59277" fg:w="110"/><text x="91.7848%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (106 samples, 0.16%)</title><rect x="91.5409%" y="645" width="0.1637%" height="15" fill="rgb(231,118,14)" fg:x="59281" fg:w="106"/><text x="91.7909%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (81 samples, 0.13%)</title><rect x="91.5795%" y="629" width="0.1251%" height="15" fill="rgb(238,83,0)" fg:x="59306" fg:w="81"/><text x="91.8295%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (67 samples, 0.10%)</title><rect x="91.6012%" y="613" width="0.1035%" height="15" fill="rgb(221,39,39)" fg:x="59320" fg:w="67"/><text x="91.8512%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (56 samples, 0.09%)</title><rect x="91.6182%" y="597" width="0.0865%" height="15" fill="rgb(222,119,46)" fg:x="59331" fg:w="56"/><text x="91.8682%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (52 samples, 0.08%)</title><rect x="91.6243%" y="581" width="0.0803%" height="15" fill="rgb(222,165,49)" fg:x="59335" fg:w="52"/><text x="91.8743%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (48 samples, 0.07%)</title><rect x="91.6305%" y="565" width="0.0741%" height="15" fill="rgb(219,113,52)" fg:x="59339" fg:w="48"/><text x="91.8805%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.07%)</title><rect x="91.6321%" y="549" width="0.0726%" height="15" fill="rgb(214,7,15)" fg:x="59340" fg:w="47"/><text x="91.8821%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (43 samples, 0.07%)</title><rect x="91.6382%" y="533" width="0.0664%" height="15" fill="rgb(235,32,4)" fg:x="59344" fg:w="43"/><text x="91.8882%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (40 samples, 0.06%)</title><rect x="91.6429%" y="517" width="0.0618%" height="15" fill="rgb(238,90,54)" fg:x="59347" fg:w="40"/><text x="91.8929%" y="527.50"></text></g><g><title>__libc_read (129 samples, 0.20%)</title><rect x="91.5070%" y="773" width="0.1992%" height="15" fill="rgb(213,208,19)" fg:x="59259" fg:w="129"/><text x="91.7570%" y="783.50"></text></g><g><title>__libc_read (128 samples, 0.20%)</title><rect x="91.5085%" y="757" width="0.1977%" height="15" fill="rgb(233,156,4)" fg:x="59260" fg:w="128"/><text x="91.7585%" y="767.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.24%)</title><rect x="91.4993%" y="789" width="0.2363%" height="15" fill="rgb(207,194,5)" fg:x="59254" fg:w="153"/><text x="91.7493%" y="799.50"></text></g><g><title>core::str::converts::from_utf8 (8 samples, 0.01%)</title><rect x="91.7232%" y="773" width="0.0124%" height="15" fill="rgb(206,111,30)" fg:x="59399" fg:w="8"/><text x="91.9732%" y="783.50"></text></g><g><title>__GI___libc_free (22 samples, 0.03%)</title><rect x="91.7401%" y="789" width="0.0340%" height="15" fill="rgb(243,70,54)" fg:x="59410" fg:w="22"/><text x="91.9901%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (45 samples, 0.07%)</title><rect x="91.7787%" y="789" width="0.0695%" height="15" fill="rgb(242,28,8)" fg:x="59435" fg:w="45"/><text x="92.0287%" y="799.50"></text></g><g><title>malloc_consolidate (56 samples, 0.09%)</title><rect x="91.8791%" y="773" width="0.0865%" height="15" fill="rgb(219,106,18)" fg:x="59500" fg:w="56"/><text x="92.1291%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (17 samples, 0.03%)</title><rect x="91.9393%" y="757" width="0.0263%" height="15" fill="rgb(244,222,10)" fg:x="59539" fg:w="17"/><text x="92.1893%" y="767.50"></text></g><g><title>_int_free (81 samples, 0.13%)</title><rect x="91.8482%" y="789" width="0.1251%" height="15" fill="rgb(236,179,52)" fg:x="59480" fg:w="81"/><text x="92.0982%" y="799.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="91.9872%" y="773" width="0.0232%" height="15" fill="rgb(213,23,39)" fg:x="59570" fg:w="15"/><text x="92.2372%" y="783.50"></text></g><g><title>_int_malloc (9 samples, 0.01%)</title><rect x="91.9965%" y="757" width="0.0139%" height="15" fill="rgb(238,48,10)" fg:x="59576" fg:w="9"/><text x="92.2465%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (25 samples, 0.04%)</title><rect x="91.9733%" y="789" width="0.0386%" height="15" fill="rgb(251,196,23)" fg:x="59561" fg:w="25"/><text x="92.2233%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="92.0335%" y="757" width="0.0154%" height="15" fill="rgb(250,152,24)" fg:x="59600" fg:w="10"/><text x="92.2835%" y="767.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="92.0351%" y="741" width="0.0139%" height="15" fill="rgb(209,150,17)" fg:x="59601" fg:w="9"/><text x="92.2851%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (26 samples, 0.04%)</title><rect x="92.0119%" y="789" width="0.0401%" height="15" fill="rgb(234,202,34)" fg:x="59586" fg:w="26"/><text x="92.2619%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.02%)</title><rect x="92.0335%" y="773" width="0.0185%" height="15" fill="rgb(253,148,53)" fg:x="59600" fg:w="12"/><text x="92.2835%" y="783.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="92.0737%" y="773" width="0.0108%" height="15" fill="rgb(218,129,16)" fg:x="59626" fg:w="7"/><text x="92.3237%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionState&gt; (32 samples, 0.05%)</title><rect x="92.0521%" y="789" width="0.0494%" height="15" fill="rgb(216,85,19)" fg:x="59612" fg:w="32"/><text x="92.3021%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (11 samples, 0.02%)</title><rect x="92.0845%" y="773" width="0.0170%" height="15" fill="rgb(235,228,7)" fg:x="59633" fg:w="11"/><text x="92.3345%" y="783.50"></text></g><g><title>_int_free (14 samples, 0.02%)</title><rect x="92.1107%" y="773" width="0.0216%" height="15" fill="rgb(245,175,0)" fg:x="59650" fg:w="14"/><text x="92.3607%" y="783.50"></text></g><g><title>_int_free (16 samples, 0.02%)</title><rect x="92.1339%" y="757" width="0.0247%" height="15" fill="rgb(208,168,36)" fg:x="59665" fg:w="16"/><text x="92.3839%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_expr::logical_plan::plan::Predicate&gt;&gt; (24 samples, 0.04%)</title><rect x="92.1324%" y="773" width="0.0371%" height="15" fill="rgb(246,171,24)" fg:x="59664" fg:w="24"/><text x="92.3824%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(datafusion_expr::logical_plan::plan::Predicate,f64,usize,usize)&gt; (7 samples, 0.01%)</title><rect x="92.1586%" y="757" width="0.0108%" height="15" fill="rgb(215,142,24)" fg:x="59681" fg:w="7"/><text x="92.4086%" y="767.50"></text></g><g><title>_int_free (25 samples, 0.04%)</title><rect x="92.1710%" y="757" width="0.0386%" height="15" fill="rgb(250,187,7)" fg:x="59689" fg:w="25"/><text x="92.4210%" y="767.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="92.2111%" y="741" width="0.0124%" height="15" fill="rgb(228,66,33)" fg:x="59715" fg:w="8"/><text x="92.4611%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (14 samples, 0.02%)</title><rect x="92.2096%" y="757" width="0.0216%" height="15" fill="rgb(234,215,21)" fg:x="59714" fg:w="14"/><text x="92.4596%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (90 samples, 0.14%)</title><rect x="92.1015%" y="789" width="0.1390%" height="15" fill="rgb(222,191,20)" fg:x="59644" fg:w="90"/><text x="92.3515%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (46 samples, 0.07%)</title><rect x="92.1694%" y="773" width="0.0710%" height="15" fill="rgb(245,79,54)" fg:x="59688" fg:w="46"/><text x="92.4194%" y="783.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="92.2713%" y="757" width="0.0170%" height="15" fill="rgb(240,10,37)" fg:x="59754" fg:w="11"/><text x="92.5213%" y="767.50"></text></g><g><title>__GI___libc_free (11 samples, 0.02%)</title><rect x="92.3532%" y="741" width="0.0170%" height="15" fill="rgb(214,192,32)" fg:x="59807" fg:w="11"/><text x="92.6032%" y="751.50"></text></g><g><title>malloc_consolidate (11 samples, 0.02%)</title><rect x="92.4150%" y="725" width="0.0170%" height="15" fill="rgb(209,36,54)" fg:x="59847" fg:w="11"/><text x="92.6650%" y="735.50"></text></g><g><title>_int_free (42 samples, 0.06%)</title><rect x="92.3702%" y="741" width="0.0649%" height="15" fill="rgb(220,10,11)" fg:x="59818" fg:w="42"/><text x="92.6202%" y="751.50"></text></g><g><title>__GI___libc_free (13 samples, 0.02%)</title><rect x="92.4397%" y="725" width="0.0201%" height="15" fill="rgb(221,106,17)" fg:x="59863" fg:w="13"/><text x="92.6897%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[arrow_schema::field::Field]&gt; (23 samples, 0.04%)</title><rect x="92.4350%" y="741" width="0.0355%" height="15" fill="rgb(251,142,44)" fg:x="59860" fg:w="23"/><text x="92.6850%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;arrow_array::record_batch::RecordBatch&gt;&gt;&gt; (159 samples, 0.25%)</title><rect x="92.2405%" y="789" width="0.2455%" height="15" fill="rgb(238,13,15)" fg:x="59734" fg:w="159"/><text x="92.4905%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingStream&gt; (150 samples, 0.23%)</title><rect x="92.2544%" y="773" width="0.2316%" height="15" fill="rgb(208,107,27)" fg:x="59743" fg:w="150"/><text x="92.5044%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (128 samples, 0.20%)</title><rect x="92.2883%" y="757" width="0.1977%" height="15" fill="rgb(205,136,37)" fg:x="59765" fg:w="128"/><text x="92.5383%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (10 samples, 0.02%)</title><rect x="92.4705%" y="741" width="0.0154%" height="15" fill="rgb(250,205,27)" fg:x="59883" fg:w="10"/><text x="92.7205%" y="751.50"></text></g><g><title>core::str::pattern::StrSearcher::new (9 samples, 0.01%)</title><rect x="92.4860%" y="789" width="0.0139%" height="15" fill="rgb(210,80,43)" fg:x="59893" fg:w="9"/><text x="92.7360%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (7 samples, 0.01%)</title><rect x="92.4891%" y="773" width="0.0108%" height="15" fill="rgb(247,160,36)" fg:x="59895" fg:w="7"/><text x="92.7391%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="92.5570%" y="725" width="0.0108%" height="15" fill="rgb(234,13,49)" fg:x="59939" fg:w="7"/><text x="92.8070%" y="735.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (29 samples, 0.04%)</title><rect x="92.5447%" y="741" width="0.0448%" height="15" fill="rgb(234,122,0)" fg:x="59931" fg:w="29"/><text x="92.7947%" y="751.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="92.5678%" y="725" width="0.0216%" height="15" fill="rgb(207,146,38)" fg:x="59946" fg:w="14"/><text x="92.8178%" y="735.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (83 samples, 0.13%)</title><rect x="92.5354%" y="773" width="0.1282%" height="15" fill="rgb(207,177,25)" fg:x="59925" fg:w="83"/><text x="92.7854%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (78 samples, 0.12%)</title><rect x="92.5431%" y="757" width="0.1204%" height="15" fill="rgb(211,178,42)" fg:x="59930" fg:w="78"/><text x="92.7931%" y="767.50"></text></g><g><title>__GI___libc_malloc (48 samples, 0.07%)</title><rect x="92.5894%" y="741" width="0.0741%" height="15" fill="rgb(230,69,54)" fg:x="59960" fg:w="48"/><text x="92.8394%" y="751.50"></text></g><g><title>_int_malloc (31 samples, 0.05%)</title><rect x="92.6157%" y="725" width="0.0479%" height="15" fill="rgb(214,135,41)" fg:x="59977" fg:w="31"/><text x="92.8657%" y="735.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="92.6667%" y="773" width="0.0154%" height="15" fill="rgb(237,67,25)" fg:x="60010" fg:w="10"/><text x="92.9167%" y="783.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (7 samples, 0.01%)</title><rect x="92.6852%" y="757" width="0.0108%" height="15" fill="rgb(222,189,50)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.01%)</title><rect x="92.6852%" y="741" width="0.0108%" height="15" fill="rgb(245,148,34)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.01%)</title><rect x="92.6852%" y="725" width="0.0108%" height="15" fill="rgb(222,29,6)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.01%)</title><rect x="92.6852%" y="709" width="0.0108%" height="15" fill="rgb(221,189,43)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.01%)</title><rect x="92.6852%" y="693" width="0.0108%" height="15" fill="rgb(207,36,27)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.01%)</title><rect x="92.6852%" y="677" width="0.0108%" height="15" fill="rgb(217,90,24)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (7 samples, 0.01%)</title><rect x="92.6852%" y="661" width="0.0108%" height="15" fill="rgb(224,66,35)" fg:x="60022" fg:w="7"/><text x="92.9352%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="92.7470%" y="629" width="0.0124%" height="15" fill="rgb(221,13,50)" fg:x="60062" fg:w="8"/><text x="92.9970%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="92.7470%" y="613" width="0.0124%" height="15" fill="rgb(236,68,49)" fg:x="60062" fg:w="8"/><text x="92.9970%" y="623.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.01%)</title><rect x="92.7470%" y="597" width="0.0124%" height="15" fill="rgb(229,146,28)" fg:x="60062" fg:w="8"/><text x="92.9970%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="92.7470%" y="581" width="0.0124%" height="15" fill="rgb(225,31,38)" fg:x="60062" fg:w="8"/><text x="92.9970%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="92.7470%" y="565" width="0.0124%" height="15" fill="rgb(250,208,3)" fg:x="60062" fg:w="8"/><text x="92.9970%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="92.7470%" y="549" width="0.0124%" height="15" fill="rgb(246,54,23)" fg:x="60062" fg:w="8"/><text x="92.9970%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="92.8149%" y="261" width="0.0154%" height="15" fill="rgb(243,76,11)" fg:x="60106" fg:w="10"/><text x="93.0649%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="92.8149%" y="245" width="0.0154%" height="15" fill="rgb(245,21,50)" fg:x="60106" fg:w="10"/><text x="93.0649%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="92.8164%" y="229" width="0.0139%" height="15" fill="rgb(228,9,43)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="92.8164%" y="213" width="0.0139%" height="15" fill="rgb(208,100,47)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="92.8164%" y="197" width="0.0139%" height="15" fill="rgb(232,26,8)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.01%)</title><rect x="92.8164%" y="181" width="0.0139%" height="15" fill="rgb(216,166,38)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.01%)</title><rect x="92.8164%" y="165" width="0.0139%" height="15" fill="rgb(251,202,51)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="175.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.01%)</title><rect x="92.8164%" y="149" width="0.0139%" height="15" fill="rgb(254,216,34)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="159.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.01%)</title><rect x="92.8164%" y="133" width="0.0139%" height="15" fill="rgb(251,32,27)" fg:x="60107" fg:w="9"/><text x="93.0664%" y="143.50"></text></g><g><title>_int_realloc (8 samples, 0.01%)</title><rect x="92.8180%" y="117" width="0.0124%" height="15" fill="rgb(208,127,28)" fg:x="60108" fg:w="8"/><text x="93.0680%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.02%)</title><rect x="92.8149%" y="357" width="0.0216%" height="15" fill="rgb(224,137,22)" fg:x="60106" fg:w="14"/><text x="93.0649%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.02%)</title><rect x="92.8149%" y="341" width="0.0216%" height="15" fill="rgb(254,70,32)" fg:x="60106" fg:w="14"/><text x="93.0649%" y="351.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.02%)</title><rect x="92.8149%" y="325" width="0.0216%" height="15" fill="rgb(229,75,37)" fg:x="60106" fg:w="14"/><text x="93.0649%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.02%)</title><rect x="92.8149%" y="309" width="0.0216%" height="15" fill="rgb(252,64,23)" fg:x="60106" fg:w="14"/><text x="93.0649%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="92.8149%" y="293" width="0.0216%" height="15" fill="rgb(232,162,48)" fg:x="60106" fg:w="14"/><text x="93.0649%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.02%)</title><rect x="92.8149%" y="277" width="0.0216%" height="15" fill="rgb(246,160,12)" fg:x="60106" fg:w="14"/><text x="93.0649%" y="287.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (18 samples, 0.03%)</title><rect x="92.8489%" y="309" width="0.0278%" height="15" fill="rgb(247,166,0)" fg:x="60128" fg:w="18"/><text x="93.0989%" y="319.50"></text></g><g><title>core::fmt::write (9 samples, 0.01%)</title><rect x="92.8628%" y="293" width="0.0139%" height="15" fill="rgb(249,219,21)" fg:x="60137" fg:w="9"/><text x="93.1128%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (9 samples, 0.01%)</title><rect x="92.8628%" y="277" width="0.0139%" height="15" fill="rgb(205,209,3)" fg:x="60137" fg:w="9"/><text x="93.1128%" y="287.50"></text></g><g><title>_int_free (9 samples, 0.01%)</title><rect x="92.9075%" y="37" width="0.0139%" height="15" fill="rgb(243,44,1)" fg:x="60166" fg:w="9"/><text x="93.1575%" y="47.50"></text></g><g><title>__GI___libc_realloc (42 samples, 0.06%)</title><rect x="92.8813%" y="69" width="0.0649%" height="15" fill="rgb(206,159,16)" fg:x="60149" fg:w="42"/><text x="93.1313%" y="79.50"></text></g><g><title>_int_realloc (37 samples, 0.06%)</title><rect x="92.8890%" y="53" width="0.0571%" height="15" fill="rgb(244,77,30)" fg:x="60154" fg:w="37"/><text x="93.1390%" y="63.50"></text></g><g><title>_int_malloc (16 samples, 0.02%)</title><rect x="92.9214%" y="37" width="0.0247%" height="15" fill="rgb(218,69,12)" fg:x="60175" fg:w="16"/><text x="93.1714%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (46 samples, 0.07%)</title><rect x="92.8767%" y="197" width="0.0710%" height="15" fill="rgb(212,87,7)" fg:x="60146" fg:w="46"/><text x="93.1267%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 0.07%)</title><rect x="92.8767%" y="181" width="0.0710%" height="15" fill="rgb(245,114,25)" fg:x="60146" fg:w="46"/><text x="93.1267%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (46 samples, 0.07%)</title><rect x="92.8767%" y="165" width="0.0710%" height="15" fill="rgb(210,61,42)" fg:x="60146" fg:w="46"/><text x="93.1267%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (46 samples, 0.07%)</title><rect x="92.8767%" y="149" width="0.0710%" height="15" fill="rgb(211,52,33)" fg:x="60146" fg:w="46"/><text x="93.1267%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.07%)</title><rect x="92.8813%" y="133" width="0.0664%" height="15" fill="rgb(234,58,33)" fg:x="60149" fg:w="43"/><text x="93.1313%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43 samples, 0.07%)</title><rect x="92.8813%" y="117" width="0.0664%" height="15" fill="rgb(220,115,36)" fg:x="60149" fg:w="43"/><text x="93.1313%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (43 samples, 0.07%)</title><rect x="92.8813%" y="101" width="0.0664%" height="15" fill="rgb(243,153,54)" fg:x="60149" fg:w="43"/><text x="93.1313%" y="111.50"></text></g><g><title>alloc::alloc::realloc (43 samples, 0.07%)</title><rect x="92.8813%" y="85" width="0.0664%" height="15" fill="rgb(251,47,18)" fg:x="60149" fg:w="43"/><text x="93.1313%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (105 samples, 0.16%)</title><rect x="92.7871%" y="373" width="0.1621%" height="15" fill="rgb(242,102,42)" fg:x="60088" fg:w="105"/><text x="93.0371%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (70 samples, 0.11%)</title><rect x="92.8411%" y="357" width="0.1081%" height="15" fill="rgb(234,31,38)" fg:x="60123" fg:w="70"/><text x="93.0911%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (70 samples, 0.11%)</title><rect x="92.8411%" y="341" width="0.1081%" height="15" fill="rgb(221,117,51)" fg:x="60123" fg:w="70"/><text x="93.0911%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (70 samples, 0.11%)</title><rect x="92.8411%" y="325" width="0.1081%" height="15" fill="rgb(212,20,18)" fg:x="60123" fg:w="70"/><text x="93.0911%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (47 samples, 0.07%)</title><rect x="92.8767%" y="309" width="0.0726%" height="15" fill="rgb(245,133,36)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (47 samples, 0.07%)</title><rect x="92.8767%" y="293" width="0.0726%" height="15" fill="rgb(212,6,19)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (47 samples, 0.07%)</title><rect x="92.8767%" y="277" width="0.0726%" height="15" fill="rgb(218,1,36)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="287.50"></text></g><g><title>alloc::string::String::push_str (47 samples, 0.07%)</title><rect x="92.8767%" y="261" width="0.0726%" height="15" fill="rgb(246,84,54)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (47 samples, 0.07%)</title><rect x="92.8767%" y="245" width="0.0726%" height="15" fill="rgb(242,110,6)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (47 samples, 0.07%)</title><rect x="92.8767%" y="229" width="0.0726%" height="15" fill="rgb(214,47,5)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (47 samples, 0.07%)</title><rect x="92.8767%" y="213" width="0.0726%" height="15" fill="rgb(218,159,25)" fg:x="60146" fg:w="47"/><text x="93.1267%" y="223.50"></text></g><g><title>core::num::flt2dec::decoder::decode (8 samples, 0.01%)</title><rect x="92.9647%" y="341" width="0.0124%" height="15" fill="rgb(215,211,28)" fg:x="60203" fg:w="8"/><text x="93.2147%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (131 samples, 0.20%)</title><rect x="92.7763%" y="437" width="0.2023%" height="15" fill="rgb(238,59,32)" fg:x="60081" fg:w="131"/><text x="93.0263%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (127 samples, 0.20%)</title><rect x="92.7825%" y="421" width="0.1961%" height="15" fill="rgb(226,82,3)" fg:x="60085" fg:w="127"/><text x="93.0325%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (127 samples, 0.20%)</title><rect x="92.7825%" y="405" width="0.1961%" height="15" fill="rgb(240,164,32)" fg:x="60085" fg:w="127"/><text x="93.0325%" y="415.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (125 samples, 0.19%)</title><rect x="92.7856%" y="389" width="0.1930%" height="15" fill="rgb(232,46,7)" fg:x="60087" fg:w="125"/><text x="93.0356%" y="399.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (16 samples, 0.02%)</title><rect x="92.9539%" y="373" width="0.0247%" height="15" fill="rgb(229,129,53)" fg:x="60196" fg:w="16"/><text x="93.2039%" y="383.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (11 samples, 0.02%)</title><rect x="92.9616%" y="357" width="0.0170%" height="15" fill="rgb(234,188,29)" fg:x="60201" fg:w="11"/><text x="93.2116%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (139 samples, 0.21%)</title><rect x="92.7670%" y="517" width="0.2146%" height="15" fill="rgb(246,141,4)" fg:x="60075" fg:w="139"/><text x="93.0170%" y="527.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (134 samples, 0.21%)</title><rect x="92.7747%" y="501" width="0.2069%" height="15" fill="rgb(229,23,39)" fg:x="60080" fg:w="134"/><text x="93.0247%" y="511.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (134 samples, 0.21%)</title><rect x="92.7747%" y="485" width="0.2069%" height="15" fill="rgb(206,12,3)" fg:x="60080" fg:w="134"/><text x="93.0247%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (134 samples, 0.21%)</title><rect x="92.7747%" y="469" width="0.2069%" height="15" fill="rgb(252,226,20)" fg:x="60080" fg:w="134"/><text x="93.0247%" y="479.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (134 samples, 0.21%)</title><rect x="92.7747%" y="453" width="0.2069%" height="15" fill="rgb(216,123,35)" fg:x="60080" fg:w="134"/><text x="93.0247%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (60 samples, 0.09%)</title><rect x="92.9817%" y="517" width="0.0927%" height="15" fill="rgb(212,68,40)" fg:x="60214" fg:w="60"/><text x="93.2317%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (60 samples, 0.09%)</title><rect x="92.9817%" y="501" width="0.0927%" height="15" fill="rgb(254,125,32)" fg:x="60214" fg:w="60"/><text x="93.2317%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (58 samples, 0.09%)</title><rect x="92.9848%" y="485" width="0.0896%" height="15" fill="rgb(253,97,22)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="495.50"></text></g><g><title>alloc::string::String::push_str (58 samples, 0.09%)</title><rect x="92.9848%" y="469" width="0.0896%" height="15" fill="rgb(241,101,14)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (58 samples, 0.09%)</title><rect x="92.9848%" y="453" width="0.0896%" height="15" fill="rgb(238,103,29)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (58 samples, 0.09%)</title><rect x="92.9848%" y="437" width="0.0896%" height="15" fill="rgb(233,195,47)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (58 samples, 0.09%)</title><rect x="92.9848%" y="421" width="0.0896%" height="15" fill="rgb(246,218,30)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (58 samples, 0.09%)</title><rect x="92.9848%" y="405" width="0.0896%" height="15" fill="rgb(219,145,47)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (58 samples, 0.09%)</title><rect x="92.9848%" y="389" width="0.0896%" height="15" fill="rgb(243,12,26)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (58 samples, 0.09%)</title><rect x="92.9848%" y="373" width="0.0896%" height="15" fill="rgb(214,87,16)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (58 samples, 0.09%)</title><rect x="92.9848%" y="357" width="0.0896%" height="15" fill="rgb(208,99,42)" fg:x="60216" fg:w="58"/><text x="93.2348%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (57 samples, 0.09%)</title><rect x="92.9863%" y="341" width="0.0880%" height="15" fill="rgb(253,99,2)" fg:x="60217" fg:w="57"/><text x="93.2363%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (57 samples, 0.09%)</title><rect x="92.9863%" y="325" width="0.0880%" height="15" fill="rgb(220,168,23)" fg:x="60217" fg:w="57"/><text x="93.2363%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (57 samples, 0.09%)</title><rect x="92.9863%" y="309" width="0.0880%" height="15" fill="rgb(242,38,24)" fg:x="60217" fg:w="57"/><text x="93.2363%" y="319.50"></text></g><g><title>alloc::alloc::realloc (57 samples, 0.09%)</title><rect x="92.9863%" y="293" width="0.0880%" height="15" fill="rgb(225,182,9)" fg:x="60217" fg:w="57"/><text x="93.2363%" y="303.50"></text></g><g><title>__GI___libc_realloc (57 samples, 0.09%)</title><rect x="92.9863%" y="277" width="0.0880%" height="15" fill="rgb(243,178,37)" fg:x="60217" fg:w="57"/><text x="93.2363%" y="287.50"></text></g><g><title>_int_realloc (45 samples, 0.07%)</title><rect x="93.0048%" y="261" width="0.0695%" height="15" fill="rgb(232,139,19)" fg:x="60229" fg:w="45"/><text x="93.2548%" y="271.50"></text></g><g><title>_int_malloc (42 samples, 0.06%)</title><rect x="93.0095%" y="245" width="0.0649%" height="15" fill="rgb(225,201,24)" fg:x="60232" fg:w="42"/><text x="93.2595%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (17 samples, 0.03%)</title><rect x="93.0481%" y="229" width="0.0263%" height="15" fill="rgb(221,47,46)" fg:x="60257" fg:w="17"/><text x="93.2981%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="93.0542%" y="213" width="0.0201%" height="15" fill="rgb(249,23,13)" fg:x="60261" fg:w="13"/><text x="93.3042%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="93.0542%" y="197" width="0.0201%" height="15" fill="rgb(219,9,5)" fg:x="60261" fg:w="13"/><text x="93.3042%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="93.0573%" y="181" width="0.0170%" height="15" fill="rgb(254,171,16)" fg:x="60263" fg:w="11"/><text x="93.3073%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="93.0604%" y="165" width="0.0139%" height="15" fill="rgb(230,171,20)" fg:x="60265" fg:w="9"/><text x="93.3104%" y="175.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (205 samples, 0.32%)</title><rect x="92.7593%" y="581" width="0.3166%" height="15" fill="rgb(210,71,41)" fg:x="60070" fg:w="205"/><text x="93.0093%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (200 samples, 0.31%)</title><rect x="92.7670%" y="565" width="0.3088%" height="15" fill="rgb(206,173,20)" fg:x="60075" fg:w="200"/><text x="93.0170%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (200 samples, 0.31%)</title><rect x="92.7670%" y="549" width="0.3088%" height="15" fill="rgb(233,88,34)" fg:x="60075" fg:w="200"/><text x="93.0170%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (200 samples, 0.31%)</title><rect x="92.7670%" y="533" width="0.3088%" height="15" fill="rgb(223,209,46)" fg:x="60075" fg:w="200"/><text x="93.0170%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (216 samples, 0.33%)</title><rect x="92.7454%" y="645" width="0.3335%" height="15" fill="rgb(250,43,18)" fg:x="60061" fg:w="216"/><text x="92.9954%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (207 samples, 0.32%)</title><rect x="92.7593%" y="629" width="0.3196%" height="15" fill="rgb(208,13,10)" fg:x="60070" fg:w="207"/><text x="93.0093%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (207 samples, 0.32%)</title><rect x="92.7593%" y="613" width="0.3196%" height="15" fill="rgb(212,200,36)" fg:x="60070" fg:w="207"/><text x="93.0093%" y="623.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (207 samples, 0.32%)</title><rect x="92.7593%" y="597" width="0.3196%" height="15" fill="rgb(225,90,30)" fg:x="60070" fg:w="207"/><text x="93.0093%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (19 samples, 0.03%)</title><rect x="93.0790%" y="549" width="0.0293%" height="15" fill="rgb(236,182,39)" fg:x="60277" fg:w="19"/><text x="93.3290%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.03%)</title><rect x="93.0790%" y="533" width="0.0293%" height="15" fill="rgb(212,144,35)" fg:x="60277" fg:w="19"/><text x="93.3290%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.03%)</title><rect x="93.0790%" y="517" width="0.0293%" height="15" fill="rgb(228,63,44)" fg:x="60277" fg:w="19"/><text x="93.3290%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.03%)</title><rect x="93.0790%" y="501" width="0.0293%" height="15" fill="rgb(228,109,6)" fg:x="60277" fg:w="19"/><text x="93.3290%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.03%)</title><rect x="93.0805%" y="485" width="0.0278%" height="15" fill="rgb(238,117,24)" fg:x="60278" fg:w="18"/><text x="93.3305%" y="495.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.02%)</title><rect x="93.0882%" y="469" width="0.0201%" height="15" fill="rgb(242,26,26)" fg:x="60283" fg:w="13"/><text x="93.3382%" y="479.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="93.0913%" y="453" width="0.0170%" height="15" fill="rgb(221,92,48)" fg:x="60285" fg:w="11"/><text x="93.3413%" y="463.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (247 samples, 0.38%)</title><rect x="92.7300%" y="677" width="0.3814%" height="15" fill="rgb(209,209,32)" fg:x="60051" fg:w="247"/><text x="92.9800%" y="687.50"></text></g><g><title>core::fmt::write (240 samples, 0.37%)</title><rect x="92.7408%" y="661" width="0.3706%" height="15" fill="rgb(221,70,22)" fg:x="60058" fg:w="240"/><text x="92.9908%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.03%)</title><rect x="93.0790%" y="645" width="0.0324%" height="15" fill="rgb(248,145,5)" fg:x="60277" fg:w="21"/><text x="93.3290%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.03%)</title><rect x="93.0790%" y="629" width="0.0324%" height="15" fill="rgb(226,116,26)" fg:x="60277" fg:w="21"/><text x="93.3290%" y="639.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.03%)</title><rect x="93.0790%" y="613" width="0.0324%" height="15" fill="rgb(244,5,17)" fg:x="60277" fg:w="21"/><text x="93.3290%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.03%)</title><rect x="93.0790%" y="597" width="0.0324%" height="15" fill="rgb(252,159,33)" fg:x="60277" fg:w="21"/><text x="93.3290%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.03%)</title><rect x="93.0790%" y="581" width="0.0324%" height="15" fill="rgb(206,71,0)" fg:x="60277" fg:w="21"/><text x="93.3290%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.03%)</title><rect x="93.0790%" y="565" width="0.0324%" height="15" fill="rgb(233,118,54)" fg:x="60277" fg:w="21"/><text x="93.3290%" y="575.50"></text></g><g><title>core::fmt::run (7 samples, 0.01%)</title><rect x="93.1114%" y="677" width="0.0108%" height="15" fill="rgb(234,83,48)" fg:x="60298" fg:w="7"/><text x="93.3614%" y="687.50"></text></g><g><title>core::fmt::write (256 samples, 0.40%)</title><rect x="92.7284%" y="693" width="0.3953%" height="15" fill="rgb(228,3,54)" fg:x="60050" fg:w="256"/><text x="92.9784%" y="703.50"></text></g><g><title>datafusion_expr::expr_visitor::inspect_expr_pre (9 samples, 0.01%)</title><rect x="93.1237%" y="693" width="0.0139%" height="15" fill="rgb(226,155,13)" fg:x="60306" fg:w="9"/><text x="93.3737%" y="703.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (9 samples, 0.01%)</title><rect x="93.1237%" y="677" width="0.0139%" height="15" fill="rgb(241,28,37)" fg:x="60306" fg:w="9"/><text x="93.3737%" y="687.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="93.1855%" y="645" width="0.0185%" height="15" fill="rgb(233,93,10)" fg:x="60346" fg:w="12"/><text x="93.4355%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (9 samples, 0.01%)</title><rect x="93.2040%" y="629" width="0.0139%" height="15" fill="rgb(225,113,19)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.01%)</title><rect x="93.2040%" y="613" width="0.0139%" height="15" fill="rgb(241,2,18)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="93.2040%" y="597" width="0.0139%" height="15" fill="rgb(228,207,21)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.01%)</title><rect x="93.2040%" y="581" width="0.0139%" height="15" fill="rgb(213,211,35)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.01%)</title><rect x="93.2040%" y="565" width="0.0139%" height="15" fill="rgb(209,83,10)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.01%)</title><rect x="93.2040%" y="549" width="0.0139%" height="15" fill="rgb(209,164,1)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.01%)</title><rect x="93.2040%" y="533" width="0.0139%" height="15" fill="rgb(213,184,43)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="543.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.01%)</title><rect x="93.2040%" y="517" width="0.0139%" height="15" fill="rgb(231,61,34)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="527.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.01%)</title><rect x="93.2040%" y="501" width="0.0139%" height="15" fill="rgb(235,75,3)" fg:x="60358" fg:w="9"/><text x="93.4540%" y="511.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="93.2473%" y="341" width="0.0154%" height="15" fill="rgb(220,106,47)" fg:x="60386" fg:w="10"/><text x="93.4973%" y="351.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="93.2519%" y="325" width="0.0108%" height="15" fill="rgb(210,196,33)" fg:x="60389" fg:w="7"/><text x="93.5019%" y="335.50"></text></g><g><title>_int_malloc (56 samples, 0.09%)</title><rect x="93.2627%" y="341" width="0.0865%" height="15" fill="rgb(229,154,42)" fg:x="60396" fg:w="56"/><text x="93.5127%" y="351.50"></text></g><g><title>__GI___libc_realloc (82 samples, 0.13%)</title><rect x="93.2241%" y="373" width="0.1266%" height="15" fill="rgb(228,114,26)" fg:x="60371" fg:w="82"/><text x="93.4741%" y="383.50"></text></g><g><title>_int_realloc (74 samples, 0.11%)</title><rect x="93.2365%" y="357" width="0.1143%" height="15" fill="rgb(208,144,1)" fg:x="60379" fg:w="74"/><text x="93.4865%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (83 samples, 0.13%)</title><rect x="93.2241%" y="501" width="0.1282%" height="15" fill="rgb(239,112,37)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (83 samples, 0.13%)</title><rect x="93.2241%" y="485" width="0.1282%" height="15" fill="rgb(210,96,50)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (83 samples, 0.13%)</title><rect x="93.2241%" y="469" width="0.1282%" height="15" fill="rgb(222,178,2)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (83 samples, 0.13%)</title><rect x="93.2241%" y="453" width="0.1282%" height="15" fill="rgb(226,74,18)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.13%)</title><rect x="93.2241%" y="437" width="0.1282%" height="15" fill="rgb(225,67,54)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (83 samples, 0.13%)</title><rect x="93.2241%" y="421" width="0.1282%" height="15" fill="rgb(251,92,32)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (83 samples, 0.13%)</title><rect x="93.2241%" y="405" width="0.1282%" height="15" fill="rgb(228,149,22)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="415.50"></text></g><g><title>alloc::alloc::realloc (83 samples, 0.13%)</title><rect x="93.2241%" y="389" width="0.1282%" height="15" fill="rgb(243,54,13)" fg:x="60371" fg:w="83"/><text x="93.4741%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (88 samples, 0.14%)</title><rect x="93.2241%" y="597" width="0.1359%" height="15" fill="rgb(243,180,28)" fg:x="60371" fg:w="88"/><text x="93.4741%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (88 samples, 0.14%)</title><rect x="93.2241%" y="581" width="0.1359%" height="15" fill="rgb(208,167,24)" fg:x="60371" fg:w="88"/><text x="93.4741%" y="591.50"></text></g><g><title>alloc::string::String::push_str (88 samples, 0.14%)</title><rect x="93.2241%" y="565" width="0.1359%" height="15" fill="rgb(245,73,45)" fg:x="60371" fg:w="88"/><text x="93.4741%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (88 samples, 0.14%)</title><rect x="93.2241%" y="549" width="0.1359%" height="15" fill="rgb(237,203,48)" fg:x="60371" fg:w="88"/><text x="93.4741%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (88 samples, 0.14%)</title><rect x="93.2241%" y="533" width="0.1359%" height="15" fill="rgb(211,197,16)" fg:x="60371" fg:w="88"/><text x="93.4741%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (88 samples, 0.14%)</title><rect x="93.2241%" y="517" width="0.1359%" height="15" fill="rgb(243,99,51)" fg:x="60371" fg:w="88"/><text x="93.4741%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (102 samples, 0.16%)</title><rect x="93.2040%" y="645" width="0.1575%" height="15" fill="rgb(215,123,29)" fg:x="60358" fg:w="102"/><text x="93.4540%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (90 samples, 0.14%)</title><rect x="93.2226%" y="629" width="0.1390%" height="15" fill="rgb(239,186,37)" fg:x="60370" fg:w="90"/><text x="93.4726%" y="639.50"></text></g><g><title>core::fmt::write (90 samples, 0.14%)</title><rect x="93.2226%" y="613" width="0.1390%" height="15" fill="rgb(252,136,39)" fg:x="60370" fg:w="90"/><text x="93.4726%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (17 samples, 0.03%)</title><rect x="93.3615%" y="645" width="0.0263%" height="15" fill="rgb(223,213,32)" fg:x="60460" fg:w="17"/><text x="93.6115%" y="655.50"></text></g><g><title>_int_malloc (35 samples, 0.05%)</title><rect x="93.4372%" y="373" width="0.0540%" height="15" fill="rgb(233,115,5)" fg:x="60509" fg:w="35"/><text x="93.6872%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (69 samples, 0.11%)</title><rect x="93.3878%" y="533" width="0.1065%" height="15" fill="rgb(207,226,44)" fg:x="60477" fg:w="69"/><text x="93.6378%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (69 samples, 0.11%)</title><rect x="93.3878%" y="517" width="0.1065%" height="15" fill="rgb(208,126,0)" fg:x="60477" fg:w="69"/><text x="93.6378%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (69 samples, 0.11%)</title><rect x="93.3878%" y="501" width="0.1065%" height="15" fill="rgb(244,66,21)" fg:x="60477" fg:w="69"/><text x="93.6378%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (69 samples, 0.11%)</title><rect x="93.3878%" y="485" width="0.1065%" height="15" fill="rgb(222,97,12)" fg:x="60477" fg:w="69"/><text x="93.6378%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (69 samples, 0.11%)</title><rect x="93.3878%" y="469" width="0.1065%" height="15" fill="rgb(219,213,19)" fg:x="60477" fg:w="69"/><text x="93.6378%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (68 samples, 0.11%)</title><rect x="93.3893%" y="453" width="0.1050%" height="15" fill="rgb(252,169,30)" fg:x="60478" fg:w="68"/><text x="93.6393%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (68 samples, 0.11%)</title><rect x="93.3893%" y="437" width="0.1050%" height="15" fill="rgb(206,32,51)" fg:x="60478" fg:w="68"/><text x="93.6393%" y="447.50"></text></g><g><title>alloc::alloc::realloc (68 samples, 0.11%)</title><rect x="93.3893%" y="421" width="0.1050%" height="15" fill="rgb(250,172,42)" fg:x="60478" fg:w="68"/><text x="93.6393%" y="431.50"></text></g><g><title>__GI___libc_realloc (68 samples, 0.11%)</title><rect x="93.3893%" y="405" width="0.1050%" height="15" fill="rgb(209,34,43)" fg:x="60478" fg:w="68"/><text x="93.6393%" y="415.50"></text></g><g><title>_int_realloc (54 samples, 0.08%)</title><rect x="93.4110%" y="389" width="0.0834%" height="15" fill="rgb(223,11,35)" fg:x="60492" fg:w="54"/><text x="93.6610%" y="399.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (224 samples, 0.35%)</title><rect x="93.1562%" y="661" width="0.3459%" height="15" fill="rgb(251,219,26)" fg:x="60327" fg:w="224"/><text x="93.4062%" y="671.50"></text></g><g><title>core::fmt::write (74 samples, 0.11%)</title><rect x="93.3878%" y="645" width="0.1143%" height="15" fill="rgb(231,119,3)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (74 samples, 0.11%)</title><rect x="93.3878%" y="629" width="0.1143%" height="15" fill="rgb(216,97,11)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (74 samples, 0.11%)</title><rect x="93.3878%" y="613" width="0.1143%" height="15" fill="rgb(223,59,9)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="623.50"></text></g><g><title>alloc::string::String::push_str (74 samples, 0.11%)</title><rect x="93.3878%" y="597" width="0.1143%" height="15" fill="rgb(233,93,31)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74 samples, 0.11%)</title><rect x="93.3878%" y="581" width="0.1143%" height="15" fill="rgb(239,81,33)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 0.11%)</title><rect x="93.3878%" y="565" width="0.1143%" height="15" fill="rgb(213,120,34)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74 samples, 0.11%)</title><rect x="93.3878%" y="549" width="0.1143%" height="15" fill="rgb(243,49,53)" fg:x="60477" fg:w="74"/><text x="93.6378%" y="559.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (523 samples, 0.81%)</title><rect x="92.7068%" y="725" width="0.8076%" height="15" fill="rgb(247,216,33)" fg:x="60036" fg:w="523"/><text x="92.9568%" y="735.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (523 samples, 0.81%)</title><rect x="92.7068%" y="709" width="0.8076%" height="15" fill="rgb(226,26,14)" fg:x="60036" fg:w="523"/><text x="92.9568%" y="719.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (244 samples, 0.38%)</title><rect x="93.1376%" y="693" width="0.3768%" height="15" fill="rgb(215,49,53)" fg:x="60315" fg:w="244"/><text x="93.3876%" y="703.50"></text></g><g><title>core::fmt::write (238 samples, 0.37%)</title><rect x="93.1469%" y="677" width="0.3675%" height="15" fill="rgb(245,162,40)" fg:x="60321" fg:w="238"/><text x="93.3969%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (543 samples, 0.84%)</title><rect x="92.6821%" y="773" width="0.8385%" height="15" fill="rgb(229,68,17)" fg:x="60020" fg:w="543"/><text x="92.9321%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (534 samples, 0.82%)</title><rect x="92.6960%" y="757" width="0.8246%" height="15" fill="rgb(213,182,10)" fg:x="60029" fg:w="534"/><text x="92.9460%" y="767.50"></text></g><g><title>core::fmt::write (532 samples, 0.82%)</title><rect x="92.6991%" y="741" width="0.8215%" height="15" fill="rgb(245,125,30)" fg:x="60031" fg:w="532"/><text x="92.9491%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (20 samples, 0.03%)</title><rect x="93.5206%" y="773" width="0.0309%" height="15" fill="rgb(232,202,2)" fg:x="60563" fg:w="20"/><text x="93.7706%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (15 samples, 0.02%)</title><rect x="93.5283%" y="757" width="0.0232%" height="15" fill="rgb(237,140,51)" fg:x="60568" fg:w="15"/><text x="93.7783%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (8 samples, 0.01%)</title><rect x="93.5391%" y="741" width="0.0124%" height="15" fill="rgb(236,157,25)" fg:x="60575" fg:w="8"/><text x="93.7891%" y="751.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (11 samples, 0.02%)</title><rect x="93.5515%" y="773" width="0.0170%" height="15" fill="rgb(219,209,0)" fg:x="60583" fg:w="11"/><text x="93.8015%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="93.6132%" y="741" width="0.0170%" height="15" fill="rgb(240,116,54)" fg:x="60623" fg:w="11"/><text x="93.8632%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="93.6441%" y="725" width="0.0247%" height="15" fill="rgb(216,10,36)" fg:x="60643" fg:w="16"/><text x="93.8941%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (25 samples, 0.04%)</title><rect x="93.6333%" y="741" width="0.0386%" height="15" fill="rgb(222,72,44)" fg:x="60636" fg:w="25"/><text x="93.8833%" y="751.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="93.7244%" y="709" width="0.0154%" height="15" fill="rgb(232,159,9)" fg:x="60695" fg:w="10"/><text x="93.9744%" y="719.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="93.7399%" y="693" width="0.0124%" height="15" fill="rgb(210,39,32)" fg:x="60705" fg:w="8"/><text x="93.9899%" y="703.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="93.7399%" y="677" width="0.0124%" height="15" fill="rgb(216,194,45)" fg:x="60705" fg:w="8"/><text x="93.9899%" y="687.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="93.7414%" y="661" width="0.0108%" height="15" fill="rgb(218,18,35)" fg:x="60706" fg:w="7"/><text x="93.9914%" y="671.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (58 samples, 0.09%)</title><rect x="93.6719%" y="741" width="0.0896%" height="15" fill="rgb(207,83,51)" fg:x="60661" fg:w="58"/><text x="93.9219%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (34 samples, 0.05%)</title><rect x="93.7090%" y="725" width="0.0525%" height="15" fill="rgb(225,63,43)" fg:x="60685" fg:w="34"/><text x="93.9590%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (14 samples, 0.02%)</title><rect x="93.7399%" y="709" width="0.0216%" height="15" fill="rgb(207,57,36)" fg:x="60705" fg:w="14"/><text x="93.9899%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="93.7862%" y="709" width="0.0201%" height="15" fill="rgb(216,99,33)" fg:x="60735" fg:w="13"/><text x="94.0362%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (137 samples, 0.21%)</title><rect x="93.7769%" y="725" width="0.2116%" height="15" fill="rgb(225,42,16)" fg:x="60729" fg:w="137"/><text x="94.0269%" y="735.50"></text></g><g><title>__GI___libc_malloc (114 samples, 0.18%)</title><rect x="93.8124%" y="709" width="0.1760%" height="15" fill="rgb(220,201,45)" fg:x="60752" fg:w="114"/><text x="94.0624%" y="719.50"></text></g><g><title>_int_malloc (86 samples, 0.13%)</title><rect x="93.8557%" y="693" width="0.1328%" height="15" fill="rgb(225,33,4)" fg:x="60780" fg:w="86"/><text x="94.1057%" y="703.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="93.9900%" y="725" width="0.0108%" height="15" fill="rgb(224,33,50)" fg:x="60867" fg:w="7"/><text x="94.2400%" y="735.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="94.0008%" y="725" width="0.0154%" height="15" fill="rgb(246,198,51)" fg:x="60874" fg:w="10"/><text x="94.2508%" y="735.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="94.0255%" y="709" width="0.0108%" height="15" fill="rgb(205,22,4)" fg:x="60890" fg:w="7"/><text x="94.2755%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (19 samples, 0.03%)</title><rect x="94.0178%" y="725" width="0.0293%" height="15" fill="rgb(206,3,8)" fg:x="60885" fg:w="19"/><text x="94.2678%" y="735.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.01%)</title><rect x="94.0688%" y="693" width="0.0139%" height="15" fill="rgb(251,23,15)" fg:x="60918" fg:w="9"/><text x="94.3188%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 0.08%)</title><rect x="94.0672%" y="709" width="0.0788%" height="15" fill="rgb(252,88,28)" fg:x="60917" fg:w="51"/><text x="94.3172%" y="719.50"></text></g><g><title>__GI___libc_malloc (41 samples, 0.06%)</title><rect x="94.0827%" y="693" width="0.0633%" height="15" fill="rgb(212,127,14)" fg:x="60927" fg:w="41"/><text x="94.3327%" y="703.50"></text></g><g><title>_int_malloc (31 samples, 0.05%)</title><rect x="94.0981%" y="677" width="0.0479%" height="15" fill="rgb(247,145,37)" fg:x="60937" fg:w="31"/><text x="94.3481%" y="687.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (77 samples, 0.12%)</title><rect x="94.0472%" y="725" width="0.1189%" height="15" fill="rgb(209,117,53)" fg:x="60904" fg:w="77"/><text x="94.2972%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (11 samples, 0.02%)</title><rect x="94.1491%" y="709" width="0.0170%" height="15" fill="rgb(212,90,42)" fg:x="60970" fg:w="11"/><text x="94.3991%" y="719.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (378 samples, 0.58%)</title><rect x="93.5854%" y="757" width="0.5837%" height="15" fill="rgb(218,164,37)" fg:x="60605" fg:w="378"/><text x="93.8354%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (264 samples, 0.41%)</title><rect x="93.7615%" y="741" width="0.4077%" height="15" fill="rgb(246,65,34)" fg:x="60719" fg:w="264"/><text x="94.0115%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="95.4122%" y="709" width="0.0124%" height="15" fill="rgb(231,100,33)" fg:x="61788" fg:w="8"/><text x="95.6622%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="95.4122%" y="693" width="0.0124%" height="15" fill="rgb(228,126,14)" fg:x="61788" fg:w="8"/><text x="95.6622%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="95.4122%" y="677" width="0.0124%" height="15" fill="rgb(215,173,21)" fg:x="61788" fg:w="8"/><text x="95.6622%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="95.4122%" y="661" width="0.0124%" height="15" fill="rgb(210,6,40)" fg:x="61788" fg:w="8"/><text x="95.6622%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="95.4122%" y="645" width="0.0124%" height="15" fill="rgb(212,48,18)" fg:x="61788" fg:w="8"/><text x="95.6622%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="95.4122%" y="629" width="0.0124%" height="15" fill="rgb(230,214,11)" fg:x="61788" fg:w="8"/><text x="95.6622%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="95.4138%" y="613" width="0.0108%" height="15" fill="rgb(254,105,39)" fg:x="61789" fg:w="7"/><text x="95.6638%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="95.4138%" y="597" width="0.0108%" height="15" fill="rgb(245,158,5)" fg:x="61789" fg:w="7"/><text x="95.6638%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="95.4138%" y="581" width="0.0108%" height="15" fill="rgb(249,208,11)" fg:x="61789" fg:w="7"/><text x="95.6638%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="95.4138%" y="565" width="0.0108%" height="15" fill="rgb(210,39,28)" fg:x="61789" fg:w="7"/><text x="95.6638%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="95.4138%" y="549" width="0.0108%" height="15" fill="rgb(211,56,53)" fg:x="61789" fg:w="7"/><text x="95.6638%" y="559.50"></text></g><g><title>malloc_consolidate (687 samples, 1.06%)</title><rect x="95.4246%" y="709" width="1.0609%" height="15" fill="rgb(226,201,30)" fg:x="61796" fg:w="687"/><text x="95.6746%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (220 samples, 0.34%)</title><rect x="96.1457%" y="693" width="0.3397%" height="15" fill="rgb(239,101,34)" fg:x="62263" fg:w="220"/><text x="96.3957%" y="703.50"></text></g><g><title>__GI___libc_malloc (1,498 samples, 2.31%)</title><rect x="94.1753%" y="741" width="2.3132%" height="15" fill="rgb(226,209,5)" fg:x="60987" fg:w="1498"/><text x="94.4253%" y="751.50">_..</text></g><g><title>_int_malloc (1,497 samples, 2.31%)</title><rect x="94.1769%" y="725" width="2.3116%" height="15" fill="rgb(250,105,47)" fg:x="60988" fg:w="1497"/><text x="94.4269%" y="735.50">_..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (1,912 samples, 2.95%)</title><rect x="93.5685%" y="773" width="2.9525%" height="15" fill="rgb(230,72,3)" fg:x="60594" fg:w="1912"/><text x="93.8185%" y="783.50">dat..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (1,523 samples, 2.35%)</title><rect x="94.1692%" y="757" width="2.3518%" height="15" fill="rgb(232,218,39)" fg:x="60983" fg:w="1523"/><text x="94.4192%" y="767.50">d..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (11 samples, 0.02%)</title><rect x="96.5040%" y="741" width="0.0170%" height="15" fill="rgb(248,166,6)" fg:x="62495" fg:w="11"/><text x="96.7540%" y="751.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (2,606 samples, 4.02%)</title><rect x="92.4999%" y="789" width="4.0242%" height="15" fill="rgb(247,89,20)" fg:x="59902" fg:w="2606"/><text x="92.7499%" y="799.50">data..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.02%)</title><rect x="96.5673%" y="757" width="0.0170%" height="15" fill="rgb(248,130,54)" fg:x="62536" fg:w="11"/><text x="96.8173%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="96.5734%" y="741" width="0.0108%" height="15" fill="rgb(234,196,4)" fg:x="62540" fg:w="7"/><text x="96.8234%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.03%)</title><rect x="96.5843%" y="757" width="0.0293%" height="15" fill="rgb(250,143,31)" fg:x="62547" fg:w="19"/><text x="96.8343%" y="767.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="96.6012%" y="741" width="0.0124%" height="15" fill="rgb(211,110,34)" fg:x="62558" fg:w="8"/><text x="96.8512%" y="751.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (58 samples, 0.09%)</title><rect x="96.5271%" y="773" width="0.0896%" height="15" fill="rgb(215,124,48)" fg:x="62510" fg:w="58"/><text x="96.7771%" y="783.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="96.6445%" y="741" width="0.0170%" height="15" fill="rgb(216,46,13)" fg:x="62586" fg:w="11"/><text x="96.8945%" y="751.50"></text></g><g><title>datafusion::physical_plan::execute_stream (92 samples, 0.14%)</title><rect x="96.5240%" y="789" width="0.1421%" height="15" fill="rgb(205,184,25)" fg:x="62508" fg:w="92"/><text x="96.7740%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.05%)</title><rect x="96.6198%" y="773" width="0.0463%" height="15" fill="rgb(228,1,10)" fg:x="62570" fg:w="30"/><text x="96.8698%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (27 samples, 0.04%)</title><rect x="96.6244%" y="757" width="0.0417%" height="15" fill="rgb(213,116,27)" fg:x="62573" fg:w="27"/><text x="96.8744%" y="767.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (11 samples, 0.02%)</title><rect x="96.6661%" y="789" width="0.0170%" height="15" fill="rgb(241,95,50)" fg:x="62600" fg:w="11"/><text x="96.9161%" y="799.50"></text></g><g><title>__GI___libc_malloc (51 samples, 0.08%)</title><rect x="96.8174%" y="773" width="0.0788%" height="15" fill="rgb(238,48,32)" fg:x="62698" fg:w="51"/><text x="97.0674%" y="783.50"></text></g><g><title>_int_malloc (40 samples, 0.06%)</title><rect x="96.8344%" y="757" width="0.0618%" height="15" fill="rgb(235,113,49)" fg:x="62709" fg:w="40"/><text x="97.0844%" y="767.50"></text></g><g><title>malloc_consolidate (8 samples, 0.01%)</title><rect x="96.8838%" y="741" width="0.0124%" height="15" fill="rgb(205,127,43)" fg:x="62741" fg:w="8"/><text x="97.1338%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.03%)</title><rect x="96.9425%" y="757" width="0.0309%" height="15" fill="rgb(250,162,2)" fg:x="62779" fg:w="20"/><text x="97.1925%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="96.9518%" y="741" width="0.0216%" height="15" fill="rgb(220,13,41)" fg:x="62785" fg:w="14"/><text x="97.2018%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="96.9904%" y="693" width="0.0108%" height="15" fill="rgb(249,221,25)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="96.9904%" y="677" width="0.0108%" height="15" fill="rgb(215,208,19)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="687.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.01%)</title><rect x="96.9904%" y="661" width="0.0108%" height="15" fill="rgb(236,175,2)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="96.9904%" y="645" width="0.0108%" height="15" fill="rgb(241,52,2)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="96.9904%" y="629" width="0.0108%" height="15" fill="rgb(248,140,14)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.01%)</title><rect x="96.9904%" y="613" width="0.0108%" height="15" fill="rgb(253,22,42)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="96.9904%" y="597" width="0.0108%" height="15" fill="rgb(234,61,47)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.01%)</title><rect x="96.9904%" y="581" width="0.0108%" height="15" fill="rgb(208,226,15)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="96.9904%" y="565" width="0.0108%" height="15" fill="rgb(217,221,4)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.01%)</title><rect x="96.9904%" y="549" width="0.0108%" height="15" fill="rgb(212,174,34)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="96.9904%" y="533" width="0.0108%" height="15" fill="rgb(253,83,4)" fg:x="62810" fg:w="7"/><text x="97.2404%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (10 samples, 0.02%)</title><rect x="96.9873%" y="741" width="0.0154%" height="15" fill="rgb(250,195,49)" fg:x="62808" fg:w="10"/><text x="97.2373%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.02%)</title><rect x="96.9873%" y="725" width="0.0154%" height="15" fill="rgb(241,192,25)" fg:x="62808" fg:w="10"/><text x="97.2373%" y="735.50"></text></g><g><title>core::fmt::write (10 samples, 0.02%)</title><rect x="96.9873%" y="709" width="0.0154%" height="15" fill="rgb(208,124,10)" fg:x="62808" fg:w="10"/><text x="97.2373%" y="719.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.04%)</title><rect x="97.0413%" y="453" width="0.0386%" height="15" fill="rgb(222,33,0)" fg:x="62843" fg:w="25"/><text x="97.2913%" y="463.50"></text></g><g><title>_int_realloc (11 samples, 0.02%)</title><rect x="97.0630%" y="437" width="0.0170%" height="15" fill="rgb(234,209,28)" fg:x="62857" fg:w="11"/><text x="97.3130%" y="447.50"></text></g><g><title>_int_malloc (8 samples, 0.01%)</title><rect x="97.0676%" y="421" width="0.0124%" height="15" fill="rgb(224,11,23)" fg:x="62860" fg:w="8"/><text x="97.3176%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.04%)</title><rect x="97.0398%" y="501" width="0.0432%" height="15" fill="rgb(232,99,1)" fg:x="62842" fg:w="28"/><text x="97.2898%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.04%)</title><rect x="97.0398%" y="485" width="0.0432%" height="15" fill="rgb(237,95,45)" fg:x="62842" fg:w="28"/><text x="97.2898%" y="495.50"></text></g><g><title>alloc::alloc::realloc (27 samples, 0.04%)</title><rect x="97.0413%" y="469" width="0.0417%" height="15" fill="rgb(208,109,11)" fg:x="62843" fg:w="27"/><text x="97.2913%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.06%)</title><rect x="97.0290%" y="581" width="0.0587%" height="15" fill="rgb(216,190,48)" fg:x="62835" fg:w="38"/><text x="97.2790%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 0.06%)</title><rect x="97.0290%" y="565" width="0.0587%" height="15" fill="rgb(251,171,36)" fg:x="62835" fg:w="38"/><text x="97.2790%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.05%)</title><rect x="97.0336%" y="549" width="0.0540%" height="15" fill="rgb(230,62,22)" fg:x="62838" fg:w="35"/><text x="97.2836%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.05%)</title><rect x="97.0336%" y="533" width="0.0540%" height="15" fill="rgb(225,114,35)" fg:x="62838" fg:w="35"/><text x="97.2836%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.05%)</title><rect x="97.0367%" y="517" width="0.0510%" height="15" fill="rgb(215,118,42)" fg:x="62840" fg:w="33"/><text x="97.2867%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (43 samples, 0.07%)</title><rect x="97.0290%" y="677" width="0.0664%" height="15" fill="rgb(243,119,21)" fg:x="62835" fg:w="43"/><text x="97.2790%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (43 samples, 0.07%)</title><rect x="97.0290%" y="661" width="0.0664%" height="15" fill="rgb(252,177,53)" fg:x="62835" fg:w="43"/><text x="97.2790%" y="671.50"></text></g><g><title>alloc::string::String::push_str (43 samples, 0.07%)</title><rect x="97.0290%" y="645" width="0.0664%" height="15" fill="rgb(237,209,29)" fg:x="62835" fg:w="43"/><text x="97.2790%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (43 samples, 0.07%)</title><rect x="97.0290%" y="629" width="0.0664%" height="15" fill="rgb(212,65,23)" fg:x="62835" fg:w="43"/><text x="97.2790%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (43 samples, 0.07%)</title><rect x="97.0290%" y="613" width="0.0664%" height="15" fill="rgb(230,222,46)" fg:x="62835" fg:w="43"/><text x="97.2790%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (43 samples, 0.07%)</title><rect x="97.0290%" y="597" width="0.0664%" height="15" fill="rgb(215,135,32)" fg:x="62835" fg:w="43"/><text x="97.2790%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (64 samples, 0.10%)</title><rect x="97.0027%" y="741" width="0.0988%" height="15" fill="rgb(246,101,22)" fg:x="62818" fg:w="64"/><text x="97.2527%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (55 samples, 0.08%)</title><rect x="97.0166%" y="725" width="0.0849%" height="15" fill="rgb(206,107,13)" fg:x="62827" fg:w="55"/><text x="97.2666%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (51 samples, 0.08%)</title><rect x="97.0228%" y="709" width="0.0788%" height="15" fill="rgb(250,100,44)" fg:x="62831" fg:w="51"/><text x="97.2728%" y="719.50"></text></g><g><title>core::fmt::write (48 samples, 0.07%)</title><rect x="97.0274%" y="693" width="0.0741%" height="15" fill="rgb(231,147,38)" fg:x="62834" fg:w="48"/><text x="97.2774%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="97.1016%" y="725" width="0.0124%" height="15" fill="rgb(229,8,40)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="97.1016%" y="709" width="0.0124%" height="15" fill="rgb(221,135,30)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="719.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.01%)</title><rect x="97.1016%" y="693" width="0.0124%" height="15" fill="rgb(249,193,18)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.01%)</title><rect x="97.1016%" y="677" width="0.0124%" height="15" fill="rgb(209,133,39)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.01%)</title><rect x="97.1016%" y="661" width="0.0124%" height="15" fill="rgb(232,100,14)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.01%)</title><rect x="97.1016%" y="645" width="0.0124%" height="15" fill="rgb(224,185,1)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="97.1016%" y="629" width="0.0124%" height="15" fill="rgb(223,139,8)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.01%)</title><rect x="97.1016%" y="613" width="0.0124%" height="15" fill="rgb(232,213,38)" fg:x="62882" fg:w="8"/><text x="97.3516%" y="623.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (93 samples, 0.14%)</title><rect x="96.9734%" y="757" width="0.1436%" height="15" fill="rgb(207,94,22)" fg:x="62799" fg:w="93"/><text x="97.2234%" y="767.50"></text></g><g><title>core::fmt::write (10 samples, 0.02%)</title><rect x="97.1016%" y="741" width="0.0154%" height="15" fill="rgb(219,183,54)" fg:x="62882" fg:w="10"/><text x="97.3516%" y="751.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (298 samples, 0.46%)</title><rect x="96.6831%" y="789" width="0.4602%" height="15" fill="rgb(216,185,54)" fg:x="62611" fg:w="298"/><text x="96.9331%" y="799.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (156 samples, 0.24%)</title><rect x="96.9024%" y="773" width="0.2409%" height="15" fill="rgb(254,217,39)" fg:x="62753" fg:w="156"/><text x="97.1524%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.03%)</title><rect x="97.1170%" y="757" width="0.0263%" height="15" fill="rgb(240,178,23)" fg:x="62892" fg:w="17"/><text x="97.3670%" y="767.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (36 samples, 0.06%)</title><rect x="97.1433%" y="789" width="0.0556%" height="15" fill="rgb(218,11,47)" fg:x="62909" fg:w="36"/><text x="97.3933%" y="799.50"></text></g><g><title>chrono::offset::utc::Utc::now (10 samples, 0.02%)</title><rect x="97.1834%" y="773" width="0.0154%" height="15" fill="rgb(218,51,51)" fg:x="62935" fg:w="10"/><text x="97.4334%" y="783.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="97.2081%" y="709" width="0.0201%" height="15" fill="rgb(238,126,27)" fg:x="62951" fg:w="13"/><text x="97.4581%" y="719.50"></text></g><g><title>malloc_consolidate (12 samples, 0.02%)</title><rect x="97.2097%" y="693" width="0.0185%" height="15" fill="rgb(249,202,22)" fg:x="62952" fg:w="12"/><text x="97.4597%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.03%)</title><rect x="97.2035%" y="773" width="0.0340%" height="15" fill="rgb(254,195,49)" fg:x="62948" fg:w="22"/><text x="97.4535%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.03%)</title><rect x="97.2035%" y="757" width="0.0340%" height="15" fill="rgb(208,123,14)" fg:x="62948" fg:w="22"/><text x="97.4535%" y="767.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.03%)</title><rect x="97.2035%" y="741" width="0.0340%" height="15" fill="rgb(224,200,8)" fg:x="62948" fg:w="22"/><text x="97.4535%" y="751.50"></text></g><g><title>_int_realloc (20 samples, 0.03%)</title><rect x="97.2066%" y="725" width="0.0309%" height="15" fill="rgb(217,61,36)" fg:x="62950" fg:w="20"/><text x="97.4566%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="97.2436%" y="757" width="0.0108%" height="15" fill="rgb(206,35,45)" fg:x="62974" fg:w="7"/><text x="97.4936%" y="767.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (41 samples, 0.06%)</title><rect x="97.1988%" y="789" width="0.0633%" height="15" fill="rgb(217,65,33)" fg:x="62945" fg:w="41"/><text x="97.4488%" y="799.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (16 samples, 0.02%)</title><rect x="97.2374%" y="773" width="0.0247%" height="15" fill="rgb(222,158,48)" fg:x="62970" fg:w="16"/><text x="97.4874%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="97.3440%" y="741" width="0.0124%" height="15" fill="rgb(254,2,54)" fg:x="63039" fg:w="8"/><text x="97.5940%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="97.3455%" y="725" width="0.0108%" height="15" fill="rgb(250,143,38)" fg:x="63040" fg:w="7"/><text x="97.5955%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.02%)</title><rect x="97.3564%" y="741" width="0.0170%" height="15" fill="rgb(248,25,0)" fg:x="63047" fg:w="11"/><text x="97.6064%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="97.3579%" y="725" width="0.0154%" height="15" fill="rgb(206,152,27)" fg:x="63048" fg:w="10"/><text x="97.6079%" y="735.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="97.3579%" y="709" width="0.0154%" height="15" fill="rgb(240,77,30)" fg:x="63048" fg:w="10"/><text x="97.6079%" y="719.50"></text></g><g><title>__GI___libc_free (12 samples, 0.02%)</title><rect x="97.3996%" y="725" width="0.0185%" height="15" fill="rgb(231,5,3)" fg:x="63075" fg:w="12"/><text x="97.6496%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="709" width="0.0124%" height="15" fill="rgb(207,226,32)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="693" width="0.0124%" height="15" fill="rgb(222,207,47)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="677" width="0.0124%" height="15" fill="rgb(229,115,45)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="661" width="0.0124%" height="15" fill="rgb(224,191,6)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="645" width="0.0124%" height="15" fill="rgb(230,227,24)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="629" width="0.0124%" height="15" fill="rgb(228,80,19)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="613" width="0.0124%" height="15" fill="rgb(247,229,0)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.01%)</title><rect x="97.4058%" y="597" width="0.0124%" height="15" fill="rgb(237,194,15)" fg:x="63079" fg:w="8"/><text x="97.6558%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="97.4073%" y="581" width="0.0108%" height="15" fill="rgb(219,203,20)" fg:x="63080" fg:w="7"/><text x="97.6573%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="97.4073%" y="565" width="0.0108%" height="15" fill="rgb(234,128,8)" fg:x="63080" fg:w="7"/><text x="97.6573%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="97.4073%" y="549" width="0.0108%" height="15" fill="rgb(248,202,8)" fg:x="63080" fg:w="7"/><text x="97.6573%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="97.4073%" y="533" width="0.0108%" height="15" fill="rgb(206,104,37)" fg:x="63080" fg:w="7"/><text x="97.6573%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="97.4073%" y="517" width="0.0108%" height="15" fill="rgb(223,8,27)" fg:x="63080" fg:w="7"/><text x="97.6573%" y="527.50"></text></g><g><title>_int_free (12 samples, 0.02%)</title><rect x="97.4258%" y="725" width="0.0185%" height="15" fill="rgb(216,217,28)" fg:x="63092" fg:w="12"/><text x="97.6758%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15 samples, 0.02%)</title><rect x="97.4444%" y="725" width="0.0232%" height="15" fill="rgb(249,199,1)" fg:x="63104" fg:w="15"/><text x="97.6944%" y="735.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.02%)</title><rect x="97.4444%" y="709" width="0.0232%" height="15" fill="rgb(240,85,17)" fg:x="63104" fg:w="15"/><text x="97.6944%" y="719.50"></text></g><g><title>_int_malloc (10 samples, 0.02%)</title><rect x="97.4521%" y="693" width="0.0154%" height="15" fill="rgb(206,108,45)" fg:x="63109" fg:w="10"/><text x="97.7021%" y="703.50"></text></g><g><title>alloc::string::String::push (7 samples, 0.01%)</title><rect x="97.4737%" y="709" width="0.0108%" height="15" fill="rgb(245,210,41)" fg:x="63123" fg:w="7"/><text x="97.7237%" y="719.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (12 samples, 0.02%)</title><rect x="97.4675%" y="725" width="0.0185%" height="15" fill="rgb(206,13,37)" fg:x="63119" fg:w="12"/><text x="97.7175%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (61 samples, 0.09%)</title><rect x="97.4861%" y="725" width="0.0942%" height="15" fill="rgb(250,61,18)" fg:x="63131" fg:w="61"/><text x="97.7361%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (24 samples, 0.04%)</title><rect x="97.5432%" y="709" width="0.0371%" height="15" fill="rgb(235,172,48)" fg:x="63168" fg:w="24"/><text x="97.7932%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="97.6050%" y="709" width="0.0185%" height="15" fill="rgb(249,201,17)" fg:x="63208" fg:w="12"/><text x="97.8550%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="97.6081%" y="693" width="0.0154%" height="15" fill="rgb(219,208,6)" fg:x="63210" fg:w="10"/><text x="97.8581%" y="703.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.02%)</title><rect x="97.6081%" y="677" width="0.0154%" height="15" fill="rgb(248,31,23)" fg:x="63210" fg:w="10"/><text x="97.8581%" y="687.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (215 samples, 0.33%)</title><rect x="97.2992%" y="773" width="0.3320%" height="15" fill="rgb(245,15,42)" fg:x="63010" fg:w="215"/><text x="97.5492%" y="783.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (201 samples, 0.31%)</title><rect x="97.3208%" y="757" width="0.3104%" height="15" fill="rgb(222,217,39)" fg:x="63024" fg:w="201"/><text x="97.5708%" y="767.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (167 samples, 0.26%)</title><rect x="97.3733%" y="741" width="0.2579%" height="15" fill="rgb(210,219,27)" fg:x="63058" fg:w="167"/><text x="97.6233%" y="751.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (33 samples, 0.05%)</title><rect x="97.5803%" y="725" width="0.0510%" height="15" fill="rgb(252,166,36)" fg:x="63192" fg:w="33"/><text x="97.8303%" y="735.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (258 samples, 0.40%)</title><rect x="97.2622%" y="789" width="0.3984%" height="15" fill="rgb(245,132,34)" fg:x="62986" fg:w="258"/><text x="97.5122%" y="799.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (19 samples, 0.03%)</title><rect x="97.6312%" y="773" width="0.0293%" height="15" fill="rgb(236,54,3)" fg:x="63225" fg:w="19"/><text x="97.8812%" y="783.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="97.6436%" y="757" width="0.0170%" height="15" fill="rgb(241,173,43)" fg:x="63233" fg:w="11"/><text x="97.8936%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (189 samples, 0.29%)</title><rect x="97.6791%" y="533" width="0.2919%" height="15" fill="rgb(215,190,9)" fg:x="63256" fg:w="189"/><text x="97.9291%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (175 samples, 0.27%)</title><rect x="97.7007%" y="517" width="0.2702%" height="15" fill="rgb(242,101,16)" fg:x="63270" fg:w="175"/><text x="97.9507%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (169 samples, 0.26%)</title><rect x="97.7100%" y="501" width="0.2610%" height="15" fill="rgb(223,190,21)" fg:x="63276" fg:w="169"/><text x="97.9600%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (164 samples, 0.25%)</title><rect x="97.7177%" y="485" width="0.2532%" height="15" fill="rgb(215,228,25)" fg:x="63281" fg:w="164"/><text x="97.9677%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (164 samples, 0.25%)</title><rect x="97.7177%" y="469" width="0.2532%" height="15" fill="rgb(225,36,22)" fg:x="63281" fg:w="164"/><text x="97.9677%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (161 samples, 0.25%)</title><rect x="97.7223%" y="453" width="0.2486%" height="15" fill="rgb(251,106,46)" fg:x="63284" fg:w="161"/><text x="97.9723%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (147 samples, 0.23%)</title><rect x="97.7439%" y="437" width="0.2270%" height="15" fill="rgb(208,90,1)" fg:x="63298" fg:w="147"/><text x="97.9939%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (128 samples, 0.20%)</title><rect x="97.7733%" y="421" width="0.1977%" height="15" fill="rgb(243,10,4)" fg:x="63317" fg:w="128"/><text x="98.0233%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (114 samples, 0.18%)</title><rect x="97.7949%" y="405" width="0.1760%" height="15" fill="rgb(212,137,27)" fg:x="63331" fg:w="114"/><text x="98.0449%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (100 samples, 0.15%)</title><rect x="97.8165%" y="389" width="0.1544%" height="15" fill="rgb(231,220,49)" fg:x="63345" fg:w="100"/><text x="98.0665%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (58 samples, 0.09%)</title><rect x="97.8814%" y="373" width="0.0896%" height="15" fill="rgb(237,96,20)" fg:x="63387" fg:w="58"/><text x="98.1314%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (56 samples, 0.09%)</title><rect x="97.8845%" y="357" width="0.0865%" height="15" fill="rgb(239,229,30)" fg:x="63389" fg:w="56"/><text x="98.1345%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (56 samples, 0.09%)</title><rect x="97.8845%" y="341" width="0.0865%" height="15" fill="rgb(219,65,33)" fg:x="63389" fg:w="56"/><text x="98.1345%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (43 samples, 0.07%)</title><rect x="97.9045%" y="325" width="0.0664%" height="15" fill="rgb(243,134,7)" fg:x="63402" fg:w="43"/><text x="98.1545%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (28 samples, 0.04%)</title><rect x="97.9277%" y="309" width="0.0432%" height="15" fill="rgb(216,177,54)" fg:x="63417" fg:w="28"/><text x="98.1777%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="97.9339%" y="293" width="0.0371%" height="15" fill="rgb(211,160,20)" fg:x="63421" fg:w="24"/><text x="98.1839%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.01%)</title><rect x="97.9570%" y="277" width="0.0139%" height="15" fill="rgb(239,85,39)" fg:x="63436" fg:w="9"/><text x="98.2070%" y="287.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (195 samples, 0.30%)</title><rect x="97.6714%" y="629" width="0.3011%" height="15" fill="rgb(232,125,22)" fg:x="63251" fg:w="195"/><text x="97.9214%" y="639.50"></text></g><g><title>std::io::Write::write_all (195 samples, 0.30%)</title><rect x="97.6714%" y="613" width="0.3011%" height="15" fill="rgb(244,57,34)" fg:x="63251" fg:w="195"/><text x="97.9214%" y="623.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (195 samples, 0.30%)</title><rect x="97.6714%" y="597" width="0.3011%" height="15" fill="rgb(214,203,32)" fg:x="63251" fg:w="195"/><text x="97.9214%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (195 samples, 0.30%)</title><rect x="97.6714%" y="581" width="0.3011%" height="15" fill="rgb(207,58,43)" fg:x="63251" fg:w="195"/><text x="97.9214%" y="591.50"></text></g><g><title>__libc_write (195 samples, 0.30%)</title><rect x="97.6714%" y="565" width="0.3011%" height="15" fill="rgb(215,193,15)" fg:x="63251" fg:w="195"/><text x="97.9214%" y="575.50"></text></g><g><title>__libc_write (191 samples, 0.29%)</title><rect x="97.6775%" y="549" width="0.2949%" height="15" fill="rgb(232,15,44)" fg:x="63255" fg:w="191"/><text x="97.9275%" y="559.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (205 samples, 0.32%)</title><rect x="97.6714%" y="661" width="0.3166%" height="15" fill="rgb(212,3,48)" fg:x="63251" fg:w="205"/><text x="97.9214%" y="671.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (205 samples, 0.32%)</title><rect x="97.6714%" y="645" width="0.3166%" height="15" fill="rgb(218,128,7)" fg:x="63251" fg:w="205"/><text x="97.9214%" y="655.50"></text></g><g><title>std::sys_common::memchr::memrchr (9 samples, 0.01%)</title><rect x="97.9740%" y="629" width="0.0139%" height="15" fill="rgb(226,216,39)" fg:x="63447" fg:w="9"/><text x="98.2240%" y="639.50"></text></g><g><title>std::sys::unix::memchr::memrchr (9 samples, 0.01%)</title><rect x="97.9740%" y="613" width="0.0139%" height="15" fill="rgb(243,47,51)" fg:x="63447" fg:w="9"/><text x="98.2240%" y="623.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (9 samples, 0.01%)</title><rect x="97.9740%" y="597" width="0.0139%" height="15" fill="rgb(241,183,40)" fg:x="63447" fg:w="9"/><text x="98.2240%" y="607.50"></text></g><g><title>__memrchr_avx2 (8 samples, 0.01%)</title><rect x="97.9756%" y="581" width="0.0124%" height="15" fill="rgb(231,217,32)" fg:x="63448" fg:w="8"/><text x="98.2256%" y="591.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (207 samples, 0.32%)</title><rect x="97.6714%" y="693" width="0.3196%" height="15" fill="rgb(229,61,38)" fg:x="63251" fg:w="207"/><text x="97.9214%" y="703.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (207 samples, 0.32%)</title><rect x="97.6714%" y="677" width="0.3196%" height="15" fill="rgb(225,210,5)" fg:x="63251" fg:w="207"/><text x="97.9214%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (210 samples, 0.32%)</title><rect x="97.6683%" y="725" width="0.3243%" height="15" fill="rgb(231,79,45)" fg:x="63249" fg:w="210"/><text x="97.9183%" y="735.50"></text></g><g><title>core::fmt::write (210 samples, 0.32%)</title><rect x="97.6683%" y="709" width="0.3243%" height="15" fill="rgb(224,100,7)" fg:x="63249" fg:w="210"/><text x="97.9183%" y="719.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (212 samples, 0.33%)</title><rect x="97.6667%" y="757" width="0.3274%" height="15" fill="rgb(241,198,18)" fg:x="63248" fg:w="212"/><text x="97.9167%" y="767.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (212 samples, 0.33%)</title><rect x="97.6667%" y="741" width="0.3274%" height="15" fill="rgb(252,97,53)" fg:x="63248" fg:w="212"/><text x="97.9167%" y="751.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (50,060 samples, 77.30%)</title><rect x="20.6936%" y="837" width="77.3020%" height="15" fill="rgb(220,88,7)" fg:x="13401" fg:w="50060"/><text x="20.9436%" y="847.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>do_query::main::{{closure}} (50,060 samples, 77.30%)</title><rect x="20.6936%" y="821" width="77.3020%" height="15" fill="rgb(213,176,14)" fg:x="13401" fg:w="50060"/><text x="20.9436%" y="831.50">do_query::main::{{closure}}</text></g><g><title>do_query::main_inner::_{{closure}} (50,060 samples, 77.30%)</title><rect x="20.6936%" y="805" width="77.3020%" height="15" fill="rgb(246,73,7)" fg:x="13401" fg:w="50060"/><text x="20.9436%" y="815.50">do_query::main_inner::_{{closure}}</text></g><g><title>std::io::stdio::_print (217 samples, 0.34%)</title><rect x="97.6606%" y="789" width="0.3351%" height="15" fill="rgb(245,64,36)" fg:x="63244" fg:w="217"/><text x="97.9106%" y="799.50"></text></g><g><title>std::io::stdio::print_to (213 samples, 0.33%)</title><rect x="97.6667%" y="773" width="0.3289%" height="15" fill="rgb(245,80,10)" fg:x="63248" fg:w="213"/><text x="97.9167%" y="783.50"></text></g><g><title>[unknown] (51,062 samples, 78.85%)</title><rect x="19.1850%" y="853" width="78.8493%" height="15" fill="rgb(232,107,50)" fg:x="12424" fg:w="51062"/><text x="19.4350%" y="863.50">[unknown]</text></g><g><title>unlink_chunk.isra.0 (25 samples, 0.04%)</title><rect x="97.9956%" y="837" width="0.0386%" height="15" fill="rgb(253,3,0)" fg:x="63461" fg:w="25"/><text x="98.2456%" y="847.50"></text></g><g><title>_int_free (27 samples, 0.04%)</title><rect x="98.0420%" y="853" width="0.0417%" height="15" fill="rgb(212,99,53)" fg:x="63491" fg:w="27"/><text x="98.2920%" y="863.50"></text></g><g><title>_int_memalign (11 samples, 0.02%)</title><rect x="98.0898%" y="853" width="0.0170%" height="15" fill="rgb(249,111,54)" fg:x="63522" fg:w="11"/><text x="98.3398%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.01%)</title><rect x="98.1269%" y="853" width="0.0139%" height="15" fill="rgb(249,55,30)" fg:x="63546" fg:w="9"/><text x="98.3769%" y="863.50"></text></g><g><title>main_arena (16 samples, 0.02%)</title><rect x="98.1655%" y="853" width="0.0247%" height="15" fill="rgb(237,47,42)" fg:x="63571" fg:w="16"/><text x="98.4155%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="98.1748%" y="837" width="0.0154%" height="15" fill="rgb(211,20,18)" fg:x="63577" fg:w="10"/><text x="98.4248%" y="847.50"></text></g><g><title>malloc_consolidate (8 samples, 0.01%)</title><rect x="98.1902%" y="853" width="0.0124%" height="15" fill="rgb(231,203,46)" fg:x="63587" fg:w="8"/><text x="98.4402%" y="863.50"></text></g><g><title>do_query (63,599 samples, 98.21%)</title><rect x="0.0000%" y="869" width="98.2087%" height="15" fill="rgb(237,142,3)" fg:x="0" fg:w="63599"/><text x="0.2500%" y="879.50">do_query</text></g><g><title>all (64,759 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(241,107,1)" fg:x="0" fg:w="64759"/><text x="0.2500%" y="895.50"></text></g><g><title>tokio-runtime-w (1,160 samples, 1.79%)</title><rect x="98.2087%" y="869" width="1.7913%" height="15" fill="rgb(229,83,13)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="879.50">t..</text></g><g><title>[[kernel.kallsyms]] (1,160 samples, 1.79%)</title><rect x="98.2087%" y="853" width="1.7913%" height="15" fill="rgb(241,91,40)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="863.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,160 samples, 1.79%)</title><rect x="98.2087%" y="837" width="1.7913%" height="15" fill="rgb(225,3,45)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="847.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,160 samples, 1.79%)</title><rect x="98.2087%" y="821" width="1.7913%" height="15" fill="rgb(244,223,14)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="831.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,160 samples, 1.79%)</title><rect x="98.2087%" y="805" width="1.7913%" height="15" fill="rgb(224,124,37)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="815.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,160 samples, 1.79%)</title><rect x="98.2087%" y="789" width="1.7913%" height="15" fill="rgb(251,171,30)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="799.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,160 samples, 1.79%)</title><rect x="98.2087%" y="773" width="1.7913%" height="15" fill="rgb(236,46,54)" fg:x="63599" fg:w="1160"/><text x="98.4587%" y="783.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,159 samples, 1.79%)</title><rect x="98.2103%" y="757" width="1.7897%" height="15" fill="rgb(245,213,5)" fg:x="63600" fg:w="1159"/><text x="98.4603%" y="767.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,159 samples, 1.79%)</title><rect x="98.2103%" y="741" width="1.7897%" height="15" fill="rgb(230,144,27)" fg:x="63600" fg:w="1159"/><text x="98.4603%" y="751.50">[..</text></g><g><title>[[kernel.kallsyms]] (1,135 samples, 1.75%)</title><rect x="98.2473%" y="725" width="1.7527%" height="15" fill="rgb(220,86,6)" fg:x="63624" fg:w="1135"/><text x="98.4973%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1,128 samples, 1.74%)</title><rect x="98.2582%" y="709" width="1.7418%" height="15" fill="rgb(240,20,13)" fg:x="63631" fg:w="1128"/><text x="98.5082%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (1,119 samples, 1.73%)</title><rect x="98.2721%" y="693" width="1.7279%" height="15" fill="rgb(217,89,34)" fg:x="63640" fg:w="1119"/><text x="98.5221%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (1,117 samples, 1.72%)</title><rect x="98.2751%" y="677" width="1.7249%" height="15" fill="rgb(229,13,5)" fg:x="63642" fg:w="1117"/><text x="98.5251%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (1,112 samples, 1.72%)</title><rect x="98.2829%" y="661" width="1.7171%" height="15" fill="rgb(244,67,35)" fg:x="63647" fg:w="1112"/><text x="98.5329%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (1,100 samples, 1.70%)</title><rect x="98.3014%" y="645" width="1.6986%" height="15" fill="rgb(221,40,2)" fg:x="63659" fg:w="1100"/><text x="98.5514%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (445 samples, 0.69%)</title><rect x="99.3128%" y="629" width="0.6872%" height="15" fill="rgb(237,157,21)" fg:x="64314" fg:w="445"/><text x="99.5628%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (391 samples, 0.60%)</title><rect x="99.3962%" y="613" width="0.6038%" height="15" fill="rgb(222,94,11)" fg:x="64368" fg:w="391"/><text x="99.6462%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (346 samples, 0.53%)</title><rect x="99.4657%" y="597" width="0.5343%" height="15" fill="rgb(249,113,6)" fg:x="64413" fg:w="346"/><text x="99.7157%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (293 samples, 0.45%)</title><rect x="99.5476%" y="581" width="0.4524%" height="15" fill="rgb(238,137,36)" fg:x="64466" fg:w="293"/><text x="99.7976%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (250 samples, 0.39%)</title><rect x="99.6140%" y="565" width="0.3860%" height="15" fill="rgb(210,102,26)" fg:x="64509" fg:w="250"/><text x="99.8640%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (215 samples, 0.33%)</title><rect x="99.6680%" y="549" width="0.3320%" height="15" fill="rgb(218,30,30)" fg:x="64544" fg:w="215"/><text x="99.9180%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (180 samples, 0.28%)</title><rect x="99.7220%" y="533" width="0.2780%" height="15" fill="rgb(214,67,26)" fg:x="64579" fg:w="180"/><text x="99.9720%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.05%)</title><rect x="99.9521%" y="517" width="0.0479%" height="15" fill="rgb(251,9,53)" fg:x="64728" fg:w="31"/><text x="100.2021%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="99.9629%" y="501" width="0.0371%" height="15" fill="rgb(228,204,25)" fg:x="64735" fg:w="24"/><text x="100.2129%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="99.9799%" y="485" width="0.0201%" height="15" fill="rgb(207,153,8)" fg:x="64746" fg:w="13"/><text x="100.2299%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="99.9830%" y="469" width="0.0170%" height="15" fill="rgb(242,9,16)" fg:x="64748" fg:w="11"/><text x="100.2330%" y="479.50"></text></g></svg></svg>