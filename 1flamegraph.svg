<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="59789"><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (6 samples, 0.01%)</title><rect x="0.0117%" y="837" width="0.0100%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="6"/><text x="0.2617%" y="847.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.03%)</title><rect x="0.0117%" y="853" width="0.0251%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="15"/><text x="0.2617%" y="863.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="0.0368%" y="853" width="0.0184%" height="15" fill="rgb(221,193,54)" fg:x="22" fg:w="11"/><text x="0.2868%" y="863.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.02%)</title><rect x="0.0368%" y="837" width="0.0184%" height="15" fill="rgb(248,212,6)" fg:x="22" fg:w="11"/><text x="0.2868%" y="847.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="0.0368%" y="821" width="0.0184%" height="15" fill="rgb(208,68,35)" fg:x="22" fg:w="11"/><text x="0.2868%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="0.0669%" y="837" width="0.0217%" height="15" fill="rgb(232,128,0)" fg:x="40" fg:w="13"/><text x="0.3169%" y="847.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.0937%" y="837" width="0.0100%" height="15" fill="rgb(207,160,47)" fg:x="56" fg:w="6"/><text x="0.3437%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.04%)</title><rect x="0.1438%" y="837" width="0.0351%" height="15" fill="rgb(228,23,34)" fg:x="86" fg:w="21"/><text x="0.3938%" y="847.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.03%)</title><rect x="0.2007%" y="837" width="0.0251%" height="15" fill="rgb(218,30,26)" fg:x="120" fg:w="15"/><text x="0.4507%" y="847.50"></text></g><g><title>__calloc (31 samples, 0.05%)</title><rect x="0.2258%" y="837" width="0.0518%" height="15" fill="rgb(220,122,19)" fg:x="135" fg:w="31"/><text x="0.4758%" y="847.50"></text></g><g><title>__posix_memalign (15 samples, 0.03%)</title><rect x="0.2810%" y="837" width="0.0251%" height="15" fill="rgb(250,228,42)" fg:x="168" fg:w="15"/><text x="0.5310%" y="847.50"></text></g><g><title>_int_free (80 samples, 0.13%)</title><rect x="0.3061%" y="837" width="0.1338%" height="15" fill="rgb(240,193,28)" fg:x="183" fg:w="80"/><text x="0.5561%" y="847.50"></text></g><g><title>_int_malloc (16 samples, 0.03%)</title><rect x="0.4399%" y="837" width="0.0268%" height="15" fill="rgb(216,20,37)" fg:x="263" fg:w="16"/><text x="0.6899%" y="847.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (13 samples, 0.02%)</title><rect x="0.4683%" y="837" width="0.0217%" height="15" fill="rgb(206,188,39)" fg:x="280" fg:w="13"/><text x="0.7183%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="0.4984%" y="837" width="0.0117%" height="15" fill="rgb(217,207,13)" fg:x="298" fg:w="7"/><text x="0.7484%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.02%)</title><rect x="0.5202%" y="837" width="0.0184%" height="15" fill="rgb(231,73,38)" fg:x="311" fg:w="11"/><text x="0.7702%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="0.5603%" y="837" width="0.0134%" height="15" fill="rgb(225,20,46)" fg:x="335" fg:w="8"/><text x="0.8103%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (16 samples, 0.03%)</title><rect x="0.5737%" y="837" width="0.0268%" height="15" fill="rgb(210,31,41)" fg:x="343" fg:w="16"/><text x="0.8237%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (16 samples, 0.03%)</title><rect x="0.6004%" y="837" width="0.0268%" height="15" fill="rgb(221,200,47)" fg:x="359" fg:w="16"/><text x="0.8504%" y="847.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (8 samples, 0.01%)</title><rect x="0.6623%" y="837" width="0.0134%" height="15" fill="rgb(226,26,5)" fg:x="396" fg:w="8"/><text x="0.9123%" y="847.50"></text></g><g><title>[[heap]] (398 samples, 0.67%)</title><rect x="0.0569%" y="853" width="0.6657%" height="15" fill="rgb(249,33,26)" fg:x="34" fg:w="398"/><text x="0.3069%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (22 samples, 0.04%)</title><rect x="0.6857%" y="837" width="0.0368%" height="15" fill="rgb(235,183,28)" fg:x="410" fg:w="22"/><text x="0.9357%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (75 samples, 0.13%)</title><rect x="0.7225%" y="853" width="0.1254%" height="15" fill="rgb(221,5,38)" fg:x="432" fg:w="75"/><text x="0.9725%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.01%)</title><rect x="0.8480%" y="837" width="0.0117%" height="15" fill="rgb(247,18,42)" fg:x="507" fg:w="7"/><text x="1.0980%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.03%)</title><rect x="0.8664%" y="837" width="0.0268%" height="15" fill="rgb(241,131,45)" fg:x="518" fg:w="16"/><text x="1.1164%" y="847.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (35 samples, 0.06%)</title><rect x="0.9032%" y="837" width="0.0585%" height="15" fill="rgb(249,31,29)" fg:x="540" fg:w="35"/><text x="1.1532%" y="847.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (10 samples, 0.02%)</title><rect x="0.9935%" y="837" width="0.0167%" height="15" fill="rgb(225,111,53)" fg:x="594" fg:w="10"/><text x="1.2435%" y="847.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="1.0102%" y="837" width="0.0184%" height="15" fill="rgb(238,160,17)" fg:x="604" fg:w="11"/><text x="1.2602%" y="847.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="1.0387%" y="837" width="0.0100%" height="15" fill="rgb(214,148,48)" fg:x="621" fg:w="6"/><text x="1.2887%" y="847.50"></text></g><g><title>_int_free (47 samples, 0.08%)</title><rect x="1.0771%" y="837" width="0.0786%" height="15" fill="rgb(232,36,49)" fg:x="644" fg:w="47"/><text x="1.3271%" y="847.50"></text></g><g><title>_int_malloc (46 samples, 0.08%)</title><rect x="1.1557%" y="837" width="0.0769%" height="15" fill="rgb(209,103,24)" fg:x="691" fg:w="46"/><text x="1.4057%" y="847.50"></text></g><g><title>_int_memalign (46 samples, 0.08%)</title><rect x="1.2327%" y="837" width="0.0769%" height="15" fill="rgb(229,88,8)" fg:x="737" fg:w="46"/><text x="1.4827%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.02%)</title><rect x="1.3213%" y="837" width="0.0234%" height="15" fill="rgb(213,181,19)" fg:x="790" fg:w="14"/><text x="1.5713%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="1.3447%" y="837" width="0.0134%" height="15" fill="rgb(254,191,54)" fg:x="804" fg:w="8"/><text x="1.5947%" y="847.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (13 samples, 0.02%)</title><rect x="1.3581%" y="837" width="0.0217%" height="15" fill="rgb(241,83,37)" fg:x="812" fg:w="13"/><text x="1.6081%" y="847.50"></text></g><g><title>arrow_schema::field::Field::new (12 samples, 0.02%)</title><rect x="1.3832%" y="837" width="0.0201%" height="15" fill="rgb(233,36,39)" fg:x="827" fg:w="12"/><text x="1.6332%" y="847.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (8 samples, 0.01%)</title><rect x="1.4200%" y="837" width="0.0134%" height="15" fill="rgb(226,3,54)" fg:x="849" fg:w="8"/><text x="1.6700%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.01%)</title><rect x="1.4217%" y="821" width="0.0117%" height="15" fill="rgb(245,192,40)" fg:x="850" fg:w="7"/><text x="1.6717%" y="831.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (7 samples, 0.01%)</title><rect x="1.4217%" y="805" width="0.0117%" height="15" fill="rgb(238,167,29)" fg:x="850" fg:w="7"/><text x="1.6717%" y="815.50"></text></g><g><title>[[stack]] (396 samples, 0.66%)</title><rect x="0.8480%" y="853" width="0.6623%" height="15" fill="rgb(232,182,51)" fg:x="507" fg:w="396"/><text x="1.0980%" y="863.50"></text></g><g><title>[[vdso]] (15 samples, 0.03%)</title><rect x="1.5103%" y="853" width="0.0251%" height="15" fill="rgb(231,60,39)" fg:x="903" fg:w="15"/><text x="1.7603%" y="863.50"></text></g><g><title>[do_query] (27 samples, 0.05%)</title><rect x="1.5387%" y="853" width="0.0452%" height="15" fill="rgb(208,69,12)" fg:x="920" fg:w="27"/><text x="1.7887%" y="863.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="1.5856%" y="837" width="0.0117%" height="15" fill="rgb(235,93,37)" fg:x="948" fg:w="7"/><text x="1.8356%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="1.6040%" y="837" width="0.0134%" height="15" fill="rgb(213,116,39)" fg:x="959" fg:w="8"/><text x="1.8540%" y="847.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.04%)</title><rect x="1.5839%" y="853" width="0.0368%" height="15" fill="rgb(222,207,29)" fg:x="947" fg:w="22"/><text x="1.8339%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="19.1624%" y="661" width="0.0217%" height="15" fill="rgb(206,96,30)" fg:x="11457" fg:w="13"/><text x="19.4124%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="19.1657%" y="645" width="0.0184%" height="15" fill="rgb(218,138,4)" fg:x="11459" fg:w="11"/><text x="19.4157%" y="655.50"></text></g><g><title>[perf-720734.map] (10,502 samples, 17.57%)</title><rect x="1.6207%" y="853" width="17.5651%" height="15" fill="rgb(250,191,14)" fg:x="969" fg:w="10502"/><text x="1.8707%" y="863.50">[perf-720734.map]</text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.08%)</title><rect x="19.1072%" y="837" width="0.0786%" height="15" fill="rgb(239,60,40)" fg:x="11424" fg:w="47"/><text x="19.3572%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.08%)</title><rect x="19.1072%" y="821" width="0.0786%" height="15" fill="rgb(206,27,48)" fg:x="11424" fg:w="47"/><text x="19.3572%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.08%)</title><rect x="19.1072%" y="805" width="0.0786%" height="15" fill="rgb(225,35,8)" fg:x="11424" fg:w="47"/><text x="19.3572%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (46 samples, 0.08%)</title><rect x="19.1089%" y="789" width="0.0769%" height="15" fill="rgb(250,213,24)" fg:x="11425" fg:w="46"/><text x="19.3589%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (45 samples, 0.08%)</title><rect x="19.1105%" y="773" width="0.0753%" height="15" fill="rgb(247,123,22)" fg:x="11426" fg:w="45"/><text x="19.3605%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (42 samples, 0.07%)</title><rect x="19.1156%" y="757" width="0.0702%" height="15" fill="rgb(231,138,38)" fg:x="11429" fg:w="42"/><text x="19.3656%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.07%)</title><rect x="19.1172%" y="741" width="0.0686%" height="15" fill="rgb(231,145,46)" fg:x="11430" fg:w="41"/><text x="19.3672%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.07%)</title><rect x="19.1172%" y="725" width="0.0686%" height="15" fill="rgb(251,118,11)" fg:x="11430" fg:w="41"/><text x="19.3672%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (41 samples, 0.07%)</title><rect x="19.1172%" y="709" width="0.0686%" height="15" fill="rgb(217,147,25)" fg:x="11430" fg:w="41"/><text x="19.3672%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (39 samples, 0.07%)</title><rect x="19.1206%" y="693" width="0.0652%" height="15" fill="rgb(247,81,37)" fg:x="11432" fg:w="39"/><text x="19.3706%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (38 samples, 0.06%)</title><rect x="19.1222%" y="677" width="0.0636%" height="15" fill="rgb(209,12,38)" fg:x="11433" fg:w="38"/><text x="19.3722%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.01%)</title><rect x="19.1891%" y="837" width="0.0134%" height="15" fill="rgb(227,1,9)" fg:x="11473" fg:w="8"/><text x="19.4391%" y="847.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (9 samples, 0.02%)</title><rect x="19.2209%" y="837" width="0.0151%" height="15" fill="rgb(248,47,43)" fg:x="11492" fg:w="9"/><text x="19.4709%" y="847.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="19.2678%" y="837" width="0.0117%" height="15" fill="rgb(221,10,30)" fg:x="11520" fg:w="7"/><text x="19.5178%" y="847.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.01%)</title><rect x="19.2678%" y="821" width="0.0117%" height="15" fill="rgb(210,229,1)" fg:x="11520" fg:w="7"/><text x="19.5178%" y="831.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="19.2678%" y="805" width="0.0117%" height="15" fill="rgb(222,148,37)" fg:x="11520" fg:w="7"/><text x="19.5178%" y="815.50"></text></g><g><title>[do_query] (8 samples, 0.01%)</title><rect x="19.3046%" y="821" width="0.0134%" height="15" fill="rgb(234,67,33)" fg:x="11542" fg:w="8"/><text x="19.5546%" y="831.50"></text></g><g><title>[do_query] (13 samples, 0.02%)</title><rect x="19.3046%" y="837" width="0.0217%" height="15" fill="rgb(247,98,35)" fg:x="11542" fg:w="13"/><text x="19.5546%" y="847.50"></text></g><g><title>__GI___libc_malloc (93 samples, 0.16%)</title><rect x="19.3263%" y="837" width="0.1555%" height="15" fill="rgb(247,138,52)" fg:x="11555" fg:w="93"/><text x="19.5763%" y="847.50"></text></g><g><title>__calloc (32 samples, 0.05%)</title><rect x="19.4835%" y="837" width="0.0535%" height="15" fill="rgb(213,79,30)" fg:x="11649" fg:w="32"/><text x="19.7335%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="19.5487%" y="837" width="0.0100%" height="15" fill="rgb(246,177,23)" fg:x="11688" fg:w="6"/><text x="19.7987%" y="847.50"></text></g><g><title>__posix_memalign (40 samples, 0.07%)</title><rect x="19.5605%" y="837" width="0.0669%" height="15" fill="rgb(230,62,27)" fg:x="11695" fg:w="40"/><text x="19.8105%" y="847.50"></text></g><g><title>_int_free (194 samples, 0.32%)</title><rect x="19.6324%" y="837" width="0.3245%" height="15" fill="rgb(216,154,8)" fg:x="11738" fg:w="194"/><text x="19.8824%" y="847.50"></text></g><g><title>_int_malloc (142 samples, 0.24%)</title><rect x="19.9568%" y="837" width="0.2375%" height="15" fill="rgb(244,35,45)" fg:x="11932" fg:w="142"/><text x="20.2068%" y="847.50"></text></g><g><title>_int_memalign (49 samples, 0.08%)</title><rect x="20.1944%" y="837" width="0.0820%" height="15" fill="rgb(251,115,12)" fg:x="12074" fg:w="49"/><text x="20.4444%" y="847.50"></text></g><g><title>_int_realloc (6 samples, 0.01%)</title><rect x="20.2763%" y="837" width="0.0100%" height="15" fill="rgb(240,54,50)" fg:x="12123" fg:w="6"/><text x="20.5263%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.02%)</title><rect x="20.2930%" y="837" width="0.0151%" height="15" fill="rgb(233,84,52)" fg:x="12133" fg:w="9"/><text x="20.5430%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.02%)</title><rect x="20.3081%" y="837" width="0.0184%" height="15" fill="rgb(207,117,47)" fg:x="12142" fg:w="11"/><text x="20.5581%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="20.3265%" y="837" width="0.0100%" height="15" fill="rgb(249,43,39)" fg:x="12153" fg:w="6"/><text x="20.5765%" y="847.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (6 samples, 0.01%)</title><rect x="20.3382%" y="837" width="0.0100%" height="15" fill="rgb(209,38,44)" fg:x="12160" fg:w="6"/><text x="20.5882%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (19 samples, 0.03%)</title><rect x="20.3499%" y="837" width="0.0318%" height="15" fill="rgb(236,212,23)" fg:x="12167" fg:w="19"/><text x="20.5999%" y="847.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (18 samples, 0.03%)</title><rect x="20.3967%" y="837" width="0.0301%" height="15" fill="rgb(242,79,21)" fg:x="12195" fg:w="18"/><text x="20.6467%" y="847.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (13 samples, 0.02%)</title><rect x="20.4268%" y="837" width="0.0217%" height="15" fill="rgb(211,96,35)" fg:x="12213" fg:w="13"/><text x="20.6768%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.02%)</title><rect x="20.4720%" y="837" width="0.0167%" height="15" fill="rgb(253,215,40)" fg:x="12240" fg:w="10"/><text x="20.7220%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (25 samples, 0.04%)</title><rect x="20.4904%" y="837" width="0.0418%" height="15" fill="rgb(211,81,21)" fg:x="12251" fg:w="25"/><text x="20.7404%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (7 samples, 0.01%)</title><rect x="20.5322%" y="837" width="0.0117%" height="15" fill="rgb(208,190,38)" fg:x="12276" fg:w="7"/><text x="20.7822%" y="847.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::convert_predicate (12 samples, 0.02%)</title><rect x="20.6409%" y="725" width="0.0201%" height="15" fill="rgb(235,213,38)" fg:x="12341" fg:w="12"/><text x="20.8909%" y="735.50"></text></g><g><title>do_query::main_inner::_{{closure}} (45 samples, 0.08%)</title><rect x="20.5874%" y="837" width="0.0753%" height="15" fill="rgb(237,122,38)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="847.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (45 samples, 0.08%)</title><rect x="20.5874%" y="821" width="0.0753%" height="15" fill="rgb(244,218,35)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="831.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (45 samples, 0.08%)</title><rect x="20.5874%" y="805" width="0.0753%" height="15" fill="rgb(240,68,47)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="815.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (45 samples, 0.08%)</title><rect x="20.5874%" y="789" width="0.0753%" height="15" fill="rgb(210,16,53)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="799.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (45 samples, 0.08%)</title><rect x="20.5874%" y="773" width="0.0753%" height="15" fill="rgb(235,124,12)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="783.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (45 samples, 0.08%)</title><rect x="20.5874%" y="757" width="0.0753%" height="15" fill="rgb(224,169,11)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="767.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::new (45 samples, 0.08%)</title><rect x="20.5874%" y="741" width="0.0753%" height="15" fill="rgb(250,166,2)" fg:x="12309" fg:w="45"/><text x="20.8374%" y="751.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (21 samples, 0.04%)</title><rect x="20.6694%" y="837" width="0.0351%" height="15" fill="rgb(242,216,29)" fg:x="12358" fg:w="21"/><text x="20.9194%" y="847.50"></text></g><g><title>malloc_consolidate (50 samples, 0.08%)</title><rect x="20.7179%" y="837" width="0.0836%" height="15" fill="rgb(230,116,27)" fg:x="12387" fg:w="50"/><text x="20.9679%" y="847.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="20.9152%" y="773" width="0.0167%" height="15" fill="rgb(228,99,48)" fg:x="12505" fg:w="10"/><text x="21.1652%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="20.9069%" y="789" width="0.0335%" height="15" fill="rgb(253,11,6)" fg:x="12500" fg:w="20"/><text x="21.1569%" y="799.50"></text></g><g><title>__GI___libc_free (72 samples, 0.12%)</title><rect x="21.0741%" y="773" width="0.1204%" height="15" fill="rgb(247,143,39)" fg:x="12600" fg:w="72"/><text x="21.3241%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.05%)</title><rect x="21.9305%" y="757" width="0.0518%" height="15" fill="rgb(236,97,10)" fg:x="13112" fg:w="31"/><text x="22.1805%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="21.9422%" y="741" width="0.0401%" height="15" fill="rgb(233,208,19)" fg:x="13119" fg:w="24"/><text x="22.1922%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="21.9422%" y="725" width="0.0401%" height="15" fill="rgb(216,164,2)" fg:x="13119" fg:w="24"/><text x="22.1922%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (23 samples, 0.04%)</title><rect x="21.9438%" y="709" width="0.0385%" height="15" fill="rgb(220,129,5)" fg:x="13120" fg:w="23"/><text x="22.1938%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (21 samples, 0.04%)</title><rect x="21.9472%" y="693" width="0.0351%" height="15" fill="rgb(242,17,10)" fg:x="13122" fg:w="21"/><text x="22.1972%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="21.9572%" y="677" width="0.0251%" height="15" fill="rgb(242,107,0)" fg:x="13128" fg:w="15"/><text x="22.2072%" y="687.50"></text></g><g><title>_int_free (474 samples, 0.79%)</title><rect x="21.1945%" y="773" width="0.7928%" height="15" fill="rgb(251,28,31)" fg:x="12672" fg:w="474"/><text x="21.4445%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="22.1696%" y="741" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="13255" fg:w="7"/><text x="22.4196%" y="751.50"></text></g><g><title>__GI___libc_free (48 samples, 0.08%)</title><rect x="22.1813%" y="741" width="0.0803%" height="15" fill="rgb(215,21,27)" fg:x="13262" fg:w="48"/><text x="22.4313%" y="751.50"></text></g><g><title>_int_free (118 samples, 0.20%)</title><rect x="22.2616%" y="741" width="0.1974%" height="15" fill="rgb(232,23,21)" fg:x="13310" fg:w="118"/><text x="22.5116%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (203 samples, 0.34%)</title><rect x="22.1328%" y="757" width="0.3395%" height="15" fill="rgb(244,5,23)" fg:x="13233" fg:w="203"/><text x="22.3828%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (8 samples, 0.01%)</title><rect x="22.4590%" y="741" width="0.0134%" height="15" fill="rgb(226,81,46)" fg:x="13428" fg:w="8"/><text x="22.7090%" y="751.50"></text></g><g><title>__GI___libc_free (82 samples, 0.14%)</title><rect x="22.4807%" y="757" width="0.1371%" height="15" fill="rgb(247,70,30)" fg:x="13441" fg:w="82"/><text x="22.7307%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (734 samples, 1.23%)</title><rect x="21.9873%" y="773" width="1.2277%" height="15" fill="rgb(212,68,19)" fg:x="13146" fg:w="734"/><text x="22.2373%" y="783.50"></text></g><g><title>_int_free (357 samples, 0.60%)</title><rect x="22.6179%" y="757" width="0.5971%" height="15" fill="rgb(240,187,13)" fg:x="13523" fg:w="357"/><text x="22.8679%" y="767.50"></text></g><g><title>__GI___libc_free (68 samples, 0.11%)</title><rect x="23.4123%" y="757" width="0.1137%" height="15" fill="rgb(223,113,26)" fg:x="13998" fg:w="68"/><text x="23.6623%" y="767.50"></text></g><g><title>_int_free (323 samples, 0.54%)</title><rect x="23.5261%" y="757" width="0.5402%" height="15" fill="rgb(206,192,2)" fg:x="14066" fg:w="323"/><text x="23.7761%" y="767.50"></text></g><g><title>__GI___libc_free (35 samples, 0.06%)</title><rect x="24.4092%" y="725" width="0.0585%" height="15" fill="rgb(241,108,4)" fg:x="14594" fg:w="35"/><text x="24.6592%" y="735.50"></text></g><g><title>_int_free (199 samples, 0.33%)</title><rect x="24.4677%" y="725" width="0.3328%" height="15" fill="rgb(247,173,49)" fg:x="14629" fg:w="199"/><text x="24.7177%" y="735.50"></text></g><g><title>__GI___libc_free (43 samples, 0.07%)</title><rect x="24.8909%" y="709" width="0.0719%" height="15" fill="rgb(224,114,35)" fg:x="14882" fg:w="43"/><text x="25.1409%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (227 samples, 0.38%)</title><rect x="24.8005%" y="725" width="0.3797%" height="15" fill="rgb(245,159,27)" fg:x="14828" fg:w="227"/><text x="25.0505%" y="735.50"></text></g><g><title>_int_free (130 samples, 0.22%)</title><rect x="24.9628%" y="709" width="0.2174%" height="15" fill="rgb(245,172,44)" fg:x="14925" fg:w="130"/><text x="25.2128%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,558 samples, 4.28%)</title><rect x="20.9403%" y="789" width="4.2784%" height="15" fill="rgb(236,23,11)" fg:x="12520" fg:w="2558"/><text x="21.1903%" y="799.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (1,198 samples, 2.00%)</title><rect x="23.2150%" y="773" width="2.0037%" height="15" fill="rgb(205,117,38)" fg:x="13880" fg:w="1198"/><text x="23.4650%" y="783.50">c..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (689 samples, 1.15%)</title><rect x="24.0663%" y="757" width="1.1524%" height="15" fill="rgb(237,72,25)" fg:x="14389" fg:w="689"/><text x="24.3163%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (612 samples, 1.02%)</title><rect x="24.1951%" y="741" width="1.0236%" height="15" fill="rgb(244,70,9)" fg:x="14466" fg:w="612"/><text x="24.4451%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (23 samples, 0.04%)</title><rect x="25.1802%" y="725" width="0.0385%" height="15" fill="rgb(217,125,39)" fg:x="15055" fg:w="23"/><text x="25.4302%" y="735.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="25.2321%" y="773" width="0.0167%" height="15" fill="rgb(235,36,10)" fg:x="15086" fg:w="10"/><text x="25.4821%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (42 samples, 0.07%)</title><rect x="25.3508%" y="757" width="0.0702%" height="15" fill="rgb(251,123,47)" fg:x="15157" fg:w="42"/><text x="25.6008%" y="767.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (108 samples, 0.18%)</title><rect x="25.2521%" y="773" width="0.1806%" height="15" fill="rgb(221,13,13)" fg:x="15098" fg:w="108"/><text x="25.5021%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="25.4211%" y="757" width="0.0117%" height="15" fill="rgb(238,131,9)" fg:x="15199" fg:w="7"/><text x="25.6711%" y="767.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (7 samples, 0.01%)</title><rect x="25.4629%" y="757" width="0.0117%" height="15" fill="rgb(211,50,8)" fg:x="15224" fg:w="7"/><text x="25.7129%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="25.4880%" y="757" width="0.0100%" height="15" fill="rgb(245,182,24)" fg:x="15239" fg:w="6"/><text x="25.7380%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="25.5164%" y="741" width="0.0100%" height="15" fill="rgb(242,14,37)" fg:x="15256" fg:w="6"/><text x="25.7664%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream&gt; (13 samples, 0.02%)</title><rect x="25.5114%" y="757" width="0.0217%" height="15" fill="rgb(246,228,12)" fg:x="15253" fg:w="13"/><text x="25.7614%" y="767.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (10 samples, 0.02%)</title><rect x="25.5465%" y="725" width="0.0167%" height="15" fill="rgb(213,55,15)" fg:x="15274" fg:w="10"/><text x="25.7965%" y="735.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (10 samples, 0.02%)</title><rect x="25.5465%" y="709" width="0.0167%" height="15" fill="rgb(209,9,3)" fg:x="15274" fg:w="10"/><text x="25.7965%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (210 samples, 0.35%)</title><rect x="25.2187%" y="789" width="0.3512%" height="15" fill="rgb(230,59,30)" fg:x="15078" fg:w="210"/><text x="25.4687%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (82 samples, 0.14%)</title><rect x="25.4328%" y="773" width="0.1371%" height="15" fill="rgb(209,121,21)" fg:x="15206" fg:w="82"/><text x="25.6828%" y="783.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (22 samples, 0.04%)</title><rect x="25.5331%" y="757" width="0.0368%" height="15" fill="rgb(220,109,13)" fg:x="15266" fg:w="22"/><text x="25.7831%" y="767.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (21 samples, 0.04%)</title><rect x="25.5348%" y="741" width="0.0351%" height="15" fill="rgb(232,18,1)" fg:x="15267" fg:w="21"/><text x="25.7848%" y="751.50"></text></g><g><title>&lt;datafusion::execution::context::SessionConfig as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="25.5816%" y="773" width="0.0217%" height="15" fill="rgb(215,41,42)" fg:x="15295" fg:w="13"/><text x="25.8316%" y="783.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (30 samples, 0.05%)</title><rect x="25.5699%" y="789" width="0.0502%" height="15" fill="rgb(224,123,36)" fg:x="15288" fg:w="30"/><text x="25.8199%" y="799.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.01%)</title><rect x="25.6084%" y="773" width="0.0117%" height="15" fill="rgb(240,125,3)" fg:x="15311" fg:w="7"/><text x="25.8584%" y="783.50"></text></g><g><title>__GI___libc_free (6 samples, 0.01%)</title><rect x="25.6519%" y="725" width="0.0100%" height="15" fill="rgb(205,98,50)" fg:x="15337" fg:w="6"/><text x="25.9019%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange&gt; (19 samples, 0.03%)</title><rect x="25.6452%" y="741" width="0.0318%" height="15" fill="rgb(205,185,37)" fg:x="15333" fg:w="19"/><text x="25.8952%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="25.7054%" y="677" width="0.0167%" height="15" fill="rgb(238,207,15)" fg:x="15369" fg:w="10"/><text x="25.9554%" y="687.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (18 samples, 0.03%)</title><rect x="25.6937%" y="725" width="0.0301%" height="15" fill="rgb(213,199,42)" fg:x="15362" fg:w="18"/><text x="25.9437%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.02%)</title><rect x="25.7021%" y="709" width="0.0217%" height="15" fill="rgb(235,201,11)" fg:x="15367" fg:w="13"/><text x="25.9521%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (13 samples, 0.02%)</title><rect x="25.7021%" y="693" width="0.0217%" height="15" fill="rgb(207,46,11)" fg:x="15367" fg:w="13"/><text x="25.9521%" y="703.50"></text></g><g><title>__posix_memalign (32 samples, 0.05%)</title><rect x="25.8927%" y="693" width="0.0535%" height="15" fill="rgb(241,35,35)" fg:x="15481" fg:w="32"/><text x="26.1427%" y="703.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (50 samples, 0.08%)</title><rect x="25.8643%" y="709" width="0.0836%" height="15" fill="rgb(243,32,47)" fg:x="15464" fg:w="50"/><text x="26.1143%" y="719.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.04%)</title><rect x="25.9947%" y="677" width="0.0401%" height="15" fill="rgb(247,202,23)" fg:x="15542" fg:w="24"/><text x="26.2447%" y="687.50"></text></g><g><title>_int_malloc (18 samples, 0.03%)</title><rect x="26.0048%" y="661" width="0.0301%" height="15" fill="rgb(219,102,11)" fg:x="15548" fg:w="18"/><text x="26.2548%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.07%)</title><rect x="25.9747%" y="693" width="0.0669%" height="15" fill="rgb(243,110,44)" fg:x="15530" fg:w="40"/><text x="26.2247%" y="703.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (56 samples, 0.09%)</title><rect x="25.9546%" y="709" width="0.0937%" height="15" fill="rgb(222,74,54)" fg:x="15518" fg:w="56"/><text x="26.2046%" y="719.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="26.0851%" y="645" width="0.0151%" height="15" fill="rgb(216,99,12)" fg:x="15596" fg:w="9"/><text x="26.3351%" y="655.50"></text></g><g><title>__posix_memalign (14 samples, 0.02%)</title><rect x="26.0834%" y="677" width="0.0234%" height="15" fill="rgb(226,22,26)" fg:x="15595" fg:w="14"/><text x="26.3334%" y="687.50"></text></g><g><title>_int_memalign (13 samples, 0.02%)</title><rect x="26.0851%" y="661" width="0.0217%" height="15" fill="rgb(217,163,10)" fg:x="15596" fg:w="13"/><text x="26.3351%" y="671.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (35 samples, 0.06%)</title><rect x="26.0533%" y="693" width="0.0585%" height="15" fill="rgb(213,25,53)" fg:x="15577" fg:w="35"/><text x="26.3033%" y="703.50"></text></g><g><title>alloc::vec::from_elem (9 samples, 0.02%)</title><rect x="26.1135%" y="693" width="0.0151%" height="15" fill="rgb(252,105,26)" fg:x="15613" fg:w="9"/><text x="26.3635%" y="703.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (101 samples, 0.17%)</title><rect x="26.0483%" y="709" width="0.1689%" height="15" fill="rgb(220,39,43)" fg:x="15574" fg:w="101"/><text x="26.2983%" y="719.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (53 samples, 0.09%)</title><rect x="26.1286%" y="693" width="0.0886%" height="15" fill="rgb(229,68,48)" fg:x="15622" fg:w="53"/><text x="26.3786%" y="703.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (49 samples, 0.08%)</title><rect x="26.1352%" y="677" width="0.0820%" height="15" fill="rgb(252,8,32)" fg:x="15626" fg:w="49"/><text x="26.3852%" y="687.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.03%)</title><rect x="26.2256%" y="709" width="0.0318%" height="15" fill="rgb(223,20,43)" fg:x="15680" fg:w="19"/><text x="26.4756%" y="719.50"></text></g><g><title>__calloc (21 samples, 0.04%)</title><rect x="26.2573%" y="709" width="0.0351%" height="15" fill="rgb(229,81,49)" fg:x="15699" fg:w="21"/><text x="26.5073%" y="719.50"></text></g><g><title>_int_malloc (11 samples, 0.02%)</title><rect x="26.2741%" y="693" width="0.0184%" height="15" fill="rgb(236,28,36)" fg:x="15709" fg:w="11"/><text x="26.5241%" y="703.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="26.2925%" y="709" width="0.0117%" height="15" fill="rgb(249,185,26)" fg:x="15720" fg:w="7"/><text x="26.5425%" y="719.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.07%)</title><rect x="26.3845%" y="693" width="0.0719%" height="15" fill="rgb(249,174,33)" fg:x="15775" fg:w="43"/><text x="26.6345%" y="703.50"></text></g><g><title>_int_malloc (28 samples, 0.05%)</title><rect x="26.4095%" y="677" width="0.0468%" height="15" fill="rgb(233,201,37)" fg:x="15790" fg:w="28"/><text x="26.6595%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="26.4614%" y="693" width="0.0117%" height="15" fill="rgb(221,78,26)" fg:x="15821" fg:w="7"/><text x="26.7114%" y="703.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (106 samples, 0.18%)</title><rect x="26.3042%" y="709" width="0.1773%" height="15" fill="rgb(250,127,30)" fg:x="15727" fg:w="106"/><text x="26.5542%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (27 samples, 0.05%)</title><rect x="26.4815%" y="709" width="0.0452%" height="15" fill="rgb(230,49,44)" fg:x="15833" fg:w="27"/><text x="26.7315%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (23 samples, 0.04%)</title><rect x="26.4881%" y="693" width="0.0385%" height="15" fill="rgb(229,67,23)" fg:x="15837" fg:w="23"/><text x="26.7381%" y="703.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (485 samples, 0.81%)</title><rect x="25.7271%" y="725" width="0.8112%" height="15" fill="rgb(249,83,47)" fg:x="15382" fg:w="485"/><text x="25.9771%" y="735.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (62 samples, 0.10%)</title><rect x="26.5417%" y="709" width="0.1037%" height="15" fill="rgb(215,43,3)" fg:x="15869" fg:w="62"/><text x="26.7917%" y="719.50"></text></g><g><title>__GI___libc_malloc (62 samples, 0.10%)</title><rect x="26.5417%" y="693" width="0.1037%" height="15" fill="rgb(238,154,13)" fg:x="15869" fg:w="62"/><text x="26.7917%" y="703.50"></text></g><g><title>_int_malloc (56 samples, 0.09%)</title><rect x="26.5517%" y="677" width="0.0937%" height="15" fill="rgb(219,56,2)" fg:x="15875" fg:w="56"/><text x="26.8017%" y="687.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (24 samples, 0.04%)</title><rect x="26.6454%" y="709" width="0.0401%" height="15" fill="rgb(233,0,4)" fg:x="15931" fg:w="24"/><text x="26.8954%" y="719.50"></text></g><g><title>__GI___libc_free (7 samples, 0.01%)</title><rect x="26.6955%" y="677" width="0.0117%" height="15" fill="rgb(235,30,7)" fg:x="15961" fg:w="7"/><text x="26.9455%" y="687.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="26.7073%" y="677" width="0.0100%" height="15" fill="rgb(250,79,13)" fg:x="15968" fg:w="6"/><text x="26.9573%" y="687.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (645 samples, 1.08%)</title><rect x="25.6452%" y="757" width="1.0788%" height="15" fill="rgb(211,146,34)" fg:x="15333" fg:w="645"/><text x="25.8952%" y="767.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (626 samples, 1.05%)</title><rect x="25.6770%" y="741" width="1.0470%" height="15" fill="rgb(228,22,38)" fg:x="15352" fg:w="626"/><text x="25.9270%" y="751.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (111 samples, 0.19%)</title><rect x="26.5383%" y="725" width="0.1857%" height="15" fill="rgb(235,168,5)" fg:x="15867" fg:w="111"/><text x="26.7883%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.04%)</title><rect x="26.6872%" y="709" width="0.0368%" height="15" fill="rgb(221,155,16)" fg:x="15956" fg:w="22"/><text x="26.9372%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (21 samples, 0.04%)</title><rect x="26.6889%" y="693" width="0.0351%" height="15" fill="rgb(215,215,53)" fg:x="15957" fg:w="21"/><text x="26.9389%" y="703.50"></text></g><g><title>&lt;dashmap::iter_set::OwningIter&lt;K,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (548 samples, 0.92%)</title><rect x="26.7440%" y="725" width="0.9166%" height="15" fill="rgb(223,4,10)" fg:x="15990" fg:w="548"/><text x="26.9940%" y="735.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="27.6673%" y="725" width="0.0151%" height="15" fill="rgb(234,103,6)" fg:x="16542" fg:w="9"/><text x="27.9173%" y="735.50"></text></g><g><title>malloc_consolidate (7 samples, 0.01%)</title><rect x="27.6706%" y="709" width="0.0117%" height="15" fill="rgb(227,97,0)" fg:x="16544" fg:w="7"/><text x="27.9206%" y="719.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (17 samples, 0.03%)</title><rect x="27.6823%" y="725" width="0.0284%" height="15" fill="rgb(234,150,53)" fg:x="16551" fg:w="17"/><text x="27.9323%" y="735.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="27.7309%" y="709" width="0.0151%" height="15" fill="rgb(228,201,54)" fg:x="16580" fg:w="9"/><text x="27.9809%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.01%)</title><rect x="27.7459%" y="709" width="0.0134%" height="15" fill="rgb(222,22,37)" fg:x="16589" fg:w="8"/><text x="27.9959%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="27.7493%" y="693" width="0.0100%" height="15" fill="rgb(237,53,32)" fg:x="16591" fg:w="6"/><text x="27.9993%" y="703.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (25 samples, 0.04%)</title><rect x="27.7610%" y="709" width="0.0418%" height="15" fill="rgb(233,25,53)" fg:x="16598" fg:w="25"/><text x="28.0110%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="27.7877%" y="693" width="0.0151%" height="15" fill="rgb(210,40,34)" fg:x="16614" fg:w="9"/><text x="28.0377%" y="703.50"></text></g><g><title>malloc_consolidate (33 samples, 0.06%)</title><rect x="27.9332%" y="661" width="0.0552%" height="15" fill="rgb(241,220,44)" fg:x="16701" fg:w="33"/><text x="28.1832%" y="671.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (757 samples, 1.27%)</title><rect x="26.7240%" y="757" width="1.2661%" height="15" fill="rgb(235,28,35)" fg:x="15978" fg:w="757"/><text x="26.9740%" y="767.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (757 samples, 1.27%)</title><rect x="26.7240%" y="741" width="1.2661%" height="15" fill="rgb(210,56,17)" fg:x="15978" fg:w="757"/><text x="26.9740%" y="751.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (167 samples, 0.28%)</title><rect x="27.7108%" y="725" width="0.2793%" height="15" fill="rgb(224,130,29)" fg:x="16568" fg:w="167"/><text x="27.9608%" y="735.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (112 samples, 0.19%)</title><rect x="27.8028%" y="709" width="0.1873%" height="15" fill="rgb(235,212,8)" fg:x="16623" fg:w="112"/><text x="28.0528%" y="719.50"></text></g><g><title>__GI___libc_malloc (53 samples, 0.09%)</title><rect x="27.9015%" y="693" width="0.0886%" height="15" fill="rgb(223,33,50)" fg:x="16682" fg:w="53"/><text x="28.1515%" y="703.50"></text></g><g><title>_int_malloc (51 samples, 0.09%)</title><rect x="27.9048%" y="677" width="0.0853%" height="15" fill="rgb(219,149,13)" fg:x="16684" fg:w="51"/><text x="28.1548%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.05%)</title><rect x="28.0587%" y="741" width="0.0468%" height="15" fill="rgb(250,156,29)" fg:x="16776" fg:w="28"/><text x="28.3087%" y="751.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.04%)</title><rect x="28.0637%" y="725" width="0.0418%" height="15" fill="rgb(216,193,19)" fg:x="16779" fg:w="25"/><text x="28.3137%" y="735.50"></text></g><g><title>_int_malloc (18 samples, 0.03%)</title><rect x="28.0754%" y="709" width="0.0301%" height="15" fill="rgb(216,135,14)" fg:x="16786" fg:w="18"/><text x="28.3254%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 0.02%)</title><rect x="28.1072%" y="741" width="0.0217%" height="15" fill="rgb(241,47,5)" fg:x="16805" fg:w="13"/><text x="28.3572%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="28.1189%" y="725" width="0.0100%" height="15" fill="rgb(233,42,35)" fg:x="16812" fg:w="6"/><text x="28.3689%" y="735.50"></text></g><g><title>__GI___libc_free (8 samples, 0.01%)</title><rect x="28.1289%" y="741" width="0.0134%" height="15" fill="rgb(231,13,6)" fg:x="16818" fg:w="8"/><text x="28.3789%" y="751.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="28.1423%" y="741" width="0.0184%" height="15" fill="rgb(207,181,40)" fg:x="16826" fg:w="11"/><text x="28.3923%" y="751.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="28.1607%" y="741" width="0.0117%" height="15" fill="rgb(254,173,49)" fg:x="16837" fg:w="7"/><text x="28.4107%" y="751.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.03%)</title><rect x="29.1676%" y="725" width="0.0335%" height="15" fill="rgb(221,1,38)" fg:x="17439" fg:w="20"/><text x="29.4176%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (59 samples, 0.10%)</title><rect x="29.2094%" y="725" width="0.0987%" height="15" fill="rgb(206,124,46)" fg:x="17464" fg:w="59"/><text x="29.4594%" y="735.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (830 samples, 1.39%)</title><rect x="28.1724%" y="741" width="1.3882%" height="15" fill="rgb(249,21,11)" fg:x="16844" fg:w="830"/><text x="28.4224%" y="751.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (145 samples, 0.24%)</title><rect x="29.3181%" y="725" width="0.2425%" height="15" fill="rgb(222,201,40)" fg:x="17529" fg:w="145"/><text x="29.5681%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.02%)</title><rect x="29.5740%" y="741" width="0.0201%" height="15" fill="rgb(235,61,29)" fg:x="17682" fg:w="12"/><text x="29.8240%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (12 samples, 0.02%)</title><rect x="29.5740%" y="725" width="0.0201%" height="15" fill="rgb(219,207,3)" fg:x="17682" fg:w="12"/><text x="29.8240%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (10 samples, 0.02%)</title><rect x="29.5941%" y="741" width="0.0167%" height="15" fill="rgb(222,56,46)" fg:x="17694" fg:w="10"/><text x="29.8441%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="29.6108%" y="741" width="0.0301%" height="15" fill="rgb(239,76,54)" fg:x="17704" fg:w="18"/><text x="29.8608%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="29.6242%" y="725" width="0.0167%" height="15" fill="rgb(231,124,27)" fg:x="17712" fg:w="10"/><text x="29.8742%" y="735.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (9 samples, 0.02%)</title><rect x="29.6493%" y="741" width="0.0151%" height="15" fill="rgb(249,195,6)" fg:x="17727" fg:w="9"/><text x="29.8993%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.17%)</title><rect x="29.7095%" y="693" width="0.1739%" height="15" fill="rgb(237,174,47)" fg:x="17763" fg:w="104"/><text x="29.9595%" y="703.50"></text></g><g><title>__GI___libc_malloc (78 samples, 0.13%)</title><rect x="29.7530%" y="677" width="0.1305%" height="15" fill="rgb(206,201,31)" fg:x="17789" fg:w="78"/><text x="30.0030%" y="687.50"></text></g><g><title>_int_malloc (63 samples, 0.11%)</title><rect x="29.7781%" y="661" width="0.1054%" height="15" fill="rgb(231,57,52)" fg:x="17804" fg:w="63"/><text x="30.0281%" y="671.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (133 samples, 0.22%)</title><rect x="29.6794%" y="725" width="0.2224%" height="15" fill="rgb(248,177,22)" fg:x="17745" fg:w="133"/><text x="29.9294%" y="735.50"></text></g><g><title>datafusion::physical_plan::project_schema (128 samples, 0.21%)</title><rect x="29.6877%" y="709" width="0.2141%" height="15" fill="rgb(215,211,37)" fg:x="17750" fg:w="128"/><text x="29.9377%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="29.8901%" y="693" width="0.0117%" height="15" fill="rgb(241,128,51)" fg:x="17871" fg:w="7"/><text x="30.1401%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="29.8901%" y="677" width="0.0117%" height="15" fill="rgb(227,165,31)" fg:x="17871" fg:w="7"/><text x="30.1401%" y="687.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.01%)</title><rect x="29.8901%" y="661" width="0.0117%" height="15" fill="rgb(228,167,24)" fg:x="17871" fg:w="7"/><text x="30.1401%" y="671.50"></text></g><g><title>_int_realloc (7 samples, 0.01%)</title><rect x="29.8901%" y="645" width="0.0117%" height="15" fill="rgb(228,143,12)" fg:x="17871" fg:w="7"/><text x="30.1401%" y="655.50"></text></g><g><title>_int_malloc (6 samples, 0.01%)</title><rect x="29.8918%" y="629" width="0.0100%" height="15" fill="rgb(249,149,8)" fg:x="17872" fg:w="6"/><text x="30.1418%" y="639.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (143 samples, 0.24%)</title><rect x="29.6643%" y="741" width="0.2392%" height="15" fill="rgb(243,35,44)" fg:x="17736" fg:w="143"/><text x="29.9143%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.01%)</title><rect x="29.9152%" y="725" width="0.0100%" height="15" fill="rgb(246,89,9)" fg:x="17886" fg:w="6"/><text x="30.1652%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="29.9152%" y="709" width="0.0100%" height="15" fill="rgb(233,213,13)" fg:x="17886" fg:w="6"/><text x="30.1652%" y="719.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="29.9152%" y="693" width="0.0100%" height="15" fill="rgb(233,141,41)" fg:x="17886" fg:w="6"/><text x="30.1652%" y="703.50"></text></g><g><title>__GI___libc_malloc (72 samples, 0.12%)</title><rect x="29.9737%" y="709" width="0.1204%" height="15" fill="rgb(239,167,4)" fg:x="17921" fg:w="72"/><text x="30.2237%" y="719.50"></text></g><g><title>_int_malloc (64 samples, 0.11%)</title><rect x="29.9871%" y="693" width="0.1070%" height="15" fill="rgb(209,217,16)" fg:x="17929" fg:w="64"/><text x="30.2371%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="30.1059%" y="709" width="0.0217%" height="15" fill="rgb(219,88,35)" fg:x="18000" fg:w="13"/><text x="30.3559%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="30.1126%" y="693" width="0.0151%" height="15" fill="rgb(220,193,23)" fg:x="18004" fg:w="9"/><text x="30.3626%" y="703.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (151 samples, 0.25%)</title><rect x="29.9035%" y="741" width="0.2526%" height="15" fill="rgb(230,90,52)" fg:x="17879" fg:w="151"/><text x="30.1535%" y="751.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (135 samples, 0.23%)</title><rect x="29.9303%" y="725" width="0.2258%" height="15" fill="rgb(252,106,19)" fg:x="17895" fg:w="135"/><text x="30.1803%" y="735.50"></text></g><g><title>datafusion_expr::expr::create_name (17 samples, 0.03%)</title><rect x="30.1276%" y="709" width="0.0284%" height="15" fill="rgb(206,74,20)" fg:x="18013" fg:w="17"/><text x="30.3776%" y="719.50"></text></g><g><title>malloc_consolidate (17 samples, 0.03%)</title><rect x="30.3250%" y="677" width="0.0284%" height="15" fill="rgb(230,138,44)" fg:x="18131" fg:w="17"/><text x="30.5750%" y="687.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr::new (119 samples, 0.20%)</title><rect x="30.1560%" y="741" width="0.1990%" height="15" fill="rgb(235,182,43)" fg:x="18030" fg:w="119"/><text x="30.4060%" y="751.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (110 samples, 0.18%)</title><rect x="30.1711%" y="725" width="0.1840%" height="15" fill="rgb(242,16,51)" fg:x="18039" fg:w="110"/><text x="30.4211%" y="735.50"></text></g><g><title>__GI___libc_malloc (53 samples, 0.09%)</title><rect x="30.2664%" y="709" width="0.0886%" height="15" fill="rgb(248,9,4)" fg:x="18096" fg:w="53"/><text x="30.5164%" y="719.50"></text></g><g><title>_int_malloc (48 samples, 0.08%)</title><rect x="30.2748%" y="693" width="0.0803%" height="15" fill="rgb(210,31,22)" fg:x="18101" fg:w="48"/><text x="30.5248%" y="703.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::{{closure}} (2,843 samples, 4.76%)</title><rect x="25.6251%" y="773" width="4.7551%" height="15" fill="rgb(239,54,39)" fg:x="15321" fg:w="2843"/><text x="25.8751%" y="783.50">&lt;fastf..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (1,428 samples, 2.39%)</title><rect x="27.9918%" y="757" width="2.3884%" height="15" fill="rgb(230,99,41)" fg:x="16736" fg:w="1428"/><text x="28.2418%" y="767.50">fa..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="30.3551%" y="741" width="0.0251%" height="15" fill="rgb(253,106,12)" fg:x="18149" fg:w="15"/><text x="30.6051%" y="751.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (2,852 samples, 4.77%)</title><rect x="25.6218%" y="789" width="4.7701%" height="15" fill="rgb(213,46,41)" fg:x="15319" fg:w="2852"/><text x="25.8718%" y="799.50">&lt;fastf..</text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (20 samples, 0.03%)</title><rect x="58.0023%" y="725" width="0.0335%" height="15" fill="rgb(215,133,35)" fg:x="34679" fg:w="20"/><text x="58.2523%" y="735.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (89 samples, 0.15%)</title><rect x="57.9120%" y="741" width="0.1489%" height="15" fill="rgb(213,28,5)" fg:x="34625" fg:w="89"/><text x="58.1620%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (15 samples, 0.03%)</title><rect x="58.0358%" y="725" width="0.0251%" height="15" fill="rgb(215,77,49)" fg:x="34699" fg:w="15"/><text x="58.2858%" y="735.50"></text></g><g><title>__GI___libc_malloc (140 samples, 0.23%)</title><rect x="58.0675%" y="741" width="0.2342%" height="15" fill="rgb(248,100,22)" fg:x="34718" fg:w="140"/><text x="58.3175%" y="751.50"></text></g><g><title>_int_malloc (93 samples, 0.16%)</title><rect x="58.1461%" y="725" width="0.1555%" height="15" fill="rgb(208,67,9)" fg:x="34765" fg:w="93"/><text x="58.3961%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.01%)</title><rect x="58.3017%" y="741" width="0.0134%" height="15" fill="rgb(219,133,21)" fg:x="34858" fg:w="8"/><text x="58.5517%" y="751.50"></text></g><g><title>_int_free (349 samples, 0.58%)</title><rect x="58.9791%" y="709" width="0.5837%" height="15" fill="rgb(246,46,29)" fg:x="35263" fg:w="349"/><text x="59.2291%" y="719.50"></text></g><g><title>__posix_memalign (1,302 samples, 2.18%)</title><rect x="58.3151%" y="741" width="2.1777%" height="15" fill="rgb(246,185,52)" fg:x="34866" fg:w="1302"/><text x="58.5651%" y="751.50">_..</text></g><g><title>_int_memalign (971 samples, 1.62%)</title><rect x="58.8687%" y="725" width="1.6240%" height="15" fill="rgb(252,136,11)" fg:x="35197" fg:w="971"/><text x="59.1187%" y="735.50"></text></g><g><title>_int_malloc (556 samples, 0.93%)</title><rect x="59.5628%" y="709" width="0.9299%" height="15" fill="rgb(219,138,53)" fg:x="35612" fg:w="556"/><text x="59.8128%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (296 samples, 0.50%)</title><rect x="60.4927%" y="741" width="0.4951%" height="15" fill="rgb(211,51,23)" fg:x="36168" fg:w="296"/><text x="60.7427%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (274 samples, 0.46%)</title><rect x="60.5295%" y="725" width="0.4583%" height="15" fill="rgb(247,221,28)" fg:x="36190" fg:w="274"/><text x="60.7795%" y="735.50"></text></g><g><title>__GI___libc_malloc (252 samples, 0.42%)</title><rect x="60.5663%" y="709" width="0.4215%" height="15" fill="rgb(251,222,45)" fg:x="36212" fg:w="252"/><text x="60.8163%" y="719.50"></text></g><g><title>_int_malloc (217 samples, 0.36%)</title><rect x="60.6249%" y="693" width="0.3629%" height="15" fill="rgb(217,162,53)" fg:x="36247" fg:w="217"/><text x="60.8749%" y="703.50"></text></g><g><title>unlink_chunk.isra.0 (69 samples, 0.12%)</title><rect x="60.8724%" y="677" width="0.1154%" height="15" fill="rgb(229,93,14)" fg:x="36395" fg:w="69"/><text x="61.1224%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="60.9778%" y="661" width="0.0100%" height="15" fill="rgb(209,67,49)" fg:x="36458" fg:w="6"/><text x="61.2278%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="60.9778%" y="645" width="0.0100%" height="15" fill="rgb(213,87,29)" fg:x="36458" fg:w="6"/><text x="61.2278%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="60.9778%" y="629" width="0.0100%" height="15" fill="rgb(205,151,52)" fg:x="36458" fg:w="6"/><text x="61.2278%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="60.9778%" y="613" width="0.0100%" height="15" fill="rgb(253,215,39)" fg:x="36458" fg:w="6"/><text x="61.2278%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="60.9778%" y="597" width="0.0100%" height="15" fill="rgb(221,220,41)" fg:x="36458" fg:w="6"/><text x="61.2278%" y="607.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (2,242 samples, 3.75%)</title><rect x="57.3283%" y="757" width="3.7499%" height="15" fill="rgb(218,133,21)" fg:x="34276" fg:w="2242"/><text x="57.5783%" y="767.50">&lt;arr..</text></g><g><title>arrow_data::data::ArrayData::new_unchecked (54 samples, 0.09%)</title><rect x="60.9878%" y="741" width="0.0903%" height="15" fill="rgb(221,193,43)" fg:x="36464" fg:w="54"/><text x="61.2378%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (24 samples, 0.04%)</title><rect x="61.1601%" y="581" width="0.0401%" height="15" fill="rgb(240,128,52)" fg:x="36567" fg:w="24"/><text x="61.4101%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.03%)</title><rect x="61.1684%" y="565" width="0.0318%" height="15" fill="rgb(253,114,12)" fg:x="36572" fg:w="19"/><text x="61.4184%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (74 samples, 0.12%)</title><rect x="61.0781%" y="757" width="0.1238%" height="15" fill="rgb(215,223,47)" fg:x="36518" fg:w="74"/><text x="61.3281%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (74 samples, 0.12%)</title><rect x="61.0781%" y="741" width="0.1238%" height="15" fill="rgb(248,225,23)" fg:x="36518" fg:w="74"/><text x="61.3281%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (74 samples, 0.12%)</title><rect x="61.0781%" y="725" width="0.1238%" height="15" fill="rgb(250,108,0)" fg:x="36518" fg:w="74"/><text x="61.3281%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (74 samples, 0.12%)</title><rect x="61.0781%" y="709" width="0.1238%" height="15" fill="rgb(228,208,7)" fg:x="36518" fg:w="74"/><text x="61.3281%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (73 samples, 0.12%)</title><rect x="61.0798%" y="693" width="0.1221%" height="15" fill="rgb(244,45,10)" fg:x="36519" fg:w="73"/><text x="61.3298%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (71 samples, 0.12%)</title><rect x="61.0831%" y="677" width="0.1188%" height="15" fill="rgb(207,125,25)" fg:x="36521" fg:w="71"/><text x="61.3331%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (67 samples, 0.11%)</title><rect x="61.0898%" y="661" width="0.1121%" height="15" fill="rgb(210,195,18)" fg:x="36525" fg:w="67"/><text x="61.3398%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (63 samples, 0.11%)</title><rect x="61.0965%" y="645" width="0.1054%" height="15" fill="rgb(249,80,12)" fg:x="36529" fg:w="63"/><text x="61.3465%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (63 samples, 0.11%)</title><rect x="61.0965%" y="629" width="0.1054%" height="15" fill="rgb(221,65,9)" fg:x="36529" fg:w="63"/><text x="61.3465%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (62 samples, 0.10%)</title><rect x="61.0982%" y="613" width="0.1037%" height="15" fill="rgb(235,49,36)" fg:x="36530" fg:w="62"/><text x="61.3482%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (55 samples, 0.09%)</title><rect x="61.1099%" y="597" width="0.0920%" height="15" fill="rgb(225,32,20)" fg:x="36537" fg:w="55"/><text x="61.3599%" y="607.50"></text></g><g><title>__GI___libc_free (250 samples, 0.42%)</title><rect x="61.2019%" y="757" width="0.4181%" height="15" fill="rgb(215,141,46)" fg:x="36592" fg:w="250"/><text x="61.4519%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (79 samples, 0.13%)</title><rect x="68.2015%" y="725" width="0.1321%" height="15" fill="rgb(250,160,47)" fg:x="40777" fg:w="79"/><text x="68.4515%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (62 samples, 0.10%)</title><rect x="68.2299%" y="709" width="0.1037%" height="15" fill="rgb(216,222,40)" fg:x="40794" fg:w="62"/><text x="68.4799%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (61 samples, 0.10%)</title><rect x="68.2316%" y="693" width="0.1020%" height="15" fill="rgb(234,217,39)" fg:x="40795" fg:w="61"/><text x="68.4816%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (59 samples, 0.10%)</title><rect x="68.2350%" y="677" width="0.0987%" height="15" fill="rgb(207,178,40)" fg:x="40797" fg:w="59"/><text x="68.4850%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (51 samples, 0.09%)</title><rect x="68.2483%" y="661" width="0.0853%" height="15" fill="rgb(221,136,13)" fg:x="40805" fg:w="51"/><text x="68.4983%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (36 samples, 0.06%)</title><rect x="68.2734%" y="645" width="0.0602%" height="15" fill="rgb(249,199,10)" fg:x="40820" fg:w="36"/><text x="68.5234%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="68.3152%" y="629" width="0.0184%" height="15" fill="rgb(249,222,13)" fg:x="40845" fg:w="11"/><text x="68.5652%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="68.3236%" y="613" width="0.0100%" height="15" fill="rgb(244,185,38)" fg:x="40850" fg:w="6"/><text x="68.5736%" y="623.50"></text></g><g><title>__GI___libc_malloc (4,019 samples, 6.72%)</title><rect x="61.6200%" y="757" width="6.7220%" height="15" fill="rgb(236,202,9)" fg:x="36842" fg:w="4019"/><text x="61.8700%" y="767.50">__GI___li..</text></g><g><title>_int_malloc (3,329 samples, 5.57%)</title><rect x="62.7741%" y="741" width="5.5679%" height="15" fill="rgb(250,229,37)" fg:x="37532" fg:w="3329"/><text x="63.0241%" y="751.50">_int_ma..</text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="71.0499%" y="741" width="0.0117%" height="15" fill="rgb(206,174,23)" fg:x="42480" fg:w="7"/><text x="71.2999%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="725" width="0.0100%" height="15" fill="rgb(211,33,43)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="709" width="0.0100%" height="15" fill="rgb(245,58,50)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="693" width="0.0100%" height="15" fill="rgb(244,68,36)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="677" width="0.0100%" height="15" fill="rgb(232,229,15)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="661" width="0.0100%" height="15" fill="rgb(254,30,23)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="645" width="0.0100%" height="15" fill="rgb(235,160,14)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="629" width="0.0100%" height="15" fill="rgb(212,155,44)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="613" width="0.0100%" height="15" fill="rgb(226,2,50)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="597" width="0.0100%" height="15" fill="rgb(234,177,6)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="71.0515%" y="581" width="0.0100%" height="15" fill="rgb(217,24,9)" fg:x="42481" fg:w="6"/><text x="71.3015%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (19 samples, 0.03%)</title><rect x="72.7458%" y="725" width="0.0318%" height="15" fill="rgb(220,13,46)" fg:x="43494" fg:w="19"/><text x="72.9958%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.03%)</title><rect x="72.7525%" y="709" width="0.0251%" height="15" fill="rgb(239,221,27)" fg:x="43498" fg:w="15"/><text x="73.0025%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="72.7542%" y="693" width="0.0234%" height="15" fill="rgb(222,198,25)" fg:x="43499" fg:w="14"/><text x="73.0042%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="72.7542%" y="677" width="0.0234%" height="15" fill="rgb(211,99,13)" fg:x="43499" fg:w="14"/><text x="73.0042%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="72.7575%" y="661" width="0.0201%" height="15" fill="rgb(232,111,31)" fg:x="43501" fg:w="12"/><text x="73.0075%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="72.7676%" y="645" width="0.0100%" height="15" fill="rgb(245,82,37)" fg:x="43507" fg:w="6"/><text x="73.0176%" y="655.50"></text></g><g><title>__calloc (2,664 samples, 4.46%)</title><rect x="68.3420%" y="757" width="4.4557%" height="15" fill="rgb(227,149,46)" fg:x="40861" fg:w="2664"/><text x="68.5920%" y="767.50">__cal..</text></g><g><title>_int_malloc (1,038 samples, 1.74%)</title><rect x="71.0616%" y="741" width="1.7361%" height="15" fill="rgb(218,36,50)" fg:x="42487" fg:w="1038"/><text x="71.3116%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (12 samples, 0.02%)</title><rect x="72.7776%" y="725" width="0.0201%" height="15" fill="rgb(226,80,48)" fg:x="43513" fg:w="12"/><text x="73.0276%" y="735.50"></text></g><g><title>_int_free (380 samples, 0.64%)</title><rect x="73.6356%" y="725" width="0.6356%" height="15" fill="rgb(238,224,15)" fg:x="44026" fg:w="380"/><text x="73.8856%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="709" width="0.0100%" height="15" fill="rgb(241,136,10)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="693" width="0.0100%" height="15" fill="rgb(208,32,45)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="677" width="0.0100%" height="15" fill="rgb(207,135,9)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="661" width="0.0100%" height="15" fill="rgb(206,86,44)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="645" width="0.0100%" height="15" fill="rgb(245,177,15)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="629" width="0.0100%" height="15" fill="rgb(206,64,50)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="613" width="0.0100%" height="15" fill="rgb(234,36,40)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="597" width="0.0100%" height="15" fill="rgb(213,64,8)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="581" width="0.0100%" height="15" fill="rgb(210,75,36)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="565" width="0.0100%" height="15" fill="rgb(229,88,21)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="78.0311%" y="549" width="0.0100%" height="15" fill="rgb(252,204,47)" fg:x="46654" fg:w="6"/><text x="78.2811%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="80.9547%" y="693" width="0.0217%" height="15" fill="rgb(208,77,27)" fg:x="48402" fg:w="13"/><text x="81.2047%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="80.9547%" y="677" width="0.0217%" height="15" fill="rgb(221,76,26)" fg:x="48402" fg:w="13"/><text x="81.2047%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="80.9547%" y="661" width="0.0217%" height="15" fill="rgb(225,139,18)" fg:x="48402" fg:w="13"/><text x="81.2047%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.02%)</title><rect x="80.9564%" y="645" width="0.0201%" height="15" fill="rgb(230,137,11)" fg:x="48403" fg:w="12"/><text x="81.2064%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="80.9580%" y="629" width="0.0184%" height="15" fill="rgb(212,28,1)" fg:x="48404" fg:w="11"/><text x="81.2080%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="80.9580%" y="613" width="0.0184%" height="15" fill="rgb(248,164,17)" fg:x="48404" fg:w="11"/><text x="81.2080%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="80.9580%" y="597" width="0.0184%" height="15" fill="rgb(222,171,42)" fg:x="48404" fg:w="11"/><text x="81.2080%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="80.9597%" y="581" width="0.0167%" height="15" fill="rgb(243,84,45)" fg:x="48405" fg:w="10"/><text x="81.2097%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="80.9597%" y="565" width="0.0167%" height="15" fill="rgb(252,49,23)" fg:x="48405" fg:w="10"/><text x="81.2097%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="80.9597%" y="549" width="0.0167%" height="15" fill="rgb(215,19,7)" fg:x="48405" fg:w="10"/><text x="81.2097%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="80.9614%" y="533" width="0.0151%" height="15" fill="rgb(238,81,41)" fg:x="48406" fg:w="9"/><text x="81.2114%" y="543.50"></text></g><g><title>malloc_consolidate (1,877 samples, 3.14%)</title><rect x="78.0411%" y="709" width="3.1394%" height="15" fill="rgb(210,199,37)" fg:x="46660" fg:w="1877"/><text x="78.2911%" y="719.50">mal..</text></g><g><title>unlink_chunk.isra.0 (122 samples, 0.20%)</title><rect x="80.9764%" y="693" width="0.2041%" height="15" fill="rgb(244,192,49)" fg:x="48415" fg:w="122"/><text x="81.2264%" y="703.50"></text></g><g><title>__posix_memalign (5,239 samples, 8.76%)</title><rect x="72.7977%" y="757" width="8.7625%" height="15" fill="rgb(226,211,11)" fg:x="43525" fg:w="5239"/><text x="73.0477%" y="767.50">__posix_mema..</text></g><g><title>_int_memalign (4,905 samples, 8.20%)</title><rect x="73.3563%" y="741" width="8.2039%" height="15" fill="rgb(236,162,54)" fg:x="43859" fg:w="4905"/><text x="73.6063%" y="751.50">_int_memali..</text></g><g><title>_int_malloc (4,358 samples, 7.29%)</title><rect x="74.2712%" y="725" width="7.2890%" height="15" fill="rgb(220,229,9)" fg:x="44406" fg:w="4358"/><text x="74.5212%" y="735.50">_int_malloc</text></g><g><title>unlink_chunk.isra.0 (227 samples, 0.38%)</title><rect x="81.1805%" y="709" width="0.3797%" height="15" fill="rgb(250,87,22)" fg:x="48537" fg:w="227"/><text x="81.4305%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="741" width="0.0100%" height="15" fill="rgb(239,43,17)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="725" width="0.0100%" height="15" fill="rgb(231,177,25)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="709" width="0.0100%" height="15" fill="rgb(219,179,1)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="693" width="0.0100%" height="15" fill="rgb(238,219,53)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="677" width="0.0100%" height="15" fill="rgb(232,167,36)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="661" width="0.0100%" height="15" fill="rgb(244,19,51)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="645" width="0.0100%" height="15" fill="rgb(224,6,22)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="629" width="0.0100%" height="15" fill="rgb(224,145,5)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="613" width="0.0100%" height="15" fill="rgb(234,130,49)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="597" width="0.0100%" height="15" fill="rgb(254,6,2)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="83.7395%" y="581" width="0.0100%" height="15" fill="rgb(208,96,46)" fg:x="50067" fg:w="6"/><text x="83.9895%" y="591.50"></text></g><g><title>malloc_consolidate (26 samples, 0.04%)</title><rect x="83.7495%" y="741" width="0.0435%" height="15" fill="rgb(239,3,39)" fg:x="50073" fg:w="26"/><text x="83.9995%" y="751.50"></text></g><g><title>_int_free (1,348 samples, 2.25%)</title><rect x="81.5602%" y="757" width="2.2546%" height="15" fill="rgb(233,210,1)" fg:x="48764" fg:w="1348"/><text x="81.8102%" y="767.50">_..</text></g><g><title>unlink_chunk.isra.0 (13 samples, 0.02%)</title><rect x="83.7930%" y="741" width="0.0217%" height="15" fill="rgb(244,137,37)" fg:x="50099" fg:w="13"/><text x="84.0430%" y="751.50"></text></g><g><title>arrow_array::array::Array::len (7 samples, 0.01%)</title><rect x="83.8800%" y="741" width="0.0117%" height="15" fill="rgb(240,136,2)" fg:x="50151" fg:w="7"/><text x="84.1300%" y="751.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (614 samples, 1.03%)</title><rect x="83.8147%" y="757" width="1.0269%" height="15" fill="rgb(239,18,37)" fg:x="50112" fg:w="614"/><text x="84.0647%" y="767.50"></text></g><g><title>arrow_array::array::Array::null_count (568 samples, 0.95%)</title><rect x="83.8917%" y="741" width="0.9500%" height="15" fill="rgb(218,185,22)" fg:x="50158" fg:w="568"/><text x="84.1417%" y="751.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.03%)</title><rect x="84.9019%" y="741" width="0.0335%" height="15" fill="rgb(225,218,4)" fg:x="50762" fg:w="20"/><text x="85.1519%" y="751.50"></text></g><g><title>arrow_schema::field::Field::new (67 samples, 0.11%)</title><rect x="84.8417%" y="757" width="0.1121%" height="15" fill="rgb(230,182,32)" fg:x="50726" fg:w="67"/><text x="85.0917%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="84.9354%" y="741" width="0.0184%" height="15" fill="rgb(242,56,43)" fg:x="50782" fg:w="11"/><text x="85.1854%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="709" width="0.0184%" height="15" fill="rgb(233,99,24)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="693" width="0.0184%" height="15" fill="rgb(234,209,42)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="677" width="0.0184%" height="15" fill="rgb(227,7,12)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="661" width="0.0184%" height="15" fill="rgb(245,203,43)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="645" width="0.0184%" height="15" fill="rgb(238,205,33)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="629" width="0.0184%" height="15" fill="rgb(231,56,7)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="613" width="0.0184%" height="15" fill="rgb(244,186,29)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="597" width="0.0184%" height="15" fill="rgb(234,111,31)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="581" width="0.0184%" height="15" fill="rgb(241,149,10)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="565" width="0.0184%" height="15" fill="rgb(249,206,44)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="86.1981%" y="549" width="0.0184%" height="15" fill="rgb(251,153,30)" fg:x="51537" fg:w="11"/><text x="86.4481%" y="559.50"></text></g><g><title>__GI___libc_free (54 samples, 0.09%)</title><rect x="86.2165%" y="709" width="0.0903%" height="15" fill="rgb(239,152,38)" fg:x="51548" fg:w="54"/><text x="86.4665%" y="719.50"></text></g><g><title>__GI___libc_malloc (33 samples, 0.06%)</title><rect x="86.3068%" y="709" width="0.0552%" height="15" fill="rgb(249,139,47)" fg:x="51602" fg:w="33"/><text x="86.5568%" y="719.50"></text></g><g><title>__memset_avx2_erms (120 samples, 0.20%)</title><rect x="86.6882%" y="693" width="0.2007%" height="15" fill="rgb(244,64,35)" fg:x="51830" fg:w="120"/><text x="86.9382%" y="703.50"></text></g><g><title>__memset_avx2_unaligned_erms (26 samples, 0.04%)</title><rect x="86.8889%" y="693" width="0.0435%" height="15" fill="rgb(216,46,15)" fg:x="51950" fg:w="26"/><text x="87.1389%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (14 samples, 0.02%)</title><rect x="88.0697%" y="677" width="0.0234%" height="15" fill="rgb(250,74,19)" fg:x="52656" fg:w="14"/><text x="88.3197%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="88.0747%" y="661" width="0.0184%" height="15" fill="rgb(249,42,33)" fg:x="52659" fg:w="11"/><text x="88.3247%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="88.0747%" y="645" width="0.0184%" height="15" fill="rgb(242,149,17)" fg:x="52659" fg:w="11"/><text x="88.3247%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="88.0764%" y="629" width="0.0167%" height="15" fill="rgb(244,29,21)" fg:x="52660" fg:w="10"/><text x="88.3264%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="88.0764%" y="613" width="0.0167%" height="15" fill="rgb(220,130,37)" fg:x="52660" fg:w="10"/><text x="88.3264%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.01%)</title><rect x="88.0814%" y="597" width="0.0117%" height="15" fill="rgb(211,67,2)" fg:x="52663" fg:w="7"/><text x="88.3314%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="88.0831%" y="581" width="0.0100%" height="15" fill="rgb(235,68,52)" fg:x="52664" fg:w="6"/><text x="88.3331%" y="591.50"></text></g><g><title>malloc_consolidate (588 samples, 0.98%)</title><rect x="88.0931%" y="677" width="0.9835%" height="15" fill="rgb(246,142,3)" fg:x="52670" fg:w="588"/><text x="88.3431%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.01%)</title><rect x="89.0666%" y="661" width="0.0100%" height="15" fill="rgb(241,25,7)" fg:x="53252" fg:w="6"/><text x="89.3166%" y="671.50"></text></g><g><title>__calloc (1,752 samples, 2.93%)</title><rect x="86.3620%" y="709" width="2.9303%" height="15" fill="rgb(242,119,39)" fg:x="51635" fg:w="1752"/><text x="86.6120%" y="719.50">__..</text></g><g><title>_int_malloc (1,411 samples, 2.36%)</title><rect x="86.9324%" y="693" width="2.3600%" height="15" fill="rgb(241,98,45)" fg:x="51976" fg:w="1411"/><text x="87.1824%" y="703.50">_..</text></g><g><title>unlink_chunk.isra.0 (129 samples, 0.22%)</title><rect x="89.0766%" y="677" width="0.2158%" height="15" fill="rgb(254,28,30)" fg:x="53258" fg:w="129"/><text x="89.3266%" y="687.50"></text></g><g><title>_int_free (182 samples, 0.30%)</title><rect x="89.7272%" y="677" width="0.3044%" height="15" fill="rgb(241,142,54)" fg:x="53647" fg:w="182"/><text x="89.9772%" y="687.50"></text></g><g><title>malloc_consolidate (77 samples, 0.13%)</title><rect x="90.7358%" y="661" width="0.1288%" height="15" fill="rgb(222,85,15)" fg:x="54250" fg:w="77"/><text x="90.9858%" y="671.50"></text></g><g><title>__posix_memalign (1,069 samples, 1.79%)</title><rect x="89.2923%" y="709" width="1.7880%" height="15" fill="rgb(210,85,47)" fg:x="53387" fg:w="1069"/><text x="89.5423%" y="719.50">_..</text></g><g><title>_int_memalign (883 samples, 1.48%)</title><rect x="89.6034%" y="693" width="1.4769%" height="15" fill="rgb(224,206,25)" fg:x="53573" fg:w="883"/><text x="89.8534%" y="703.50"></text></g><g><title>_int_malloc (627 samples, 1.05%)</title><rect x="90.0316%" y="677" width="1.0487%" height="15" fill="rgb(243,201,19)" fg:x="53829" fg:w="627"/><text x="90.2816%" y="687.50"></text></g><g><title>unlink_chunk.isra.0 (129 samples, 0.22%)</title><rect x="90.8645%" y="661" width="0.2158%" height="15" fill="rgb(236,59,4)" fg:x="54327" fg:w="129"/><text x="91.1145%" y="671.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (37,157 samples, 62.15%)</title><rect x="30.4605%" y="773" width="62.1469%" height="15" fill="rgb(254,179,45)" fg:x="18212" fg:w="37157"/><text x="30.7105%" y="783.50">&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (4,576 samples, 7.65%)</title><rect x="84.9538%" y="757" width="7.6536%" height="15" fill="rgb(226,14,10)" fg:x="50793" fg:w="4576"/><text x="85.2038%" y="767.50">fastfull_s..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (4,485 samples, 7.50%)</title><rect x="85.1060%" y="741" width="7.5014%" height="15" fill="rgb(244,27,41)" fg:x="50884" fg:w="4485"/><text x="85.3560%" y="751.50">fastfull_s..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (4,445 samples, 7.43%)</title><rect x="85.1729%" y="725" width="7.4345%" height="15" fill="rgb(235,35,32)" fg:x="50924" fg:w="4445"/><text x="85.4229%" y="735.50">fastfull_s..</text></g><g><title>_int_free (913 samples, 1.53%)</title><rect x="91.0803%" y="709" width="1.5270%" height="15" fill="rgb(218,68,31)" fg:x="54456" fg:w="913"/><text x="91.3303%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="92.6475%" y="709" width="0.0251%" height="15" fill="rgb(207,120,37)" fg:x="55393" fg:w="15"/><text x="92.8975%" y="719.50"></text></g><g><title>_int_free (8 samples, 0.01%)</title><rect x="92.6726%" y="709" width="0.0134%" height="15" fill="rgb(227,98,0)" fg:x="55408" fg:w="8"/><text x="92.9226%" y="719.50"></text></g><g><title>malloc_consolidate (81 samples, 0.14%)</title><rect x="92.8616%" y="693" width="0.1355%" height="15" fill="rgb(207,7,3)" fg:x="55521" fg:w="81"/><text x="93.1116%" y="703.50"></text></g><g><title>unlink_chunk.isra.0 (17 samples, 0.03%)</title><rect x="92.9686%" y="677" width="0.0284%" height="15" fill="rgb(206,98,19)" fg:x="55585" fg:w="17"/><text x="93.2186%" y="687.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (37,444 samples, 62.63%)</title><rect x="30.3936%" y="789" width="62.6269%" height="15" fill="rgb(217,5,26)" fg:x="18172" fg:w="37444"/><text x="30.6436%" y="799.50">&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (247 samples, 0.41%)</title><rect x="92.6073%" y="773" width="0.4131%" height="15" fill="rgb(235,190,38)" fg:x="55369" fg:w="247"/><text x="92.8573%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (246 samples, 0.41%)</title><rect x="92.6090%" y="757" width="0.4114%" height="15" fill="rgb(247,86,24)" fg:x="55370" fg:w="246"/><text x="92.8590%" y="767.50"></text></g><g><title>__GI___libc_realloc (242 samples, 0.40%)</title><rect x="92.6157%" y="741" width="0.4048%" height="15" fill="rgb(205,101,16)" fg:x="55374" fg:w="242"/><text x="92.8657%" y="751.50"></text></g><g><title>_int_realloc (226 samples, 0.38%)</title><rect x="92.6425%" y="725" width="0.3780%" height="15" fill="rgb(246,168,33)" fg:x="55390" fg:w="226"/><text x="92.8925%" y="735.50"></text></g><g><title>_int_malloc (200 samples, 0.33%)</title><rect x="92.6859%" y="709" width="0.3345%" height="15" fill="rgb(231,114,1)" fg:x="55416" fg:w="200"/><text x="92.9359%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (14 samples, 0.02%)</title><rect x="92.9970%" y="693" width="0.0234%" height="15" fill="rgb(207,184,53)" fg:x="55602" fg:w="14"/><text x="93.2470%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (154 samples, 0.26%)</title><rect x="93.0372%" y="741" width="0.2576%" height="15" fill="rgb(224,95,51)" fg:x="55626" fg:w="154"/><text x="93.2872%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (151 samples, 0.25%)</title><rect x="93.0422%" y="725" width="0.2526%" height="15" fill="rgb(212,188,45)" fg:x="55629" fg:w="151"/><text x="93.2922%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (149 samples, 0.25%)</title><rect x="93.0455%" y="709" width="0.2492%" height="15" fill="rgb(223,154,38)" fg:x="55631" fg:w="149"/><text x="93.2955%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (148 samples, 0.25%)</title><rect x="93.0472%" y="693" width="0.2475%" height="15" fill="rgb(251,22,52)" fg:x="55632" fg:w="148"/><text x="93.2972%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (146 samples, 0.24%)</title><rect x="93.0506%" y="677" width="0.2442%" height="15" fill="rgb(229,209,22)" fg:x="55634" fg:w="146"/><text x="93.3006%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (141 samples, 0.24%)</title><rect x="93.0589%" y="661" width="0.2358%" height="15" fill="rgb(234,138,34)" fg:x="55639" fg:w="141"/><text x="93.3089%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (130 samples, 0.22%)</title><rect x="93.0773%" y="645" width="0.2174%" height="15" fill="rgb(212,95,11)" fg:x="55650" fg:w="130"/><text x="93.3273%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (108 samples, 0.18%)</title><rect x="93.1141%" y="629" width="0.1806%" height="15" fill="rgb(240,179,47)" fg:x="55672" fg:w="108"/><text x="93.3641%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (89 samples, 0.15%)</title><rect x="93.1459%" y="613" width="0.1489%" height="15" fill="rgb(240,163,11)" fg:x="55691" fg:w="89"/><text x="93.3959%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (64 samples, 0.11%)</title><rect x="93.1877%" y="597" width="0.1070%" height="15" fill="rgb(236,37,12)" fg:x="55716" fg:w="64"/><text x="93.4377%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (63 samples, 0.11%)</title><rect x="93.1894%" y="581" width="0.1054%" height="15" fill="rgb(232,164,16)" fg:x="55717" fg:w="63"/><text x="93.4394%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (50 samples, 0.08%)</title><rect x="93.2111%" y="565" width="0.0836%" height="15" fill="rgb(244,205,15)" fg:x="55730" fg:w="50"/><text x="93.4611%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.08%)</title><rect x="93.2161%" y="549" width="0.0786%" height="15" fill="rgb(223,117,47)" fg:x="55733" fg:w="47"/><text x="93.4661%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (46 samples, 0.08%)</title><rect x="93.2178%" y="533" width="0.0769%" height="15" fill="rgb(244,107,35)" fg:x="55734" fg:w="46"/><text x="93.4678%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (39 samples, 0.07%)</title><rect x="93.2295%" y="517" width="0.0652%" height="15" fill="rgb(205,140,8)" fg:x="55741" fg:w="39"/><text x="93.4795%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="93.2847%" y="501" width="0.0100%" height="15" fill="rgb(228,84,46)" fg:x="55774" fg:w="6"/><text x="93.5347%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="93.2847%" y="485" width="0.0100%" height="15" fill="rgb(254,188,9)" fg:x="55774" fg:w="6"/><text x="93.5347%" y="495.50"></text></g><g><title>__libc_read (158 samples, 0.26%)</title><rect x="93.0355%" y="773" width="0.2643%" height="15" fill="rgb(206,112,54)" fg:x="55625" fg:w="158"/><text x="93.2855%" y="783.50"></text></g><g><title>__libc_read (158 samples, 0.26%)</title><rect x="93.0355%" y="757" width="0.2643%" height="15" fill="rgb(216,84,49)" fg:x="55625" fg:w="158"/><text x="93.2855%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="93.3048%" y="773" width="0.0100%" height="15" fill="rgb(214,194,35)" fg:x="55786" fg:w="6"/><text x="93.5548%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.01%)</title><rect x="93.3048%" y="757" width="0.0100%" height="15" fill="rgb(249,28,3)" fg:x="55786" fg:w="6"/><text x="93.5548%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="93.3048%" y="741" width="0.0100%" height="15" fill="rgb(222,56,52)" fg:x="55786" fg:w="6"/><text x="93.5548%" y="751.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (183 samples, 0.31%)</title><rect x="93.0205%" y="789" width="0.3061%" height="15" fill="rgb(245,217,50)" fg:x="55616" fg:w="183"/><text x="93.2705%" y="799.50"></text></g><g><title>core::str::converts::from_utf8 (7 samples, 0.01%)</title><rect x="93.3148%" y="773" width="0.0117%" height="15" fill="rgb(213,201,24)" fg:x="55792" fg:w="7"/><text x="93.5648%" y="783.50"></text></g><g><title>__GI___libc_free (18 samples, 0.03%)</title><rect x="93.3265%" y="789" width="0.0301%" height="15" fill="rgb(248,116,28)" fg:x="55799" fg:w="18"/><text x="93.5765%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (45 samples, 0.08%)</title><rect x="93.3633%" y="789" width="0.0753%" height="15" fill="rgb(219,72,43)" fg:x="55821" fg:w="45"/><text x="93.6133%" y="799.50"></text></g><g><title>malloc_consolidate (41 samples, 0.07%)</title><rect x="93.4938%" y="773" width="0.0686%" height="15" fill="rgb(209,138,14)" fg:x="55899" fg:w="41"/><text x="93.7438%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (10 samples, 0.02%)</title><rect x="93.5456%" y="757" width="0.0167%" height="15" fill="rgb(222,18,33)" fg:x="55930" fg:w="10"/><text x="93.7956%" y="767.50"></text></g><g><title>_int_free (75 samples, 0.13%)</title><rect x="93.4386%" y="789" width="0.1254%" height="15" fill="rgb(213,199,7)" fg:x="55866" fg:w="75"/><text x="93.6886%" y="799.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.02%)</title><rect x="93.5691%" y="773" width="0.0234%" height="15" fill="rgb(250,110,10)" fg:x="55944" fg:w="14"/><text x="93.8191%" y="783.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="93.5808%" y="757" width="0.0117%" height="15" fill="rgb(248,123,6)" fg:x="55951" fg:w="7"/><text x="93.8308%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (20 samples, 0.03%)</title><rect x="93.5640%" y="789" width="0.0335%" height="15" fill="rgb(206,91,31)" fg:x="55941" fg:w="20"/><text x="93.8140%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="93.6192%" y="757" width="0.0234%" height="15" fill="rgb(211,154,13)" fg:x="55974" fg:w="14"/><text x="93.8692%" y="767.50"></text></g><g><title>_int_free (11 samples, 0.02%)</title><rect x="93.6242%" y="741" width="0.0184%" height="15" fill="rgb(225,148,7)" fg:x="55977" fg:w="11"/><text x="93.8742%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (29 samples, 0.05%)</title><rect x="93.5975%" y="789" width="0.0485%" height="15" fill="rgb(220,160,43)" fg:x="55961" fg:w="29"/><text x="93.8475%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.03%)</title><rect x="93.6176%" y="773" width="0.0284%" height="15" fill="rgb(213,52,39)" fg:x="55973" fg:w="17"/><text x="93.8676%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionState&gt; (21 samples, 0.04%)</title><rect x="93.6460%" y="789" width="0.0351%" height="15" fill="rgb(243,137,7)" fg:x="55990" fg:w="21"/><text x="93.8960%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (8 samples, 0.01%)</title><rect x="93.6677%" y="773" width="0.0134%" height="15" fill="rgb(230,79,13)" fg:x="56003" fg:w="8"/><text x="93.9177%" y="783.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="93.6694%" y="757" width="0.0117%" height="15" fill="rgb(247,105,23)" fg:x="56004" fg:w="7"/><text x="93.9194%" y="767.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="93.6911%" y="773" width="0.0117%" height="15" fill="rgb(223,179,41)" fg:x="56017" fg:w="7"/><text x="93.9411%" y="783.50"></text></g><g><title>_int_free (20 samples, 0.03%)</title><rect x="93.7079%" y="757" width="0.0335%" height="15" fill="rgb(218,9,34)" fg:x="56027" fg:w="20"/><text x="93.9579%" y="767.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="93.7430%" y="741" width="0.0100%" height="15" fill="rgb(222,106,8)" fg:x="56048" fg:w="6"/><text x="93.9930%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_expr::logical_plan::plan::Predicate&gt;&gt; (34 samples, 0.06%)</title><rect x="93.7029%" y="773" width="0.0569%" height="15" fill="rgb(211,220,0)" fg:x="56024" fg:w="34"/><text x="93.9529%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(datafusion_expr::logical_plan::plan::Predicate,f64,usize,usize)&gt; (11 samples, 0.02%)</title><rect x="93.7413%" y="757" width="0.0184%" height="15" fill="rgb(229,52,16)" fg:x="56047" fg:w="11"/><text x="93.9913%" y="767.50"></text></g><g><title>_int_free (16 samples, 0.03%)</title><rect x="93.7647%" y="757" width="0.0268%" height="15" fill="rgb(212,155,18)" fg:x="56061" fg:w="16"/><text x="94.0147%" y="767.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="93.7932%" y="741" width="0.0167%" height="15" fill="rgb(242,21,14)" fg:x="56078" fg:w="10"/><text x="94.0432%" y="751.50"></text></g><g><title>_int_free (6 samples, 0.01%)</title><rect x="93.8099%" y="725" width="0.0100%" height="15" fill="rgb(222,19,48)" fg:x="56088" fg:w="6"/><text x="94.0599%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (19 samples, 0.03%)</title><rect x="93.7915%" y="757" width="0.0318%" height="15" fill="rgb(232,45,27)" fg:x="56077" fg:w="19"/><text x="94.0415%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (8 samples, 0.01%)</title><rect x="93.8099%" y="741" width="0.0134%" height="15" fill="rgb(249,103,42)" fg:x="56088" fg:w="8"/><text x="94.0599%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::BooleanQuery&gt; (39 samples, 0.07%)</title><rect x="93.7597%" y="773" width="0.0652%" height="15" fill="rgb(246,81,33)" fg:x="56058" fg:w="39"/><text x="94.0097%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (87 samples, 0.15%)</title><rect x="93.6811%" y="789" width="0.1455%" height="15" fill="rgb(252,33,42)" fg:x="56011" fg:w="87"/><text x="93.9311%" y="799.50"></text></g><g><title>__GI___libc_free (13 samples, 0.02%)</title><rect x="93.9404%" y="741" width="0.0217%" height="15" fill="rgb(209,212,41)" fg:x="56166" fg:w="13"/><text x="94.1904%" y="751.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="93.9956%" y="725" width="0.0100%" height="15" fill="rgb(207,154,6)" fg:x="56199" fg:w="6"/><text x="94.2456%" y="735.50"></text></g><g><title>_int_free (27 samples, 0.05%)</title><rect x="93.9621%" y="741" width="0.0452%" height="15" fill="rgb(223,64,47)" fg:x="56179" fg:w="27"/><text x="94.2121%" y="751.50"></text></g><g><title>__GI___libc_free (10 samples, 0.02%)</title><rect x="94.0089%" y="725" width="0.0167%" height="15" fill="rgb(211,161,38)" fg:x="56207" fg:w="10"/><text x="94.2589%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[arrow_schema::field::Field]&gt; (20 samples, 0.03%)</title><rect x="94.0073%" y="741" width="0.0335%" height="15" fill="rgb(219,138,40)" fg:x="56206" fg:w="20"/><text x="94.2573%" y="751.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="94.0257%" y="725" width="0.0151%" height="15" fill="rgb(241,228,46)" fg:x="56217" fg:w="9"/><text x="94.2757%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (16 samples, 0.03%)</title><rect x="94.0407%" y="741" width="0.0268%" height="15" fill="rgb(223,209,38)" fg:x="56226" fg:w="16"/><text x="94.2907%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;arrow_array::record_batch::RecordBatch&gt;&gt;&gt; (145 samples, 0.24%)</title><rect x="93.8266%" y="789" width="0.2425%" height="15" fill="rgb(236,164,45)" fg:x="56098" fg:w="145"/><text x="94.0766%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingStream&gt; (138 samples, 0.23%)</title><rect x="93.8383%" y="773" width="0.2308%" height="15" fill="rgb(231,15,5)" fg:x="56105" fg:w="138"/><text x="94.0883%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (117 samples, 0.20%)</title><rect x="93.8735%" y="757" width="0.1957%" height="15" fill="rgb(252,35,15)" fg:x="56126" fg:w="117"/><text x="94.1235%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (7 samples, 0.01%)</title><rect x="94.0725%" y="757" width="0.0117%" height="15" fill="rgb(248,181,18)" fg:x="56245" fg:w="7"/><text x="94.3225%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.01%)</title><rect x="94.0725%" y="741" width="0.0117%" height="15" fill="rgb(233,39,42)" fg:x="56245" fg:w="7"/><text x="94.3225%" y="751.50"></text></g><g><title>core::str::pattern::StrSearcher::new (11 samples, 0.02%)</title><rect x="94.0691%" y="789" width="0.0184%" height="15" fill="rgb(238,110,33)" fg:x="56243" fg:w="11"/><text x="94.3191%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (11 samples, 0.02%)</title><rect x="94.0691%" y="773" width="0.0184%" height="15" fill="rgb(233,195,10)" fg:x="56243" fg:w="11"/><text x="94.3191%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="94.1427%" y="725" width="0.0134%" height="15" fill="rgb(254,105,3)" fg:x="56287" fg:w="8"/><text x="94.3927%" y="735.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.02%)</title><rect x="94.1561%" y="725" width="0.0184%" height="15" fill="rgb(221,225,9)" fg:x="56295" fg:w="11"/><text x="94.4061%" y="735.50"></text></g><g><title>_int_malloc (9 samples, 0.02%)</title><rect x="94.1595%" y="709" width="0.0151%" height="15" fill="rgb(224,227,45)" fg:x="56297" fg:w="9"/><text x="94.4095%" y="719.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (26 samples, 0.04%)</title><rect x="94.1327%" y="741" width="0.0435%" height="15" fill="rgb(229,198,43)" fg:x="56281" fg:w="26"/><text x="94.3827%" y="751.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (71 samples, 0.12%)</title><rect x="94.1059%" y="773" width="0.1188%" height="15" fill="rgb(206,209,35)" fg:x="56265" fg:w="71"/><text x="94.3559%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (58 samples, 0.10%)</title><rect x="94.1277%" y="757" width="0.0970%" height="15" fill="rgb(245,195,53)" fg:x="56278" fg:w="58"/><text x="94.3777%" y="767.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.05%)</title><rect x="94.1762%" y="741" width="0.0485%" height="15" fill="rgb(240,92,26)" fg:x="56307" fg:w="29"/><text x="94.4262%" y="751.50"></text></g><g><title>_int_malloc (15 samples, 0.03%)</title><rect x="94.1996%" y="725" width="0.0251%" height="15" fill="rgb(207,40,23)" fg:x="56321" fg:w="15"/><text x="94.4496%" y="735.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="94.2331%" y="773" width="0.0151%" height="15" fill="rgb(223,111,35)" fg:x="56341" fg:w="9"/><text x="94.4831%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="94.2983%" y="629" width="0.0117%" height="15" fill="rgb(229,147,28)" fg:x="56380" fg:w="7"/><text x="94.5483%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="94.2983%" y="613" width="0.0117%" height="15" fill="rgb(211,29,28)" fg:x="56380" fg:w="7"/><text x="94.5483%" y="623.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.01%)</title><rect x="94.2983%" y="597" width="0.0117%" height="15" fill="rgb(228,72,33)" fg:x="56380" fg:w="7"/><text x="94.5483%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.01%)</title><rect x="94.2983%" y="581" width="0.0117%" height="15" fill="rgb(205,214,31)" fg:x="56380" fg:w="7"/><text x="94.5483%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.01%)</title><rect x="94.2983%" y="565" width="0.0117%" height="15" fill="rgb(224,111,15)" fg:x="56380" fg:w="7"/><text x="94.5483%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.01%)</title><rect x="94.2983%" y="549" width="0.0117%" height="15" fill="rgb(253,21,26)" fg:x="56380" fg:w="7"/><text x="94.5483%" y="559.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (20 samples, 0.03%)</title><rect x="94.3702%" y="309" width="0.0335%" height="15" fill="rgb(245,139,43)" fg:x="56423" fg:w="20"/><text x="94.6202%" y="319.50"></text></g><g><title>core::fmt::write (11 samples, 0.02%)</title><rect x="94.3853%" y="293" width="0.0184%" height="15" fill="rgb(252,170,7)" fg:x="56432" fg:w="11"/><text x="94.6353%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (10 samples, 0.02%)</title><rect x="94.3869%" y="277" width="0.0167%" height="15" fill="rgb(231,118,14)" fg:x="56433" fg:w="10"/><text x="94.6369%" y="287.50"></text></g><g><title>_int_free (13 samples, 0.02%)</title><rect x="94.4304%" y="37" width="0.0217%" height="15" fill="rgb(238,83,0)" fg:x="56459" fg:w="13"/><text x="94.6804%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.08%)</title><rect x="94.4053%" y="197" width="0.0836%" height="15" fill="rgb(221,39,39)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (50 samples, 0.08%)</title><rect x="94.4053%" y="181" width="0.0836%" height="15" fill="rgb(222,119,46)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.08%)</title><rect x="94.4053%" y="165" width="0.0836%" height="15" fill="rgb(222,165,49)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.08%)</title><rect x="94.4053%" y="149" width="0.0836%" height="15" fill="rgb(219,113,52)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.08%)</title><rect x="94.4053%" y="133" width="0.0836%" height="15" fill="rgb(214,7,15)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 0.08%)</title><rect x="94.4053%" y="117" width="0.0836%" height="15" fill="rgb(235,32,4)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 0.08%)</title><rect x="94.4053%" y="101" width="0.0836%" height="15" fill="rgb(238,90,54)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="111.50"></text></g><g><title>alloc::alloc::realloc (50 samples, 0.08%)</title><rect x="94.4053%" y="85" width="0.0836%" height="15" fill="rgb(213,208,19)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="95.50"></text></g><g><title>__GI___libc_realloc (50 samples, 0.08%)</title><rect x="94.4053%" y="69" width="0.0836%" height="15" fill="rgb(233,156,4)" fg:x="56444" fg:w="50"/><text x="94.6553%" y="79.50"></text></g><g><title>_int_realloc (47 samples, 0.08%)</title><rect x="94.4103%" y="53" width="0.0786%" height="15" fill="rgb(207,194,5)" fg:x="56447" fg:w="47"/><text x="94.6603%" y="63.50"></text></g><g><title>_int_malloc (22 samples, 0.04%)</title><rect x="94.4522%" y="37" width="0.0368%" height="15" fill="rgb(206,111,30)" fg:x="56472" fg:w="22"/><text x="94.7022%" y="47.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (98 samples, 0.16%)</title><rect x="94.3284%" y="373" width="0.1639%" height="15" fill="rgb(243,70,54)" fg:x="56398" fg:w="98"/><text x="94.5784%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (78 samples, 0.13%)</title><rect x="94.3618%" y="357" width="0.1305%" height="15" fill="rgb(242,28,8)" fg:x="56418" fg:w="78"/><text x="94.6118%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (78 samples, 0.13%)</title><rect x="94.3618%" y="341" width="0.1305%" height="15" fill="rgb(219,106,18)" fg:x="56418" fg:w="78"/><text x="94.6118%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (78 samples, 0.13%)</title><rect x="94.3618%" y="325" width="0.1305%" height="15" fill="rgb(244,222,10)" fg:x="56418" fg:w="78"/><text x="94.6118%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (53 samples, 0.09%)</title><rect x="94.4037%" y="309" width="0.0886%" height="15" fill="rgb(236,179,52)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (53 samples, 0.09%)</title><rect x="94.4037%" y="293" width="0.0886%" height="15" fill="rgb(213,23,39)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (53 samples, 0.09%)</title><rect x="94.4037%" y="277" width="0.0886%" height="15" fill="rgb(238,48,10)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="287.50"></text></g><g><title>alloc::string::String::push_str (53 samples, 0.09%)</title><rect x="94.4037%" y="261" width="0.0886%" height="15" fill="rgb(251,196,23)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (53 samples, 0.09%)</title><rect x="94.4037%" y="245" width="0.0886%" height="15" fill="rgb(250,152,24)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 0.09%)</title><rect x="94.4037%" y="229" width="0.0886%" height="15" fill="rgb(209,150,17)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (53 samples, 0.09%)</title><rect x="94.4037%" y="213" width="0.0886%" height="15" fill="rgb(234,202,34)" fg:x="56443" fg:w="53"/><text x="94.6537%" y="223.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (9 samples, 0.02%)</title><rect x="94.4990%" y="357" width="0.0151%" height="15" fill="rgb(253,148,53)" fg:x="56500" fg:w="9"/><text x="94.7490%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (125 samples, 0.21%)</title><rect x="94.3184%" y="437" width="0.2091%" height="15" fill="rgb(218,129,16)" fg:x="56392" fg:w="125"/><text x="94.5684%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (122 samples, 0.20%)</title><rect x="94.3234%" y="421" width="0.2041%" height="15" fill="rgb(216,85,19)" fg:x="56395" fg:w="122"/><text x="94.5734%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (120 samples, 0.20%)</title><rect x="94.3267%" y="405" width="0.2007%" height="15" fill="rgb(235,228,7)" fg:x="56397" fg:w="120"/><text x="94.5767%" y="415.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (120 samples, 0.20%)</title><rect x="94.3267%" y="389" width="0.2007%" height="15" fill="rgb(245,175,0)" fg:x="56397" fg:w="120"/><text x="94.5767%" y="399.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (17 samples, 0.03%)</title><rect x="94.4990%" y="373" width="0.0284%" height="15" fill="rgb(208,168,36)" fg:x="56500" fg:w="17"/><text x="94.7490%" y="383.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (8 samples, 0.01%)</title><rect x="94.5140%" y="357" width="0.0134%" height="15" fill="rgb(246,171,24)" fg:x="56509" fg:w="8"/><text x="94.7640%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (131 samples, 0.22%)</title><rect x="94.3150%" y="517" width="0.2191%" height="15" fill="rgb(215,142,24)" fg:x="56390" fg:w="131"/><text x="94.5650%" y="527.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (129 samples, 0.22%)</title><rect x="94.3184%" y="501" width="0.2158%" height="15" fill="rgb(250,187,7)" fg:x="56392" fg:w="129"/><text x="94.5684%" y="511.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (129 samples, 0.22%)</title><rect x="94.3184%" y="485" width="0.2158%" height="15" fill="rgb(228,66,33)" fg:x="56392" fg:w="129"/><text x="94.5684%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (129 samples, 0.22%)</title><rect x="94.3184%" y="469" width="0.2158%" height="15" fill="rgb(234,215,21)" fg:x="56392" fg:w="129"/><text x="94.5684%" y="479.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (129 samples, 0.22%)</title><rect x="94.3184%" y="453" width="0.2158%" height="15" fill="rgb(222,191,20)" fg:x="56392" fg:w="129"/><text x="94.5684%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="94.5375%" y="405" width="0.0351%" height="15" fill="rgb(245,79,54)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.04%)</title><rect x="94.5375%" y="389" width="0.0351%" height="15" fill="rgb(240,10,37)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.04%)</title><rect x="94.5375%" y="373" width="0.0351%" height="15" fill="rgb(214,192,32)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.04%)</title><rect x="94.5375%" y="357" width="0.0351%" height="15" fill="rgb(209,36,54)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.04%)</title><rect x="94.5375%" y="341" width="0.0351%" height="15" fill="rgb(220,10,11)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.04%)</title><rect x="94.5375%" y="325" width="0.0351%" height="15" fill="rgb(221,106,17)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.04%)</title><rect x="94.5375%" y="309" width="0.0351%" height="15" fill="rgb(251,142,44)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="319.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.04%)</title><rect x="94.5375%" y="293" width="0.0351%" height="15" fill="rgb(238,13,15)" fg:x="56523" fg:w="21"/><text x="94.7875%" y="303.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.03%)</title><rect x="94.5391%" y="277" width="0.0335%" height="15" fill="rgb(208,107,27)" fg:x="56524" fg:w="20"/><text x="94.7891%" y="287.50"></text></g><g><title>_int_realloc (15 samples, 0.03%)</title><rect x="94.5475%" y="261" width="0.0251%" height="15" fill="rgb(205,136,37)" fg:x="56529" fg:w="15"/><text x="94.7975%" y="271.50"></text></g><g><title>_int_malloc (13 samples, 0.02%)</title><rect x="94.5508%" y="245" width="0.0217%" height="15" fill="rgb(250,205,27)" fg:x="56531" fg:w="13"/><text x="94.8008%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (158 samples, 0.26%)</title><rect x="94.3100%" y="581" width="0.2643%" height="15" fill="rgb(210,80,43)" fg:x="56387" fg:w="158"/><text x="94.5600%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (157 samples, 0.26%)</title><rect x="94.3117%" y="565" width="0.2626%" height="15" fill="rgb(247,160,36)" fg:x="56388" fg:w="157"/><text x="94.5617%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (156 samples, 0.26%)</title><rect x="94.3133%" y="549" width="0.2609%" height="15" fill="rgb(234,13,49)" fg:x="56389" fg:w="156"/><text x="94.5633%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (156 samples, 0.26%)</title><rect x="94.3133%" y="533" width="0.2609%" height="15" fill="rgb(234,122,0)" fg:x="56389" fg:w="156"/><text x="94.5633%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (24 samples, 0.04%)</title><rect x="94.5341%" y="517" width="0.0401%" height="15" fill="rgb(207,146,38)" fg:x="56521" fg:w="24"/><text x="94.7841%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (24 samples, 0.04%)</title><rect x="94.5341%" y="501" width="0.0401%" height="15" fill="rgb(207,177,25)" fg:x="56521" fg:w="24"/><text x="94.7841%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (23 samples, 0.04%)</title><rect x="94.5358%" y="485" width="0.0385%" height="15" fill="rgb(211,178,42)" fg:x="56522" fg:w="23"/><text x="94.7858%" y="495.50"></text></g><g><title>alloc::string::String::push_str (23 samples, 0.04%)</title><rect x="94.5358%" y="469" width="0.0385%" height="15" fill="rgb(230,69,54)" fg:x="56522" fg:w="23"/><text x="94.7858%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.04%)</title><rect x="94.5358%" y="453" width="0.0385%" height="15" fill="rgb(214,135,41)" fg:x="56522" fg:w="23"/><text x="94.7858%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.04%)</title><rect x="94.5358%" y="437" width="0.0385%" height="15" fill="rgb(237,67,25)" fg:x="56522" fg:w="23"/><text x="94.7858%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.04%)</title><rect x="94.5358%" y="421" width="0.0385%" height="15" fill="rgb(222,189,50)" fg:x="56522" fg:w="23"/><text x="94.7858%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (167 samples, 0.28%)</title><rect x="94.2983%" y="645" width="0.2793%" height="15" fill="rgb(245,148,34)" fg:x="56380" fg:w="167"/><text x="94.5483%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (160 samples, 0.27%)</title><rect x="94.3100%" y="629" width="0.2676%" height="15" fill="rgb(222,29,6)" fg:x="56387" fg:w="160"/><text x="94.5600%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (160 samples, 0.27%)</title><rect x="94.3100%" y="613" width="0.2676%" height="15" fill="rgb(221,189,43)" fg:x="56387" fg:w="160"/><text x="94.5600%" y="623.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (160 samples, 0.27%)</title><rect x="94.3100%" y="597" width="0.2676%" height="15" fill="rgb(207,36,27)" fg:x="56387" fg:w="160"/><text x="94.5600%" y="607.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.04%)</title><rect x="94.5910%" y="469" width="0.0401%" height="15" fill="rgb(217,90,24)" fg:x="56555" fg:w="24"/><text x="94.8410%" y="479.50"></text></g><g><title>_int_malloc (20 samples, 0.03%)</title><rect x="94.5977%" y="453" width="0.0335%" height="15" fill="rgb(224,66,35)" fg:x="56559" fg:w="20"/><text x="94.8477%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.05%)</title><rect x="94.5860%" y="485" width="0.0468%" height="15" fill="rgb(221,13,50)" fg:x="56552" fg:w="28"/><text x="94.8360%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.06%)</title><rect x="94.5776%" y="549" width="0.0569%" height="15" fill="rgb(236,68,49)" fg:x="56547" fg:w="34"/><text x="94.8276%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.06%)</title><rect x="94.5776%" y="533" width="0.0569%" height="15" fill="rgb(229,146,28)" fg:x="56547" fg:w="34"/><text x="94.8276%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.05%)</title><rect x="94.5809%" y="517" width="0.0535%" height="15" fill="rgb(225,31,38)" fg:x="56549" fg:w="32"/><text x="94.8309%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.05%)</title><rect x="94.5809%" y="501" width="0.0535%" height="15" fill="rgb(250,208,3)" fg:x="56549" fg:w="32"/><text x="94.8309%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (38 samples, 0.06%)</title><rect x="94.5776%" y="645" width="0.0636%" height="15" fill="rgb(246,54,23)" fg:x="56547" fg:w="38"/><text x="94.8276%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (38 samples, 0.06%)</title><rect x="94.5776%" y="629" width="0.0636%" height="15" fill="rgb(243,76,11)" fg:x="56547" fg:w="38"/><text x="94.8276%" y="639.50"></text></g><g><title>alloc::string::String::push_str (38 samples, 0.06%)</title><rect x="94.5776%" y="613" width="0.0636%" height="15" fill="rgb(245,21,50)" fg:x="56547" fg:w="38"/><text x="94.8276%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38 samples, 0.06%)</title><rect x="94.5776%" y="597" width="0.0636%" height="15" fill="rgb(228,9,43)" fg:x="56547" fg:w="38"/><text x="94.8276%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (38 samples, 0.06%)</title><rect x="94.5776%" y="581" width="0.0636%" height="15" fill="rgb(208,100,47)" fg:x="56547" fg:w="38"/><text x="94.8276%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38 samples, 0.06%)</title><rect x="94.5776%" y="565" width="0.0636%" height="15" fill="rgb(232,26,8)" fg:x="56547" fg:w="38"/><text x="94.8276%" y="575.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (214 samples, 0.36%)</title><rect x="94.2866%" y="677" width="0.3579%" height="15" fill="rgb(216,166,38)" fg:x="56373" fg:w="214"/><text x="94.5366%" y="687.50"></text></g><g><title>core::fmt::write (209 samples, 0.35%)</title><rect x="94.2949%" y="661" width="0.3496%" height="15" fill="rgb(251,202,51)" fg:x="56378" fg:w="209"/><text x="94.5449%" y="671.50"></text></g><g><title>core::fmt::write (229 samples, 0.38%)</title><rect x="94.2832%" y="693" width="0.3830%" height="15" fill="rgb(254,216,34)" fg:x="56371" fg:w="229"/><text x="94.5332%" y="703.50"></text></g><g><title>core::fmt::run (13 samples, 0.02%)</title><rect x="94.6445%" y="677" width="0.0217%" height="15" fill="rgb(251,32,27)" fg:x="56587" fg:w="13"/><text x="94.8945%" y="687.50"></text></g><g><title>datafusion_expr::expr_visitor::inspect_expr_pre (12 samples, 0.02%)</title><rect x="94.6662%" y="693" width="0.0201%" height="15" fill="rgb(208,127,28)" fg:x="56600" fg:w="12"/><text x="94.9162%" y="703.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (11 samples, 0.02%)</title><rect x="94.6679%" y="677" width="0.0184%" height="15" fill="rgb(224,137,22)" fg:x="56601" fg:w="11"/><text x="94.9179%" y="687.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (7 samples, 0.01%)</title><rect x="94.6746%" y="661" width="0.0117%" height="15" fill="rgb(254,70,32)" fg:x="56605" fg:w="7"/><text x="94.9246%" y="671.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="94.7231%" y="645" width="0.0117%" height="15" fill="rgb(229,75,37)" fg:x="56634" fg:w="7"/><text x="94.9731%" y="655.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="94.7833%" y="341" width="0.0117%" height="15" fill="rgb(252,64,23)" fg:x="56670" fg:w="7"/><text x="95.0333%" y="351.50"></text></g><g><title>_int_malloc (43 samples, 0.07%)</title><rect x="94.7950%" y="341" width="0.0719%" height="15" fill="rgb(232,162,48)" fg:x="56677" fg:w="43"/><text x="95.0450%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (71 samples, 0.12%)</title><rect x="94.7499%" y="501" width="0.1188%" height="15" fill="rgb(246,160,12)" fg:x="56650" fg:w="71"/><text x="94.9999%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (71 samples, 0.12%)</title><rect x="94.7499%" y="485" width="0.1188%" height="15" fill="rgb(247,166,0)" fg:x="56650" fg:w="71"/><text x="94.9999%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (70 samples, 0.12%)</title><rect x="94.7515%" y="469" width="0.1171%" height="15" fill="rgb(249,219,21)" fg:x="56651" fg:w="70"/><text x="95.0015%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (70 samples, 0.12%)</title><rect x="94.7515%" y="453" width="0.1171%" height="15" fill="rgb(205,209,3)" fg:x="56651" fg:w="70"/><text x="95.0015%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (68 samples, 0.11%)</title><rect x="94.7549%" y="437" width="0.1137%" height="15" fill="rgb(243,44,1)" fg:x="56653" fg:w="68"/><text x="95.0049%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (68 samples, 0.11%)</title><rect x="94.7549%" y="421" width="0.1137%" height="15" fill="rgb(206,159,16)" fg:x="56653" fg:w="68"/><text x="95.0049%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (68 samples, 0.11%)</title><rect x="94.7549%" y="405" width="0.1137%" height="15" fill="rgb(244,77,30)" fg:x="56653" fg:w="68"/><text x="95.0049%" y="415.50"></text></g><g><title>alloc::alloc::realloc (68 samples, 0.11%)</title><rect x="94.7549%" y="389" width="0.1137%" height="15" fill="rgb(218,69,12)" fg:x="56653" fg:w="68"/><text x="95.0049%" y="399.50"></text></g><g><title>__GI___libc_realloc (68 samples, 0.11%)</title><rect x="94.7549%" y="373" width="0.1137%" height="15" fill="rgb(212,87,7)" fg:x="56653" fg:w="68"/><text x="95.0049%" y="383.50"></text></g><g><title>_int_realloc (65 samples, 0.11%)</title><rect x="94.7599%" y="357" width="0.1087%" height="15" fill="rgb(245,114,25)" fg:x="56656" fg:w="65"/><text x="95.0099%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (73 samples, 0.12%)</title><rect x="94.7499%" y="597" width="0.1221%" height="15" fill="rgb(210,61,42)" fg:x="56650" fg:w="73"/><text x="94.9999%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (73 samples, 0.12%)</title><rect x="94.7499%" y="581" width="0.1221%" height="15" fill="rgb(211,52,33)" fg:x="56650" fg:w="73"/><text x="94.9999%" y="591.50"></text></g><g><title>alloc::string::String::push_str (73 samples, 0.12%)</title><rect x="94.7499%" y="565" width="0.1221%" height="15" fill="rgb(234,58,33)" fg:x="56650" fg:w="73"/><text x="94.9999%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (73 samples, 0.12%)</title><rect x="94.7499%" y="549" width="0.1221%" height="15" fill="rgb(220,115,36)" fg:x="56650" fg:w="73"/><text x="94.9999%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (73 samples, 0.12%)</title><rect x="94.7499%" y="533" width="0.1221%" height="15" fill="rgb(243,153,54)" fg:x="56650" fg:w="73"/><text x="94.9999%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (73 samples, 0.12%)</title><rect x="94.7499%" y="517" width="0.1221%" height="15" fill="rgb(251,47,18)" fg:x="56650" fg:w="73"/><text x="94.9999%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (83 samples, 0.14%)</title><rect x="94.7348%" y="645" width="0.1388%" height="15" fill="rgb(242,102,42)" fg:x="56641" fg:w="83"/><text x="94.9848%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (75 samples, 0.13%)</title><rect x="94.7482%" y="629" width="0.1254%" height="15" fill="rgb(234,31,38)" fg:x="56649" fg:w="75"/><text x="94.9982%" y="639.50"></text></g><g><title>core::fmt::write (75 samples, 0.13%)</title><rect x="94.7482%" y="613" width="0.1254%" height="15" fill="rgb(221,117,51)" fg:x="56649" fg:w="75"/><text x="94.9982%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (11 samples, 0.02%)</title><rect x="94.8736%" y="645" width="0.0184%" height="15" fill="rgb(212,20,18)" fg:x="56724" fg:w="11"/><text x="95.1236%" y="655.50"></text></g><g><title>_int_free (10 samples, 0.02%)</title><rect x="94.9372%" y="373" width="0.0167%" height="15" fill="rgb(245,133,36)" fg:x="56762" fg:w="10"/><text x="95.1872%" y="383.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="94.9439%" y="357" width="0.0100%" height="15" fill="rgb(212,6,19)" fg:x="56766" fg:w="6"/><text x="95.1939%" y="367.50"></text></g><g><title>_int_malloc (27 samples, 0.05%)</title><rect x="94.9539%" y="373" width="0.0452%" height="15" fill="rgb(218,1,36)" fg:x="56772" fg:w="27"/><text x="95.2039%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.10%)</title><rect x="94.8971%" y="469" width="0.1037%" height="15" fill="rgb(246,84,54)" fg:x="56738" fg:w="62"/><text x="95.1471%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (62 samples, 0.10%)</title><rect x="94.8971%" y="453" width="0.1037%" height="15" fill="rgb(242,110,6)" fg:x="56738" fg:w="62"/><text x="95.1471%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (62 samples, 0.10%)</title><rect x="94.8971%" y="437" width="0.1037%" height="15" fill="rgb(214,47,5)" fg:x="56738" fg:w="62"/><text x="95.1471%" y="447.50"></text></g><g><title>alloc::alloc::realloc (62 samples, 0.10%)</title><rect x="94.8971%" y="421" width="0.1037%" height="15" fill="rgb(218,159,25)" fg:x="56738" fg:w="62"/><text x="95.1471%" y="431.50"></text></g><g><title>__GI___libc_realloc (62 samples, 0.10%)</title><rect x="94.8971%" y="405" width="0.1037%" height="15" fill="rgb(215,211,28)" fg:x="56738" fg:w="62"/><text x="95.1471%" y="415.50"></text></g><g><title>_int_realloc (48 samples, 0.08%)</title><rect x="94.9205%" y="389" width="0.0803%" height="15" fill="rgb(238,59,32)" fg:x="56752" fg:w="48"/><text x="95.1705%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (65 samples, 0.11%)</title><rect x="94.8937%" y="629" width="0.1087%" height="15" fill="rgb(226,82,3)" fg:x="56736" fg:w="65"/><text x="95.1437%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (65 samples, 0.11%)</title><rect x="94.8937%" y="613" width="0.1087%" height="15" fill="rgb(240,164,32)" fg:x="56736" fg:w="65"/><text x="95.1437%" y="623.50"></text></g><g><title>alloc::string::String::push_str (65 samples, 0.11%)</title><rect x="94.8937%" y="597" width="0.1087%" height="15" fill="rgb(232,46,7)" fg:x="56736" fg:w="65"/><text x="95.1437%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (65 samples, 0.11%)</title><rect x="94.8937%" y="581" width="0.1087%" height="15" fill="rgb(229,129,53)" fg:x="56736" fg:w="65"/><text x="95.1437%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (65 samples, 0.11%)</title><rect x="94.8937%" y="565" width="0.1087%" height="15" fill="rgb(234,188,29)" fg:x="56736" fg:w="65"/><text x="95.1437%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (65 samples, 0.11%)</title><rect x="94.8937%" y="549" width="0.1087%" height="15" fill="rgb(246,141,4)" fg:x="56736" fg:w="65"/><text x="95.1437%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (64 samples, 0.11%)</title><rect x="94.8954%" y="533" width="0.1070%" height="15" fill="rgb(229,23,39)" fg:x="56737" fg:w="64"/><text x="95.1454%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (64 samples, 0.11%)</title><rect x="94.8954%" y="517" width="0.1070%" height="15" fill="rgb(206,12,3)" fg:x="56737" fg:w="64"/><text x="95.1454%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (63 samples, 0.11%)</title><rect x="94.8971%" y="501" width="0.1054%" height="15" fill="rgb(252,226,20)" fg:x="56738" fg:w="63"/><text x="95.1471%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (63 samples, 0.11%)</title><rect x="94.8971%" y="485" width="0.1054%" height="15" fill="rgb(216,123,35)" fg:x="56738" fg:w="63"/><text x="95.1471%" y="495.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (184 samples, 0.31%)</title><rect x="94.6980%" y="661" width="0.3077%" height="15" fill="rgb(212,68,40)" fg:x="56619" fg:w="184"/><text x="94.9480%" y="671.50"></text></g><g><title>core::fmt::write (68 samples, 0.11%)</title><rect x="94.8920%" y="645" width="0.1137%" height="15" fill="rgb(254,125,32)" fg:x="56735" fg:w="68"/><text x="95.1420%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.01%)</title><rect x="95.0074%" y="645" width="0.0100%" height="15" fill="rgb(253,97,22)" fg:x="56804" fg:w="6"/><text x="95.2574%" y="655.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (451 samples, 0.75%)</title><rect x="94.2648%" y="725" width="0.7543%" height="15" fill="rgb(241,101,14)" fg:x="56360" fg:w="451"/><text x="94.5148%" y="735.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (451 samples, 0.75%)</title><rect x="94.2648%" y="709" width="0.7543%" height="15" fill="rgb(238,103,29)" fg:x="56360" fg:w="451"/><text x="94.5148%" y="719.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (199 samples, 0.33%)</title><rect x="94.6863%" y="693" width="0.3328%" height="15" fill="rgb(233,195,47)" fg:x="56612" fg:w="199"/><text x="94.9363%" y="703.50"></text></g><g><title>core::fmt::write (195 samples, 0.33%)</title><rect x="94.6930%" y="677" width="0.3261%" height="15" fill="rgb(246,218,30)" fg:x="56616" fg:w="195"/><text x="94.9430%" y="687.50"></text></g><g><title>core::fmt::run (8 samples, 0.01%)</title><rect x="95.0058%" y="661" width="0.0134%" height="15" fill="rgb(219,145,47)" fg:x="56803" fg:w="8"/><text x="95.2558%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (463 samples, 0.77%)</title><rect x="94.2481%" y="773" width="0.7744%" height="15" fill="rgb(243,12,26)" fg:x="56350" fg:w="463"/><text x="94.4981%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (458 samples, 0.77%)</title><rect x="94.2565%" y="757" width="0.7660%" height="15" fill="rgb(214,87,16)" fg:x="56355" fg:w="458"/><text x="94.5065%" y="767.50"></text></g><g><title>core::fmt::write (457 samples, 0.76%)</title><rect x="94.2581%" y="741" width="0.7644%" height="15" fill="rgb(208,99,42)" fg:x="56356" fg:w="457"/><text x="94.5081%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (24 samples, 0.04%)</title><rect x="95.0225%" y="773" width="0.0401%" height="15" fill="rgb(253,99,2)" fg:x="56813" fg:w="24"/><text x="95.2725%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (14 samples, 0.02%)</title><rect x="95.0392%" y="757" width="0.0234%" height="15" fill="rgb(220,168,23)" fg:x="56823" fg:w="14"/><text x="95.2892%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (10 samples, 0.02%)</title><rect x="95.0459%" y="741" width="0.0167%" height="15" fill="rgb(242,38,24)" fg:x="56827" fg:w="10"/><text x="95.2959%" y="751.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (15 samples, 0.03%)</title><rect x="95.0626%" y="773" width="0.0251%" height="15" fill="rgb(225,182,9)" fg:x="56837" fg:w="15"/><text x="95.3126%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="95.0760%" y="757" width="0.0117%" height="15" fill="rgb(243,178,37)" fg:x="56845" fg:w="7"/><text x="95.3260%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="95.1463%" y="741" width="0.0251%" height="15" fill="rgb(232,139,19)" fg:x="56887" fg:w="15"/><text x="95.3963%" y="751.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="95.1563%" y="725" width="0.0151%" height="15" fill="rgb(225,201,24)" fg:x="56893" fg:w="9"/><text x="95.4063%" y="735.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (9 samples, 0.02%)</title><rect x="95.1998%" y="709" width="0.0151%" height="15" fill="rgb(221,47,46)" fg:x="56919" fg:w="9"/><text x="95.4498%" y="719.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.01%)</title><rect x="95.2015%" y="693" width="0.0134%" height="15" fill="rgb(249,23,13)" fg:x="56920" fg:w="8"/><text x="95.4515%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.04%)</title><rect x="95.1747%" y="725" width="0.0418%" height="15" fill="rgb(219,9,5)" fg:x="56904" fg:w="25"/><text x="95.4247%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (28 samples, 0.05%)</title><rect x="95.1730%" y="741" width="0.0468%" height="15" fill="rgb(254,171,16)" fg:x="56903" fg:w="28"/><text x="95.4230%" y="751.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.02%)</title><rect x="95.2667%" y="709" width="0.0167%" height="15" fill="rgb(230,171,20)" fg:x="56959" fg:w="10"/><text x="95.5167%" y="719.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.03%)</title><rect x="95.2901%" y="677" width="0.0268%" height="15" fill="rgb(210,71,41)" fg:x="56973" fg:w="16"/><text x="95.5401%" y="687.50"></text></g><g><title>_int_malloc (13 samples, 0.02%)</title><rect x="95.2951%" y="661" width="0.0217%" height="15" fill="rgb(206,173,20)" fg:x="56976" fg:w="13"/><text x="95.5451%" y="671.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (19 samples, 0.03%)</title><rect x="95.2868%" y="693" width="0.0318%" height="15" fill="rgb(233,88,34)" fg:x="56971" fg:w="19"/><text x="95.5368%" y="703.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (63 samples, 0.11%)</title><rect x="95.2199%" y="741" width="0.1054%" height="15" fill="rgb(223,209,46)" fg:x="56931" fg:w="63"/><text x="95.4699%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (45 samples, 0.08%)</title><rect x="95.2500%" y="725" width="0.0753%" height="15" fill="rgb(250,43,18)" fg:x="56949" fg:w="45"/><text x="95.5000%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (25 samples, 0.04%)</title><rect x="95.2834%" y="709" width="0.0418%" height="15" fill="rgb(208,13,10)" fg:x="56969" fg:w="25"/><text x="95.5334%" y="719.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="95.3670%" y="693" width="0.0134%" height="15" fill="rgb(212,200,36)" fg:x="57019" fg:w="8"/><text x="95.6170%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.03%)</title><rect x="95.3587%" y="709" width="0.0251%" height="15" fill="rgb(225,90,30)" fg:x="57014" fg:w="15"/><text x="95.6087%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.16%)</title><rect x="95.3520%" y="725" width="0.1606%" height="15" fill="rgb(236,182,39)" fg:x="57010" fg:w="96"/><text x="95.6020%" y="735.50"></text></g><g><title>__GI___libc_malloc (74 samples, 0.12%)</title><rect x="95.3888%" y="709" width="0.1238%" height="15" fill="rgb(212,144,35)" fg:x="57032" fg:w="74"/><text x="95.6388%" y="719.50"></text></g><g><title>_int_malloc (49 samples, 0.08%)</title><rect x="95.4306%" y="693" width="0.0820%" height="15" fill="rgb(228,63,44)" fg:x="57057" fg:w="49"/><text x="95.6806%" y="703.50"></text></g><g><title>__GI___libc_free (8 samples, 0.01%)</title><rect x="95.5126%" y="725" width="0.0134%" height="15" fill="rgb(228,109,6)" fg:x="57106" fg:w="8"/><text x="95.7626%" y="735.50"></text></g><g><title>_int_free (9 samples, 0.02%)</title><rect x="95.5259%" y="725" width="0.0151%" height="15" fill="rgb(238,117,24)" fg:x="57114" fg:w="9"/><text x="95.7759%" y="735.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="95.5544%" y="709" width="0.0117%" height="15" fill="rgb(242,26,26)" fg:x="57131" fg:w="7"/><text x="95.8044%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (14 samples, 0.02%)</title><rect x="95.5477%" y="725" width="0.0234%" height="15" fill="rgb(221,92,48)" fg:x="57127" fg:w="14"/><text x="95.7977%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.06%)</title><rect x="95.5878%" y="709" width="0.0569%" height="15" fill="rgb(209,209,32)" fg:x="57151" fg:w="34"/><text x="95.8378%" y="719.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.05%)</title><rect x="95.5979%" y="693" width="0.0468%" height="15" fill="rgb(221,70,22)" fg:x="57157" fg:w="28"/><text x="95.8479%" y="703.50"></text></g><g><title>_int_malloc (27 samples, 0.05%)</title><rect x="95.5995%" y="677" width="0.0452%" height="15" fill="rgb(248,145,5)" fg:x="57158" fg:w="27"/><text x="95.8495%" y="687.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (59 samples, 0.10%)</title><rect x="95.5711%" y="725" width="0.0987%" height="15" fill="rgb(226,116,26)" fg:x="57141" fg:w="59"/><text x="95.8211%" y="735.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (13 samples, 0.02%)</title><rect x="95.6480%" y="709" width="0.0217%" height="15" fill="rgb(244,5,17)" fg:x="57187" fg:w="13"/><text x="95.8980%" y="719.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (342 samples, 0.57%)</title><rect x="95.1128%" y="757" width="0.5720%" height="15" fill="rgb(252,159,33)" fg:x="56867" fg:w="342"/><text x="95.3628%" y="767.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (215 samples, 0.36%)</title><rect x="95.3252%" y="741" width="0.3596%" height="15" fill="rgb(206,71,0)" fg:x="56994" fg:w="215"/><text x="95.5752%" y="751.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (9 samples, 0.02%)</title><rect x="95.6698%" y="725" width="0.0151%" height="15" fill="rgb(233,118,54)" fg:x="57200" fg:w="9"/><text x="95.9198%" y="735.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="95.6748%" y="709" width="0.0100%" height="15" fill="rgb(234,83,48)" fg:x="57203" fg:w="6"/><text x="95.9248%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="97.0095%" y="709" width="0.0184%" height="15" fill="rgb(228,3,54)" fg:x="58001" fg:w="11"/><text x="97.2595%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="97.0095%" y="693" width="0.0184%" height="15" fill="rgb(226,155,13)" fg:x="58001" fg:w="11"/><text x="97.2595%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="97.0095%" y="677" width="0.0184%" height="15" fill="rgb(241,28,37)" fg:x="58001" fg:w="11"/><text x="97.2595%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="97.0095%" y="661" width="0.0184%" height="15" fill="rgb(233,93,10)" fg:x="58001" fg:w="11"/><text x="97.2595%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="97.0095%" y="645" width="0.0184%" height="15" fill="rgb(225,113,19)" fg:x="58001" fg:w="11"/><text x="97.2595%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="97.0095%" y="629" width="0.0184%" height="15" fill="rgb(241,2,18)" fg:x="58001" fg:w="11"/><text x="97.2595%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="97.0112%" y="613" width="0.0167%" height="15" fill="rgb(228,207,21)" fg:x="58002" fg:w="10"/><text x="97.2612%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="97.0112%" y="597" width="0.0167%" height="15" fill="rgb(213,211,35)" fg:x="58002" fg:w="10"/><text x="97.2612%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (10 samples, 0.02%)</title><rect x="97.0112%" y="581" width="0.0167%" height="15" fill="rgb(209,83,10)" fg:x="58002" fg:w="10"/><text x="97.2612%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="97.0128%" y="565" width="0.0151%" height="15" fill="rgb(209,164,1)" fg:x="58003" fg:w="9"/><text x="97.2628%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (9 samples, 0.02%)</title><rect x="97.0128%" y="549" width="0.0151%" height="15" fill="rgb(213,184,43)" fg:x="58003" fg:w="9"/><text x="97.2628%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="97.0178%" y="533" width="0.0100%" height="15" fill="rgb(231,61,34)" fg:x="58006" fg:w="6"/><text x="97.2678%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="97.0178%" y="517" width="0.0100%" height="15" fill="rgb(235,75,3)" fg:x="58006" fg:w="6"/><text x="97.2678%" y="527.50"></text></g><g><title>malloc_consolidate (684 samples, 1.14%)</title><rect x="97.0279%" y="709" width="1.1440%" height="15" fill="rgb(220,106,47)" fg:x="58012" fg:w="684"/><text x="97.2779%" y="719.50"></text></g><g><title>unlink_chunk.isra.0 (225 samples, 0.38%)</title><rect x="97.7956%" y="693" width="0.3763%" height="15" fill="rgb(210,196,33)" fg:x="58471" fg:w="225"/><text x="98.0456%" y="703.50"></text></g><g><title>__GI___libc_malloc (1,481 samples, 2.48%)</title><rect x="95.6982%" y="741" width="2.4770%" height="15" fill="rgb(229,154,42)" fg:x="57217" fg:w="1481"/><text x="95.9482%" y="751.50">__..</text></g><g><title>_int_malloc (1,478 samples, 2.47%)</title><rect x="95.7032%" y="725" width="2.4720%" height="15" fill="rgb(228,114,26)" fg:x="57220" fg:w="1478"/><text x="95.9532%" y="735.50">_i..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (1,863 samples, 3.12%)</title><rect x="95.0877%" y="773" width="3.1160%" height="15" fill="rgb(208,144,1)" fg:x="56852" fg:w="1863"/><text x="95.3377%" y="783.50">dat..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (1,506 samples, 2.52%)</title><rect x="95.6848%" y="757" width="2.5189%" height="15" fill="rgb(239,112,37)" fg:x="57209" fg:w="1506"/><text x="95.9348%" y="767.50">da..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (8 samples, 0.01%)</title><rect x="98.1903%" y="741" width="0.0134%" height="15" fill="rgb(210,96,50)" fg:x="58707" fg:w="8"/><text x="98.4403%" y="751.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (2,462 samples, 4.12%)</title><rect x="94.0875%" y="789" width="4.1178%" height="15" fill="rgb(222,178,2)" fg:x="56254" fg:w="2462"/><text x="94.3375%" y="799.50">data..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="98.2656%" y="757" width="0.0117%" height="15" fill="rgb(226,74,18)" fg:x="58752" fg:w="7"/><text x="98.5156%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="98.2656%" y="741" width="0.0117%" height="15" fill="rgb(225,67,54)" fg:x="58752" fg:w="7"/><text x="98.5156%" y="751.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (45 samples, 0.08%)</title><rect x="98.2104%" y="773" width="0.0753%" height="15" fill="rgb(251,92,32)" fg:x="58719" fg:w="45"/><text x="98.4604%" y="783.50"></text></g><g><title>datafusion::physical_plan::execute_stream (69 samples, 0.12%)</title><rect x="98.2054%" y="789" width="0.1154%" height="15" fill="rgb(228,149,22)" fg:x="58716" fg:w="69"/><text x="98.4554%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (18 samples, 0.03%)</title><rect x="98.2907%" y="773" width="0.0301%" height="15" fill="rgb(243,54,13)" fg:x="58767" fg:w="18"/><text x="98.5407%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (17 samples, 0.03%)</title><rect x="98.2923%" y="757" width="0.0284%" height="15" fill="rgb(243,180,28)" fg:x="58768" fg:w="17"/><text x="98.5423%" y="767.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (9 samples, 0.02%)</title><rect x="98.3208%" y="789" width="0.0151%" height="15" fill="rgb(208,167,24)" fg:x="58785" fg:w="9"/><text x="98.5708%" y="799.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new_with_predicate (6 samples, 0.01%)</title><rect x="98.3258%" y="773" width="0.0100%" height="15" fill="rgb(245,73,45)" fg:x="58788" fg:w="6"/><text x="98.5758%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="98.4813%" y="773" width="0.0151%" height="15" fill="rgb(237,203,48)" fg:x="58881" fg:w="9"/><text x="98.7313%" y="783.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.08%)</title><rect x="98.4964%" y="773" width="0.0786%" height="15" fill="rgb(211,197,16)" fg:x="58890" fg:w="47"/><text x="98.7464%" y="783.50"></text></g><g><title>_int_malloc (38 samples, 0.06%)</title><rect x="98.5114%" y="757" width="0.0636%" height="15" fill="rgb(243,99,51)" fg:x="58899" fg:w="38"/><text x="98.7614%" y="767.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="98.5650%" y="741" width="0.0100%" height="15" fill="rgb(215,123,29)" fg:x="58931" fg:w="6"/><text x="98.8150%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="98.6135%" y="757" width="0.0184%" height="15" fill="rgb(239,186,37)" fg:x="58960" fg:w="11"/><text x="98.8635%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="98.6201%" y="741" width="0.0117%" height="15" fill="rgb(252,136,39)" fg:x="58964" fg:w="7"/><text x="98.8701%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.01%)</title><rect x="98.6519%" y="517" width="0.0100%" height="15" fill="rgb(223,213,32)" fg:x="58983" fg:w="6"/><text x="98.9019%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.01%)</title><rect x="98.6519%" y="501" width="0.0100%" height="15" fill="rgb(233,115,5)" fg:x="58983" fg:w="6"/><text x="98.9019%" y="511.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.01%)</title><rect x="98.6519%" y="485" width="0.0100%" height="15" fill="rgb(207,226,44)" fg:x="58983" fg:w="6"/><text x="98.9019%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="98.6519%" y="533" width="0.0134%" height="15" fill="rgb(208,126,0)" fg:x="58983" fg:w="8"/><text x="98.9019%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="98.6503%" y="597" width="0.0167%" height="15" fill="rgb(244,66,21)" fg:x="58982" fg:w="10"/><text x="98.9003%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.02%)</title><rect x="98.6503%" y="581" width="0.0167%" height="15" fill="rgb(222,97,12)" fg:x="58982" fg:w="10"/><text x="98.9003%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="98.6503%" y="565" width="0.0167%" height="15" fill="rgb(219,213,19)" fg:x="58982" fg:w="10"/><text x="98.9003%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.02%)</title><rect x="98.6503%" y="549" width="0.0167%" height="15" fill="rgb(252,169,30)" fg:x="58982" fg:w="10"/><text x="98.9003%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (13 samples, 0.02%)</title><rect x="98.6469%" y="741" width="0.0217%" height="15" fill="rgb(206,32,51)" fg:x="58980" fg:w="13"/><text x="98.8969%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.02%)</title><rect x="98.6486%" y="725" width="0.0201%" height="15" fill="rgb(250,172,42)" fg:x="58981" fg:w="12"/><text x="98.8986%" y="735.50"></text></g><g><title>core::fmt::write (11 samples, 0.02%)</title><rect x="98.6503%" y="709" width="0.0184%" height="15" fill="rgb(209,34,43)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="98.6503%" y="693" width="0.0184%" height="15" fill="rgb(223,11,35)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.02%)</title><rect x="98.6503%" y="677" width="0.0184%" height="15" fill="rgb(251,219,26)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="687.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.02%)</title><rect x="98.6503%" y="661" width="0.0184%" height="15" fill="rgb(231,119,3)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.02%)</title><rect x="98.6503%" y="645" width="0.0184%" height="15" fill="rgb(216,97,11)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.02%)</title><rect x="98.6503%" y="629" width="0.0184%" height="15" fill="rgb(223,59,9)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.02%)</title><rect x="98.6503%" y="613" width="0.0184%" height="15" fill="rgb(233,93,31)" fg:x="58982" fg:w="11"/><text x="98.9003%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="98.6737%" y="725" width="0.0100%" height="15" fill="rgb(239,81,33)" fg:x="58996" fg:w="6"/><text x="98.9237%" y="735.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (6 samples, 0.01%)</title><rect x="98.6921%" y="709" width="0.0100%" height="15" fill="rgb(213,120,34)" fg:x="59007" fg:w="6"/><text x="98.9421%" y="719.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.03%)</title><rect x="98.7205%" y="453" width="0.0268%" height="15" fill="rgb(243,49,53)" fg:x="59024" fg:w="16"/><text x="98.9705%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.03%)</title><rect x="98.7205%" y="501" width="0.0284%" height="15" fill="rgb(247,216,33)" fg:x="59024" fg:w="17"/><text x="98.9705%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.03%)</title><rect x="98.7205%" y="485" width="0.0284%" height="15" fill="rgb(226,26,14)" fg:x="59024" fg:w="17"/><text x="98.9705%" y="495.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.03%)</title><rect x="98.7205%" y="469" width="0.0284%" height="15" fill="rgb(215,49,53)" fg:x="59024" fg:w="17"/><text x="98.9705%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.04%)</title><rect x="98.7172%" y="517" width="0.0368%" height="15" fill="rgb(245,162,40)" fg:x="59022" fg:w="22"/><text x="98.9672%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.04%)</title><rect x="98.7121%" y="581" width="0.0435%" height="15" fill="rgb(229,68,17)" fg:x="59019" fg:w="26"/><text x="98.9621%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.04%)</title><rect x="98.7121%" y="565" width="0.0435%" height="15" fill="rgb(213,182,10)" fg:x="59019" fg:w="26"/><text x="98.9621%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.04%)</title><rect x="98.7121%" y="549" width="0.0435%" height="15" fill="rgb(245,125,30)" fg:x="59019" fg:w="26"/><text x="98.9621%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.04%)</title><rect x="98.7121%" y="533" width="0.0435%" height="15" fill="rgb(232,202,2)" fg:x="59019" fg:w="26"/><text x="98.9621%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 0.06%)</title><rect x="98.7105%" y="677" width="0.0569%" height="15" fill="rgb(237,140,51)" fg:x="59018" fg:w="34"/><text x="98.9605%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (34 samples, 0.06%)</title><rect x="98.7105%" y="661" width="0.0569%" height="15" fill="rgb(236,157,25)" fg:x="59018" fg:w="34"/><text x="98.9605%" y="671.50"></text></g><g><title>alloc::string::String::push_str (34 samples, 0.06%)</title><rect x="98.7105%" y="645" width="0.0569%" height="15" fill="rgb(219,209,0)" fg:x="59018" fg:w="34"/><text x="98.9605%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.06%)</title><rect x="98.7105%" y="629" width="0.0569%" height="15" fill="rgb(240,116,54)" fg:x="59018" fg:w="34"/><text x="98.9605%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.06%)</title><rect x="98.7105%" y="613" width="0.0569%" height="15" fill="rgb(216,10,36)" fg:x="59018" fg:w="34"/><text x="98.9605%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.06%)</title><rect x="98.7105%" y="597" width="0.0569%" height="15" fill="rgb(222,72,44)" fg:x="59018" fg:w="34"/><text x="98.9605%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="98.7556%" y="581" width="0.0117%" height="15" fill="rgb(232,159,9)" fg:x="59045" fg:w="7"/><text x="99.0056%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="98.7556%" y="565" width="0.0117%" height="15" fill="rgb(210,39,32)" fg:x="59045" fg:w="7"/><text x="99.0056%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (61 samples, 0.10%)</title><rect x="98.6687%" y="741" width="0.1020%" height="15" fill="rgb(216,194,45)" fg:x="58993" fg:w="61"/><text x="98.9187%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (47 samples, 0.08%)</title><rect x="98.6921%" y="725" width="0.0786%" height="15" fill="rgb(218,18,35)" fg:x="59007" fg:w="47"/><text x="98.9421%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (41 samples, 0.07%)</title><rect x="98.7021%" y="709" width="0.0686%" height="15" fill="rgb(207,83,51)" fg:x="59013" fg:w="41"/><text x="98.9521%" y="719.50"></text></g><g><title>core::fmt::write (36 samples, 0.06%)</title><rect x="98.7105%" y="693" width="0.0602%" height="15" fill="rgb(225,63,43)" fg:x="59018" fg:w="36"/><text x="98.9605%" y="703.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (89 samples, 0.15%)</title><rect x="98.6319%" y="757" width="0.1489%" height="15" fill="rgb(207,57,36)" fg:x="58971" fg:w="89"/><text x="98.8819%" y="767.50"></text></g><g><title>core::fmt::write (6 samples, 0.01%)</title><rect x="98.7707%" y="741" width="0.0100%" height="15" fill="rgb(216,99,33)" fg:x="59054" fg:w="6"/><text x="99.0207%" y="751.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (294 samples, 0.49%)</title><rect x="98.3358%" y="789" width="0.4917%" height="15" fill="rgb(225,42,16)" fg:x="58794" fg:w="294"/><text x="98.5858%" y="799.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (147 samples, 0.25%)</title><rect x="98.5817%" y="773" width="0.2459%" height="15" fill="rgb(220,201,45)" fg:x="58941" fg:w="147"/><text x="98.8317%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.05%)</title><rect x="98.7807%" y="757" width="0.0468%" height="15" fill="rgb(225,33,4)" fg:x="59060" fg:w="28"/><text x="99.0307%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.02%)</title><rect x="98.8058%" y="741" width="0.0217%" height="15" fill="rgb(224,33,50)" fg:x="59075" fg:w="13"/><text x="99.0558%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="98.8142%" y="725" width="0.0134%" height="15" fill="rgb(246,198,51)" fg:x="59080" fg:w="8"/><text x="99.0642%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="709" width="0.0100%" height="15" fill="rgb(205,22,4)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="693" width="0.0100%" height="15" fill="rgb(206,3,8)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="677" width="0.0100%" height="15" fill="rgb(251,23,15)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="661" width="0.0100%" height="15" fill="rgb(252,88,28)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="645" width="0.0100%" height="15" fill="rgb(212,127,14)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="629" width="0.0100%" height="15" fill="rgb(247,145,37)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="613" width="0.0100%" height="15" fill="rgb(209,117,53)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="597" width="0.0100%" height="15" fill="rgb(212,90,42)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.01%)</title><rect x="98.8175%" y="581" width="0.0100%" height="15" fill="rgb(218,164,37)" fg:x="59082" fg:w="6"/><text x="99.0675%" y="591.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (51 samples, 0.09%)</title><rect x="98.8275%" y="789" width="0.0853%" height="15" fill="rgb(246,65,34)" fg:x="59088" fg:w="51"/><text x="99.0775%" y="799.50"></text></g><g><title>chrono::offset::utc::Utc::now (15 samples, 0.03%)</title><rect x="98.8878%" y="773" width="0.0251%" height="15" fill="rgb(231,100,33)" fg:x="59124" fg:w="15"/><text x="99.1378%" y="783.50"></text></g><g><title>_int_free (15 samples, 0.03%)</title><rect x="98.9396%" y="709" width="0.0251%" height="15" fill="rgb(228,126,14)" fg:x="59155" fg:w="15"/><text x="99.1896%" y="719.50"></text></g><g><title>malloc_consolidate (13 samples, 0.02%)</title><rect x="98.9429%" y="693" width="0.0217%" height="15" fill="rgb(215,173,21)" fg:x="59157" fg:w="13"/><text x="99.1929%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.04%)</title><rect x="98.9279%" y="773" width="0.0435%" height="15" fill="rgb(210,6,40)" fg:x="59148" fg:w="26"/><text x="99.1779%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.04%)</title><rect x="98.9296%" y="757" width="0.0418%" height="15" fill="rgb(212,48,18)" fg:x="59149" fg:w="25"/><text x="99.1796%" y="767.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.04%)</title><rect x="98.9296%" y="741" width="0.0418%" height="15" fill="rgb(230,214,11)" fg:x="59149" fg:w="25"/><text x="99.1796%" y="751.50"></text></g><g><title>_int_realloc (21 samples, 0.04%)</title><rect x="98.9363%" y="725" width="0.0351%" height="15" fill="rgb(254,105,39)" fg:x="59153" fg:w="21"/><text x="99.1863%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.01%)</title><rect x="98.9764%" y="757" width="0.0134%" height="15" fill="rgb(245,158,5)" fg:x="59177" fg:w="8"/><text x="99.2264%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.01%)</title><rect x="98.9764%" y="741" width="0.0134%" height="15" fill="rgb(249,208,11)" fg:x="59177" fg:w="8"/><text x="99.2264%" y="751.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.01%)</title><rect x="98.9764%" y="725" width="0.0134%" height="15" fill="rgb(210,39,28)" fg:x="59177" fg:w="8"/><text x="99.2264%" y="735.50"></text></g><g><title>_int_realloc (7 samples, 0.01%)</title><rect x="98.9781%" y="709" width="0.0117%" height="15" fill="rgb(211,56,53)" fg:x="59178" fg:w="7"/><text x="99.2281%" y="719.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (49 samples, 0.08%)</title><rect x="98.9128%" y="789" width="0.0820%" height="15" fill="rgb(226,201,30)" fg:x="59139" fg:w="49"/><text x="99.1628%" y="799.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (14 samples, 0.02%)</title><rect x="98.9714%" y="773" width="0.0234%" height="15" fill="rgb(239,101,34)" fg:x="59174" fg:w="14"/><text x="99.2214%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="99.0801%" y="741" width="0.0100%" height="15" fill="rgb(226,209,5)" fg:x="59239" fg:w="6"/><text x="99.3301%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.01%)</title><rect x="99.0901%" y="741" width="0.0134%" height="15" fill="rgb(250,105,47)" fg:x="59245" fg:w="8"/><text x="99.3401%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.01%)</title><rect x="99.0918%" y="725" width="0.0117%" height="15" fill="rgb(230,72,3)" fg:x="59246" fg:w="7"/><text x="99.3418%" y="735.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="99.0935%" y="709" width="0.0100%" height="15" fill="rgb(232,218,39)" fg:x="59247" fg:w="6"/><text x="99.3435%" y="719.50"></text></g><g><title>_int_free (7 samples, 0.01%)</title><rect x="99.1336%" y="725" width="0.0117%" height="15" fill="rgb(248,166,6)" fg:x="59271" fg:w="7"/><text x="99.3836%" y="735.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.03%)</title><rect x="99.1453%" y="709" width="0.0335%" height="15" fill="rgb(247,89,20)" fg:x="59278" fg:w="20"/><text x="99.3953%" y="719.50"></text></g><g><title>_int_malloc (17 samples, 0.03%)</title><rect x="99.1503%" y="693" width="0.0284%" height="15" fill="rgb(248,130,54)" fg:x="59281" fg:w="17"/><text x="99.4003%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (22 samples, 0.04%)</title><rect x="99.1453%" y="725" width="0.0368%" height="15" fill="rgb(234,196,4)" fg:x="59278" fg:w="22"/><text x="99.3953%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (13 samples, 0.02%)</title><rect x="99.1821%" y="725" width="0.0217%" height="15" fill="rgb(250,143,31)" fg:x="59300" fg:w="13"/><text x="99.4321%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (66 samples, 0.11%)</title><rect x="99.2039%" y="725" width="0.1104%" height="15" fill="rgb(211,110,34)" fg:x="59313" fg:w="66"/><text x="99.4539%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (28 samples, 0.05%)</title><rect x="99.2674%" y="709" width="0.0468%" height="15" fill="rgb(215,124,48)" fg:x="59351" fg:w="28"/><text x="99.5174%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.01%)</title><rect x="99.3444%" y="709" width="0.0117%" height="15" fill="rgb(216,46,13)" fg:x="59397" fg:w="7"/><text x="99.5944%" y="719.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (207 samples, 0.35%)</title><rect x="99.0182%" y="773" width="0.3462%" height="15" fill="rgb(205,184,25)" fg:x="59202" fg:w="207"/><text x="99.2682%" y="783.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (191 samples, 0.32%)</title><rect x="99.0450%" y="757" width="0.3195%" height="15" fill="rgb(228,1,10)" fg:x="59218" fg:w="191"/><text x="99.2950%" y="767.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (156 samples, 0.26%)</title><rect x="99.1035%" y="741" width="0.2609%" height="15" fill="rgb(213,116,27)" fg:x="59253" fg:w="156"/><text x="99.3535%" y="751.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (30 samples, 0.05%)</title><rect x="99.3143%" y="725" width="0.0502%" height="15" fill="rgb(241,95,50)" fg:x="59379" fg:w="30"/><text x="99.5643%" y="735.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (236 samples, 0.39%)</title><rect x="98.9948%" y="789" width="0.3947%" height="15" fill="rgb(238,48,32)" fg:x="59188" fg:w="236"/><text x="99.2448%" y="799.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (15 samples, 0.03%)</title><rect x="99.3644%" y="773" width="0.0251%" height="15" fill="rgb(235,113,49)" fg:x="59409" fg:w="15"/><text x="99.6144%" y="783.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.02%)</title><rect x="99.3694%" y="757" width="0.0201%" height="15" fill="rgb(205,127,43)" fg:x="59412" fg:w="12"/><text x="99.6194%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (184 samples, 0.31%)</title><rect x="99.4079%" y="533" width="0.3077%" height="15" fill="rgb(250,162,2)" fg:x="59435" fg:w="184"/><text x="99.6579%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (170 samples, 0.28%)</title><rect x="99.4313%" y="517" width="0.2843%" height="15" fill="rgb(220,13,41)" fg:x="59449" fg:w="170"/><text x="99.6813%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (168 samples, 0.28%)</title><rect x="99.4347%" y="501" width="0.2810%" height="15" fill="rgb(249,221,25)" fg:x="59451" fg:w="168"/><text x="99.6847%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (165 samples, 0.28%)</title><rect x="99.4397%" y="485" width="0.2760%" height="15" fill="rgb(215,208,19)" fg:x="59454" fg:w="165"/><text x="99.6897%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (160 samples, 0.27%)</title><rect x="99.4481%" y="469" width="0.2676%" height="15" fill="rgb(236,175,2)" fg:x="59459" fg:w="160"/><text x="99.6981%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (152 samples, 0.25%)</title><rect x="99.4614%" y="453" width="0.2542%" height="15" fill="rgb(241,52,2)" fg:x="59467" fg:w="152"/><text x="99.7114%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (135 samples, 0.23%)</title><rect x="99.4899%" y="437" width="0.2258%" height="15" fill="rgb(248,140,14)" fg:x="59484" fg:w="135"/><text x="99.7399%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (122 samples, 0.20%)</title><rect x="99.5116%" y="421" width="0.2041%" height="15" fill="rgb(253,22,42)" fg:x="59497" fg:w="122"/><text x="99.7616%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (102 samples, 0.17%)</title><rect x="99.5451%" y="405" width="0.1706%" height="15" fill="rgb(234,61,47)" fg:x="59517" fg:w="102"/><text x="99.7951%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (96 samples, 0.16%)</title><rect x="99.5551%" y="389" width="0.1606%" height="15" fill="rgb(208,226,15)" fg:x="59523" fg:w="96"/><text x="99.8051%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (66 samples, 0.11%)</title><rect x="99.6053%" y="373" width="0.1104%" height="15" fill="rgb(217,221,4)" fg:x="59553" fg:w="66"/><text x="99.8553%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.11%)</title><rect x="99.6070%" y="357" width="0.1087%" height="15" fill="rgb(212,174,34)" fg:x="59554" fg:w="65"/><text x="99.8570%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (65 samples, 0.11%)</title><rect x="99.6070%" y="341" width="0.1087%" height="15" fill="rgb(253,83,4)" fg:x="59554" fg:w="65"/><text x="99.8570%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (54 samples, 0.09%)</title><rect x="99.6253%" y="325" width="0.0903%" height="15" fill="rgb(250,195,49)" fg:x="59565" fg:w="54"/><text x="99.8753%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (37 samples, 0.06%)</title><rect x="99.6538%" y="309" width="0.0619%" height="15" fill="rgb(241,192,25)" fg:x="59582" fg:w="37"/><text x="99.9038%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (32 samples, 0.05%)</title><rect x="99.6621%" y="293" width="0.0535%" height="15" fill="rgb(208,124,10)" fg:x="59587" fg:w="32"/><text x="99.9121%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="99.6939%" y="277" width="0.0217%" height="15" fill="rgb(222,33,0)" fg:x="59606" fg:w="13"/><text x="99.9439%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.02%)</title><rect x="99.6939%" y="261" width="0.0217%" height="15" fill="rgb(234,209,28)" fg:x="59606" fg:w="13"/><text x="99.9439%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.02%)</title><rect x="99.6973%" y="245" width="0.0184%" height="15" fill="rgb(224,11,23)" fg:x="59608" fg:w="11"/><text x="99.9473%" y="255.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (193 samples, 0.32%)</title><rect x="99.4012%" y="629" width="0.3228%" height="15" fill="rgb(232,99,1)" fg:x="59431" fg:w="193"/><text x="99.6512%" y="639.50"></text></g><g><title>std::io::Write::write_all (193 samples, 0.32%)</title><rect x="99.4012%" y="613" width="0.3228%" height="15" fill="rgb(237,95,45)" fg:x="59431" fg:w="193"/><text x="99.6512%" y="623.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (193 samples, 0.32%)</title><rect x="99.4012%" y="597" width="0.3228%" height="15" fill="rgb(208,109,11)" fg:x="59431" fg:w="193"/><text x="99.6512%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (193 samples, 0.32%)</title><rect x="99.4012%" y="581" width="0.3228%" height="15" fill="rgb(216,190,48)" fg:x="59431" fg:w="193"/><text x="99.6512%" y="591.50"></text></g><g><title>__libc_write (193 samples, 0.32%)</title><rect x="99.4012%" y="565" width="0.3228%" height="15" fill="rgb(251,171,36)" fg:x="59431" fg:w="193"/><text x="99.6512%" y="575.50"></text></g><g><title>__libc_write (191 samples, 0.32%)</title><rect x="99.4046%" y="549" width="0.3195%" height="15" fill="rgb(230,62,22)" fg:x="59433" fg:w="191"/><text x="99.6546%" y="559.50"></text></g><g><title>core::fmt::write (201 samples, 0.34%)</title><rect x="99.3945%" y="709" width="0.3362%" height="15" fill="rgb(225,114,35)" fg:x="59427" fg:w="201"/><text x="99.6445%" y="719.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (198 samples, 0.33%)</title><rect x="99.3996%" y="693" width="0.3312%" height="15" fill="rgb(215,118,42)" fg:x="59430" fg:w="198"/><text x="99.6496%" y="703.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (198 samples, 0.33%)</title><rect x="99.3996%" y="677" width="0.3312%" height="15" fill="rgb(243,119,21)" fg:x="59430" fg:w="198"/><text x="99.6496%" y="687.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (198 samples, 0.33%)</title><rect x="99.3996%" y="661" width="0.3312%" height="15" fill="rgb(252,177,53)" fg:x="59430" fg:w="198"/><text x="99.6496%" y="671.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (198 samples, 0.33%)</title><rect x="99.3996%" y="645" width="0.3312%" height="15" fill="rgb(237,209,29)" fg:x="59430" fg:w="198"/><text x="99.6496%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (202 samples, 0.34%)</title><rect x="99.3945%" y="725" width="0.3379%" height="15" fill="rgb(212,65,23)" fg:x="59427" fg:w="202"/><text x="99.6445%" y="735.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (207 samples, 0.35%)</title><rect x="99.3912%" y="757" width="0.3462%" height="15" fill="rgb(230,222,46)" fg:x="59425" fg:w="207"/><text x="99.6412%" y="767.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (207 samples, 0.35%)</title><rect x="99.3912%" y="741" width="0.3462%" height="15" fill="rgb(215,135,32)" fg:x="59425" fg:w="207"/><text x="99.6412%" y="751.50"></text></g><g><title>std::io::stdio::_print (211 samples, 0.35%)</title><rect x="99.3895%" y="789" width="0.3529%" height="15" fill="rgb(246,101,22)" fg:x="59424" fg:w="211"/><text x="99.6395%" y="799.50"></text></g><g><title>std::io::stdio::print_to (210 samples, 0.35%)</title><rect x="99.3912%" y="773" width="0.3512%" height="15" fill="rgb(206,107,13)" fg:x="59425" fg:w="210"/><text x="99.6412%" y="783.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (47,194 samples, 78.93%)</title><rect x="20.8098%" y="837" width="78.9343%" height="15" fill="rgb(250,100,44)" fg:x="12442" fg:w="47194"/><text x="21.0598%" y="847.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>do_query::main::{{closure}} (47,194 samples, 78.93%)</title><rect x="20.8098%" y="821" width="78.9343%" height="15" fill="rgb(231,147,38)" fg:x="12442" fg:w="47194"/><text x="21.0598%" y="831.50">do_query::main::{{closure}}</text></g><g><title>do_query::main_inner::_{{closure}} (47,194 samples, 78.93%)</title><rect x="20.8098%" y="805" width="78.9343%" height="15" fill="rgb(229,8,40)" fg:x="12442" fg:w="47194"/><text x="21.0598%" y="815.50">do_query::main_inner::_{{closure}}</text></g><g><title>[unknown] (48,188 samples, 80.60%)</title><rect x="19.1858%" y="853" width="80.5968%" height="15" fill="rgb(221,135,30)" fg:x="11471" fg:w="48188"/><text x="19.4358%" y="863.50">[unknown]</text></g><g><title>unlink_chunk.isra.0 (23 samples, 0.04%)</title><rect x="99.7441%" y="837" width="0.0385%" height="15" fill="rgb(249,193,18)" fg:x="59636" fg:w="23"/><text x="99.9941%" y="847.50"></text></g><g><title>_int_free (43 samples, 0.07%)</title><rect x="99.7909%" y="853" width="0.0719%" height="15" fill="rgb(209,133,39)" fg:x="59664" fg:w="43"/><text x="100.0409%" y="863.50"></text></g><g><title>_int_malloc (7 samples, 0.01%)</title><rect x="99.8629%" y="853" width="0.0117%" height="15" fill="rgb(232,100,14)" fg:x="59707" fg:w="7"/><text x="100.1129%" y="863.50"></text></g><g><title>_int_memalign (12 samples, 0.02%)</title><rect x="99.8746%" y="853" width="0.0201%" height="15" fill="rgb(224,185,1)" fg:x="59714" fg:w="12"/><text x="100.1246%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.01%)</title><rect x="99.9348%" y="853" width="0.0134%" height="15" fill="rgb(223,139,8)" fg:x="59750" fg:w="8"/><text x="100.1848%" y="863.50"></text></g><g><title>main_arena (19 samples, 0.03%)</title><rect x="99.9482%" y="853" width="0.0318%" height="15" fill="rgb(232,213,38)" fg:x="59758" fg:w="19"/><text x="100.1982%" y="863.50"></text></g><g><title>unlink_chunk.isra.0 (14 samples, 0.02%)</title><rect x="99.9565%" y="837" width="0.0234%" height="15" fill="rgb(207,94,22)" fg:x="59763" fg:w="14"/><text x="100.2065%" y="847.50"></text></g><g><title>malloc_consolidate (6 samples, 0.01%)</title><rect x="99.9799%" y="853" width="0.0100%" height="15" fill="rgb(219,183,54)" fg:x="59777" fg:w="6"/><text x="100.2299%" y="863.50"></text></g><g><title>all (59,789 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(216,185,54)" fg:x="0" fg:w="59789"/><text x="0.2500%" y="895.50"></text></g><g><title>do_query (59,789 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(254,217,39)" fg:x="0" fg:w="59789"/><text x="0.2500%" y="879.50">do_query</text></g></svg></svg>