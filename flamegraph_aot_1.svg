<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="13627"><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7 samples, 0.05%)</title><rect x="0.0073%" y="933" width="0.0514%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="7"/><text x="0.2573%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.0954%" y="933" width="0.0147%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="2"/><text x="0.3454%" y="943.50"></text></g><g><title>&lt;str as arrow_array::types::bytes::ByteArrayNativeType&gt;::from_bytes_unchecked (25 samples, 0.18%)</title><rect x="0.1248%" y="933" width="0.1835%" height="15" fill="rgb(221,193,54)" fg:x="17" fg:w="25"/><text x="0.3748%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="0.3156%" y="917" width="0.0220%" height="15" fill="rgb(248,212,6)" fg:x="43" fg:w="3"/><text x="0.5656%" y="927.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="0.3376%" y="917" width="0.0147%" height="15" fill="rgb(208,68,35)" fg:x="46" fg:w="2"/><text x="0.5876%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="0.3596%" y="917" width="0.0367%" height="15" fill="rgb(232,128,0)" fg:x="49" fg:w="5"/><text x="0.6096%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="0.3816%" y="901" width="0.0147%" height="15" fill="rgb(207,160,47)" fg:x="52" fg:w="2"/><text x="0.6316%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="0.3816%" y="885" width="0.0147%" height="15" fill="rgb(228,23,34)" fg:x="52" fg:w="2"/><text x="0.6316%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="0.3816%" y="869" width="0.0147%" height="15" fill="rgb(218,30,26)" fg:x="52" fg:w="2"/><text x="0.6316%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="0.3816%" y="853" width="0.0147%" height="15" fill="rgb(220,122,19)" fg:x="52" fg:w="2"/><text x="0.6316%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="0.4109%" y="917" width="0.0147%" height="15" fill="rgb(250,228,42)" fg:x="56" fg:w="2"/><text x="0.6609%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.4256%" y="917" width="0.0147%" height="15" fill="rgb(240,193,28)" fg:x="58" fg:w="2"/><text x="0.6756%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="0.4403%" y="917" width="0.0294%" height="15" fill="rgb(216,20,37)" fg:x="60" fg:w="4"/><text x="0.6903%" y="927.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (4 samples, 0.03%)</title><rect x="0.4697%" y="917" width="0.0294%" height="15" fill="rgb(206,188,39)" fg:x="64" fg:w="4"/><text x="0.7197%" y="927.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (4 samples, 0.03%)</title><rect x="0.4990%" y="917" width="0.0294%" height="15" fill="rgb(217,207,13)" fg:x="68" fg:w="4"/><text x="0.7490%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="0.5284%" y="917" width="0.0220%" height="15" fill="rgb(231,73,38)" fg:x="72" fg:w="3"/><text x="0.7784%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="0.5504%" y="917" width="0.0294%" height="15" fill="rgb(225,20,46)" fg:x="75" fg:w="4"/><text x="0.8004%" y="927.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::schema (2 samples, 0.01%)</title><rect x="0.6164%" y="917" width="0.0147%" height="15" fill="rgb(210,31,41)" fg:x="84" fg:w="2"/><text x="0.8664%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="0.6678%" y="917" width="0.0147%" height="15" fill="rgb(221,200,47)" fg:x="91" fg:w="2"/><text x="0.9178%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="0.6825%" y="917" width="0.0367%" height="15" fill="rgb(226,26,5)" fg:x="93" fg:w="5"/><text x="0.9325%" y="927.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.02%)</title><rect x="0.7192%" y="917" width="0.0220%" height="15" fill="rgb(249,33,26)" fg:x="98" fg:w="3"/><text x="0.9692%" y="927.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.02%)</title><rect x="0.7192%" y="901" width="0.0220%" height="15" fill="rgb(235,183,28)" fg:x="98" fg:w="3"/><text x="0.9692%" y="911.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.02%)</title><rect x="0.7192%" y="885" width="0.0220%" height="15" fill="rgb(221,5,38)" fg:x="98" fg:w="3"/><text x="0.9692%" y="895.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.01%)</title><rect x="0.7265%" y="869" width="0.0147%" height="15" fill="rgb(247,18,42)" fg:x="99" fg:w="2"/><text x="0.9765%" y="879.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.01%)</title><rect x="0.7265%" y="853" width="0.0147%" height="15" fill="rgb(241,131,45)" fg:x="99" fg:w="2"/><text x="0.9765%" y="863.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.01%)</title><rect x="0.7265%" y="837" width="0.0147%" height="15" fill="rgb(249,31,29)" fg:x="99" fg:w="2"/><text x="0.9765%" y="847.50"></text></g><g><title>&lt;str as arrow_array::types::bytes::ByteArrayNativeType&gt;::from_bytes_unchecked (5 samples, 0.04%)</title><rect x="0.7412%" y="917" width="0.0367%" height="15" fill="rgb(225,111,53)" fg:x="101" fg:w="5"/><text x="0.9912%" y="927.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (2 samples, 0.01%)</title><rect x="0.8072%" y="917" width="0.0147%" height="15" fill="rgb(238,160,17)" fg:x="110" fg:w="2"/><text x="1.0572%" y="927.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.09%)</title><rect x="0.8439%" y="917" width="0.0881%" height="15" fill="rgb(214,148,48)" fg:x="115" fg:w="12"/><text x="1.0939%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="0.9467%" y="917" width="0.0220%" height="15" fill="rgb(232,36,49)" fg:x="129" fg:w="3"/><text x="1.1967%" y="927.50"></text></g><g><title>__posix_memalign (3 samples, 0.02%)</title><rect x="0.9760%" y="917" width="0.0220%" height="15" fill="rgb(209,103,24)" fg:x="133" fg:w="3"/><text x="1.2260%" y="927.50"></text></g><g><title>_int_free (24 samples, 0.18%)</title><rect x="1.0054%" y="917" width="0.1761%" height="15" fill="rgb(229,88,8)" fg:x="137" fg:w="24"/><text x="1.2554%" y="927.50"></text></g><g><title>_int_malloc (5 samples, 0.04%)</title><rect x="1.1815%" y="917" width="0.0367%" height="15" fill="rgb(213,181,19)" fg:x="161" fg:w="5"/><text x="1.4315%" y="927.50"></text></g><g><title>_int_memalign (2 samples, 0.01%)</title><rect x="1.2182%" y="917" width="0.0147%" height="15" fill="rgb(254,191,54)" fg:x="166" fg:w="2"/><text x="1.4682%" y="927.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="1.2328%" y="917" width="0.0147%" height="15" fill="rgb(241,83,37)" fg:x="168" fg:w="2"/><text x="1.4828%" y="927.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.01%)</title><rect x="1.2475%" y="917" width="0.0147%" height="15" fill="rgb(233,36,39)" fg:x="170" fg:w="2"/><text x="1.4975%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="1.2622%" y="917" width="0.0294%" height="15" fill="rgb(226,3,54)" fg:x="172" fg:w="4"/><text x="1.5122%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="1.2916%" y="917" width="0.0220%" height="15" fill="rgb(245,192,40)" fg:x="176" fg:w="3"/><text x="1.5416%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="1.3209%" y="917" width="0.0220%" height="15" fill="rgb(238,167,29)" fg:x="180" fg:w="3"/><text x="1.5709%" y="927.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (6 samples, 0.04%)</title><rect x="1.3576%" y="917" width="0.0440%" height="15" fill="rgb(232,182,51)" fg:x="185" fg:w="6"/><text x="1.6076%" y="927.50"></text></g><g><title>core::fmt::write (3 samples, 0.02%)</title><rect x="1.4090%" y="917" width="0.0220%" height="15" fill="rgb(231,60,39)" fg:x="192" fg:w="3"/><text x="1.6590%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (5 samples, 0.04%)</title><rect x="1.4383%" y="917" width="0.0367%" height="15" fill="rgb(208,69,12)" fg:x="196" fg:w="5"/><text x="1.6883%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (8 samples, 0.06%)</title><rect x="1.4750%" y="917" width="0.0587%" height="15" fill="rgb(235,93,37)" fg:x="201" fg:w="8"/><text x="1.7250%" y="927.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.01%)</title><rect x="1.5704%" y="917" width="0.0147%" height="15" fill="rgb(213,116,39)" fg:x="214" fg:w="2"/><text x="1.8204%" y="927.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (8 samples, 0.06%)</title><rect x="1.6658%" y="917" width="0.0587%" height="15" fill="rgb(222,207,29)" fg:x="227" fg:w="8"/><text x="1.9158%" y="927.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (3 samples, 0.02%)</title><rect x="1.7245%" y="917" width="0.0220%" height="15" fill="rgb(206,96,30)" fg:x="235" fg:w="3"/><text x="1.9745%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.04%)</title><rect x="1.7539%" y="917" width="0.0367%" height="15" fill="rgb(218,138,4)" fg:x="239" fg:w="5"/><text x="2.0039%" y="927.50"></text></g><g><title>std::io::read_until (2 samples, 0.01%)</title><rect x="1.8199%" y="917" width="0.0147%" height="15" fill="rgb(250,191,14)" fg:x="248" fg:w="2"/><text x="2.0699%" y="927.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TextAnalyzer::token_stream (4 samples, 0.03%)</title><rect x="1.8346%" y="917" width="0.0294%" height="15" fill="rgb(239,60,40)" fg:x="250" fg:w="4"/><text x="2.0846%" y="927.50"></text></g><g><title>[[heap]] (219 samples, 1.61%)</title><rect x="0.3082%" y="933" width="1.6071%" height="15" fill="rgb(206,27,48)" fg:x="42" fg:w="219"/><text x="0.5582%" y="943.50"></text></g><g><title>unlink_chunk.isra.0 (7 samples, 0.05%)</title><rect x="1.8639%" y="917" width="0.0514%" height="15" fill="rgb(225,35,8)" fg:x="254" fg:w="7"/><text x="2.1139%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (44 samples, 0.32%)</title><rect x="1.9153%" y="933" width="0.3229%" height="15" fill="rgb(250,213,24)" fg:x="261" fg:w="44"/><text x="2.1653%" y="943.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="2.2382%" y="917" width="0.0147%" height="15" fill="rgb(247,123,22)" fg:x="305" fg:w="2"/><text x="2.4882%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="2.2969%" y="821" width="0.0147%" height="15" fill="rgb(231,138,38)" fg:x="313" fg:w="2"/><text x="2.5469%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="2.2969%" y="805" width="0.0147%" height="15" fill="rgb(231,145,46)" fg:x="313" fg:w="2"/><text x="2.5469%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.10%)</title><rect x="2.2529%" y="917" width="0.0954%" height="15" fill="rgb(251,118,11)" fg:x="307" fg:w="13"/><text x="2.5029%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.05%)</title><rect x="2.2969%" y="901" width="0.0514%" height="15" fill="rgb(217,147,25)" fg:x="313" fg:w="7"/><text x="2.5469%" y="911.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.05%)</title><rect x="2.2969%" y="885" width="0.0514%" height="15" fill="rgb(247,81,37)" fg:x="313" fg:w="7"/><text x="2.5469%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.05%)</title><rect x="2.2969%" y="869" width="0.0514%" height="15" fill="rgb(209,12,38)" fg:x="313" fg:w="7"/><text x="2.5469%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.05%)</title><rect x="2.2969%" y="853" width="0.0514%" height="15" fill="rgb(227,1,9)" fg:x="313" fg:w="7"/><text x="2.5469%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.05%)</title><rect x="2.2969%" y="837" width="0.0514%" height="15" fill="rgb(248,47,43)" fg:x="313" fg:w="7"/><text x="2.5469%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.04%)</title><rect x="2.3116%" y="821" width="0.0367%" height="15" fill="rgb(221,10,30)" fg:x="315" fg:w="5"/><text x="2.5616%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="2.3483%" y="917" width="0.0294%" height="15" fill="rgb(210,229,1)" fg:x="320" fg:w="4"/><text x="2.5983%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="2.3630%" y="901" width="0.0147%" height="15" fill="rgb(222,148,37)" fg:x="322" fg:w="2"/><text x="2.6130%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="2.3630%" y="885" width="0.0147%" height="15" fill="rgb(234,67,33)" fg:x="322" fg:w="2"/><text x="2.6130%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="2.3630%" y="869" width="0.0147%" height="15" fill="rgb(247,98,35)" fg:x="322" fg:w="2"/><text x="2.6130%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="2.3630%" y="853" width="0.0147%" height="15" fill="rgb(247,138,52)" fg:x="322" fg:w="2"/><text x="2.6130%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="2.3630%" y="837" width="0.0147%" height="15" fill="rgb(213,79,30)" fg:x="322" fg:w="2"/><text x="2.6130%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="2.3630%" y="821" width="0.0147%" height="15" fill="rgb(246,177,23)" fg:x="322" fg:w="2"/><text x="2.6130%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="2.3630%" y="805" width="0.0147%" height="15" fill="rgb(230,62,27)" fg:x="322" fg:w="2"/><text x="2.6130%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="2.3630%" y="789" width="0.0147%" height="15" fill="rgb(216,154,8)" fg:x="322" fg:w="2"/><text x="2.6130%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="2.3630%" y="773" width="0.0147%" height="15" fill="rgb(244,35,45)" fg:x="322" fg:w="2"/><text x="2.6130%" y="783.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="2.3630%" y="757" width="0.0147%" height="15" fill="rgb(251,115,12)" fg:x="322" fg:w="2"/><text x="2.6130%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="2.3776%" y="917" width="0.0147%" height="15" fill="rgb(240,54,50)" fg:x="324" fg:w="2"/><text x="2.6276%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.30%)</title><rect x="2.3996%" y="917" width="0.3009%" height="15" fill="rgb(233,84,52)" fg:x="327" fg:w="41"/><text x="2.6496%" y="927.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="2.7666%" y="917" width="0.0147%" height="15" fill="rgb(207,117,47)" fg:x="377" fg:w="2"/><text x="3.0166%" y="927.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.04%)</title><rect x="2.7959%" y="917" width="0.0367%" height="15" fill="rgb(249,43,39)" fg:x="381" fg:w="5"/><text x="3.0459%" y="927.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (4 samples, 0.03%)</title><rect x="2.8326%" y="917" width="0.0294%" height="15" fill="rgb(209,38,44)" fg:x="386" fg:w="4"/><text x="3.0826%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="2.8693%" y="917" width="0.0147%" height="15" fill="rgb(236,212,23)" fg:x="391" fg:w="2"/><text x="3.1193%" y="927.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.11%)</title><rect x="2.9060%" y="917" width="0.1101%" height="15" fill="rgb(242,79,21)" fg:x="396" fg:w="15"/><text x="3.1560%" y="927.50"></text></g><g><title>__libc_read (3 samples, 0.02%)</title><rect x="3.0234%" y="917" width="0.0220%" height="15" fill="rgb(211,96,35)" fg:x="412" fg:w="3"/><text x="3.2734%" y="927.50"></text></g><g><title>__libc_read (3 samples, 0.02%)</title><rect x="3.0234%" y="901" width="0.0220%" height="15" fill="rgb(253,215,40)" fg:x="412" fg:w="3"/><text x="3.2734%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="3.0234%" y="885" width="0.0220%" height="15" fill="rgb(211,81,21)" fg:x="412" fg:w="3"/><text x="3.2734%" y="895.50"></text></g><g><title>__posix_memalign (3 samples, 0.02%)</title><rect x="3.0454%" y="917" width="0.0220%" height="15" fill="rgb(208,190,38)" fg:x="415" fg:w="3"/><text x="3.2954%" y="927.50"></text></g><g><title>__rdl_alloc (4 samples, 0.03%)</title><rect x="3.0674%" y="917" width="0.0294%" height="15" fill="rgb(235,213,38)" fg:x="418" fg:w="4"/><text x="3.3174%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="3.0748%" y="901" width="0.0220%" height="15" fill="rgb(237,122,38)" fg:x="419" fg:w="3"/><text x="3.3248%" y="911.50"></text></g><g><title>_int_free (12 samples, 0.09%)</title><rect x="3.0968%" y="917" width="0.0881%" height="15" fill="rgb(244,218,35)" fg:x="422" fg:w="12"/><text x="3.3468%" y="927.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="3.1849%" y="917" width="0.0147%" height="15" fill="rgb(240,68,47)" fg:x="434" fg:w="2"/><text x="3.4349%" y="927.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.01%)</title><rect x="3.2069%" y="917" width="0.0147%" height="15" fill="rgb(210,16,53)" fg:x="437" fg:w="2"/><text x="3.4569%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="3.2215%" y="917" width="0.0147%" height="15" fill="rgb(235,124,12)" fg:x="439" fg:w="2"/><text x="3.4715%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.03%)</title><rect x="3.2362%" y="917" width="0.0294%" height="15" fill="rgb(224,169,11)" fg:x="441" fg:w="4"/><text x="3.4862%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.04%)</title><rect x="3.2656%" y="917" width="0.0367%" height="15" fill="rgb(250,166,2)" fg:x="445" fg:w="5"/><text x="3.5156%" y="927.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2 samples, 0.01%)</title><rect x="3.3023%" y="917" width="0.0147%" height="15" fill="rgb(242,216,29)" fg:x="450" fg:w="2"/><text x="3.5523%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="3.3169%" y="917" width="0.0147%" height="15" fill="rgb(230,116,27)" fg:x="452" fg:w="2"/><text x="3.5669%" y="927.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (2 samples, 0.01%)</title><rect x="3.3316%" y="917" width="0.0147%" height="15" fill="rgb(228,99,48)" fg:x="454" fg:w="2"/><text x="3.5816%" y="927.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (3 samples, 0.02%)</title><rect x="3.3463%" y="917" width="0.0220%" height="15" fill="rgb(253,11,6)" fg:x="456" fg:w="3"/><text x="3.5963%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (2 samples, 0.01%)</title><rect x="3.3977%" y="917" width="0.0147%" height="15" fill="rgb(247,143,39)" fg:x="463" fg:w="2"/><text x="3.6477%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (2 samples, 0.01%)</title><rect x="3.3977%" y="901" width="0.0147%" height="15" fill="rgb(236,97,10)" fg:x="463" fg:w="2"/><text x="3.6477%" y="911.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.01%)</title><rect x="3.4123%" y="917" width="0.0147%" height="15" fill="rgb(233,208,19)" fg:x="465" fg:w="2"/><text x="3.6623%" y="927.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (6 samples, 0.04%)</title><rect x="3.4270%" y="917" width="0.0440%" height="15" fill="rgb(216,164,2)" fg:x="467" fg:w="6"/><text x="3.6770%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="3.4564%" y="901" width="0.0147%" height="15" fill="rgb(220,129,5)" fg:x="471" fg:w="2"/><text x="3.7064%" y="911.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (2 samples, 0.01%)</title><rect x="3.4564%" y="885" width="0.0147%" height="15" fill="rgb(242,17,10)" fg:x="471" fg:w="2"/><text x="3.7064%" y="895.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.01%)</title><rect x="3.4564%" y="869" width="0.0147%" height="15" fill="rgb(242,107,0)" fg:x="471" fg:w="2"/><text x="3.7064%" y="879.50"></text></g><g><title>core::fmt::write (4 samples, 0.03%)</title><rect x="3.4857%" y="917" width="0.0294%" height="15" fill="rgb(251,28,31)" fg:x="475" fg:w="4"/><text x="3.7357%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.03%)</title><rect x="3.5151%" y="917" width="0.0294%" height="15" fill="rgb(233,223,10)" fg:x="479" fg:w="4"/><text x="3.7651%" y="927.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.01%)</title><rect x="3.5444%" y="917" width="0.0147%" height="15" fill="rgb(215,21,27)" fg:x="483" fg:w="2"/><text x="3.7944%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::jit::ast::Predicate&gt; (3 samples, 0.02%)</title><rect x="3.5885%" y="917" width="0.0220%" height="15" fill="rgb(232,23,21)" fg:x="489" fg:w="3"/><text x="3.8385%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::handle_explain::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="3.6105%" y="917" width="0.0147%" height="15" fill="rgb(244,5,23)" fg:x="492" fg:w="2"/><text x="3.8605%" y="927.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (2 samples, 0.01%)</title><rect x="3.6472%" y="917" width="0.0147%" height="15" fill="rgb(226,81,46)" fg:x="497" fg:w="2"/><text x="3.8972%" y="927.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (3 samples, 0.02%)</title><rect x="3.6618%" y="917" width="0.0220%" height="15" fill="rgb(247,70,30)" fg:x="499" fg:w="3"/><text x="3.9118%" y="927.50"></text></g><g><title>datafusion_common::cast::as_uint64_array (5 samples, 0.04%)</title><rect x="3.6912%" y="917" width="0.0367%" height="15" fill="rgb(212,68,19)" fg:x="503" fg:w="5"/><text x="3.9412%" y="927.50"></text></g><g><title>datafusion_common::dfschema::DFField::name (2 samples, 0.01%)</title><rect x="3.7352%" y="917" width="0.0147%" height="15" fill="rgb(240,187,13)" fg:x="509" fg:w="2"/><text x="3.9852%" y="927.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (4 samples, 0.03%)</title><rect x="3.7572%" y="917" width="0.0294%" height="15" fill="rgb(223,113,26)" fg:x="512" fg:w="4"/><text x="4.0072%" y="927.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (3 samples, 0.02%)</title><rect x="3.7866%" y="917" width="0.0220%" height="15" fill="rgb(206,192,2)" fg:x="516" fg:w="3"/><text x="4.0366%" y="927.50"></text></g><g><title>do_query::main_inner::{{closure}} (11 samples, 0.08%)</title><rect x="3.8160%" y="917" width="0.0807%" height="15" fill="rgb(241,108,4)" fg:x="520" fg:w="11"/><text x="4.0660%" y="927.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (2 samples, 0.01%)</title><rect x="3.8967%" y="917" width="0.0147%" height="15" fill="rgb(247,173,49)" fg:x="531" fg:w="2"/><text x="4.1467%" y="927.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (2 samples, 0.01%)</title><rect x="3.9187%" y="917" width="0.0147%" height="15" fill="rgb(224,114,35)" fg:x="534" fg:w="2"/><text x="4.1687%" y="927.50"></text></g><g><title>futures_executor::enter::enter (3 samples, 0.02%)</title><rect x="3.9627%" y="917" width="0.0220%" height="15" fill="rgb(245,159,27)" fg:x="540" fg:w="3"/><text x="4.2127%" y="927.50"></text></g><g><title>futures_executor::local_pool::CURRENT_THREAD_NOTIFY::__getit (2 samples, 0.01%)</title><rect x="3.9847%" y="917" width="0.0147%" height="15" fill="rgb(245,172,44)" fg:x="543" fg:w="2"/><text x="4.2347%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="4.0141%" y="917" width="0.0147%" height="15" fill="rgb(236,23,11)" fg:x="547" fg:w="2"/><text x="4.2641%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (78 samples, 0.57%)</title><rect x="4.0288%" y="917" width="0.5724%" height="15" fill="rgb(205,117,38)" fg:x="549" fg:w="78"/><text x="4.2788%" y="927.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="4.6012%" y="917" width="0.0147%" height="15" fill="rgb(237,72,25)" fg:x="627" fg:w="2"/><text x="4.8512%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="4.6305%" y="917" width="0.0220%" height="15" fill="rgb(244,70,9)" fg:x="631" fg:w="3"/><text x="4.8805%" y="927.50"></text></g><g><title>[[stack]] (330 samples, 2.42%)</title><rect x="2.2382%" y="933" width="2.4217%" height="15" fill="rgb(217,125,39)" fg:x="305" fg:w="330"/><text x="2.4882%" y="943.50">[[..</text></g><g><title>[[vdso]] (17 samples, 0.12%)</title><rect x="4.6599%" y="933" width="0.1248%" height="15" fill="rgb(235,36,10)" fg:x="635" fg:w="17"/><text x="4.9099%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="4.7993%" y="917" width="0.0147%" height="15" fill="rgb(251,123,47)" fg:x="654" fg:w="2"/><text x="5.0493%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="4.8286%" y="917" width="0.0147%" height="15" fill="rgb(221,13,13)" fg:x="658" fg:w="2"/><text x="5.0786%" y="927.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="4.8507%" y="917" width="0.0147%" height="15" fill="rgb(238,131,9)" fg:x="661" fg:w="2"/><text x="5.1007%" y="927.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.03%)</title><rect x="4.8653%" y="917" width="0.0294%" height="15" fill="rgb(211,50,8)" fg:x="663" fg:w="4"/><text x="5.1153%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="4.9020%" y="901" width="0.0147%" height="15" fill="rgb(245,182,24)" fg:x="668" fg:w="2"/><text x="5.1520%" y="911.50"></text></g><g><title>[do_query] (5 samples, 0.04%)</title><rect x="4.9020%" y="917" width="0.0367%" height="15" fill="rgb(242,14,37)" fg:x="668" fg:w="5"/><text x="5.1520%" y="927.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="4.9387%" y="917" width="0.0147%" height="15" fill="rgb(246,228,12)" fg:x="673" fg:w="2"/><text x="5.1887%" y="927.50"></text></g><g><title>__calloc (2 samples, 0.01%)</title><rect x="4.9534%" y="917" width="0.0147%" height="15" fill="rgb(213,55,15)" fg:x="675" fg:w="2"/><text x="5.2034%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="4.9681%" y="917" width="0.0220%" height="15" fill="rgb(209,9,3)" fg:x="677" fg:w="3"/><text x="5.2181%" y="927.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="4.9901%" y="917" width="0.0147%" height="15" fill="rgb(230,59,30)" fg:x="680" fg:w="2"/><text x="5.2401%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="5.0048%" y="917" width="0.0294%" height="15" fill="rgb(209,121,21)" fg:x="682" fg:w="4"/><text x="5.2548%" y="927.50"></text></g><g><title>[do_query] (47 samples, 0.34%)</title><rect x="4.7920%" y="933" width="0.3449%" height="15" fill="rgb(220,109,13)" fg:x="653" fg:w="47"/><text x="5.0420%" y="943.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="5.1442%" y="917" width="0.0220%" height="15" fill="rgb(232,18,1)" fg:x="701" fg:w="3"/><text x="5.3942%" y="927.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="5.1369%" y="933" width="0.0440%" height="15" fill="rgb(215,41,42)" fg:x="700" fg:w="6"/><text x="5.3869%" y="943.50"></text></g><g><title>[perf-744268.map] (1,151 samples, 8.45%)</title><rect x="5.1809%" y="933" width="8.4465%" height="15" fill="rgb(224,123,36)" fg:x="706" fg:w="1151"/><text x="5.4309%" y="943.50">[perf-744268..</text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="917" width="0.0440%" height="15" fill="rgb(240,125,3)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="927.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="901" width="0.0440%" height="15" fill="rgb(205,98,50)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="885" width="0.0440%" height="15" fill="rgb(205,185,37)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="869" width="0.0440%" height="15" fill="rgb(238,207,15)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="853" width="0.0440%" height="15" fill="rgb(213,199,42)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="837" width="0.0440%" height="15" fill="rgb(235,201,11)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="821" width="0.0440%" height="15" fill="rgb(207,46,11)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="805" width="0.0440%" height="15" fill="rgb(241,35,35)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="789" width="0.0440%" height="15" fill="rgb(243,32,47)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="773" width="0.0440%" height="15" fill="rgb(247,202,23)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="13.5833%" y="757" width="0.0440%" height="15" fill="rgb(219,102,11)" fg:x="1851" fg:w="6"/><text x="13.8333%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="13.6274%" y="917" width="0.0147%" height="15" fill="rgb(243,110,44)" fg:x="1857" fg:w="2"/><text x="13.8774%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="13.6420%" y="917" width="0.0220%" height="15" fill="rgb(222,74,54)" fg:x="1859" fg:w="3"/><text x="13.8920%" y="927.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (3 samples, 0.02%)</title><rect x="13.6640%" y="917" width="0.0220%" height="15" fill="rgb(216,99,12)" fg:x="1862" fg:w="3"/><text x="13.9140%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="13.6861%" y="837" width="0.0147%" height="15" fill="rgb(226,22,26)" fg:x="1865" fg:w="2"/><text x="13.9361%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="13.6861%" y="821" width="0.0147%" height="15" fill="rgb(217,163,10)" fg:x="1865" fg:w="2"/><text x="13.9361%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="13.6861%" y="805" width="0.0147%" height="15" fill="rgb(213,25,53)" fg:x="1865" fg:w="2"/><text x="13.9361%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="13.6861%" y="789" width="0.0147%" height="15" fill="rgb(252,105,26)" fg:x="1865" fg:w="2"/><text x="13.9361%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="13.6861%" y="773" width="0.0147%" height="15" fill="rgb(220,39,43)" fg:x="1865" fg:w="2"/><text x="13.9361%" y="783.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="13.6861%" y="757" width="0.0147%" height="15" fill="rgb(229,68,48)" fg:x="1865" fg:w="2"/><text x="13.9361%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="13.6861%" y="917" width="0.0220%" height="15" fill="rgb(252,8,32)" fg:x="1865" fg:w="3"/><text x="13.9361%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="13.6861%" y="901" width="0.0220%" height="15" fill="rgb(223,20,43)" fg:x="1865" fg:w="3"/><text x="13.9361%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="13.6861%" y="885" width="0.0220%" height="15" fill="rgb(229,81,49)" fg:x="1865" fg:w="3"/><text x="13.9361%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="13.6861%" y="869" width="0.0220%" height="15" fill="rgb(236,28,36)" fg:x="1865" fg:w="3"/><text x="13.9361%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="13.6861%" y="853" width="0.0220%" height="15" fill="rgb(249,185,26)" fg:x="1865" fg:w="3"/><text x="13.9361%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="13.7081%" y="917" width="0.0367%" height="15" fill="rgb(249,174,33)" fg:x="1868" fg:w="5"/><text x="13.9581%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.04%)</title><rect x="13.7521%" y="917" width="0.0367%" height="15" fill="rgb(233,201,37)" fg:x="1874" fg:w="5"/><text x="14.0021%" y="927.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (2 samples, 0.01%)</title><rect x="13.7888%" y="917" width="0.0147%" height="15" fill="rgb(221,78,26)" fg:x="1879" fg:w="2"/><text x="14.0388%" y="927.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (2 samples, 0.01%)</title><rect x="13.8108%" y="917" width="0.0147%" height="15" fill="rgb(250,127,30)" fg:x="1882" fg:w="2"/><text x="14.0608%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="13.8255%" y="917" width="0.0220%" height="15" fill="rgb(230,49,44)" fg:x="1884" fg:w="3"/><text x="14.0755%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="13.8475%" y="917" width="0.0220%" height="15" fill="rgb(229,67,23)" fg:x="1887" fg:w="3"/><text x="14.0975%" y="927.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.8769%" y="917" width="0.0147%" height="15" fill="rgb(249,83,47)" fg:x="1891" fg:w="2"/><text x="14.1269%" y="927.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (5 samples, 0.04%)</title><rect x="13.8989%" y="917" width="0.0367%" height="15" fill="rgb(215,43,3)" fg:x="1894" fg:w="5"/><text x="14.1489%" y="927.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (3 samples, 0.02%)</title><rect x="13.9356%" y="917" width="0.0220%" height="15" fill="rgb(238,154,13)" fg:x="1899" fg:w="3"/><text x="14.1856%" y="927.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.03%)</title><rect x="13.9576%" y="917" width="0.0294%" height="15" fill="rgb(219,56,2)" fg:x="1902" fg:w="4"/><text x="14.2076%" y="927.50"></text></g><g><title>[do_query] (4 samples, 0.03%)</title><rect x="13.9576%" y="901" width="0.0294%" height="15" fill="rgb(233,0,4)" fg:x="1902" fg:w="4"/><text x="14.2076%" y="911.50"></text></g><g><title>__calloc (4 samples, 0.03%)</title><rect x="13.9576%" y="885" width="0.0294%" height="15" fill="rgb(235,30,7)" fg:x="1902" fg:w="4"/><text x="14.2076%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="14.0016%" y="917" width="0.0220%" height="15" fill="rgb(250,79,13)" fg:x="1908" fg:w="3"/><text x="14.2516%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="14.0236%" y="917" width="0.0147%" height="15" fill="rgb(211,146,34)" fg:x="1911" fg:w="2"/><text x="14.2736%" y="927.50"></text></g><g><title>&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (4 samples, 0.03%)</title><rect x="14.0603%" y="917" width="0.0294%" height="15" fill="rgb(228,22,38)" fg:x="1916" fg:w="4"/><text x="14.3103%" y="927.50"></text></g><g><title>std::io::BufRead::read_line (3 samples, 0.02%)</title><rect x="14.0677%" y="901" width="0.0220%" height="15" fill="rgb(235,168,5)" fg:x="1917" fg:w="3"/><text x="14.3177%" y="911.50"></text></g><g><title>std::io::append_to_string (3 samples, 0.02%)</title><rect x="14.0677%" y="885" width="0.0220%" height="15" fill="rgb(221,155,16)" fg:x="1917" fg:w="3"/><text x="14.3177%" y="895.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (2 samples, 0.01%)</title><rect x="14.0897%" y="901" width="0.0147%" height="15" fill="rgb(215,215,53)" fg:x="1920" fg:w="2"/><text x="14.3397%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="14.0897%" y="885" width="0.0147%" height="15" fill="rgb(223,4,10)" fg:x="1920" fg:w="2"/><text x="14.3397%" y="895.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (2 samples, 0.01%)</title><rect x="14.0897%" y="869" width="0.0147%" height="15" fill="rgb(234,103,6)" fg:x="1920" fg:w="2"/><text x="14.3397%" y="879.50"></text></g><g><title>[do_query] (3 samples, 0.02%)</title><rect x="14.0897%" y="917" width="0.0220%" height="15" fill="rgb(227,97,0)" fg:x="1920" fg:w="3"/><text x="14.3397%" y="927.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="14.1117%" y="917" width="0.0147%" height="15" fill="rgb(234,150,53)" fg:x="1923" fg:w="2"/><text x="14.3617%" y="927.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.14%)</title><rect x="14.1264%" y="917" width="0.1394%" height="15" fill="rgb(228,201,54)" fg:x="1925" fg:w="19"/><text x="14.3764%" y="927.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.03%)</title><rect x="14.2658%" y="917" width="0.0294%" height="15" fill="rgb(222,22,37)" fg:x="1944" fg:w="4"/><text x="14.5158%" y="927.50"></text></g><g><title>__calloc (2 samples, 0.01%)</title><rect x="14.2951%" y="917" width="0.0147%" height="15" fill="rgb(237,53,32)" fg:x="1948" fg:w="2"/><text x="14.5451%" y="927.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="14.3098%" y="917" width="0.0294%" height="15" fill="rgb(233,25,53)" fg:x="1950" fg:w="4"/><text x="14.5598%" y="927.50"></text></g><g><title>__posix_memalign (2 samples, 0.01%)</title><rect x="14.3392%" y="917" width="0.0147%" height="15" fill="rgb(210,40,34)" fg:x="1954" fg:w="2"/><text x="14.5892%" y="927.50"></text></g><g><title>__rdl_alloc (15 samples, 0.11%)</title><rect x="14.3539%" y="917" width="0.1101%" height="15" fill="rgb(241,220,44)" fg:x="1956" fg:w="15"/><text x="14.6039%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.07%)</title><rect x="14.3905%" y="901" width="0.0734%" height="15" fill="rgb(235,28,35)" fg:x="1961" fg:w="10"/><text x="14.6405%" y="911.50"></text></g><g><title>__rdl_alloc_zeroed (2 samples, 0.01%)</title><rect x="14.4639%" y="917" width="0.0147%" height="15" fill="rgb(210,56,17)" fg:x="1971" fg:w="2"/><text x="14.7139%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (2 samples, 0.01%)</title><rect x="14.4639%" y="901" width="0.0147%" height="15" fill="rgb(224,130,29)" fg:x="1971" fg:w="2"/><text x="14.7139%" y="911.50"></text></g><g><title>__rdl_realloc (4 samples, 0.03%)</title><rect x="14.4786%" y="917" width="0.0294%" height="15" fill="rgb(235,212,8)" fg:x="1973" fg:w="4"/><text x="14.7286%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.03%)</title><rect x="14.4786%" y="901" width="0.0294%" height="15" fill="rgb(223,33,50)" fg:x="1973" fg:w="4"/><text x="14.7286%" y="911.50"></text></g><g><title>_int_free (53 samples, 0.39%)</title><rect x="14.5080%" y="917" width="0.3889%" height="15" fill="rgb(219,149,13)" fg:x="1977" fg:w="53"/><text x="14.7580%" y="927.50"></text></g><g><title>_int_malloc (24 samples, 0.18%)</title><rect x="14.8969%" y="917" width="0.1761%" height="15" fill="rgb(250,156,29)" fg:x="2030" fg:w="24"/><text x="15.1469%" y="927.50"></text></g><g><title>_int_memalign (10 samples, 0.07%)</title><rect x="15.0730%" y="917" width="0.0734%" height="15" fill="rgb(216,193,19)" fg:x="2054" fg:w="10"/><text x="15.3230%" y="927.50"></text></g><g><title>_int_realloc (7 samples, 0.05%)</title><rect x="15.1464%" y="917" width="0.0514%" height="15" fill="rgb(216,135,14)" fg:x="2064" fg:w="7"/><text x="15.3964%" y="927.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="15.1978%" y="917" width="0.0147%" height="15" fill="rgb(241,47,5)" fg:x="2071" fg:w="2"/><text x="15.4478%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="15.2271%" y="917" width="0.0294%" height="15" fill="rgb(233,42,35)" fg:x="2075" fg:w="4"/><text x="15.4771%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="15.2565%" y="917" width="0.0147%" height="15" fill="rgb(231,13,6)" fg:x="2079" fg:w="2"/><text x="15.5065%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.06%)</title><rect x="15.2712%" y="917" width="0.0587%" height="15" fill="rgb(207,181,40)" fg:x="2081" fg:w="8"/><text x="15.5212%" y="927.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (4 samples, 0.03%)</title><rect x="15.3299%" y="917" width="0.0294%" height="15" fill="rgb(254,173,49)" fg:x="2089" fg:w="4"/><text x="15.5799%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.03%)</title><rect x="15.3592%" y="917" width="0.0294%" height="15" fill="rgb(221,1,38)" fg:x="2093" fg:w="4"/><text x="15.6092%" y="927.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (2 samples, 0.01%)</title><rect x="15.4032%" y="917" width="0.0147%" height="15" fill="rgb(206,124,46)" fg:x="2099" fg:w="2"/><text x="15.6532%" y="927.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (2 samples, 0.01%)</title><rect x="15.4179%" y="917" width="0.0147%" height="15" fill="rgb(249,21,11)" fg:x="2101" fg:w="2"/><text x="15.6679%" y="927.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (2 samples, 0.01%)</title><rect x="15.4326%" y="917" width="0.0147%" height="15" fill="rgb(222,201,40)" fg:x="2103" fg:w="2"/><text x="15.6826%" y="927.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (2 samples, 0.01%)</title><rect x="15.4546%" y="917" width="0.0147%" height="15" fill="rgb(235,61,29)" fg:x="2106" fg:w="2"/><text x="15.7046%" y="927.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (2 samples, 0.01%)</title><rect x="15.4693%" y="917" width="0.0147%" height="15" fill="rgb(219,207,3)" fg:x="2108" fg:w="2"/><text x="15.7193%" y="927.50"></text></g><g><title>arrow_schema::field::Field::new (3 samples, 0.02%)</title><rect x="15.4913%" y="917" width="0.0220%" height="15" fill="rgb(222,56,46)" fg:x="2111" fg:w="3"/><text x="15.7413%" y="927.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (2 samples, 0.01%)</title><rect x="15.5207%" y="917" width="0.0147%" height="15" fill="rgb(239,76,54)" fg:x="2115" fg:w="2"/><text x="15.7707%" y="927.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (4 samples, 0.03%)</title><rect x="15.5427%" y="917" width="0.0294%" height="15" fill="rgb(231,124,27)" fg:x="2118" fg:w="4"/><text x="15.7927%" y="927.50"></text></g><g><title>art_tree::node::key_index_sse (2 samples, 0.01%)</title><rect x="15.5720%" y="917" width="0.0147%" height="15" fill="rgb(249,195,6)" fg:x="2122" fg:w="2"/><text x="15.8220%" y="927.50"></text></g><g><title>chrono::offset::utc::Utc::now (2 samples, 0.01%)</title><rect x="15.5867%" y="917" width="0.0147%" height="15" fill="rgb(237,174,47)" fg:x="2124" fg:w="2"/><text x="15.8367%" y="927.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.01%)</title><rect x="15.6014%" y="917" width="0.0147%" height="15" fill="rgb(206,201,31)" fg:x="2126" fg:w="2"/><text x="15.8514%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.03%)</title><rect x="15.6234%" y="917" width="0.0294%" height="15" fill="rgb(231,57,52)" fg:x="2129" fg:w="4"/><text x="15.8734%" y="927.50"></text></g><g><title>core::fmt::write (9 samples, 0.07%)</title><rect x="15.6601%" y="917" width="0.0660%" height="15" fill="rgb(248,177,22)" fg:x="2134" fg:w="9"/><text x="15.9101%" y="927.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="15.7115%" y="901" width="0.0147%" height="15" fill="rgb(215,211,37)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="911.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="15.7115%" y="885" width="0.0147%" height="15" fill="rgb(241,128,51)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="895.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="15.7115%" y="869" width="0.0147%" height="15" fill="rgb(227,165,31)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="879.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="15.7115%" y="853" width="0.0147%" height="15" fill="rgb(228,167,24)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="863.50"></text></g><g><title>__libc_write (2 samples, 0.01%)</title><rect x="15.7115%" y="837" width="0.0147%" height="15" fill="rgb(228,143,12)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="847.50"></text></g><g><title>__libc_write (2 samples, 0.01%)</title><rect x="15.7115%" y="821" width="0.0147%" height="15" fill="rgb(249,149,8)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="15.7115%" y="805" width="0.0147%" height="15" fill="rgb(243,35,44)" fg:x="2141" fg:w="2"/><text x="15.9615%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="15.7261%" y="917" width="0.0220%" height="15" fill="rgb(246,89,9)" fg:x="2143" fg:w="3"/><text x="15.9761%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (5 samples, 0.04%)</title><rect x="15.7555%" y="917" width="0.0367%" height="15" fill="rgb(233,213,13)" fg:x="2147" fg:w="5"/><text x="16.0055%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (8 samples, 0.06%)</title><rect x="15.8069%" y="917" width="0.0587%" height="15" fill="rgb(233,141,41)" fg:x="2154" fg:w="8"/><text x="16.0569%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (2 samples, 0.01%)</title><rect x="15.8656%" y="917" width="0.0147%" height="15" fill="rgb(239,167,4)" fg:x="2162" fg:w="2"/><text x="16.1156%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (2 samples, 0.01%)</title><rect x="15.8656%" y="901" width="0.0147%" height="15" fill="rgb(209,217,16)" fg:x="2162" fg:w="2"/><text x="16.1156%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (5 samples, 0.04%)</title><rect x="15.9023%" y="917" width="0.0367%" height="15" fill="rgb(219,88,35)" fg:x="2167" fg:w="5"/><text x="16.1523%" y="927.50"></text></g><g><title>dashmap::util::ptr_size_bits (2 samples, 0.01%)</title><rect x="15.9610%" y="917" width="0.0147%" height="15" fill="rgb(220,193,23)" fg:x="2175" fg:w="2"/><text x="16.2110%" y="927.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (2 samples, 0.01%)</title><rect x="15.9756%" y="917" width="0.0147%" height="15" fill="rgb(230,90,52)" fg:x="2177" fg:w="2"/><text x="16.2256%" y="927.50"></text></g><g><title>datafusion_common::column::Column::normalize_with_schemas (2 samples, 0.01%)</title><rect x="15.9903%" y="917" width="0.0147%" height="15" fill="rgb(252,106,19)" fg:x="2179" fg:w="2"/><text x="16.2403%" y="927.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (2 samples, 0.01%)</title><rect x="16.0197%" y="917" width="0.0147%" height="15" fill="rgb(206,74,20)" fg:x="2183" fg:w="2"/><text x="16.2697%" y="927.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (6 samples, 0.04%)</title><rect x="16.0784%" y="821" width="0.0440%" height="15" fill="rgb(230,138,44)" fg:x="2191" fg:w="6"/><text x="16.3284%" y="831.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="16.0931%" y="805" width="0.0294%" height="15" fill="rgb(235,182,43)" fg:x="2193" fg:w="4"/><text x="16.3431%" y="815.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (4 samples, 0.03%)</title><rect x="16.1224%" y="821" width="0.0294%" height="15" fill="rgb(242,16,51)" fg:x="2197" fg:w="4"/><text x="16.3724%" y="831.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (9 samples, 0.07%)</title><rect x="16.1518%" y="821" width="0.0660%" height="15" fill="rgb(248,9,4)" fg:x="2201" fg:w="9"/><text x="16.4018%" y="831.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::predicate (4 samples, 0.03%)</title><rect x="16.1884%" y="805" width="0.0294%" height="15" fill="rgb(210,31,22)" fg:x="2206" fg:w="4"/><text x="16.4384%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.07%)</title><rect x="16.2178%" y="821" width="0.0734%" height="15" fill="rgb(239,54,39)" fg:x="2210" fg:w="10"/><text x="16.4678%" y="831.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.05%)</title><rect x="16.2398%" y="805" width="0.0514%" height="15" fill="rgb(230,99,41)" fg:x="2213" fg:w="7"/><text x="16.4898%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.04%)</title><rect x="16.2472%" y="789" width="0.0440%" height="15" fill="rgb(253,106,12)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="773" width="0.0440%" height="15" fill="rgb(213,46,41)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="757" width="0.0440%" height="15" fill="rgb(215,133,35)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="741" width="0.0440%" height="15" fill="rgb(213,28,5)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="725" width="0.0440%" height="15" fill="rgb(215,77,49)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="709" width="0.0440%" height="15" fill="rgb(248,100,22)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="693" width="0.0440%" height="15" fill="rgb(208,67,9)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="677" width="0.0440%" height="15" fill="rgb(219,133,21)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="661" width="0.0440%" height="15" fill="rgb(246,46,29)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="645" width="0.0440%" height="15" fill="rgb(246,185,52)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="629" width="0.0440%" height="15" fill="rgb(252,136,11)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="613" width="0.0440%" height="15" fill="rgb(219,138,53)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="16.2472%" y="597" width="0.0440%" height="15" fill="rgb(211,51,23)" fg:x="2214" fg:w="6"/><text x="16.4972%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.04%)</title><rect x="16.2545%" y="581" width="0.0367%" height="15" fill="rgb(247,221,28)" fg:x="2215" fg:w="5"/><text x="16.5045%" y="591.50"></text></g><g><title>__GI___libc_malloc (41 samples, 0.30%)</title><rect x="16.3279%" y="789" width="0.3009%" height="15" fill="rgb(251,222,45)" fg:x="2225" fg:w="41"/><text x="16.5779%" y="799.50"></text></g><g><title>_int_malloc (28 samples, 0.21%)</title><rect x="16.4233%" y="773" width="0.2055%" height="15" fill="rgb(217,162,53)" fg:x="2238" fg:w="28"/><text x="16.6733%" y="783.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::children (43 samples, 0.32%)</title><rect x="16.3205%" y="805" width="0.3156%" height="15" fill="rgb(229,93,14)" fg:x="2224" fg:w="43"/><text x="16.5705%" y="815.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (9 samples, 0.07%)</title><rect x="16.6361%" y="805" width="0.0660%" height="15" fill="rgb(209,67,49)" fg:x="2267" fg:w="9"/><text x="16.8861%" y="815.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="16.7315%" y="773" width="0.0220%" height="15" fill="rgb(213,87,29)" fg:x="2280" fg:w="3"/><text x="16.9815%" y="783.50"></text></g><g><title>_int_free (9 samples, 0.07%)</title><rect x="16.7535%" y="773" width="0.0660%" height="15" fill="rgb(205,151,52)" fg:x="2283" fg:w="9"/><text x="17.0035%" y="783.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (110 samples, 0.81%)</title><rect x="16.0564%" y="853" width="0.8072%" height="15" fill="rgb(253,215,39)" fg:x="2188" fg:w="110"/><text x="16.3064%" y="863.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (110 samples, 0.81%)</title><rect x="16.0564%" y="837" width="0.8072%" height="15" fill="rgb(221,220,41)" fg:x="2188" fg:w="110"/><text x="16.3064%" y="847.50"></text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (78 samples, 0.57%)</title><rect x="16.2912%" y="821" width="0.5724%" height="15" fill="rgb(218,133,21)" fg:x="2220" fg:w="78"/><text x="16.5412%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (21 samples, 0.15%)</title><rect x="16.7095%" y="805" width="0.1541%" height="15" fill="rgb(221,193,43)" fg:x="2277" fg:w="21"/><text x="16.9595%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (19 samples, 0.14%)</title><rect x="16.7242%" y="789" width="0.1394%" height="15" fill="rgb(240,128,52)" fg:x="2279" fg:w="19"/><text x="16.9742%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (6 samples, 0.04%)</title><rect x="16.8195%" y="773" width="0.0440%" height="15" fill="rgb(253,114,12)" fg:x="2292" fg:w="6"/><text x="17.0695%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="805" width="0.0514%" height="15" fill="rgb(215,223,47)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="789" width="0.0514%" height="15" fill="rgb(248,225,23)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="773" width="0.0514%" height="15" fill="rgb(250,108,0)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="757" width="0.0514%" height="15" fill="rgb(228,208,7)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="741" width="0.0514%" height="15" fill="rgb(244,45,10)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="725" width="0.0514%" height="15" fill="rgb(207,125,25)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="709" width="0.0514%" height="15" fill="rgb(210,195,18)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="693" width="0.0514%" height="15" fill="rgb(249,80,12)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="677" width="0.0514%" height="15" fill="rgb(221,65,9)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="661" width="0.0514%" height="15" fill="rgb(235,49,36)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="22.7269%" y="645" width="0.0514%" height="15" fill="rgb(225,32,20)" fg:x="3097" fg:w="7"/><text x="22.9769%" y="655.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="22.7783%" y="805" width="0.0220%" height="15" fill="rgb(215,141,46)" fg:x="3104" fg:w="3"/><text x="23.0283%" y="815.50"></text></g><g><title>&lt;dashmap::iter::OwningIter&lt;K,V,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (811 samples, 5.95%)</title><rect x="16.8636%" y="821" width="5.9514%" height="15" fill="rgb(250,160,47)" fg:x="2298" fg:w="811"/><text x="17.1136%" y="831.50">&lt;dashmap..</text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="22.8003%" y="805" width="0.0147%" height="15" fill="rgb(216,222,40)" fg:x="3107" fg:w="2"/><text x="23.0503%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="22.8150%" y="821" width="0.0440%" height="15" fill="rgb(234,217,39)" fg:x="3109" fg:w="6"/><text x="23.0650%" y="831.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="22.8444%" y="805" width="0.0147%" height="15" fill="rgb(207,178,40)" fg:x="3113" fg:w="2"/><text x="23.0944%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="22.9838%" y="773" width="0.0147%" height="15" fill="rgb(221,136,13)" fg:x="3132" fg:w="2"/><text x="23.2338%" y="783.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (20 samples, 0.15%)</title><rect x="22.8590%" y="821" width="0.1468%" height="15" fill="rgb(249,199,10)" fg:x="3115" fg:w="20"/><text x="23.1090%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.08%)</title><rect x="22.9251%" y="805" width="0.0807%" height="15" fill="rgb(249,222,13)" fg:x="3124" fg:w="11"/><text x="23.1751%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.04%)</title><rect x="22.9618%" y="789" width="0.0440%" height="15" fill="rgb(244,185,38)" fg:x="3129" fg:w="6"/><text x="23.2118%" y="799.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="23.0425%" y="805" width="0.0220%" height="15" fill="rgb(236,202,9)" fg:x="3140" fg:w="3"/><text x="23.2925%" y="815.50"></text></g><g><title>_int_free (9 samples, 0.07%)</title><rect x="23.0718%" y="805" width="0.0660%" height="15" fill="rgb(250,229,37)" fg:x="3144" fg:w="9"/><text x="23.3218%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.02%)</title><rect x="23.2113%" y="789" width="0.0220%" height="15" fill="rgb(206,174,23)" fg:x="3163" fg:w="3"/><text x="23.4613%" y="799.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="23.2920%" y="757" width="0.0367%" height="15" fill="rgb(211,33,43)" fg:x="3174" fg:w="5"/><text x="23.5420%" y="767.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (25 samples, 0.18%)</title><rect x="23.1526%" y="805" width="0.1835%" height="15" fill="rgb(245,58,50)" fg:x="3155" fg:w="25"/><text x="23.4026%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.10%)</title><rect x="23.2333%" y="789" width="0.1027%" height="15" fill="rgb(244,68,36)" fg:x="3166" fg:w="14"/><text x="23.4833%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.07%)</title><rect x="23.2700%" y="773" width="0.0660%" height="15" fill="rgb(232,229,15)" fg:x="3171" fg:w="9"/><text x="23.5200%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="773" width="0.0220%" height="15" fill="rgb(254,30,23)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="757" width="0.0220%" height="15" fill="rgb(235,160,14)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="741" width="0.0220%" height="15" fill="rgb(212,155,44)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="725" width="0.0220%" height="15" fill="rgb(226,2,50)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="709" width="0.0220%" height="15" fill="rgb(234,177,6)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="693" width="0.0220%" height="15" fill="rgb(217,24,9)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="677" width="0.0220%" height="15" fill="rgb(220,13,46)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="661" width="0.0220%" height="15" fill="rgb(239,221,27)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="645" width="0.0220%" height="15" fill="rgb(222,198,25)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="629" width="0.0220%" height="15" fill="rgb(211,99,13)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="26.3888%" y="613" width="0.0220%" height="15" fill="rgb(232,111,31)" fg:x="3596" fg:w="3"/><text x="26.6388%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="26.4108%" y="773" width="0.0147%" height="15" fill="rgb(245,82,37)" fg:x="3599" fg:w="2"/><text x="26.6608%" y="783.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (455 samples, 3.34%)</title><rect x="23.3360%" y="805" width="3.3390%" height="15" fill="rgb(227,149,46)" fg:x="3180" fg:w="455"/><text x="23.5860%" y="815.50">das..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (453 samples, 3.32%)</title><rect x="23.3507%" y="789" width="3.3243%" height="15" fill="rgb(218,36,50)" fg:x="3182" fg:w="453"/><text x="23.6007%" y="799.50">&lt;al..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (34 samples, 0.25%)</title><rect x="26.4255%" y="773" width="0.2495%" height="15" fill="rgb(226,80,48)" fg:x="3601" fg:w="34"/><text x="26.6755%" y="783.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (1,454 samples, 10.67%)</title><rect x="16.0564%" y="885" width="10.6700%" height="15" fill="rgb(238,224,15)" fg:x="2188" fg:w="1454"/><text x="16.3064%" y="895.50">&lt;fastfull_search..</text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (1,454 samples, 10.67%)</title><rect x="16.0564%" y="869" width="10.6700%" height="15" fill="rgb(241,136,10)" fg:x="2188" fg:w="1454"/><text x="16.3064%" y="879.50">&lt;fastfull_search..</text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (1,344 samples, 9.86%)</title><rect x="16.8636%" y="853" width="9.8628%" height="15" fill="rgb(208,32,45)" fg:x="2298" fg:w="1344"/><text x="17.1136%" y="863.50">&lt;fastfull_sear..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (1,344 samples, 9.86%)</title><rect x="16.8636%" y="837" width="9.8628%" height="15" fill="rgb(207,135,9)" fg:x="2298" fg:w="1344"/><text x="17.1136%" y="847.50">datafusion::ph..</text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (507 samples, 3.72%)</title><rect x="23.0058%" y="821" width="3.7206%" height="15" fill="rgb(206,86,44)" fg:x="3135" fg:w="507"/><text x="23.2558%" y="831.50">fast..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::new (7 samples, 0.05%)</title><rect x="26.6750%" y="805" width="0.0514%" height="15" fill="rgb(245,177,15)" fg:x="3635" fg:w="7"/><text x="26.9250%" y="815.50"></text></g><g><title>_int_free (45 samples, 0.33%)</title><rect x="26.7264%" y="741" width="0.3302%" height="15" fill="rgb(206,64,50)" fg:x="3642" fg:w="45"/><text x="26.9764%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="725" width="0.0294%" height="15" fill="rgb(234,36,40)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="709" width="0.0294%" height="15" fill="rgb(213,64,8)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="693" width="0.0294%" height="15" fill="rgb(210,75,36)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="677" width="0.0294%" height="15" fill="rgb(229,88,21)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="661" width="0.0294%" height="15" fill="rgb(252,204,47)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="645" width="0.0294%" height="15" fill="rgb(208,77,27)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="629" width="0.0294%" height="15" fill="rgb(221,76,26)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="613" width="0.0294%" height="15" fill="rgb(225,139,18)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="597" width="0.0294%" height="15" fill="rgb(230,137,11)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="581" width="0.0294%" height="15" fill="rgb(212,28,1)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="28.9425%" y="565" width="0.0294%" height="15" fill="rgb(248,164,17)" fg:x="3944" fg:w="4"/><text x="29.1925%" y="575.50"></text></g><g><title>malloc_consolidate (232 samples, 1.70%)</title><rect x="28.9719%" y="725" width="1.7025%" height="15" fill="rgb(222,171,42)" fg:x="3948" fg:w="232"/><text x="29.2219%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (9 samples, 0.07%)</title><rect x="30.6084%" y="709" width="0.0660%" height="15" fill="rgb(243,84,45)" fg:x="4171" fg:w="9"/><text x="30.8584%" y="719.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (559 samples, 4.10%)</title><rect x="26.7264%" y="837" width="4.1022%" height="15" fill="rgb(252,49,23)" fg:x="3642" fg:w="559"/><text x="26.9764%" y="847.50">&lt;T a..</text></g><g><title>__rdl_alloc (559 samples, 4.10%)</title><rect x="26.7264%" y="821" width="4.1022%" height="15" fill="rgb(215,19,7)" fg:x="3642" fg:w="559"/><text x="26.9764%" y="831.50">__rd..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (559 samples, 4.10%)</title><rect x="26.7264%" y="805" width="4.1022%" height="15" fill="rgb(238,81,41)" fg:x="3642" fg:w="559"/><text x="26.9764%" y="815.50">std:..</text></g><g><title>std::sys::unix::alloc::aligned_malloc (559 samples, 4.10%)</title><rect x="26.7264%" y="789" width="4.1022%" height="15" fill="rgb(210,199,37)" fg:x="3642" fg:w="559"/><text x="26.9764%" y="799.50">std:..</text></g><g><title>__posix_memalign (559 samples, 4.10%)</title><rect x="26.7264%" y="773" width="4.1022%" height="15" fill="rgb(244,192,49)" fg:x="3642" fg:w="559"/><text x="26.9764%" y="783.50">__po..</text></g><g><title>_int_memalign (559 samples, 4.10%)</title><rect x="26.7264%" y="757" width="4.1022%" height="15" fill="rgb(226,211,11)" fg:x="3642" fg:w="559"/><text x="26.9764%" y="767.50">_int..</text></g><g><title>_int_malloc (514 samples, 3.77%)</title><rect x="27.0566%" y="741" width="3.7719%" height="15" fill="rgb(236,162,54)" fg:x="3687" fg:w="514"/><text x="27.3066%" y="751.50">_int..</text></g><g><title>unlink_chunk.isra.0 (21 samples, 0.15%)</title><rect x="30.6744%" y="725" width="0.1541%" height="15" fill="rgb(220,229,9)" fg:x="4180" fg:w="21"/><text x="30.9244%" y="735.50"></text></g><g><title>__rdl_alloc (59 samples, 0.43%)</title><rect x="30.8285%" y="837" width="0.4330%" height="15" fill="rgb(250,87,22)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (59 samples, 0.43%)</title><rect x="30.8285%" y="821" width="0.4330%" height="15" fill="rgb(239,43,17)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="831.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (59 samples, 0.43%)</title><rect x="30.8285%" y="805" width="0.4330%" height="15" fill="rgb(231,177,25)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="815.50"></text></g><g><title>__posix_memalign (59 samples, 0.43%)</title><rect x="30.8285%" y="789" width="0.4330%" height="15" fill="rgb(219,179,1)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="799.50"></text></g><g><title>_int_memalign (59 samples, 0.43%)</title><rect x="30.8285%" y="773" width="0.4330%" height="15" fill="rgb(238,219,53)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="783.50"></text></g><g><title>_int_malloc (59 samples, 0.43%)</title><rect x="30.8285%" y="757" width="0.4330%" height="15" fill="rgb(232,167,36)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="767.50"></text></g><g><title>malloc_consolidate (59 samples, 0.43%)</title><rect x="30.8285%" y="741" width="0.4330%" height="15" fill="rgb(244,19,51)" fg:x="4201" fg:w="59"/><text x="31.0785%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (5 samples, 0.04%)</title><rect x="31.2248%" y="725" width="0.0367%" height="15" fill="rgb(224,6,22)" fg:x="4255" fg:w="5"/><text x="31.4748%" y="735.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (639 samples, 4.69%)</title><rect x="26.7264%" y="885" width="4.6892%" height="15" fill="rgb(224,145,5)" fg:x="3642" fg:w="639"/><text x="26.9764%" y="895.50">&lt;futu..</text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (639 samples, 4.69%)</title><rect x="26.7264%" y="869" width="4.6892%" height="15" fill="rgb(234,130,49)" fg:x="3642" fg:w="639"/><text x="26.9764%" y="879.50">&lt;fast..</text></g><g><title>fastfull_search::batch::posting_batch::PostingBatch::project_with_predicate (639 samples, 4.69%)</title><rect x="26.7264%" y="853" width="4.6892%" height="15" fill="rgb(254,6,2)" fg:x="3642" fg:w="639"/><text x="26.9764%" y="863.50">fastf..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (21 samples, 0.15%)</title><rect x="31.2615%" y="837" width="0.1541%" height="15" fill="rgb(208,96,46)" fg:x="4260" fg:w="21"/><text x="31.5115%" y="847.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (9 samples, 0.07%)</title><rect x="31.3495%" y="821" width="0.0660%" height="15" fill="rgb(239,3,39)" fg:x="4272" fg:w="9"/><text x="31.5995%" y="831.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (3 samples, 0.02%)</title><rect x="31.3936%" y="805" width="0.0220%" height="15" fill="rgb(233,210,1)" fg:x="4278" fg:w="3"/><text x="31.6436%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="31.4963%" y="853" width="0.0147%" height="15" fill="rgb(244,137,37)" fg:x="4292" fg:w="2"/><text x="31.7463%" y="863.50"></text></g><g><title>_int_free (9 samples, 0.07%)</title><rect x="31.5183%" y="853" width="0.0660%" height="15" fill="rgb(240,136,2)" fg:x="4295" fg:w="9"/><text x="31.7683%" y="863.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.01%)</title><rect x="31.5844%" y="837" width="0.0147%" height="15" fill="rgb(239,18,37)" fg:x="4304" fg:w="2"/><text x="31.8344%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="31.5844%" y="821" width="0.0147%" height="15" fill="rgb(218,185,22)" fg:x="4304" fg:w="2"/><text x="31.8344%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="31.5844%" y="805" width="0.0147%" height="15" fill="rgb(225,218,4)" fg:x="4304" fg:w="2"/><text x="31.8344%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="31.5844%" y="789" width="0.0147%" height="15" fill="rgb(230,182,32)" fg:x="4304" fg:w="2"/><text x="31.8344%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="31.5844%" y="773" width="0.0147%" height="15" fill="rgb(242,56,43)" fg:x="4304" fg:w="2"/><text x="31.8344%" y="783.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (3 samples, 0.02%)</title><rect x="31.5990%" y="837" width="0.0220%" height="15" fill="rgb(233,99,24)" fg:x="4306" fg:w="3"/><text x="31.8490%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.01%)</title><rect x="31.6064%" y="821" width="0.0147%" height="15" fill="rgb(234,209,42)" fg:x="4307" fg:w="2"/><text x="31.8564%" y="831.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.01%)</title><rect x="31.6064%" y="805" width="0.0147%" height="15" fill="rgb(227,7,12)" fg:x="4307" fg:w="2"/><text x="31.8564%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="31.6064%" y="789" width="0.0147%" height="15" fill="rgb(245,203,43)" fg:x="4307" fg:w="2"/><text x="31.8564%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="31.6064%" y="773" width="0.0147%" height="15" fill="rgb(238,205,33)" fg:x="4307" fg:w="2"/><text x="31.8564%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="31.6064%" y="757" width="0.0147%" height="15" fill="rgb(231,56,7)" fg:x="4307" fg:w="2"/><text x="31.8564%" y="767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.01%)</title><rect x="31.6064%" y="741" width="0.0147%" height="15" fill="rgb(244,186,29)" fg:x="4307" fg:w="2"/><text x="31.8564%" y="751.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="31.6577%" y="805" width="0.0220%" height="15" fill="rgb(234,111,31)" fg:x="4314" fg:w="3"/><text x="31.9077%" y="815.50"></text></g><g><title>core::fmt::Formatter::new (2 samples, 0.01%)</title><rect x="31.6798%" y="805" width="0.0147%" height="15" fill="rgb(241,149,10)" fg:x="4317" fg:w="2"/><text x="31.9298%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.01%)</title><rect x="31.6944%" y="805" width="0.0147%" height="15" fill="rgb(249,206,44)" fg:x="4319" fg:w="2"/><text x="31.9444%" y="815.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.01%)</title><rect x="31.6944%" y="789" width="0.0147%" height="15" fill="rgb(251,153,30)" fg:x="4319" fg:w="2"/><text x="31.9444%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.01%)</title><rect x="31.6944%" y="773" width="0.0147%" height="15" fill="rgb(239,152,38)" fg:x="4319" fg:w="2"/><text x="31.9444%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.01%)</title><rect x="31.6944%" y="757" width="0.0147%" height="15" fill="rgb(249,139,47)" fg:x="4319" fg:w="2"/><text x="31.9444%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.12%)</title><rect x="31.6210%" y="837" width="0.1174%" height="15" fill="rgb(244,64,35)" fg:x="4309" fg:w="16"/><text x="31.8710%" y="847.50"></text></g><g><title>core::fmt::write (14 samples, 0.10%)</title><rect x="31.6357%" y="821" width="0.1027%" height="15" fill="rgb(216,46,15)" fg:x="4311" fg:w="14"/><text x="31.8857%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.03%)</title><rect x="31.7091%" y="805" width="0.0294%" height="15" fill="rgb(250,74,19)" fg:x="4321" fg:w="4"/><text x="31.9591%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.03%)</title><rect x="31.7091%" y="789" width="0.0294%" height="15" fill="rgb(249,42,33)" fg:x="4321" fg:w="4"/><text x="31.9591%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (22 samples, 0.16%)</title><rect x="31.5844%" y="853" width="0.1614%" height="15" fill="rgb(242,149,17)" fg:x="4304" fg:w="22"/><text x="31.8344%" y="863.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="31.7605%" y="821" width="0.0294%" height="15" fill="rgb(244,29,21)" fg:x="4328" fg:w="4"/><text x="32.0105%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (14 samples, 0.10%)</title><rect x="31.7458%" y="853" width="0.1027%" height="15" fill="rgb(220,130,37)" fg:x="4326" fg:w="14"/><text x="31.9958%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (12 samples, 0.09%)</title><rect x="31.7605%" y="837" width="0.0881%" height="15" fill="rgb(211,67,2)" fg:x="4328" fg:w="12"/><text x="32.0105%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (6 samples, 0.04%)</title><rect x="31.8045%" y="821" width="0.0440%" height="15" fill="rgb(235,68,52)" fg:x="4334" fg:w="6"/><text x="32.0545%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (2 samples, 0.01%)</title><rect x="31.8339%" y="805" width="0.0147%" height="15" fill="rgb(246,142,3)" fg:x="4338" fg:w="2"/><text x="32.0839%" y="815.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="31.8706%" y="837" width="0.0147%" height="15" fill="rgb(241,25,7)" fg:x="4343" fg:w="2"/><text x="32.1206%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.05%)</title><rect x="31.8852%" y="837" width="0.0514%" height="15" fill="rgb(242,119,39)" fg:x="4345" fg:w="7"/><text x="32.1352%" y="847.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::equivalent_names_and_types (13 samples, 0.10%)</title><rect x="31.8485%" y="853" width="0.0954%" height="15" fill="rgb(241,98,45)" fg:x="4340" fg:w="13"/><text x="32.0985%" y="863.50"></text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::schema (2 samples, 0.01%)</title><rect x="31.9513%" y="853" width="0.0147%" height="15" fill="rgb(254,28,30)" fg:x="4354" fg:w="2"/><text x="32.2013%" y="863.50"></text></g><g><title>datafusion_optimizer::optimizer::log_plan (3 samples, 0.02%)</title><rect x="31.9659%" y="853" width="0.0220%" height="15" fill="rgb(241,142,54)" fg:x="4356" fg:w="3"/><text x="32.2159%" y="863.50"></text></g><g><title>datafusion::execution::context::SessionState::optimize (79 samples, 0.58%)</title><rect x="31.4156%" y="885" width="0.5797%" height="15" fill="rgb(222,85,15)" fg:x="4281" fg:w="79"/><text x="31.6656%" y="895.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (79 samples, 0.58%)</title><rect x="31.4156%" y="869" width="0.5797%" height="15" fill="rgb(210,85,47)" fg:x="4281" fg:w="79"/><text x="31.6656%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.09%)</title><rect x="32.0320%" y="613" width="0.0881%" height="15" fill="rgb(224,206,25)" fg:x="4365" fg:w="12"/><text x="32.2820%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.09%)</title><rect x="32.0320%" y="597" width="0.0881%" height="15" fill="rgb(243,201,19)" fg:x="4365" fg:w="12"/><text x="32.2820%" y="607.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.09%)</title><rect x="32.0320%" y="581" width="0.0881%" height="15" fill="rgb(236,59,4)" fg:x="4365" fg:w="12"/><text x="32.2820%" y="591.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.09%)</title><rect x="32.0320%" y="565" width="0.0881%" height="15" fill="rgb(254,179,45)" fg:x="4365" fg:w="12"/><text x="32.2820%" y="575.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="32.1054%" y="549" width="0.0147%" height="15" fill="rgb(226,14,10)" fg:x="4375" fg:w="2"/><text x="32.3554%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.12%)</title><rect x="32.0247%" y="629" width="0.1174%" height="15" fill="rgb(244,27,41)" fg:x="4364" fg:w="16"/><text x="32.2747%" y="639.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="32.1201%" y="613" width="0.0220%" height="15" fill="rgb(235,35,32)" fg:x="4377" fg:w="3"/><text x="32.3701%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.16%)</title><rect x="31.9953%" y="789" width="0.1614%" height="15" fill="rgb(218,68,31)" fg:x="4360" fg:w="22"/><text x="32.2453%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.15%)</title><rect x="32.0026%" y="773" width="0.1541%" height="15" fill="rgb(207,120,37)" fg:x="4361" fg:w="21"/><text x="32.2526%" y="783.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.15%)</title><rect x="32.0026%" y="757" width="0.1541%" height="15" fill="rgb(227,98,0)" fg:x="4361" fg:w="21"/><text x="32.2526%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.15%)</title><rect x="32.0026%" y="741" width="0.1541%" height="15" fill="rgb(207,7,3)" fg:x="4361" fg:w="21"/><text x="32.2526%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.15%)</title><rect x="32.0026%" y="725" width="0.1541%" height="15" fill="rgb(206,98,19)" fg:x="4361" fg:w="21"/><text x="32.2526%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.15%)</title><rect x="32.0026%" y="709" width="0.1541%" height="15" fill="rgb(217,5,26)" fg:x="4361" fg:w="21"/><text x="32.2526%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 0.15%)</title><rect x="32.0100%" y="693" width="0.1468%" height="15" fill="rgb(235,190,38)" fg:x="4362" fg:w="20"/><text x="32.2600%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.15%)</title><rect x="32.0100%" y="677" width="0.1468%" height="15" fill="rgb(247,86,24)" fg:x="4362" fg:w="20"/><text x="32.2600%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.15%)</title><rect x="32.0100%" y="661" width="0.1468%" height="15" fill="rgb(205,101,16)" fg:x="4362" fg:w="20"/><text x="32.2600%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.15%)</title><rect x="32.0100%" y="645" width="0.1468%" height="15" fill="rgb(246,168,33)" fg:x="4362" fg:w="20"/><text x="32.2600%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (26 samples, 0.19%)</title><rect x="31.9953%" y="837" width="0.1908%" height="15" fill="rgb(231,114,1)" fg:x="4360" fg:w="26"/><text x="32.2453%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (26 samples, 0.19%)</title><rect x="31.9953%" y="821" width="0.1908%" height="15" fill="rgb(207,184,53)" fg:x="4360" fg:w="26"/><text x="32.2453%" y="831.50"></text></g><g><title>core::fmt::write (26 samples, 0.19%)</title><rect x="31.9953%" y="805" width="0.1908%" height="15" fill="rgb(224,95,51)" fg:x="4360" fg:w="26"/><text x="32.2453%" y="815.50"></text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.03%)</title><rect x="32.1567%" y="789" width="0.0294%" height="15" fill="rgb(212,188,45)" fg:x="4382" fg:w="4"/><text x="32.4067%" y="799.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="32.1861%" y="821" width="0.0147%" height="15" fill="rgb(223,154,38)" fg:x="4386" fg:w="2"/><text x="32.4361%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.01%)</title><rect x="32.2008%" y="805" width="0.0147%" height="15" fill="rgb(251,22,52)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.01%)</title><rect x="32.2008%" y="789" width="0.0147%" height="15" fill="rgb(229,209,22)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.01%)</title><rect x="32.2008%" y="773" width="0.0147%" height="15" fill="rgb(234,138,34)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="32.2008%" y="757" width="0.0147%" height="15" fill="rgb(212,95,11)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="32.2008%" y="741" width="0.0147%" height="15" fill="rgb(240,179,47)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="32.2008%" y="725" width="0.0147%" height="15" fill="rgb(240,163,11)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (2 samples, 0.01%)</title><rect x="32.2008%" y="709" width="0.0147%" height="15" fill="rgb(236,37,12)" fg:x="4388" fg:w="2"/><text x="32.4508%" y="719.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.04%)</title><rect x="32.2301%" y="773" width="0.0440%" height="15" fill="rgb(232,164,16)" fg:x="4392" fg:w="6"/><text x="32.4801%" y="783.50"></text></g><g><title>__GI___libc_realloc (18 samples, 0.13%)</title><rect x="32.3255%" y="549" width="0.1321%" height="15" fill="rgb(244,205,15)" fg:x="4405" fg:w="18"/><text x="32.5755%" y="559.50"></text></g><g><title>_int_realloc (4 samples, 0.03%)</title><rect x="32.4283%" y="533" width="0.0294%" height="15" fill="rgb(223,117,47)" fg:x="4419" fg:w="4"/><text x="32.6783%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.15%)</title><rect x="32.3182%" y="597" width="0.1541%" height="15" fill="rgb(244,107,35)" fg:x="4404" fg:w="21"/><text x="32.5682%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.15%)</title><rect x="32.3182%" y="581" width="0.1541%" height="15" fill="rgb(205,140,8)" fg:x="4404" fg:w="21"/><text x="32.5682%" y="591.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.15%)</title><rect x="32.3182%" y="565" width="0.1541%" height="15" fill="rgb(228,84,46)" fg:x="4404" fg:w="21"/><text x="32.5682%" y="575.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="32.4576%" y="549" width="0.0147%" height="15" fill="rgb(254,188,9)" fg:x="4423" fg:w="2"/><text x="32.7076%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.20%)</title><rect x="32.3182%" y="613" width="0.1981%" height="15" fill="rgb(206,112,54)" fg:x="4404" fg:w="27"/><text x="32.5682%" y="623.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.04%)</title><rect x="32.4723%" y="597" width="0.0440%" height="15" fill="rgb(216,84,49)" fg:x="4425" fg:w="6"/><text x="32.7223%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.24%)</title><rect x="32.2888%" y="677" width="0.2422%" height="15" fill="rgb(214,194,35)" fg:x="4400" fg:w="33"/><text x="32.5388%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.24%)</title><rect x="32.2888%" y="661" width="0.2422%" height="15" fill="rgb(249,28,3)" fg:x="4400" fg:w="33"/><text x="32.5388%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.23%)</title><rect x="32.3035%" y="645" width="0.2275%" height="15" fill="rgb(222,56,52)" fg:x="4402" fg:w="31"/><text x="32.5535%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.23%)</title><rect x="32.3035%" y="629" width="0.2275%" height="15" fill="rgb(245,217,50)" fg:x="4402" fg:w="31"/><text x="32.5535%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.01%)</title><rect x="32.5163%" y="613" width="0.0147%" height="15" fill="rgb(213,201,24)" fg:x="4431" fg:w="2"/><text x="32.7663%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.01%)</title><rect x="32.5163%" y="597" width="0.0147%" height="15" fill="rgb(248,116,28)" fg:x="4431" fg:w="2"/><text x="32.7663%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (41 samples, 0.30%)</title><rect x="32.2742%" y="773" width="0.3009%" height="15" fill="rgb(219,72,43)" fg:x="4398" fg:w="41"/><text x="32.5242%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.29%)</title><rect x="32.2815%" y="757" width="0.2935%" height="15" fill="rgb(209,138,14)" fg:x="4399" fg:w="40"/><text x="32.5315%" y="767.50"></text></g><g><title>alloc::string::String::push_str (40 samples, 0.29%)</title><rect x="32.2815%" y="741" width="0.2935%" height="15" fill="rgb(222,18,33)" fg:x="4399" fg:w="40"/><text x="32.5315%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.29%)</title><rect x="32.2815%" y="725" width="0.2935%" height="15" fill="rgb(213,199,7)" fg:x="4399" fg:w="40"/><text x="32.5315%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.29%)</title><rect x="32.2815%" y="709" width="0.2935%" height="15" fill="rgb(250,110,10)" fg:x="4399" fg:w="40"/><text x="32.5315%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.29%)</title><rect x="32.2815%" y="693" width="0.2935%" height="15" fill="rgb(248,123,6)" fg:x="4399" fg:w="40"/><text x="32.5315%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.04%)</title><rect x="32.5310%" y="677" width="0.0440%" height="15" fill="rgb(206,91,31)" fg:x="4433" fg:w="6"/><text x="32.7810%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.04%)</title><rect x="32.5310%" y="661" width="0.0440%" height="15" fill="rgb(211,154,13)" fg:x="4433" fg:w="6"/><text x="32.7810%" y="671.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="32.5750%" y="773" width="0.0220%" height="15" fill="rgb(225,148,7)" fg:x="4439" fg:w="3"/><text x="32.8250%" y="783.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (87 samples, 0.64%)</title><rect x="31.9953%" y="885" width="0.6384%" height="15" fill="rgb(220,160,43)" fg:x="4360" fg:w="87"/><text x="32.2453%" y="895.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (87 samples, 0.64%)</title><rect x="31.9953%" y="869" width="0.6384%" height="15" fill="rgb(213,52,39)" fg:x="4360" fg:w="87"/><text x="32.2453%" y="879.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (87 samples, 0.64%)</title><rect x="31.9953%" y="853" width="0.6384%" height="15" fill="rgb(243,137,7)" fg:x="4360" fg:w="87"/><text x="32.2453%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (61 samples, 0.45%)</title><rect x="32.1861%" y="837" width="0.4476%" height="15" fill="rgb(230,79,13)" fg:x="4386" fg:w="61"/><text x="32.4361%" y="847.50"></text></g><g><title>alloc::fmt::format::format_inner (59 samples, 0.43%)</title><rect x="32.2008%" y="821" width="0.4330%" height="15" fill="rgb(247,105,23)" fg:x="4388" fg:w="59"/><text x="32.4508%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (57 samples, 0.42%)</title><rect x="32.2155%" y="805" width="0.4183%" height="15" fill="rgb(223,179,41)" fg:x="4390" fg:w="57"/><text x="32.4655%" y="815.50"></text></g><g><title>core::fmt::write (56 samples, 0.41%)</title><rect x="32.2228%" y="789" width="0.4109%" height="15" fill="rgb(218,9,34)" fg:x="4391" fg:w="56"/><text x="32.4728%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.04%)</title><rect x="32.5970%" y="773" width="0.0367%" height="15" fill="rgb(222,106,8)" fg:x="4442" fg:w="5"/><text x="32.8470%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (18 samples, 0.13%)</title><rect x="32.6337%" y="805" width="0.1321%" height="15" fill="rgb(211,220,0)" fg:x="4447" fg:w="18"/><text x="32.8837%" y="815.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.13%)</title><rect x="32.6337%" y="789" width="0.1321%" height="15" fill="rgb(229,52,16)" fg:x="4447" fg:w="18"/><text x="32.8837%" y="799.50"></text></g><g><title>_int_malloc (18 samples, 0.13%)</title><rect x="32.6337%" y="773" width="0.1321%" height="15" fill="rgb(212,155,18)" fg:x="4447" fg:w="18"/><text x="32.8837%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="32.7658%" y="789" width="0.0294%" height="15" fill="rgb(242,21,14)" fg:x="4465" fg:w="4"/><text x="33.0158%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.07%)</title><rect x="32.7952%" y="789" width="0.0660%" height="15" fill="rgb(222,19,48)" fg:x="4469" fg:w="9"/><text x="33.0452%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.07%)</title><rect x="32.7952%" y="773" width="0.0660%" height="15" fill="rgb(232,45,27)" fg:x="4469" fg:w="9"/><text x="33.0452%" y="783.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.07%)</title><rect x="32.7952%" y="757" width="0.0660%" height="15" fill="rgb(249,103,42)" fg:x="4469" fg:w="9"/><text x="33.0452%" y="767.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="32.8466%" y="741" width="0.0147%" height="15" fill="rgb(246,81,33)" fg:x="4476" fg:w="2"/><text x="33.0966%" y="751.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="32.8612%" y="757" width="0.0367%" height="15" fill="rgb(252,33,42)" fg:x="4478" fg:w="5"/><text x="33.1112%" y="767.50"></text></g><g><title>do_query::main::_{{closure}} (2,297 samples, 16.86%)</title><rect x="16.0564%" y="917" width="16.8562%" height="15" fill="rgb(209,212,41)" fg:x="2188" fg:w="2297"/><text x="16.3064%" y="927.50">do_query::main::_{{closure..</text></g><g><title>do_query::main_inner::{{closure}} (2,297 samples, 16.86%)</title><rect x="16.0564%" y="901" width="16.8562%" height="15" fill="rgb(207,154,6)" fg:x="2188" fg:w="2297"/><text x="16.3064%" y="911.50">do_query::main_inner::{{cl..</text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (38 samples, 0.28%)</title><rect x="32.6337%" y="885" width="0.2789%" height="15" fill="rgb(223,64,47)" fg:x="4447" fg:w="38"/><text x="32.8837%" y="895.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (38 samples, 0.28%)</title><rect x="32.6337%" y="869" width="0.2789%" height="15" fill="rgb(211,161,38)" fg:x="4447" fg:w="38"/><text x="32.8837%" y="879.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (38 samples, 0.28%)</title><rect x="32.6337%" y="853" width="0.2789%" height="15" fill="rgb(219,138,40)" fg:x="4447" fg:w="38"/><text x="32.8837%" y="863.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_with_location (38 samples, 0.28%)</title><rect x="32.6337%" y="837" width="0.2789%" height="15" fill="rgb(241,228,46)" fg:x="4447" fg:w="38"/><text x="32.8837%" y="847.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (38 samples, 0.28%)</title><rect x="32.6337%" y="821" width="0.2789%" height="15" fill="rgb(223,209,38)" fg:x="4447" fg:w="38"/><text x="32.8837%" y="831.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (20 samples, 0.15%)</title><rect x="32.7658%" y="805" width="0.1468%" height="15" fill="rgb(236,164,45)" fg:x="4465" fg:w="20"/><text x="33.0158%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.05%)</title><rect x="32.8612%" y="789" width="0.0514%" height="15" fill="rgb(231,15,5)" fg:x="4478" fg:w="7"/><text x="33.1112%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.05%)</title><rect x="32.8612%" y="773" width="0.0514%" height="15" fill="rgb(252,35,15)" fg:x="4478" fg:w="7"/><text x="33.1112%" y="783.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="32.8979%" y="757" width="0.0147%" height="15" fill="rgb(248,181,18)" fg:x="4483" fg:w="2"/><text x="33.1479%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.05%)</title><rect x="32.9640%" y="789" width="0.0514%" height="15" fill="rgb(233,39,42)" fg:x="4492" fg:w="7"/><text x="33.2140%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.03%)</title><rect x="32.9860%" y="773" width="0.0294%" height="15" fill="rgb(238,110,33)" fg:x="4495" fg:w="4"/><text x="33.2360%" y="783.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (17 samples, 0.12%)</title><rect x="32.9126%" y="837" width="0.1248%" height="15" fill="rgb(233,195,10)" fg:x="4485" fg:w="17"/><text x="33.1626%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.12%)</title><rect x="32.9199%" y="821" width="0.1174%" height="15" fill="rgb(254,105,3)" fg:x="4486" fg:w="16"/><text x="33.1699%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::physical_plan::boolean::BooleanExec&gt; (16 samples, 0.12%)</title><rect x="32.9199%" y="805" width="0.1174%" height="15" fill="rgb(221,225,9)" fg:x="4486" fg:w="16"/><text x="33.1699%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.01%)</title><rect x="33.0227%" y="789" width="0.0147%" height="15" fill="rgb(224,227,45)" fg:x="4500" fg:w="2"/><text x="33.2727%" y="799.50"></text></g><g><title>__GI___libc_malloc (39 samples, 0.29%)</title><rect x="33.2135%" y="741" width="0.2862%" height="15" fill="rgb(229,198,43)" fg:x="4526" fg:w="39"/><text x="33.4635%" y="751.50"></text></g><g><title>_int_malloc (31 samples, 0.23%)</title><rect x="33.2722%" y="725" width="0.2275%" height="15" fill="rgb(206,209,35)" fg:x="4534" fg:w="31"/><text x="33.5222%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.37%)</title><rect x="33.1474%" y="757" width="0.3669%" height="15" fill="rgb(245,195,53)" fg:x="4517" fg:w="50"/><text x="33.3974%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="33.4997%" y="741" width="0.0147%" height="15" fill="rgb(240,92,26)" fg:x="4565" fg:w="2"/><text x="33.7497%" y="751.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="33.5217%" y="757" width="0.0367%" height="15" fill="rgb(207,40,23)" fg:x="4568" fg:w="5"/><text x="33.7717%" y="767.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="33.5290%" y="741" width="0.0294%" height="15" fill="rgb(223,111,35)" fg:x="4569" fg:w="4"/><text x="33.7790%" y="751.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::mutate (74 samples, 0.54%)</title><rect x="33.0447%" y="773" width="0.5430%" height="15" fill="rgb(229,147,28)" fg:x="4503" fg:w="74"/><text x="33.2947%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="33.5584%" y="757" width="0.0294%" height="15" fill="rgb(211,29,28)" fg:x="4573" fg:w="4"/><text x="33.8084%" y="767.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (6 samples, 0.04%)</title><rect x="33.8666%" y="725" width="0.0440%" height="15" fill="rgb(228,72,33)" fg:x="4615" fg:w="6"/><text x="34.1166%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="33.8813%" y="709" width="0.0294%" height="15" fill="rgb(205,214,31)" fg:x="4617" fg:w="4"/><text x="34.1313%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="33.9106%" y="725" width="0.0440%" height="15" fill="rgb(224,111,15)" fg:x="4621" fg:w="6"/><text x="34.1606%" y="735.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="33.9620%" y="693" width="0.0147%" height="15" fill="rgb(253,21,26)" fg:x="4628" fg:w="2"/><text x="34.2120%" y="703.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (3 samples, 0.02%)</title><rect x="33.9620%" y="709" width="0.0220%" height="15" fill="rgb(245,139,43)" fg:x="4628" fg:w="3"/><text x="34.2120%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="34.0354%" y="597" width="0.0147%" height="15" fill="rgb(252,170,7)" fg:x="4638" fg:w="2"/><text x="34.2854%" y="607.50"></text></g><g><title>__posix_memalign (8 samples, 0.06%)</title><rect x="34.0060%" y="629" width="0.0587%" height="15" fill="rgb(231,118,14)" fg:x="4634" fg:w="8"/><text x="34.2560%" y="639.50"></text></g><g><title>_int_memalign (4 samples, 0.03%)</title><rect x="34.0354%" y="613" width="0.0294%" height="15" fill="rgb(238,83,0)" fg:x="4638" fg:w="4"/><text x="34.2854%" y="623.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="34.0500%" y="597" width="0.0147%" height="15" fill="rgb(221,39,39)" fg:x="4640" fg:w="2"/><text x="34.3000%" y="607.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (11 samples, 0.08%)</title><rect x="33.9913%" y="709" width="0.0807%" height="15" fill="rgb(222,119,46)" fg:x="4632" fg:w="11"/><text x="34.2413%" y="719.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (9 samples, 0.07%)</title><rect x="34.0060%" y="693" width="0.0660%" height="15" fill="rgb(222,165,49)" fg:x="4634" fg:w="9"/><text x="34.2560%" y="703.50"></text></g><g><title>__rdl_alloc (9 samples, 0.07%)</title><rect x="34.0060%" y="677" width="0.0660%" height="15" fill="rgb(219,113,52)" fg:x="4634" fg:w="9"/><text x="34.2560%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.07%)</title><rect x="34.0060%" y="661" width="0.0660%" height="15" fill="rgb(214,7,15)" fg:x="4634" fg:w="9"/><text x="34.2560%" y="671.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (9 samples, 0.07%)</title><rect x="34.0060%" y="645" width="0.0660%" height="15" fill="rgb(235,32,4)" fg:x="4634" fg:w="9"/><text x="34.2560%" y="655.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (5 samples, 0.04%)</title><rect x="34.0721%" y="709" width="0.0367%" height="15" fill="rgb(238,90,54)" fg:x="4643" fg:w="5"/><text x="34.3221%" y="719.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (23 samples, 0.17%)</title><rect x="33.9546%" y="725" width="0.1688%" height="15" fill="rgb(213,208,19)" fg:x="4627" fg:w="23"/><text x="34.2046%" y="735.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (2 samples, 0.01%)</title><rect x="34.1088%" y="709" width="0.0147%" height="15" fill="rgb(233,156,4)" fg:x="4648" fg:w="2"/><text x="34.3588%" y="719.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (2 samples, 0.01%)</title><rect x="34.1601%" y="693" width="0.0147%" height="15" fill="rgb(207,194,5)" fg:x="4655" fg:w="2"/><text x="34.4101%" y="703.50"></text></g><g><title>__posix_memalign (10 samples, 0.07%)</title><rect x="34.1895%" y="613" width="0.0734%" height="15" fill="rgb(206,111,30)" fg:x="4659" fg:w="10"/><text x="34.4395%" y="623.50"></text></g><g><title>_int_memalign (8 samples, 0.06%)</title><rect x="34.2042%" y="597" width="0.0587%" height="15" fill="rgb(243,70,54)" fg:x="4661" fg:w="8"/><text x="34.4542%" y="607.50"></text></g><g><title>_int_malloc (5 samples, 0.04%)</title><rect x="34.2262%" y="581" width="0.0367%" height="15" fill="rgb(242,28,8)" fg:x="4664" fg:w="5"/><text x="34.4762%" y="591.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (12 samples, 0.09%)</title><rect x="34.1821%" y="693" width="0.0881%" height="15" fill="rgb(219,106,18)" fg:x="4658" fg:w="12"/><text x="34.4321%" y="703.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (11 samples, 0.08%)</title><rect x="34.1895%" y="677" width="0.0807%" height="15" fill="rgb(244,222,10)" fg:x="4659" fg:w="11"/><text x="34.4395%" y="687.50"></text></g><g><title>__rdl_alloc (11 samples, 0.08%)</title><rect x="34.1895%" y="661" width="0.0807%" height="15" fill="rgb(236,179,52)" fg:x="4659" fg:w="11"/><text x="34.4395%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.08%)</title><rect x="34.1895%" y="645" width="0.0807%" height="15" fill="rgb(213,23,39)" fg:x="4659" fg:w="11"/><text x="34.4395%" y="655.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (11 samples, 0.08%)</title><rect x="34.1895%" y="629" width="0.0807%" height="15" fill="rgb(238,48,10)" fg:x="4659" fg:w="11"/><text x="34.4395%" y="639.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (3 samples, 0.02%)</title><rect x="34.2702%" y="693" width="0.0220%" height="15" fill="rgb(251,196,23)" fg:x="4670" fg:w="3"/><text x="34.5202%" y="703.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (22 samples, 0.16%)</title><rect x="34.1454%" y="709" width="0.1614%" height="15" fill="rgb(250,152,24)" fg:x="4653" fg:w="22"/><text x="34.3954%" y="719.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (2 samples, 0.01%)</title><rect x="34.2922%" y="693" width="0.0147%" height="15" fill="rgb(209,150,17)" fg:x="4673" fg:w="2"/><text x="34.5422%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="34.3069%" y="709" width="0.0220%" height="15" fill="rgb(234,202,34)" fg:x="4675" fg:w="3"/><text x="34.5569%" y="719.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="34.3289%" y="709" width="0.0147%" height="15" fill="rgb(253,148,53)" fg:x="4678" fg:w="2"/><text x="34.5789%" y="719.50"></text></g><g><title>arrow_array::builder::buffer_builder::BufferBuilder&lt;T&gt;::len (2 samples, 0.01%)</title><rect x="34.4390%" y="677" width="0.0147%" height="15" fill="rgb(218,129,16)" fg:x="4693" fg:w="2"/><text x="34.6890%" y="687.50"></text></g><g><title>&lt;fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr as datafusion_physical_expr::physical_expr::PhysicalExpr&gt;::evaluate (46 samples, 0.34%)</title><rect x="34.1234%" y="725" width="0.3376%" height="15" fill="rgb(216,85,19)" fg:x="4650" fg:w="46"/><text x="34.3734%" y="735.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (16 samples, 0.12%)</title><rect x="34.3436%" y="709" width="0.1174%" height="15" fill="rgb(235,228,7)" fg:x="4680" fg:w="16"/><text x="34.5936%" y="719.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval (16 samples, 0.12%)</title><rect x="34.3436%" y="693" width="0.1174%" height="15" fill="rgb(245,175,0)" fg:x="4680" fg:w="16"/><text x="34.5936%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="34.4610%" y="725" width="0.0147%" height="15" fill="rgb(208,168,36)" fg:x="4696" fg:w="2"/><text x="34.7110%" y="735.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="34.4757%" y="725" width="0.0147%" height="15" fill="rgb(246,171,24)" fg:x="4698" fg:w="2"/><text x="34.7257%" y="735.50"></text></g><g><title>__calloc (4 samples, 0.03%)</title><rect x="34.4904%" y="725" width="0.0294%" height="15" fill="rgb(215,142,24)" fg:x="4700" fg:w="4"/><text x="34.7404%" y="735.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="34.4977%" y="709" width="0.0220%" height="15" fill="rgb(250,187,7)" fg:x="4701" fg:w="3"/><text x="34.7477%" y="719.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="34.5270%" y="725" width="0.0147%" height="15" fill="rgb(228,66,33)" fg:x="4705" fg:w="2"/><text x="34.7770%" y="735.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="34.6224%" y="677" width="0.0220%" height="15" fill="rgb(234,215,21)" fg:x="4718" fg:w="3"/><text x="34.8724%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.04%)</title><rect x="34.6078%" y="693" width="0.0440%" height="15" fill="rgb(222,191,20)" fg:x="4716" fg:w="6"/><text x="34.8578%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.12%)</title><rect x="34.5417%" y="725" width="0.1174%" height="15" fill="rgb(245,79,54)" fg:x="4707" fg:w="16"/><text x="34.7917%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (14 samples, 0.10%)</title><rect x="34.5564%" y="709" width="0.1027%" height="15" fill="rgb(240,10,37)" fg:x="4709" fg:w="14"/><text x="34.8064%" y="719.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (7 samples, 0.05%)</title><rect x="34.6591%" y="725" width="0.0514%" height="15" fill="rgb(214,192,32)" fg:x="4723" fg:w="7"/><text x="34.9091%" y="735.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (6 samples, 0.04%)</title><rect x="34.6665%" y="709" width="0.0440%" height="15" fill="rgb(209,36,54)" fg:x="4724" fg:w="6"/><text x="34.9165%" y="719.50"></text></g><g><title>arrow_array::array::Array::len (2 samples, 0.01%)</title><rect x="34.6958%" y="693" width="0.0147%" height="15" fill="rgb(220,10,11)" fg:x="4728" fg:w="2"/><text x="34.9458%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (146 samples, 1.07%)</title><rect x="33.6831%" y="741" width="1.0714%" height="15" fill="rgb(221,106,17)" fg:x="4590" fg:w="146"/><text x="33.9331%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_array::record_batch::RecordBatch&gt; (6 samples, 0.04%)</title><rect x="34.7105%" y="725" width="0.0440%" height="15" fill="rgb(251,142,44)" fg:x="4730" fg:w="6"/><text x="34.9605%" y="735.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.15%)</title><rect x="34.7545%" y="741" width="0.1468%" height="15" fill="rgb(238,13,15)" fg:x="4736" fg:w="20"/><text x="35.0045%" y="751.50"></text></g><g><title>_int_malloc (12 samples, 0.09%)</title><rect x="34.8132%" y="725" width="0.0881%" height="15" fill="rgb(208,107,27)" fg:x="4744" fg:w="12"/><text x="35.0632%" y="735.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::prefix (3 samples, 0.02%)</title><rect x="35.0261%" y="693" width="0.0220%" height="15" fill="rgb(205,136,37)" fg:x="4773" fg:w="3"/><text x="35.2761%" y="703.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.10%)</title><rect x="35.2902%" y="661" width="0.0954%" height="15" fill="rgb(250,205,27)" fg:x="4809" fg:w="13"/><text x="35.5402%" y="671.50"></text></g><g><title>_int_malloc (7 samples, 0.05%)</title><rect x="35.3343%" y="645" width="0.0514%" height="15" fill="rgb(210,80,43)" fg:x="4815" fg:w="7"/><text x="35.5843%" y="655.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (16 samples, 0.12%)</title><rect x="35.2756%" y="677" width="0.1174%" height="15" fill="rgb(247,160,36)" fg:x="4807" fg:w="16"/><text x="35.5256%" y="687.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="35.3930%" y="677" width="0.0220%" height="15" fill="rgb(234,13,49)" fg:x="4823" fg:w="3"/><text x="35.6430%" y="687.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="35.4150%" y="677" width="0.0367%" height="15" fill="rgb(234,122,0)" fg:x="4826" fg:w="5"/><text x="35.6650%" y="687.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="35.4223%" y="661" width="0.0294%" height="15" fill="rgb(207,146,38)" fg:x="4827" fg:w="4"/><text x="35.6723%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="35.4517%" y="677" width="0.0147%" height="15" fill="rgb(207,177,25)" fg:x="4831" fg:w="2"/><text x="35.7017%" y="687.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="35.4664%" y="677" width="0.0147%" height="15" fill="rgb(211,178,42)" fg:x="4833" fg:w="2"/><text x="35.7164%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="35.4664%" y="661" width="0.0147%" height="15" fill="rgb(230,69,54)" fg:x="4833" fg:w="2"/><text x="35.7164%" y="671.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="35.4810%" y="677" width="0.0294%" height="15" fill="rgb(214,135,41)" fg:x="4835" fg:w="4"/><text x="35.7310%" y="687.50"></text></g><g><title>art_tree::common_prefix_len (3 samples, 0.02%)</title><rect x="35.5104%" y="677" width="0.0220%" height="15" fill="rgb(237,67,25)" fg:x="4839" fg:w="3"/><text x="35.7604%" y="687.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (75 samples, 0.55%)</title><rect x="35.0481%" y="693" width="0.5504%" height="15" fill="rgb(222,189,50)" fg:x="4776" fg:w="75"/><text x="35.2981%" y="703.50"></text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (9 samples, 0.07%)</title><rect x="35.5324%" y="677" width="0.0660%" height="15" fill="rgb(245,148,34)" fg:x="4842" fg:w="9"/><text x="35.7824%" y="687.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (86 samples, 0.63%)</title><rect x="35.0040%" y="709" width="0.6311%" height="15" fill="rgb(222,29,6)" fg:x="4770" fg:w="86"/><text x="35.2540%" y="719.50"></text></g><g><title>art_tree::keys::ByteString::new (5 samples, 0.04%)</title><rect x="35.5984%" y="693" width="0.0367%" height="15" fill="rgb(221,189,43)" fg:x="4851" fg:w="5"/><text x="35.8484%" y="703.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="35.6058%" y="677" width="0.0294%" height="15" fill="rgb(207,36,27)" fg:x="4852" fg:w="4"/><text x="35.8558%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (288 samples, 2.11%)</title><rect x="33.6685%" y="757" width="2.1135%" height="15" fill="rgb(217,90,24)" fg:x="4588" fg:w="288"/><text x="33.9185%" y="767.50">&lt;..</text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (119 samples, 0.87%)</title><rect x="34.9086%" y="741" width="0.8733%" height="15" fill="rgb(224,66,35)" fg:x="4757" fg:w="119"/><text x="35.1586%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (117 samples, 0.86%)</title><rect x="34.9233%" y="725" width="0.8586%" height="15" fill="rgb(221,13,50)" fg:x="4759" fg:w="117"/><text x="35.1733%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (20 samples, 0.15%)</title><rect x="35.6351%" y="709" width="0.1468%" height="15" fill="rgb(236,68,49)" fg:x="4856" fg:w="20"/><text x="35.8851%" y="719.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.11%)</title><rect x="35.6718%" y="693" width="0.1101%" height="15" fill="rgb(229,146,28)" fg:x="4861" fg:w="15"/><text x="35.9218%" y="703.50"></text></g><g><title>_int_malloc (14 samples, 0.10%)</title><rect x="35.6792%" y="677" width="0.1027%" height="15" fill="rgb(225,31,38)" fg:x="4862" fg:w="14"/><text x="35.9292%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (375 samples, 2.75%)</title><rect x="33.0374%" y="837" width="2.7519%" height="15" fill="rgb(250,208,3)" fg:x="4502" fg:w="375"/><text x="33.2874%" y="847.50">co..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (375 samples, 2.75%)</title><rect x="33.0374%" y="821" width="2.7519%" height="15" fill="rgb(246,54,23)" fg:x="4502" fg:w="375"/><text x="33.2874%" y="831.50">al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (375 samples, 2.75%)</title><rect x="33.0374%" y="805" width="2.7519%" height="15" fill="rgb(243,76,11)" fg:x="4502" fg:w="375"/><text x="33.2874%" y="815.50">&lt;c..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (375 samples, 2.75%)</title><rect x="33.0374%" y="789" width="2.7519%" height="15" fill="rgb(245,21,50)" fg:x="4502" fg:w="375"/><text x="33.2874%" y="799.50">da..</text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange as datafusion::physical_plan::rewrite::TreeNodeRewriter&lt;alloc::sync::Arc&lt;dyn datafusion::physical_plan::ExecutionPlan&gt;&gt;&gt;::pre_visit (300 samples, 2.20%)</title><rect x="33.5877%" y="773" width="2.2015%" height="15" fill="rgb(228,9,43)" fg:x="4577" fg:w="300"/><text x="33.8377%" y="783.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="35.7892%" y="805" width="0.0147%" height="15" fill="rgb(208,100,47)" fg:x="4877" fg:w="2"/><text x="36.0392%" y="815.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="35.8039%" y="805" width="0.0147%" height="15" fill="rgb(232,26,8)" fg:x="4879" fg:w="2"/><text x="36.0539%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="35.8479%" y="789" width="0.0147%" height="15" fill="rgb(216,166,38)" fg:x="4885" fg:w="2"/><text x="36.0979%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.07%)</title><rect x="35.8186%" y="805" width="0.0660%" height="15" fill="rgb(251,202,51)" fg:x="4881" fg:w="9"/><text x="36.0686%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="35.8626%" y="789" width="0.0220%" height="15" fill="rgb(254,216,34)" fg:x="4887" fg:w="3"/><text x="36.1126%" y="799.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (409 samples, 3.00%)</title><rect x="32.9126%" y="869" width="3.0014%" height="15" fill="rgb(251,32,27)" fg:x="4485" fg:w="409"/><text x="33.1626%" y="879.50">&lt;fa..</text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_using (409 samples, 3.00%)</title><rect x="32.9126%" y="853" width="3.0014%" height="15" fill="rgb(208,127,28)" fg:x="4485" fg:w="409"/><text x="33.1626%" y="863.50">dat..</text></g><g><title>datafusion::physical_plan::with_new_children_if_necessary (17 samples, 0.12%)</title><rect x="35.7892%" y="837" width="0.1248%" height="15" fill="rgb(224,137,22)" fg:x="4877" fg:w="17"/><text x="36.0392%" y="847.50"></text></g><g><title>&lt;datafusion::physical_plan::boolean::BooleanExec as datafusion::physical_plan::ExecutionPlan&gt;::with_new_children (17 samples, 0.12%)</title><rect x="35.7892%" y="821" width="0.1248%" height="15" fill="rgb(254,70,32)" fg:x="4877" fg:w="17"/><text x="36.0392%" y="831.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (4 samples, 0.03%)</title><rect x="35.8846%" y="805" width="0.0294%" height="15" fill="rgb(229,75,37)" fg:x="4890" fg:w="4"/><text x="36.1346%" y="815.50"></text></g><g><title>malloc_consolidate (57 samples, 0.42%)</title><rect x="36.0461%" y="757" width="0.4183%" height="15" fill="rgb(252,64,23)" fg:x="4912" fg:w="57"/><text x="36.2961%" y="767.50"></text></g><g><title>unlink_chunk.isra.0 (6 samples, 0.04%)</title><rect x="36.4203%" y="741" width="0.0440%" height="15" fill="rgb(232,162,48)" fg:x="4963" fg:w="6"/><text x="36.6703%" y="751.50"></text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (79 samples, 0.58%)</title><rect x="35.9140%" y="821" width="0.5797%" height="15" fill="rgb(246,160,12)" fg:x="4894" fg:w="79"/><text x="36.1640%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (79 samples, 0.58%)</title><rect x="35.9140%" y="805" width="0.5797%" height="15" fill="rgb(247,166,0)" fg:x="4894" fg:w="79"/><text x="36.1640%" y="815.50"></text></g><g><title>__GI___libc_malloc (79 samples, 0.58%)</title><rect x="35.9140%" y="789" width="0.5797%" height="15" fill="rgb(249,219,21)" fg:x="4894" fg:w="79"/><text x="36.1640%" y="799.50"></text></g><g><title>_int_malloc (79 samples, 0.58%)</title><rect x="35.9140%" y="773" width="0.5797%" height="15" fill="rgb(205,209,3)" fg:x="4894" fg:w="79"/><text x="36.1640%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.03%)</title><rect x="36.4644%" y="757" width="0.0294%" height="15" fill="rgb(243,44,1)" fg:x="4969" fg:w="4"/><text x="36.7144%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="36.5011%" y="805" width="0.0367%" height="15" fill="rgb(206,159,16)" fg:x="4974" fg:w="5"/><text x="36.7511%" y="815.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (97 samples, 0.71%)</title><rect x="35.9140%" y="869" width="0.7118%" height="15" fill="rgb(244,77,30)" fg:x="4894" fg:w="97"/><text x="36.1640%" y="879.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (97 samples, 0.71%)</title><rect x="35.9140%" y="853" width="0.7118%" height="15" fill="rgb(218,69,12)" fg:x="4894" fg:w="97"/><text x="36.1640%" y="863.50"></text></g><g><title>fastfull_search::optimizer::physical_optimizer::primitives_combination::optimize_predicate_inner (97 samples, 0.71%)</title><rect x="35.9140%" y="837" width="0.7118%" height="15" fill="rgb(212,87,7)" fg:x="4894" fg:w="97"/><text x="36.1640%" y="847.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::new (18 samples, 0.13%)</title><rect x="36.4937%" y="821" width="0.1321%" height="15" fill="rgb(245,114,25)" fg:x="4973" fg:w="18"/><text x="36.7437%" y="831.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::convert_predicate (12 samples, 0.09%)</title><rect x="36.5378%" y="805" width="0.0881%" height="15" fill="rgb(210,61,42)" fg:x="4979" fg:w="12"/><text x="36.7878%" y="815.50"></text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::physical_2_logical (5 samples, 0.04%)</title><rect x="36.5891%" y="789" width="0.0367%" height="15" fill="rgb(211,52,33)" fg:x="4986" fg:w="5"/><text x="36.8391%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="36.6111%" y="773" width="0.0147%" height="15" fill="rgb(234,58,33)" fg:x="4989" fg:w="2"/><text x="36.8611%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.08%)</title><rect x="36.8166%" y="837" width="0.0807%" height="15" fill="rgb(220,115,36)" fg:x="5017" fg:w="11"/><text x="37.0666%" y="847.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.07%)</title><rect x="36.8240%" y="821" width="0.0734%" height="15" fill="rgb(243,153,54)" fg:x="5018" fg:w="10"/><text x="37.0740%" y="831.50"></text></g><g><title>_int_malloc (9 samples, 0.07%)</title><rect x="36.8313%" y="805" width="0.0660%" height="15" fill="rgb(251,47,18)" fg:x="5019" fg:w="9"/><text x="37.0813%" y="815.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (18 samples, 0.13%)</title><rect x="36.7799%" y="853" width="0.1321%" height="15" fill="rgb(242,102,42)" fg:x="5012" fg:w="18"/><text x="37.0299%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="36.8973%" y="837" width="0.0147%" height="15" fill="rgb(234,31,38)" fg:x="5028" fg:w="2"/><text x="37.1473%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.10%)</title><rect x="36.9120%" y="853" width="0.1027%" height="15" fill="rgb(221,117,51)" fg:x="5030" fg:w="14"/><text x="37.1620%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.08%)</title><rect x="36.9340%" y="837" width="0.0807%" height="15" fill="rgb(212,20,18)" fg:x="5033" fg:w="11"/><text x="37.1840%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.08%)</title><rect x="36.9340%" y="821" width="0.0807%" height="15" fill="rgb(245,133,36)" fg:x="5033" fg:w="11"/><text x="37.1840%" y="831.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.08%)</title><rect x="36.9340%" y="805" width="0.0807%" height="15" fill="rgb(212,6,19)" fg:x="5033" fg:w="11"/><text x="37.1840%" y="815.50"></text></g><g><title>_int_realloc (9 samples, 0.07%)</title><rect x="36.9487%" y="789" width="0.0660%" height="15" fill="rgb(218,1,36)" fg:x="5035" fg:w="9"/><text x="37.1987%" y="799.50"></text></g><g><title>_int_malloc (9 samples, 0.07%)</title><rect x="36.9487%" y="773" width="0.0660%" height="15" fill="rgb(246,84,54)" fg:x="5035" fg:w="9"/><text x="37.1987%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="36.9707%" y="757" width="0.0440%" height="15" fill="rgb(242,110,6)" fg:x="5038" fg:w="6"/><text x="37.2207%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="36.9854%" y="741" width="0.0294%" height="15" fill="rgb(214,47,5)" fg:x="5040" fg:w="4"/><text x="37.2354%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="36.9854%" y="725" width="0.0294%" height="15" fill="rgb(218,159,25)" fg:x="5040" fg:w="4"/><text x="37.2354%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="36.9854%" y="709" width="0.0294%" height="15" fill="rgb(215,211,28)" fg:x="5040" fg:w="4"/><text x="37.2354%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="36.9854%" y="693" width="0.0294%" height="15" fill="rgb(238,59,32)" fg:x="5040" fg:w="4"/><text x="37.2354%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="37.0735%" y="837" width="0.0147%" height="15" fill="rgb(226,82,3)" fg:x="5052" fg:w="2"/><text x="37.3235%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="37.1982%" y="789" width="0.0220%" height="15" fill="rgb(240,164,32)" fg:x="5069" fg:w="3"/><text x="37.4482%" y="799.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="38.9154%" y="757" width="0.0367%" height="15" fill="rgb(232,46,7)" fg:x="5303" fg:w="5"/><text x="39.1654%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.22%)</title><rect x="38.9521%" y="757" width="0.2202%" height="15" fill="rgb(229,129,53)" fg:x="5308" fg:w="30"/><text x="39.2021%" y="767.50"></text></g><g><title>&lt;art_tree::keys::ByteString as art_tree::keys::Key&gt;::to_bytes (36 samples, 0.26%)</title><rect x="38.9154%" y="773" width="0.2642%" height="15" fill="rgb(234,188,29)" fg:x="5303" fg:w="36"/><text x="39.1654%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="773" width="0.0440%" height="15" fill="rgb(246,141,4)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="757" width="0.0440%" height="15" fill="rgb(229,23,39)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="741" width="0.0440%" height="15" fill="rgb(206,12,3)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="725" width="0.0440%" height="15" fill="rgb(252,226,20)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="709" width="0.0440%" height="15" fill="rgb(216,123,35)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="693" width="0.0440%" height="15" fill="rgb(212,68,40)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="677" width="0.0440%" height="15" fill="rgb(254,125,32)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="661" width="0.0440%" height="15" fill="rgb(253,97,22)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="645" width="0.0440%" height="15" fill="rgb(241,101,14)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="629" width="0.0440%" height="15" fill="rgb(238,103,29)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="39.1796%" y="613" width="0.0440%" height="15" fill="rgb(233,195,47)" fg:x="5339" fg:w="6"/><text x="39.4296%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="39.2236%" y="773" width="0.0147%" height="15" fill="rgb(246,218,30)" fg:x="5345" fg:w="2"/><text x="39.4736%" y="783.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="39.2383%" y="773" width="0.0367%" height="15" fill="rgb(219,145,47)" fg:x="5347" fg:w="5"/><text x="39.4883%" y="783.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="39.2530%" y="757" width="0.0220%" height="15" fill="rgb(243,12,26)" fg:x="5349" fg:w="3"/><text x="39.5030%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.04%)</title><rect x="39.2750%" y="773" width="0.0440%" height="15" fill="rgb(214,87,16)" fg:x="5352" fg:w="6"/><text x="39.5250%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.04%)</title><rect x="39.3190%" y="773" width="0.0440%" height="15" fill="rgb(208,99,42)" fg:x="5358" fg:w="6"/><text x="39.5690%" y="783.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="39.3704%" y="773" width="0.0220%" height="15" fill="rgb(253,99,2)" fg:x="5365" fg:w="3"/><text x="39.6204%" y="783.50"></text></g><g><title>art_tree::Art&lt;K,V&gt;::get_with_length (364 samples, 2.67%)</title><rect x="37.2202%" y="789" width="2.6712%" height="15" fill="rgb(220,168,23)" fg:x="5072" fg:w="364"/><text x="37.4702%" y="799.50">ar..</text></g><g><title>art_tree::node::BoxedNode&lt;V&gt;::get_mut (68 samples, 0.50%)</title><rect x="39.3924%" y="773" width="0.4990%" height="15" fill="rgb(242,38,24)" fg:x="5368" fg:w="68"/><text x="39.6424%" y="783.50"></text></g><g><title>art_tree::node::key_index_sse (3 samples, 0.02%)</title><rect x="39.8694%" y="757" width="0.0220%" height="15" fill="rgb(225,182,9)" fg:x="5433" fg:w="3"/><text x="40.1194%" y="767.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::AHTrieInner&lt;T&gt;::get (378 samples, 2.77%)</title><rect x="37.1395%" y="805" width="2.7739%" height="15" fill="rgb(243,178,37)" fg:x="5061" fg:w="378"/><text x="37.3895%" y="815.50">ad..</text></g><g><title>art_tree::keys::ByteString::new (3 samples, 0.02%)</title><rect x="39.8914%" y="789" width="0.0220%" height="15" fill="rgb(232,139,19)" fg:x="5436" fg:w="3"/><text x="40.1414%" y="799.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="39.8914%" y="773" width="0.0220%" height="15" fill="rgb(225,201,24)" fg:x="5436" fg:w="3"/><text x="40.1414%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (91 samples, 0.67%)</title><rect x="39.9134%" y="805" width="0.6678%" height="15" fill="rgb(221,47,46)" fg:x="5439" fg:w="91"/><text x="40.1634%" y="815.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.23%)</title><rect x="40.3464%" y="789" width="0.2348%" height="15" fill="rgb(249,23,13)" fg:x="5498" fg:w="32"/><text x="40.5964%" y="799.50"></text></g><g><title>_int_malloc (24 samples, 0.18%)</title><rect x="40.4051%" y="773" width="0.1761%" height="15" fill="rgb(219,9,5)" fg:x="5506" fg:w="24"/><text x="40.6551%" y="783.50"></text></g><g><title>adaptive_hybrid_trie::ah_trie::ah_trie::AHTrie&lt;T&gt;::get (476 samples, 3.49%)</title><rect x="37.0955%" y="837" width="3.4931%" height="15" fill="rgb(254,171,16)" fg:x="5055" fg:w="476"/><text x="37.3455%" y="847.50">ada..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (474 samples, 3.48%)</title><rect x="37.1101%" y="821" width="3.4784%" height="15" fill="rgb(230,171,20)" fg:x="5057" fg:w="474"/><text x="37.3601%" y="831.50">std..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="40.5885%" y="837" width="0.0220%" height="15" fill="rgb(210,71,41)" fg:x="5531" fg:w="3"/><text x="40.8385%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="40.5885%" y="821" width="0.0220%" height="15" fill="rgb(206,173,20)" fg:x="5531" fg:w="3"/><text x="40.8385%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="40.5885%" y="805" width="0.0220%" height="15" fill="rgb(233,88,34)" fg:x="5531" fg:w="3"/><text x="40.8385%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.09%)</title><rect x="40.6326%" y="821" width="0.0881%" height="15" fill="rgb(223,209,46)" fg:x="5537" fg:w="12"/><text x="40.8826%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.05%)</title><rect x="40.6693%" y="805" width="0.0514%" height="15" fill="rgb(250,43,18)" fg:x="5542" fg:w="7"/><text x="40.9193%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (527 samples, 3.87%)</title><rect x="37.0148%" y="853" width="3.8673%" height="15" fill="rgb(208,13,10)" fg:x="5044" fg:w="527"/><text x="37.2648%" y="863.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.27%)</title><rect x="40.6106%" y="837" width="0.2715%" height="15" fill="rgb(212,200,36)" fg:x="5534" fg:w="37"/><text x="40.8606%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (22 samples, 0.16%)</title><rect x="40.7206%" y="821" width="0.1614%" height="15" fill="rgb(225,90,30)" fg:x="5549" fg:w="22"/><text x="40.9706%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.07%)</title><rect x="40.8087%" y="805" width="0.0734%" height="15" fill="rgb(236,182,39)" fg:x="5561" fg:w="10"/><text x="41.0587%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="40.9334%" y="821" width="0.0147%" height="15" fill="rgb(212,144,35)" fg:x="5578" fg:w="2"/><text x="41.1834%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.04%)</title><rect x="40.9188%" y="837" width="0.0367%" height="15" fill="rgb(228,63,44)" fg:x="5576" fg:w="5"/><text x="41.1688%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="40.9995%" y="821" width="0.0220%" height="15" fill="rgb(228,109,6)" fg:x="5587" fg:w="3"/><text x="41.2495%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 0.14%)</title><rect x="40.8894%" y="853" width="0.1394%" height="15" fill="rgb(238,117,24)" fg:x="5572" fg:w="19"/><text x="41.1394%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.07%)</title><rect x="40.9555%" y="837" width="0.0734%" height="15" fill="rgb(242,26,26)" fg:x="5581" fg:w="10"/><text x="41.2055%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="41.0288%" y="853" width="0.0220%" height="15" fill="rgb(221,92,48)" fg:x="5591" fg:w="3"/><text x="41.2788%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="41.0509%" y="853" width="0.0147%" height="15" fill="rgb(209,209,32)" fg:x="5594" fg:w="2"/><text x="41.3009%" y="863.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="41.0729%" y="853" width="0.0220%" height="15" fill="rgb(221,70,22)" fg:x="5597" fg:w="3"/><text x="41.3229%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.09%)</title><rect x="41.0949%" y="853" width="0.0881%" height="15" fill="rgb(248,145,5)" fg:x="5600" fg:w="12"/><text x="41.3449%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (9 samples, 0.07%)</title><rect x="41.1169%" y="837" width="0.0660%" height="15" fill="rgb(226,116,26)" fg:x="5603" fg:w="9"/><text x="41.3669%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="41.1609%" y="821" width="0.0220%" height="15" fill="rgb(244,5,17)" fg:x="5609" fg:w="3"/><text x="41.4109%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (9 samples, 0.07%)</title><rect x="41.1829%" y="853" width="0.0660%" height="15" fill="rgb(252,159,33)" fg:x="5612" fg:w="9"/><text x="41.4329%" y="863.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="41.2196%" y="837" width="0.0294%" height="15" fill="rgb(206,71,0)" fg:x="5617" fg:w="4"/><text x="41.4696%" y="847.50"></text></g><g><title>datafusion::physical_plan::boolean::BooleanExec::try_new (8 samples, 0.06%)</title><rect x="41.2563%" y="853" width="0.0587%" height="15" fill="rgb(233,118,54)" fg:x="5622" fg:w="8"/><text x="41.5063%" y="863.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan (2 samples, 0.01%)</title><rect x="41.3591%" y="837" width="0.0147%" height="15" fill="rgb(234,83,48)" fg:x="5636" fg:w="2"/><text x="41.6091%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="41.4251%" y="821" width="0.0440%" height="15" fill="rgb(228,3,54)" fg:x="5645" fg:w="6"/><text x="41.6751%" y="831.50"></text></g><g><title>__GI___libc_malloc (77 samples, 0.57%)</title><rect x="41.7774%" y="565" width="0.5651%" height="15" fill="rgb(226,155,13)" fg:x="5693" fg:w="77"/><text x="42.0274%" y="575.50"></text></g><g><title>_int_malloc (65 samples, 0.48%)</title><rect x="41.8654%" y="549" width="0.4770%" height="15" fill="rgb(241,28,37)" fg:x="5705" fg:w="65"/><text x="42.1154%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (78 samples, 0.57%)</title><rect x="41.7774%" y="741" width="0.5724%" height="15" fill="rgb(233,93,10)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78 samples, 0.57%)</title><rect x="41.7774%" y="725" width="0.5724%" height="15" fill="rgb(225,113,19)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78 samples, 0.57%)</title><rect x="41.7774%" y="709" width="0.5724%" height="15" fill="rgb(241,2,18)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (78 samples, 0.57%)</title><rect x="41.7774%" y="693" width="0.5724%" height="15" fill="rgb(228,207,21)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78 samples, 0.57%)</title><rect x="41.7774%" y="677" width="0.5724%" height="15" fill="rgb(213,211,35)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 0.57%)</title><rect x="41.7774%" y="661" width="0.5724%" height="15" fill="rgb(209,83,10)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.57%)</title><rect x="41.7774%" y="645" width="0.5724%" height="15" fill="rgb(209,164,1)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.57%)</title><rect x="41.7774%" y="629" width="0.5724%" height="15" fill="rgb(213,184,43)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.57%)</title><rect x="41.7774%" y="613" width="0.5724%" height="15" fill="rgb(231,61,34)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.57%)</title><rect x="41.7774%" y="597" width="0.5724%" height="15" fill="rgb(235,75,3)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="607.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.57%)</title><rect x="41.7774%" y="581" width="0.5724%" height="15" fill="rgb(220,106,47)" fg:x="5693" fg:w="78"/><text x="42.0274%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 0.73%)</title><rect x="41.6526%" y="773" width="0.7265%" height="15" fill="rgb(210,196,33)" fg:x="5676" fg:w="99"/><text x="41.9026%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (85 samples, 0.62%)</title><rect x="41.7553%" y="757" width="0.6238%" height="15" fill="rgb(229,154,42)" fg:x="5690" fg:w="85"/><text x="42.0053%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="42.3571%" y="741" width="0.0220%" height="15" fill="rgb(228,114,26)" fg:x="5772" fg:w="3"/><text x="42.6071%" y="751.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::scan::{{closure}} (138 samples, 1.01%)</title><rect x="41.3737%" y="837" width="1.0127%" height="15" fill="rgb(208,144,1)" fg:x="5638" fg:w="138"/><text x="41.6237%" y="847.50"></text></g><g><title>fastfull_search::datasources::posting_table::PostingExec::try_new (124 samples, 0.91%)</title><rect x="41.4765%" y="821" width="0.9100%" height="15" fill="rgb(239,112,37)" fg:x="5652" fg:w="124"/><text x="41.7265%" y="831.50"></text></g><g><title>datafusion::physical_plan::project_schema (122 samples, 0.90%)</title><rect x="41.4912%" y="805" width="0.8953%" height="15" fill="rgb(210,96,50)" fg:x="5654" fg:w="122"/><text x="41.7412%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (118 samples, 0.87%)</title><rect x="41.5205%" y="789" width="0.8659%" height="15" fill="rgb(222,178,2)" fg:x="5658" fg:w="118"/><text x="41.7705%" y="799.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (146 samples, 1.07%)</title><rect x="41.3297%" y="853" width="1.0714%" height="15" fill="rgb(226,74,18)" fg:x="5632" fg:w="146"/><text x="41.5797%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="42.5405%" y="837" width="0.0220%" height="15" fill="rgb(225,67,54)" fg:x="5797" fg:w="3"/><text x="42.7905%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="42.5479%" y="821" width="0.0147%" height="15" fill="rgb(251,92,32)" fg:x="5798" fg:w="2"/><text x="42.7979%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="42.7093%" y="821" width="0.0147%" height="15" fill="rgb(228,149,22)" fg:x="5820" fg:w="2"/><text x="42.9593%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="42.7240%" y="821" width="0.0147%" height="15" fill="rgb(243,54,13)" fg:x="5822" fg:w="2"/><text x="42.9740%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="42.7387%" y="821" width="0.0147%" height="15" fill="rgb(243,180,28)" fg:x="5824" fg:w="2"/><text x="42.9887%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.10%)</title><rect x="42.7534%" y="821" width="0.1027%" height="15" fill="rgb(208,167,24)" fg:x="5826" fg:w="14"/><text x="43.0034%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.07%)</title><rect x="42.7900%" y="805" width="0.0660%" height="15" fill="rgb(245,73,45)" fg:x="5831" fg:w="9"/><text x="43.0400%" y="815.50"></text></g><g><title>datafusion_expr::expr::Expr::display_name (11 samples, 0.08%)</title><rect x="42.8561%" y="821" width="0.0807%" height="15" fill="rgb(237,203,48)" fg:x="5840" fg:w="11"/><text x="43.1061%" y="831.50"></text></g><g><title>datafusion_expr::expr::create_name (11 samples, 0.08%)</title><rect x="42.8561%" y="805" width="0.0807%" height="15" fill="rgb(211,197,16)" fg:x="5840" fg:w="11"/><text x="43.1061%" y="815.50"></text></g><g><title>datafusion_common::column::Column::flat_name (3 samples, 0.02%)</title><rect x="42.9148%" y="789" width="0.0220%" height="15" fill="rgb(243,99,51)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="42.9148%" y="773" width="0.0220%" height="15" fill="rgb(215,123,29)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="42.9148%" y="757" width="0.0220%" height="15" fill="rgb(239,186,37)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="42.9148%" y="741" width="0.0220%" height="15" fill="rgb(252,136,39)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="42.9148%" y="725" width="0.0220%" height="15" fill="rgb(223,213,32)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="42.9148%" y="709" width="0.0220%" height="15" fill="rgb(233,115,5)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="42.9148%" y="693" width="0.0220%" height="15" fill="rgb(207,226,44)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="42.9148%" y="677" width="0.0220%" height="15" fill="rgb(208,126,0)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="42.9148%" y="661" width="0.0220%" height="15" fill="rgb(244,66,21)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="42.9148%" y="645" width="0.0220%" height="15" fill="rgb(222,97,12)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="42.9148%" y="629" width="0.0220%" height="15" fill="rgb(219,213,19)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="42.9148%" y="613" width="0.0220%" height="15" fill="rgb(252,169,30)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="623.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="42.9148%" y="597" width="0.0220%" height="15" fill="rgb(206,32,51)" fg:x="5848" fg:w="3"/><text x="43.1648%" y="607.50"></text></g><g><title>__GI___libc_malloc (94 samples, 0.69%)</title><rect x="42.9368%" y="805" width="0.6898%" height="15" fill="rgb(250,172,42)" fg:x="5851" fg:w="94"/><text x="43.1868%" y="815.50"></text></g><g><title>_int_malloc (78 samples, 0.57%)</title><rect x="43.0542%" y="789" width="0.5724%" height="15" fill="rgb(209,34,43)" fg:x="5867" fg:w="78"/><text x="43.3042%" y="799.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (168 samples, 1.23%)</title><rect x="42.4011%" y="853" width="1.2328%" height="15" fill="rgb(223,11,35)" fg:x="5778" fg:w="168"/><text x="42.6511%" y="863.50"></text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::PhysicalPredicateBuilder::convert_physical (145 samples, 1.06%)</title><rect x="42.5699%" y="837" width="1.0641%" height="15" fill="rgb(251,219,26)" fg:x="5801" fg:w="145"/><text x="42.8199%" y="847.50"></text></g><g><title>datafusion_physical_expr::expressions::column::Column::new (95 samples, 0.70%)</title><rect x="42.9368%" y="821" width="0.6971%" height="15" fill="rgb(231,119,3)" fg:x="5851" fg:w="95"/><text x="43.1868%" y="831.50"></text></g><g><title>malloc_consolidate (20 samples, 0.15%)</title><rect x="46.6867%" y="773" width="0.1468%" height="15" fill="rgb(216,97,11)" fg:x="6362" fg:w="20"/><text x="46.9367%" y="783.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.34%)</title><rect x="46.5106%" y="805" width="0.3449%" height="15" fill="rgb(223,59,9)" fg:x="6338" fg:w="47"/><text x="46.7606%" y="815.50"></text></g><g><title>_int_malloc (46 samples, 0.34%)</title><rect x="46.5179%" y="789" width="0.3376%" height="15" fill="rgb(233,93,31)" fg:x="6339" fg:w="46"/><text x="46.7679%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.02%)</title><rect x="46.8335%" y="773" width="0.0220%" height="15" fill="rgb(239,81,33)" fg:x="6382" fg:w="3"/><text x="47.0835%" y="783.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (1,936 samples, 14.21%)</title><rect x="32.9126%" y="901" width="14.2071%" height="15" fill="rgb(213,120,34)" fg:x="4485" fg:w="1936"/><text x="33.1626%" y="911.50">&lt;fastfull_search::cont..</text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (1,936 samples, 14.21%)</title><rect x="32.9126%" y="885" width="14.2071%" height="15" fill="rgb(243,49,53)" fg:x="4485" fg:w="1936"/><text x="33.1626%" y="895.50">&lt;fastfull_search::opti..</text></g><g><title>fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner::create_boolean_plan::{{closure}} (1,430 samples, 10.49%)</title><rect x="36.6258%" y="869" width="10.4939%" height="15" fill="rgb(247,216,33)" fg:x="4991" fg:w="1430"/><text x="36.8758%" y="879.50">fastfull_search..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::BooleanEvalExpr::new (475 samples, 3.49%)</title><rect x="43.6340%" y="853" width="3.4857%" height="15" fill="rgb(226,26,14)" fg:x="5946" fg:w="475"/><text x="43.8840%" y="863.50">fas..</text></g><g><title>dashmap::set::DashSet&lt;K&gt;::new (472 samples, 3.46%)</title><rect x="43.6560%" y="837" width="3.4637%" height="15" fill="rgb(215,49,53)" fg:x="5949" fg:w="472"/><text x="43.9060%" y="847.50">das..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (472 samples, 3.46%)</title><rect x="43.6560%" y="821" width="3.4637%" height="15" fill="rgb(245,162,40)" fg:x="5949" fg:w="472"/><text x="43.9060%" y="831.50">&lt;al..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (36 samples, 0.26%)</title><rect x="46.8555%" y="805" width="0.2642%" height="15" fill="rgb(229,68,17)" fg:x="6385" fg:w="36"/><text x="47.1055%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="789" width="0.0147%" height="15" fill="rgb(213,182,10)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="773" width="0.0147%" height="15" fill="rgb(245,125,30)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="757" width="0.0147%" height="15" fill="rgb(232,202,2)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="741" width="0.0147%" height="15" fill="rgb(237,140,51)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="725" width="0.0147%" height="15" fill="rgb(236,157,25)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="709" width="0.0147%" height="15" fill="rgb(219,209,0)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="693" width="0.0147%" height="15" fill="rgb(240,116,54)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="677" width="0.0147%" height="15" fill="rgb(216,10,36)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="661" width="0.0147%" height="15" fill="rgb(222,72,44)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="645" width="0.0147%" height="15" fill="rgb(232,159,9)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="47.1050%" y="629" width="0.0147%" height="15" fill="rgb(210,39,32)" fg:x="6419" fg:w="2"/><text x="47.3550%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="47.6994%" y="789" width="0.0147%" height="15" fill="rgb(216,194,45)" fg:x="6500" fg:w="2"/><text x="47.9494%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.08%)</title><rect x="47.6481%" y="805" width="0.0807%" height="15" fill="rgb(218,18,35)" fg:x="6493" fg:w="11"/><text x="47.8981%" y="815.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="47.7141%" y="789" width="0.0147%" height="15" fill="rgb(207,83,51)" fg:x="6502" fg:w="2"/><text x="47.9641%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="47.7141%" y="773" width="0.0147%" height="15" fill="rgb(225,63,43)" fg:x="6502" fg:w="2"/><text x="47.9641%" y="783.50"></text></g><g><title>__GI___libc_free (9 samples, 0.07%)</title><rect x="47.7361%" y="805" width="0.0660%" height="15" fill="rgb(207,57,36)" fg:x="6505" fg:w="9"/><text x="47.9861%" y="815.50"></text></g><g><title>__memset_avx2_erms (18 samples, 0.13%)</title><rect x="47.9196%" y="789" width="0.1321%" height="15" fill="rgb(216,99,33)" fg:x="6530" fg:w="18"/><text x="48.1696%" y="799.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.04%)</title><rect x="48.0517%" y="789" width="0.0367%" height="15" fill="rgb(225,42,16)" fg:x="6548" fg:w="5"/><text x="48.3017%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="773" width="0.0220%" height="15" fill="rgb(220,201,45)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="757" width="0.0220%" height="15" fill="rgb(225,33,4)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="741" width="0.0220%" height="15" fill="rgb(224,33,50)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="725" width="0.0220%" height="15" fill="rgb(246,198,51)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="709" width="0.0220%" height="15" fill="rgb(205,22,4)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="693" width="0.0220%" height="15" fill="rgb(206,3,8)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="677" width="0.0220%" height="15" fill="rgb(251,23,15)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="661" width="0.0220%" height="15" fill="rgb(252,88,28)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="645" width="0.0220%" height="15" fill="rgb(212,127,14)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="629" width="0.0220%" height="15" fill="rgb(247,145,37)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="48.0663%" y="613" width="0.0220%" height="15" fill="rgb(209,117,53)" fg:x="6550" fg:w="3"/><text x="48.3163%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (12 samples, 0.09%)</title><rect x="48.7121%" y="773" width="0.0881%" height="15" fill="rgb(212,90,42)" fg:x="6638" fg:w="12"/><text x="48.9621%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="48.7488%" y="757" width="0.0514%" height="15" fill="rgb(218,164,37)" fg:x="6643" fg:w="7"/><text x="48.9988%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="48.7488%" y="741" width="0.0514%" height="15" fill="rgb(246,65,34)" fg:x="6643" fg:w="7"/><text x="48.9988%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="48.7488%" y="725" width="0.0514%" height="15" fill="rgb(231,100,33)" fg:x="6643" fg:w="7"/><text x="48.9988%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="48.7561%" y="709" width="0.0440%" height="15" fill="rgb(228,126,14)" fg:x="6644" fg:w="6"/><text x="49.0061%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="48.7855%" y="693" width="0.0147%" height="15" fill="rgb(215,173,21)" fg:x="6648" fg:w="2"/><text x="49.0355%" y="703.50"></text></g><g><title>malloc_consolidate (71 samples, 0.52%)</title><rect x="48.8002%" y="773" width="0.5210%" height="15" fill="rgb(210,6,40)" fg:x="6650" fg:w="71"/><text x="49.0502%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.03%)</title><rect x="49.2918%" y="757" width="0.0294%" height="15" fill="rgb(212,48,18)" fg:x="6717" fg:w="4"/><text x="49.5418%" y="767.50"></text></g><g><title>__calloc (231 samples, 1.70%)</title><rect x="47.8022%" y="805" width="1.6952%" height="15" fill="rgb(230,214,11)" fg:x="6514" fg:w="231"/><text x="48.0522%" y="815.50"></text></g><g><title>_int_malloc (192 samples, 1.41%)</title><rect x="48.0884%" y="789" width="1.4090%" height="15" fill="rgb(254,105,39)" fg:x="6553" fg:w="192"/><text x="48.3384%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (24 samples, 0.18%)</title><rect x="49.3212%" y="773" width="0.1761%" height="15" fill="rgb(245,158,5)" fg:x="6721" fg:w="24"/><text x="49.5712%" y="783.50"></text></g><g><title>_int_free (23 samples, 0.17%)</title><rect x="49.8129%" y="725" width="0.1688%" height="15" fill="rgb(249,208,11)" fg:x="6788" fg:w="23"/><text x="50.0629%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="709" width="0.0220%" height="15" fill="rgb(210,39,28)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="693" width="0.0220%" height="15" fill="rgb(211,56,53)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="677" width="0.0220%" height="15" fill="rgb(226,201,30)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="661" width="0.0220%" height="15" fill="rgb(239,101,34)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="645" width="0.0220%" height="15" fill="rgb(226,209,5)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="629" width="0.0220%" height="15" fill="rgb(250,105,47)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="613" width="0.0220%" height="15" fill="rgb(230,72,3)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="597" width="0.0220%" height="15" fill="rgb(232,218,39)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="581" width="0.0220%" height="15" fill="rgb(248,166,6)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="565" width="0.0220%" height="15" fill="rgb(247,89,20)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="50.3706%" y="549" width="0.0220%" height="15" fill="rgb(248,130,54)" fg:x="6864" fg:w="3"/><text x="50.6206%" y="559.50"></text></g><g><title>malloc_consolidate (7 samples, 0.05%)</title><rect x="50.3926%" y="709" width="0.0514%" height="15" fill="rgb(234,196,4)" fg:x="6867" fg:w="7"/><text x="50.6426%" y="719.50"></text></g><g><title>__posix_memalign (149 samples, 1.09%)</title><rect x="49.4973%" y="757" width="1.0934%" height="15" fill="rgb(250,143,31)" fg:x="6745" fg:w="149"/><text x="49.7473%" y="767.50"></text></g><g><title>_int_memalign (112 samples, 0.82%)</title><rect x="49.7688%" y="741" width="0.8219%" height="15" fill="rgb(211,110,34)" fg:x="6782" fg:w="112"/><text x="50.0188%" y="751.50"></text></g><g><title>_int_malloc (83 samples, 0.61%)</title><rect x="49.9817%" y="725" width="0.6091%" height="15" fill="rgb(215,124,48)" fg:x="6811" fg:w="83"/><text x="50.2317%" y="735.50"></text></g><g><title>unlink_chunk.isra.0 (20 samples, 0.15%)</title><rect x="50.4440%" y="709" width="0.1468%" height="15" fill="rgb(216,46,13)" fg:x="6874" fg:w="20"/><text x="50.6940%" y="719.50"></text></g><g><title>__rdl_alloc (150 samples, 1.10%)</title><rect x="49.4973%" y="805" width="1.1008%" height="15" fill="rgb(205,184,25)" fg:x="6745" fg:w="150"/><text x="49.7473%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (150 samples, 1.10%)</title><rect x="49.4973%" y="789" width="1.1008%" height="15" fill="rgb(228,1,10)" fg:x="6745" fg:w="150"/><text x="49.7473%" y="799.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (150 samples, 1.10%)</title><rect x="49.4973%" y="773" width="1.1008%" height="15" fill="rgb(213,116,27)" fg:x="6745" fg:w="150"/><text x="49.7473%" y="783.50"></text></g><g><title>__rust_alloc (3 samples, 0.02%)</title><rect x="50.6128%" y="805" width="0.0220%" height="15" fill="rgb(241,95,50)" fg:x="6897" fg:w="3"/><text x="50.8628%" y="815.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (589 samples, 4.32%)</title><rect x="47.1197%" y="901" width="4.3223%" height="15" fill="rgb(238,48,32)" fg:x="6421" fg:w="589"/><text x="47.3697%" y="911.50">&lt;futu..</text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (589 samples, 4.32%)</title><rect x="47.1197%" y="885" width="4.3223%" height="15" fill="rgb(235,113,49)" fg:x="6421" fg:w="589"/><text x="47.3697%" y="895.50">&lt;fast..</text></g><g><title>fastfull_search::batch::posting_batch::PostingBatch::project_with_predicate (589 samples, 4.32%)</title><rect x="47.1197%" y="869" width="4.3223%" height="15" fill="rgb(205,127,43)" fg:x="6421" fg:w="589"/><text x="47.3697%" y="879.50">fastf..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (589 samples, 4.32%)</title><rect x="47.1197%" y="853" width="4.3223%" height="15" fill="rgb(250,162,2)" fg:x="6421" fg:w="589"/><text x="47.3697%" y="863.50">fastf..</text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (589 samples, 4.32%)</title><rect x="47.1197%" y="837" width="4.3223%" height="15" fill="rgb(220,13,41)" fg:x="6421" fg:w="589"/><text x="47.3697%" y="847.50">fastf..</text></g><g><title>fastfull_search::physical_expr::short_circuit_primitives::ShortCircuit::eval_avx512 (589 samples, 4.32%)</title><rect x="47.1197%" y="821" width="4.3223%" height="15" fill="rgb(249,221,25)" fg:x="6421" fg:w="589"/><text x="47.3697%" y="831.50">fastf..</text></g><g><title>_int_free (108 samples, 0.79%)</title><rect x="50.6494%" y="805" width="0.7925%" height="15" fill="rgb(215,208,19)" fg:x="6902" fg:w="108"/><text x="50.8994%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="51.4273%" y="789" width="0.0147%" height="15" fill="rgb(236,175,2)" fg:x="7008" fg:w="2"/><text x="51.6773%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="51.4273%" y="773" width="0.0147%" height="15" fill="rgb(241,52,2)" fg:x="7008" fg:w="2"/><text x="51.6773%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="51.4273%" y="757" width="0.0147%" height="15" fill="rgb(248,140,14)" fg:x="7008" fg:w="2"/><text x="51.6773%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="51.4273%" y="741" width="0.0147%" height="15" fill="rgb(253,22,42)" fg:x="7008" fg:w="2"/><text x="51.6773%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="51.4273%" y="725" width="0.0147%" height="15" fill="rgb(234,61,47)" fg:x="7008" fg:w="2"/><text x="51.6773%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="51.5521%" y="821" width="0.0294%" height="15" fill="rgb(208,226,15)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="51.5521%" y="805" width="0.0294%" height="15" fill="rgb(217,221,4)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.03%)</title><rect x="51.5521%" y="789" width="0.0294%" height="15" fill="rgb(212,174,34)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.03%)</title><rect x="51.5521%" y="773" width="0.0294%" height="15" fill="rgb(253,83,4)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.03%)</title><rect x="51.5521%" y="757" width="0.0294%" height="15" fill="rgb(250,195,49)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="51.5521%" y="741" width="0.0294%" height="15" fill="rgb(241,192,25)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="51.5521%" y="725" width="0.0294%" height="15" fill="rgb(208,124,10)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.03%)</title><rect x="51.5521%" y="709" width="0.0294%" height="15" fill="rgb(222,33,0)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="51.5521%" y="693" width="0.0294%" height="15" fill="rgb(234,209,28)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="51.5521%" y="677" width="0.0294%" height="15" fill="rgb(224,11,23)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="687.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="51.5521%" y="661" width="0.0294%" height="15" fill="rgb(232,99,1)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="51.5521%" y="645" width="0.0294%" height="15" fill="rgb(237,95,45)" fg:x="7025" fg:w="4"/><text x="51.8021%" y="655.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="51.5594%" y="629" width="0.0220%" height="15" fill="rgb(208,109,11)" fg:x="7026" fg:w="3"/><text x="51.8094%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="51.5888%" y="805" width="0.0220%" height="15" fill="rgb(216,190,48)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="51.5888%" y="789" width="0.0220%" height="15" fill="rgb(251,171,36)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="51.5888%" y="773" width="0.0220%" height="15" fill="rgb(230,62,22)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="51.5888%" y="757" width="0.0220%" height="15" fill="rgb(225,114,35)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="51.5888%" y="741" width="0.0220%" height="15" fill="rgb(215,118,42)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="51.5888%" y="725" width="0.0220%" height="15" fill="rgb(243,119,21)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="51.5888%" y="709" width="0.0220%" height="15" fill="rgb(252,177,53)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="51.5888%" y="693" width="0.0220%" height="15" fill="rgb(237,209,29)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="51.5888%" y="677" width="0.0220%" height="15" fill="rgb(212,65,23)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="51.5888%" y="661" width="0.0220%" height="15" fill="rgb(230,222,46)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="671.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="51.5888%" y="645" width="0.0220%" height="15" fill="rgb(215,135,32)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="655.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="51.5888%" y="629" width="0.0220%" height="15" fill="rgb(246,101,22)" fg:x="7030" fg:w="3"/><text x="51.8388%" y="639.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.05%)</title><rect x="51.5814%" y="821" width="0.0514%" height="15" fill="rgb(206,107,13)" fg:x="7029" fg:w="7"/><text x="51.8314%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="51.6181%" y="805" width="0.0147%" height="15" fill="rgb(250,100,44)" fg:x="7034" fg:w="2"/><text x="51.8681%" y="815.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (18 samples, 0.13%)</title><rect x="51.5227%" y="837" width="0.1321%" height="15" fill="rgb(231,147,38)" fg:x="7021" fg:w="18"/><text x="51.7727%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="51.6328%" y="821" width="0.0220%" height="15" fill="rgb(229,8,40)" fg:x="7036" fg:w="3"/><text x="51.8828%" y="831.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan as core::clone::Clone&gt;::clone (40 samples, 0.29%)</title><rect x="51.4420%" y="869" width="0.2935%" height="15" fill="rgb(221,135,30)" fg:x="7010" fg:w="40"/><text x="51.6920%" y="879.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (31 samples, 0.23%)</title><rect x="51.5080%" y="853" width="0.2275%" height="15" fill="rgb(249,193,18)" fg:x="7019" fg:w="31"/><text x="51.7580%" y="863.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.08%)</title><rect x="51.6548%" y="837" width="0.0807%" height="15" fill="rgb(209,133,39)" fg:x="7039" fg:w="11"/><text x="51.9048%" y="847.50"></text></g><g><title>_int_malloc (9 samples, 0.07%)</title><rect x="51.6695%" y="821" width="0.0660%" height="15" fill="rgb(232,100,14)" fg:x="7041" fg:w="9"/><text x="51.9195%" y="831.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (2 samples, 0.01%)</title><rect x="51.9630%" y="437" width="0.0147%" height="15" fill="rgb(224,185,1)" fg:x="7081" fg:w="2"/><text x="52.2130%" y="447.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (2 samples, 0.01%)</title><rect x="51.9630%" y="421" width="0.0147%" height="15" fill="rgb(223,139,8)" fg:x="7081" fg:w="2"/><text x="52.2130%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.01%)</title><rect x="51.9630%" y="405" width="0.0147%" height="15" fill="rgb(232,213,38)" fg:x="7081" fg:w="2"/><text x="52.2130%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="52.1245%" y="165" width="0.0147%" height="15" fill="rgb(207,94,22)" fg:x="7103" fg:w="2"/><text x="52.3745%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="52.1245%" y="149" width="0.0147%" height="15" fill="rgb(219,183,54)" fg:x="7103" fg:w="2"/><text x="52.3745%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="52.1245%" y="133" width="0.0147%" height="15" fill="rgb(216,185,54)" fg:x="7103" fg:w="2"/><text x="52.3745%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="52.1245%" y="245" width="0.0294%" height="15" fill="rgb(254,217,39)" fg:x="7103" fg:w="4"/><text x="52.3745%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="52.1245%" y="229" width="0.0294%" height="15" fill="rgb(240,178,23)" fg:x="7103" fg:w="4"/><text x="52.3745%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.03%)</title><rect x="52.1245%" y="213" width="0.0294%" height="15" fill="rgb(218,11,47)" fg:x="7103" fg:w="4"/><text x="52.3745%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.03%)</title><rect x="52.1245%" y="197" width="0.0294%" height="15" fill="rgb(218,51,51)" fg:x="7103" fg:w="4"/><text x="52.3745%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.03%)</title><rect x="52.1245%" y="181" width="0.0294%" height="15" fill="rgb(238,126,27)" fg:x="7103" fg:w="4"/><text x="52.3745%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="52.1391%" y="165" width="0.0147%" height="15" fill="rgb(249,202,22)" fg:x="7105" fg:w="2"/><text x="52.3891%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="52.1391%" y="149" width="0.0147%" height="15" fill="rgb(254,195,49)" fg:x="7105" fg:w="2"/><text x="52.3891%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="52.1391%" y="133" width="0.0147%" height="15" fill="rgb(208,123,14)" fg:x="7105" fg:w="2"/><text x="52.3891%" y="143.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="52.1685%" y="245" width="0.0147%" height="15" fill="rgb(224,200,8)" fg:x="7109" fg:w="2"/><text x="52.4185%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.1905%" y="213" width="0.0220%" height="15" fill="rgb(217,61,36)" fg:x="7112" fg:w="3"/><text x="52.4405%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="52.1978%" y="197" width="0.0147%" height="15" fill="rgb(206,35,45)" fg:x="7113" fg:w="2"/><text x="52.4478%" y="207.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="52.1978%" y="181" width="0.0147%" height="15" fill="rgb(217,65,33)" fg:x="7113" fg:w="2"/><text x="52.4478%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="52.1978%" y="165" width="0.0147%" height="15" fill="rgb(222,158,48)" fg:x="7113" fg:w="2"/><text x="52.4478%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="52.1978%" y="149" width="0.0147%" height="15" fill="rgb(254,2,54)" fg:x="7113" fg:w="2"/><text x="52.4478%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="52.1978%" y="133" width="0.0147%" height="15" fill="rgb(250,143,38)" fg:x="7113" fg:w="2"/><text x="52.4478%" y="143.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::fmt::Debug&gt;::fmt (21 samples, 0.15%)</title><rect x="52.0731%" y="309" width="0.1541%" height="15" fill="rgb(248,25,0)" fg:x="7096" fg:w="21"/><text x="52.3231%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (16 samples, 0.12%)</title><rect x="52.1098%" y="293" width="0.1174%" height="15" fill="rgb(206,152,27)" fg:x="7101" fg:w="16"/><text x="52.3598%" y="303.50"></text></g><g><title>core::fmt::write (15 samples, 0.11%)</title><rect x="52.1171%" y="277" width="0.1101%" height="15" fill="rgb(240,77,30)" fg:x="7102" fg:w="15"/><text x="52.3671%" y="287.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::fmt::Display&gt;::fmt (14 samples, 0.10%)</title><rect x="52.1245%" y="261" width="0.1027%" height="15" fill="rgb(231,5,3)" fg:x="7103" fg:w="14"/><text x="52.3745%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.04%)</title><rect x="52.1832%" y="245" width="0.0440%" height="15" fill="rgb(207,226,32)" fg:x="7111" fg:w="6"/><text x="52.4332%" y="255.50"></text></g><g><title>core::fmt::write (5 samples, 0.04%)</title><rect x="52.1905%" y="229" width="0.0367%" height="15" fill="rgb(222,207,47)" fg:x="7112" fg:w="5"/><text x="52.4405%" y="239.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.01%)</title><rect x="52.2125%" y="213" width="0.0147%" height="15" fill="rgb(229,115,45)" fg:x="7115" fg:w="2"/><text x="52.4625%" y="223.50"></text></g><g><title>_int_free (5 samples, 0.04%)</title><rect x="52.2932%" y="37" width="0.0367%" height="15" fill="rgb(224,191,6)" fg:x="7126" fg:w="5"/><text x="52.5432%" y="47.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.12%)</title><rect x="52.2492%" y="117" width="0.1248%" height="15" fill="rgb(230,227,24)" fg:x="7120" fg:w="17"/><text x="52.4992%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.12%)</title><rect x="52.2492%" y="101" width="0.1248%" height="15" fill="rgb(228,80,19)" fg:x="7120" fg:w="17"/><text x="52.4992%" y="111.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.12%)</title><rect x="52.2492%" y="85" width="0.1248%" height="15" fill="rgb(247,229,0)" fg:x="7120" fg:w="17"/><text x="52.4992%" y="95.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.12%)</title><rect x="52.2492%" y="69" width="0.1248%" height="15" fill="rgb(237,194,15)" fg:x="7120" fg:w="17"/><text x="52.4992%" y="79.50"></text></g><g><title>_int_realloc (12 samples, 0.09%)</title><rect x="52.2859%" y="53" width="0.0881%" height="15" fill="rgb(219,203,20)" fg:x="7125" fg:w="12"/><text x="52.5359%" y="63.50"></text></g><g><title>_int_malloc (6 samples, 0.04%)</title><rect x="52.3299%" y="37" width="0.0440%" height="15" fill="rgb(234,128,8)" fg:x="7131" fg:w="6"/><text x="52.5799%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.13%)</title><rect x="52.2492%" y="133" width="0.1321%" height="15" fill="rgb(248,202,8)" fg:x="7120" fg:w="18"/><text x="52.4992%" y="143.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (45 samples, 0.33%)</title><rect x="52.0584%" y="357" width="0.3302%" height="15" fill="rgb(206,104,37)" fg:x="7094" fg:w="45"/><text x="52.3084%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (45 samples, 0.33%)</title><rect x="52.0584%" y="341" width="0.3302%" height="15" fill="rgb(223,8,27)" fg:x="7094" fg:w="45"/><text x="52.3084%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (45 samples, 0.33%)</title><rect x="52.0584%" y="325" width="0.3302%" height="15" fill="rgb(216,217,28)" fg:x="7094" fg:w="45"/><text x="52.3084%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (22 samples, 0.16%)</title><rect x="52.2272%" y="309" width="0.1614%" height="15" fill="rgb(249,199,1)" fg:x="7117" fg:w="22"/><text x="52.4772%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.16%)</title><rect x="52.2272%" y="293" width="0.1614%" height="15" fill="rgb(240,85,17)" fg:x="7117" fg:w="22"/><text x="52.4772%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.15%)</title><rect x="52.2345%" y="277" width="0.1541%" height="15" fill="rgb(206,108,45)" fg:x="7118" fg:w="21"/><text x="52.4845%" y="287.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.15%)</title><rect x="52.2345%" y="261" width="0.1541%" height="15" fill="rgb(245,210,41)" fg:x="7118" fg:w="21"/><text x="52.4845%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.15%)</title><rect x="52.2345%" y="245" width="0.1541%" height="15" fill="rgb(206,13,37)" fg:x="7118" fg:w="21"/><text x="52.4845%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.15%)</title><rect x="52.2345%" y="229" width="0.1541%" height="15" fill="rgb(250,61,18)" fg:x="7118" fg:w="21"/><text x="52.4845%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.15%)</title><rect x="52.2345%" y="213" width="0.1541%" height="15" fill="rgb(235,172,48)" fg:x="7118" fg:w="21"/><text x="52.4845%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 0.15%)</title><rect x="52.2419%" y="197" width="0.1468%" height="15" fill="rgb(249,201,17)" fg:x="7119" fg:w="20"/><text x="52.4919%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.15%)</title><rect x="52.2419%" y="181" width="0.1468%" height="15" fill="rgb(219,208,6)" fg:x="7119" fg:w="20"/><text x="52.4919%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.15%)</title><rect x="52.2419%" y="165" width="0.1468%" height="15" fill="rgb(248,31,23)" fg:x="7119" fg:w="20"/><text x="52.4919%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.15%)</title><rect x="52.2419%" y="149" width="0.1468%" height="15" fill="rgb(245,15,42)" fg:x="7119" fg:w="20"/><text x="52.4919%" y="159.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (52 samples, 0.38%)</title><rect x="52.0291%" y="389" width="0.3816%" height="15" fill="rgb(222,217,39)" fg:x="7090" fg:w="52"/><text x="52.2791%" y="399.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (49 samples, 0.36%)</title><rect x="52.0511%" y="373" width="0.3596%" height="15" fill="rgb(210,219,27)" fg:x="7093" fg:w="49"/><text x="52.3011%" y="383.50"></text></g><g><title>core::fmt::builders::debug_struct_new (3 samples, 0.02%)</title><rect x="52.3886%" y="357" width="0.0220%" height="15" fill="rgb(252,166,36)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.02%)</title><rect x="52.3886%" y="341" width="0.0220%" height="15" fill="rgb(245,132,34)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.3886%" y="325" width="0.0220%" height="15" fill="rgb(236,54,3)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.3886%" y="309" width="0.0220%" height="15" fill="rgb(241,173,43)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="319.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="52.3886%" y="293" width="0.0220%" height="15" fill="rgb(215,190,9)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="52.3886%" y="277" width="0.0220%" height="15" fill="rgb(242,101,16)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="52.3886%" y="261" width="0.0220%" height="15" fill="rgb(223,190,21)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="52.3886%" y="245" width="0.0220%" height="15" fill="rgb(215,228,25)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="52.3886%" y="229" width="0.0220%" height="15" fill="rgb(225,36,22)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="52.3886%" y="213" width="0.0220%" height="15" fill="rgb(251,106,46)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="52.3886%" y="197" width="0.0220%" height="15" fill="rgb(208,90,1)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="52.3886%" y="181" width="0.0220%" height="15" fill="rgb(243,10,4)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="52.3886%" y="165" width="0.0220%" height="15" fill="rgb(212,137,27)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="52.3886%" y="149" width="0.0220%" height="15" fill="rgb(231,220,49)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="52.3886%" y="133" width="0.0220%" height="15" fill="rgb(237,96,20)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="143.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="52.3886%" y="117" width="0.0220%" height="15" fill="rgb(239,229,30)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="127.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="52.3886%" y="101" width="0.0220%" height="15" fill="rgb(219,65,33)" fg:x="7139" fg:w="3"/><text x="52.6386%" y="111.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="52.3960%" y="85" width="0.0147%" height="15" fill="rgb(243,134,7)" fg:x="7140" fg:w="2"/><text x="52.6460%" y="95.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="52.3960%" y="69" width="0.0147%" height="15" fill="rgb(216,177,54)" fg:x="7140" fg:w="2"/><text x="52.6460%" y="79.50"></text></g><g><title>core::fmt::Formatter::write_str (5 samples, 0.04%)</title><rect x="52.4107%" y="389" width="0.0367%" height="15" fill="rgb(211,160,20)" fg:x="7142" fg:w="5"/><text x="52.6607%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="52.4180%" y="373" width="0.0294%" height="15" fill="rgb(239,85,39)" fg:x="7143" fg:w="4"/><text x="52.6680%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="52.4180%" y="357" width="0.0294%" height="15" fill="rgb(232,125,22)" fg:x="7143" fg:w="4"/><text x="52.6680%" y="367.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.03%)</title><rect x="52.4180%" y="341" width="0.0294%" height="15" fill="rgb(244,57,34)" fg:x="7143" fg:w="4"/><text x="52.6680%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.03%)</title><rect x="52.4180%" y="325" width="0.0294%" height="15" fill="rgb(214,203,32)" fg:x="7143" fg:w="4"/><text x="52.6680%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="52.4180%" y="309" width="0.0294%" height="15" fill="rgb(207,58,43)" fg:x="7143" fg:w="4"/><text x="52.6680%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.03%)</title><rect x="52.4180%" y="293" width="0.0294%" height="15" fill="rgb(215,193,15)" fg:x="7143" fg:w="4"/><text x="52.6680%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="52.4253%" y="277" width="0.0220%" height="15" fill="rgb(232,15,44)" fg:x="7144" fg:w="3"/><text x="52.6753%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="52.4327%" y="261" width="0.0147%" height="15" fill="rgb(212,3,48)" fg:x="7145" fg:w="2"/><text x="52.6827%" y="271.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Debug for f64&gt;::fmt (4 samples, 0.03%)</title><rect x="52.4473%" y="389" width="0.0294%" height="15" fill="rgb(218,128,7)" fg:x="7147" fg:w="4"/><text x="52.6973%" y="399.50"></text></g><g><title>core::fmt::float::float_to_general_debug (2 samples, 0.01%)</title><rect x="52.4620%" y="373" width="0.0147%" height="15" fill="rgb(226,216,39)" fg:x="7149" fg:w="2"/><text x="52.7120%" y="383.50"></text></g><g><title>&lt;f64 as core::fmt::float::GeneralFormat&gt;::already_rounded_value_should_use_exponential (2 samples, 0.01%)</title><rect x="52.4620%" y="357" width="0.0147%" height="15" fill="rgb(243,47,51)" fg:x="7149" fg:w="2"/><text x="52.7120%" y="367.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs_private (2 samples, 0.01%)</title><rect x="52.4620%" y="341" width="0.0147%" height="15" fill="rgb(241,183,40)" fg:x="7149" fg:w="2"/><text x="52.7120%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (7 samples, 0.05%)</title><rect x="52.4840%" y="373" width="0.0514%" height="15" fill="rgb(231,217,32)" fg:x="7152" fg:w="7"/><text x="52.7340%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (3 samples, 0.02%)</title><rect x="52.5134%" y="357" width="0.0220%" height="15" fill="rgb(229,61,38)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.5134%" y="341" width="0.0220%" height="15" fill="rgb(225,210,5)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.5134%" y="325" width="0.0220%" height="15" fill="rgb(231,79,45)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="335.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="52.5134%" y="309" width="0.0220%" height="15" fill="rgb(224,100,7)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="52.5134%" y="293" width="0.0220%" height="15" fill="rgb(241,198,18)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="52.5134%" y="277" width="0.0220%" height="15" fill="rgb(252,97,53)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="52.5134%" y="261" width="0.0220%" height="15" fill="rgb(220,88,7)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="52.5134%" y="245" width="0.0220%" height="15" fill="rgb(213,176,14)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="255.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="52.5134%" y="229" width="0.0220%" height="15" fill="rgb(246,73,7)" fg:x="7156" fg:w="3"/><text x="52.7634%" y="239.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (12 samples, 0.09%)</title><rect x="52.4767%" y="389" width="0.0881%" height="15" fill="rgb(245,64,36)" fg:x="7151" fg:w="12"/><text x="52.7267%" y="399.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (4 samples, 0.03%)</title><rect x="52.5354%" y="373" width="0.0294%" height="15" fill="rgb(245,80,10)" fg:x="7159" fg:w="4"/><text x="52.7854%" y="383.50"></text></g><g><title>core::num::flt2dec::decoder::decode (3 samples, 0.02%)</title><rect x="52.5427%" y="357" width="0.0220%" height="15" fill="rgb(232,107,50)" fg:x="7160" fg:w="3"/><text x="52.7927%" y="367.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (90 samples, 0.66%)</title><rect x="51.9777%" y="437" width="0.6605%" height="15" fill="rgb(253,3,0)" fg:x="7083" fg:w="90"/><text x="52.2277%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (88 samples, 0.65%)</title><rect x="51.9924%" y="421" width="0.6458%" height="15" fill="rgb(212,99,53)" fg:x="7085" fg:w="88"/><text x="52.2424%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (87 samples, 0.64%)</title><rect x="51.9997%" y="405" width="0.6384%" height="15" fill="rgb(249,111,54)" fg:x="7086" fg:w="87"/><text x="52.2497%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (10 samples, 0.07%)</title><rect x="52.5648%" y="389" width="0.0734%" height="15" fill="rgb(249,55,30)" fg:x="7163" fg:w="10"/><text x="52.8148%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (10 samples, 0.07%)</title><rect x="52.5648%" y="373" width="0.0734%" height="15" fill="rgb(237,47,42)" fg:x="7163" fg:w="10"/><text x="52.8148%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral (5 samples, 0.04%)</title><rect x="52.6015%" y="357" width="0.0367%" height="15" fill="rgb(211,20,18)" fg:x="7168" fg:w="5"/><text x="52.8515%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (97 samples, 0.71%)</title><rect x="51.9557%" y="453" width="0.7118%" height="15" fill="rgb(231,203,46)" fg:x="7080" fg:w="97"/><text x="52.2057%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (4 samples, 0.03%)</title><rect x="52.6381%" y="437" width="0.0294%" height="15" fill="rgb(237,142,3)" fg:x="7173" fg:w="4"/><text x="52.8881%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="52.6455%" y="421" width="0.0220%" height="15" fill="rgb(241,107,1)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish::{{closure}} (3 samples, 0.02%)</title><rect x="52.6455%" y="405" width="0.0220%" height="15" fill="rgb(229,83,13)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.02%)</title><rect x="52.6455%" y="389" width="0.0220%" height="15" fill="rgb(241,91,40)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.6455%" y="373" width="0.0220%" height="15" fill="rgb(225,3,45)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="52.6455%" y="357" width="0.0220%" height="15" fill="rgb(244,223,14)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="367.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="52.6455%" y="341" width="0.0220%" height="15" fill="rgb(224,124,37)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="52.6455%" y="325" width="0.0220%" height="15" fill="rgb(251,171,30)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="52.6455%" y="309" width="0.0220%" height="15" fill="rgb(236,46,54)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="52.6455%" y="293" width="0.0220%" height="15" fill="rgb(245,213,5)" fg:x="7174" fg:w="3"/><text x="52.8955%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (103 samples, 0.76%)</title><rect x="51.9263%" y="533" width="0.7559%" height="15" fill="rgb(230,144,27)" fg:x="7076" fg:w="103"/><text x="52.1763%" y="543.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (99 samples, 0.73%)</title><rect x="51.9557%" y="517" width="0.7265%" height="15" fill="rgb(220,86,6)" fg:x="7080" fg:w="99"/><text x="52.2057%" y="527.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (99 samples, 0.73%)</title><rect x="51.9557%" y="501" width="0.7265%" height="15" fill="rgb(240,20,13)" fg:x="7080" fg:w="99"/><text x="52.2057%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (99 samples, 0.73%)</title><rect x="51.9557%" y="485" width="0.7265%" height="15" fill="rgb(217,89,34)" fg:x="7080" fg:w="99"/><text x="52.2057%" y="495.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (99 samples, 0.73%)</title><rect x="51.9557%" y="469" width="0.7265%" height="15" fill="rgb(229,13,5)" fg:x="7080" fg:w="99"/><text x="52.2057%" y="479.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="52.7629%" y="261" width="0.0147%" height="15" fill="rgb(244,67,35)" fg:x="7190" fg:w="2"/><text x="53.0129%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.10%)</title><rect x="52.6969%" y="357" width="0.0954%" height="15" fill="rgb(221,40,2)" fg:x="7181" fg:w="13"/><text x="52.9469%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.09%)</title><rect x="52.7042%" y="341" width="0.0881%" height="15" fill="rgb(237,157,21)" fg:x="7182" fg:w="12"/><text x="52.9542%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.09%)</title><rect x="52.7042%" y="325" width="0.0881%" height="15" fill="rgb(222,94,11)" fg:x="7182" fg:w="12"/><text x="52.9542%" y="335.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.09%)</title><rect x="52.7042%" y="309" width="0.0881%" height="15" fill="rgb(249,113,6)" fg:x="7182" fg:w="12"/><text x="52.9542%" y="319.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.09%)</title><rect x="52.7042%" y="293" width="0.0881%" height="15" fill="rgb(238,137,36)" fg:x="7182" fg:w="12"/><text x="52.9542%" y="303.50"></text></g><g><title>_int_realloc (9 samples, 0.07%)</title><rect x="52.7262%" y="277" width="0.0660%" height="15" fill="rgb(210,102,26)" fg:x="7185" fg:w="9"/><text x="52.9762%" y="287.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="52.7776%" y="261" width="0.0147%" height="15" fill="rgb(218,30,30)" fg:x="7192" fg:w="2"/><text x="53.0276%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.11%)</title><rect x="52.6895%" y="421" width="0.1101%" height="15" fill="rgb(214,67,26)" fg:x="7180" fg:w="15"/><text x="52.9395%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.11%)</title><rect x="52.6895%" y="405" width="0.1101%" height="15" fill="rgb(251,9,53)" fg:x="7180" fg:w="15"/><text x="52.9395%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.11%)</title><rect x="52.6895%" y="389" width="0.1101%" height="15" fill="rgb(228,204,25)" fg:x="7180" fg:w="15"/><text x="52.9395%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.11%)</title><rect x="52.6895%" y="373" width="0.1101%" height="15" fill="rgb(207,153,8)" fg:x="7180" fg:w="15"/><text x="52.9395%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (17 samples, 0.12%)</title><rect x="52.6822%" y="533" width="0.1248%" height="15" fill="rgb(242,9,16)" fg:x="7179" fg:w="17"/><text x="52.9322%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.12%)</title><rect x="52.6895%" y="517" width="0.1174%" height="15" fill="rgb(217,211,10)" fg:x="7180" fg:w="16"/><text x="52.9395%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.12%)</title><rect x="52.6895%" y="501" width="0.1174%" height="15" fill="rgb(219,228,52)" fg:x="7180" fg:w="16"/><text x="52.9395%" y="511.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.12%)</title><rect x="52.6895%" y="485" width="0.1174%" height="15" fill="rgb(231,92,29)" fg:x="7180" fg:w="16"/><text x="52.9395%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.12%)</title><rect x="52.6895%" y="469" width="0.1174%" height="15" fill="rgb(232,8,23)" fg:x="7180" fg:w="16"/><text x="52.9395%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.12%)</title><rect x="52.6895%" y="453" width="0.1174%" height="15" fill="rgb(216,211,34)" fg:x="7180" fg:w="16"/><text x="52.9395%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.12%)</title><rect x="52.6895%" y="437" width="0.1174%" height="15" fill="rgb(236,151,0)" fg:x="7180" fg:w="16"/><text x="52.9395%" y="447.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (122 samples, 0.90%)</title><rect x="51.9263%" y="581" width="0.8953%" height="15" fill="rgb(209,168,3)" fg:x="7076" fg:w="122"/><text x="52.1763%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (122 samples, 0.90%)</title><rect x="51.9263%" y="565" width="0.8953%" height="15" fill="rgb(208,129,28)" fg:x="7076" fg:w="122"/><text x="52.1763%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (122 samples, 0.90%)</title><rect x="51.9263%" y="549" width="0.8953%" height="15" fill="rgb(229,78,22)" fg:x="7076" fg:w="122"/><text x="52.1763%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::is_pretty (2 samples, 0.01%)</title><rect x="52.8069%" y="533" width="0.0147%" height="15" fill="rgb(228,187,13)" fg:x="7196" fg:w="2"/><text x="53.0569%" y="543.50"></text></g><g><title>core::fmt::Formatter::alternate (2 samples, 0.01%)</title><rect x="52.8069%" y="517" width="0.0147%" height="15" fill="rgb(240,119,24)" fg:x="7196" fg:w="2"/><text x="53.0569%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (3 samples, 0.02%)</title><rect x="52.8216%" y="581" width="0.0220%" height="15" fill="rgb(209,194,42)" fg:x="7198" fg:w="3"/><text x="53.0716%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="52.8289%" y="565" width="0.0147%" height="15" fill="rgb(247,200,46)" fg:x="7199" fg:w="2"/><text x="53.0789%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (2 samples, 0.01%)</title><rect x="52.8289%" y="549" width="0.0147%" height="15" fill="rgb(218,76,16)" fg:x="7199" fg:w="2"/><text x="53.0789%" y="559.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (130 samples, 0.95%)</title><rect x="51.9043%" y="661" width="0.9540%" height="15" fill="rgb(225,21,48)" fg:x="7073" fg:w="130"/><text x="52.1543%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (127 samples, 0.93%)</title><rect x="51.9263%" y="645" width="0.9320%" height="15" fill="rgb(239,223,50)" fg:x="7076" fg:w="127"/><text x="52.1763%" y="655.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (127 samples, 0.93%)</title><rect x="51.9263%" y="629" width="0.9320%" height="15" fill="rgb(244,45,21)" fg:x="7076" fg:w="127"/><text x="52.1763%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (127 samples, 0.93%)</title><rect x="51.9263%" y="613" width="0.9320%" height="15" fill="rgb(232,33,43)" fg:x="7076" fg:w="127"/><text x="52.1763%" y="623.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field1_finish (127 samples, 0.93%)</title><rect x="51.9263%" y="597" width="0.9320%" height="15" fill="rgb(209,8,3)" fg:x="7076" fg:w="127"/><text x="52.1763%" y="607.50"></text></g><g><title>core::fmt::builders::debug_struct_new (2 samples, 0.01%)</title><rect x="52.8436%" y="581" width="0.0147%" height="15" fill="rgb(214,25,53)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.01%)</title><rect x="52.8436%" y="565" width="0.0147%" height="15" fill="rgb(254,186,54)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="52.8436%" y="549" width="0.0147%" height="15" fill="rgb(208,174,49)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="52.8436%" y="533" width="0.0147%" height="15" fill="rgb(233,191,51)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="543.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="52.8436%" y="517" width="0.0147%" height="15" fill="rgb(222,134,10)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="52.8436%" y="501" width="0.0147%" height="15" fill="rgb(230,226,20)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="52.8436%" y="485" width="0.0147%" height="15" fill="rgb(251,111,25)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="52.8436%" y="469" width="0.0147%" height="15" fill="rgb(224,40,46)" fg:x="7201" fg:w="2"/><text x="53.0936%" y="479.50"></text></g><g><title>core::fmt::builders::DebugTuple::finish (3 samples, 0.02%)</title><rect x="52.8583%" y="661" width="0.0220%" height="15" fill="rgb(236,108,47)" fg:x="7203" fg:w="3"/><text x="53.1083%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.03%)</title><rect x="52.8876%" y="453" width="0.0294%" height="15" fill="rgb(234,93,0)" fg:x="7207" fg:w="4"/><text x="53.1376%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.03%)</title><rect x="52.8876%" y="437" width="0.0294%" height="15" fill="rgb(224,213,32)" fg:x="7207" fg:w="4"/><text x="53.1376%" y="447.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.03%)</title><rect x="52.8876%" y="421" width="0.0294%" height="15" fill="rgb(251,11,48)" fg:x="7207" fg:w="4"/><text x="53.1376%" y="431.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.03%)</title><rect x="52.8876%" y="405" width="0.0294%" height="15" fill="rgb(236,173,5)" fg:x="7207" fg:w="4"/><text x="53.1376%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (139 samples, 1.02%)</title><rect x="51.9043%" y="693" width="1.0200%" height="15" fill="rgb(230,95,12)" fg:x="7073" fg:w="139"/><text x="52.1543%" y="703.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (139 samples, 1.02%)</title><rect x="51.9043%" y="677" width="1.0200%" height="15" fill="rgb(232,209,1)" fg:x="7073" fg:w="139"/><text x="52.1543%" y="687.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (6 samples, 0.04%)</title><rect x="52.8803%" y="661" width="0.0440%" height="15" fill="rgb(232,6,1)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (6 samples, 0.04%)</title><rect x="52.8803%" y="645" width="0.0440%" height="15" fill="rgb(210,224,50)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.04%)</title><rect x="52.8803%" y="629" width="0.0440%" height="15" fill="rgb(228,127,35)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.04%)</title><rect x="52.8803%" y="613" width="0.0440%" height="15" fill="rgb(245,102,45)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="623.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.04%)</title><rect x="52.8803%" y="597" width="0.0440%" height="15" fill="rgb(214,1,49)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.04%)</title><rect x="52.8803%" y="581" width="0.0440%" height="15" fill="rgb(226,163,40)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.04%)</title><rect x="52.8803%" y="565" width="0.0440%" height="15" fill="rgb(239,212,28)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.04%)</title><rect x="52.8803%" y="549" width="0.0440%" height="15" fill="rgb(220,20,13)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="52.8803%" y="533" width="0.0440%" height="15" fill="rgb(210,164,35)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="52.8803%" y="517" width="0.0440%" height="15" fill="rgb(248,109,41)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.04%)</title><rect x="52.8803%" y="501" width="0.0440%" height="15" fill="rgb(238,23,50)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.04%)</title><rect x="52.8803%" y="485" width="0.0440%" height="15" fill="rgb(211,48,49)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="52.8803%" y="469" width="0.0440%" height="15" fill="rgb(223,36,21)" fg:x="7206" fg:w="6"/><text x="53.1303%" y="479.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="52.9317%" y="469" width="0.0220%" height="15" fill="rgb(207,123,46)" fg:x="7213" fg:w="3"/><text x="53.1817%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.03%)</title><rect x="52.9317%" y="517" width="0.0294%" height="15" fill="rgb(240,218,32)" fg:x="7213" fg:w="4"/><text x="53.1817%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.03%)</title><rect x="52.9317%" y="501" width="0.0294%" height="15" fill="rgb(252,5,43)" fg:x="7213" fg:w="4"/><text x="53.1817%" y="511.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.03%)</title><rect x="52.9317%" y="485" width="0.0294%" height="15" fill="rgb(252,84,19)" fg:x="7213" fg:w="4"/><text x="53.1817%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.15%)</title><rect x="52.9317%" y="533" width="0.1468%" height="15" fill="rgb(243,152,39)" fg:x="7213" fg:w="20"/><text x="53.1817%" y="543.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.12%)</title><rect x="52.9610%" y="517" width="0.1174%" height="15" fill="rgb(234,160,15)" fg:x="7217" fg:w="16"/><text x="53.2110%" y="527.50"></text></g><g><title>_int_malloc (14 samples, 0.10%)</title><rect x="52.9757%" y="501" width="0.1027%" height="15" fill="rgb(237,34,20)" fg:x="7219" fg:w="14"/><text x="53.2257%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.16%)</title><rect x="52.9243%" y="597" width="0.1614%" height="15" fill="rgb(229,97,13)" fg:x="7212" fg:w="22"/><text x="53.1743%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.16%)</title><rect x="52.9243%" y="581" width="0.1614%" height="15" fill="rgb(234,71,50)" fg:x="7212" fg:w="22"/><text x="53.1743%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.16%)</title><rect x="52.9243%" y="565" width="0.1614%" height="15" fill="rgb(253,155,4)" fg:x="7212" fg:w="22"/><text x="53.1743%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.16%)</title><rect x="52.9243%" y="549" width="0.1614%" height="15" fill="rgb(222,185,37)" fg:x="7212" fg:w="22"/><text x="53.1743%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.18%)</title><rect x="52.9243%" y="693" width="0.1835%" height="15" fill="rgb(251,177,13)" fg:x="7212" fg:w="25"/><text x="53.1743%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25 samples, 0.18%)</title><rect x="52.9243%" y="677" width="0.1835%" height="15" fill="rgb(250,179,40)" fg:x="7212" fg:w="25"/><text x="53.1743%" y="687.50"></text></g><g><title>alloc::string::String::push_str (25 samples, 0.18%)</title><rect x="52.9243%" y="661" width="0.1835%" height="15" fill="rgb(242,44,2)" fg:x="7212" fg:w="25"/><text x="53.1743%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.18%)</title><rect x="52.9243%" y="645" width="0.1835%" height="15" fill="rgb(216,177,13)" fg:x="7212" fg:w="25"/><text x="53.1743%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.18%)</title><rect x="52.9243%" y="629" width="0.1835%" height="15" fill="rgb(216,106,43)" fg:x="7212" fg:w="25"/><text x="53.1743%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.18%)</title><rect x="52.9243%" y="613" width="0.1835%" height="15" fill="rgb(216,183,2)" fg:x="7212" fg:w="25"/><text x="53.1743%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="53.0858%" y="597" width="0.0220%" height="15" fill="rgb(249,75,3)" fg:x="7234" fg:w="3"/><text x="53.3358%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="53.0931%" y="581" width="0.0147%" height="15" fill="rgb(219,67,39)" fg:x="7235" fg:w="2"/><text x="53.3431%" y="591.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (174 samples, 1.28%)</title><rect x="51.8456%" y="741" width="1.2769%" height="15" fill="rgb(253,228,2)" fg:x="7065" fg:w="174"/><text x="52.0956%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (169 samples, 1.24%)</title><rect x="51.8823%" y="725" width="1.2402%" height="15" fill="rgb(235,138,27)" fg:x="7070" fg:w="169"/><text x="52.1323%" y="735.50"></text></g><g><title>core::fmt::write (167 samples, 1.23%)</title><rect x="51.8970%" y="709" width="1.2255%" height="15" fill="rgb(236,97,51)" fg:x="7072" fg:w="167"/><text x="52.1470%" y="719.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="53.1518%" y="725" width="0.0147%" height="15" fill="rgb(240,80,30)" fg:x="7243" fg:w="2"/><text x="53.4018%" y="735.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.01%)</title><rect x="53.1665%" y="725" width="0.0147%" height="15" fill="rgb(230,178,19)" fg:x="7245" fg:w="2"/><text x="53.4165%" y="735.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (193 samples, 1.42%)</title><rect x="51.7722%" y="789" width="1.4163%" height="15" fill="rgb(210,190,27)" fg:x="7055" fg:w="193"/><text x="52.0222%" y="799.50"></text></g><g><title>core::fmt::Formatter::write_fmt (190 samples, 1.39%)</title><rect x="51.7942%" y="773" width="1.3943%" height="15" fill="rgb(222,107,31)" fg:x="7058" fg:w="190"/><text x="52.0442%" y="783.50"></text></g><g><title>core::fmt::write (185 samples, 1.36%)</title><rect x="51.8309%" y="757" width="1.3576%" height="15" fill="rgb(216,127,34)" fg:x="7063" fg:w="185"/><text x="52.0809%" y="767.50"></text></g><g><title>core::fmt::run (8 samples, 0.06%)</title><rect x="53.1298%" y="741" width="0.0587%" height="15" fill="rgb(234,116,52)" fg:x="7240" fg:w="8"/><text x="53.3798%" y="751.50"></text></g><g><title>datafusion_expr::expr_visitor::inspect_expr_pre (11 samples, 0.08%)</title><rect x="53.1885%" y="789" width="0.0807%" height="15" fill="rgb(222,124,15)" fg:x="7248" fg:w="11"/><text x="53.4385%" y="799.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (11 samples, 0.08%)</title><rect x="53.1885%" y="773" width="0.0807%" height="15" fill="rgb(231,179,28)" fg:x="7248" fg:w="11"/><text x="53.4385%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as datafusion_expr::expr_visitor::ExprVisitable&gt;::accept (6 samples, 0.04%)</title><rect x="53.2252%" y="757" width="0.0440%" height="15" fill="rgb(226,93,45)" fg:x="7253" fg:w="6"/><text x="53.4752%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="53.3573%" y="725" width="0.0147%" height="15" fill="rgb(215,8,51)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="53.3573%" y="709" width="0.0147%" height="15" fill="rgb(223,106,5)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="719.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="53.3573%" y="693" width="0.0147%" height="15" fill="rgb(250,191,5)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="53.3573%" y="677" width="0.0147%" height="15" fill="rgb(242,132,44)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="53.3573%" y="661" width="0.0147%" height="15" fill="rgb(251,152,29)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="53.3573%" y="645" width="0.0147%" height="15" fill="rgb(218,179,5)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="53.3573%" y="629" width="0.0147%" height="15" fill="rgb(227,67,19)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="53.3573%" y="613" width="0.0147%" height="15" fill="rgb(233,119,31)" fg:x="7271" fg:w="2"/><text x="53.6073%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="53.4307%" y="709" width="0.0220%" height="15" fill="rgb(241,120,22)" fg:x="7281" fg:w="3"/><text x="53.6807%" y="719.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="53.4380%" y="693" width="0.0147%" height="15" fill="rgb(224,102,30)" fg:x="7282" fg:w="2"/><text x="53.6880%" y="703.50"></text></g><g><title>&lt;datafusion::datasource::default_table_source::DefaultTableSource as datafusion_expr::table_source::TableSource&gt;::schema (2 samples, 0.01%)</title><rect x="53.4527%" y="709" width="0.0147%" height="15" fill="rgb(210,164,37)" fg:x="7284" fg:w="2"/><text x="53.7027%" y="719.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::schema (2 samples, 0.01%)</title><rect x="53.4674%" y="709" width="0.0147%" height="15" fill="rgb(226,191,16)" fg:x="7286" fg:w="2"/><text x="53.7174%" y="719.50"></text></g><g><title>_int_free (9 samples, 0.07%)</title><rect x="53.4967%" y="709" width="0.0660%" height="15" fill="rgb(214,40,45)" fg:x="7290" fg:w="9"/><text x="53.7467%" y="719.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="53.6508%" y="405" width="0.0440%" height="15" fill="rgb(244,29,26)" fg:x="7311" fg:w="6"/><text x="53.9008%" y="415.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="53.6802%" y="389" width="0.0147%" height="15" fill="rgb(216,16,5)" fg:x="7315" fg:w="2"/><text x="53.9302%" y="399.50"></text></g><g><title>_int_malloc (6 samples, 0.04%)</title><rect x="53.6949%" y="405" width="0.0440%" height="15" fill="rgb(249,76,35)" fg:x="7317" fg:w="6"/><text x="53.9449%" y="415.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.15%)</title><rect x="53.6141%" y="437" width="0.1468%" height="15" fill="rgb(207,11,44)" fg:x="7306" fg:w="20"/><text x="53.8641%" y="447.50"></text></g><g><title>_int_realloc (16 samples, 0.12%)</title><rect x="53.6435%" y="421" width="0.1174%" height="15" fill="rgb(228,190,49)" fg:x="7310" fg:w="16"/><text x="53.8935%" y="431.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.02%)</title><rect x="53.7389%" y="405" width="0.0220%" height="15" fill="rgb(214,173,12)" fg:x="7323" fg:w="3"/><text x="53.9889%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (21 samples, 0.15%)</title><rect x="53.6141%" y="501" width="0.1541%" height="15" fill="rgb(218,26,35)" fg:x="7306" fg:w="21"/><text x="53.8641%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.15%)</title><rect x="53.6141%" y="485" width="0.1541%" height="15" fill="rgb(220,200,19)" fg:x="7306" fg:w="21"/><text x="53.8641%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.15%)</title><rect x="53.6141%" y="469" width="0.1541%" height="15" fill="rgb(239,95,49)" fg:x="7306" fg:w="21"/><text x="53.8641%" y="479.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.15%)</title><rect x="53.6141%" y="453" width="0.1541%" height="15" fill="rgb(235,85,53)" fg:x="7306" fg:w="21"/><text x="53.8641%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.18%)</title><rect x="53.5921%" y="565" width="0.1835%" height="15" fill="rgb(233,133,31)" fg:x="7303" fg:w="25"/><text x="53.8421%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.18%)</title><rect x="53.5921%" y="549" width="0.1835%" height="15" fill="rgb(218,25,20)" fg:x="7303" fg:w="25"/><text x="53.8421%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.17%)</title><rect x="53.6068%" y="533" width="0.1688%" height="15" fill="rgb(252,210,38)" fg:x="7305" fg:w="23"/><text x="53.8568%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.17%)</title><rect x="53.6068%" y="517" width="0.1688%" height="15" fill="rgb(242,134,21)" fg:x="7305" fg:w="23"/><text x="53.8568%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (29 samples, 0.21%)</title><rect x="53.5921%" y="661" width="0.2128%" height="15" fill="rgb(213,28,48)" fg:x="7303" fg:w="29"/><text x="53.8421%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29 samples, 0.21%)</title><rect x="53.5921%" y="645" width="0.2128%" height="15" fill="rgb(250,196,2)" fg:x="7303" fg:w="29"/><text x="53.8421%" y="655.50"></text></g><g><title>alloc::string::String::push_str (29 samples, 0.21%)</title><rect x="53.5921%" y="629" width="0.2128%" height="15" fill="rgb(227,5,17)" fg:x="7303" fg:w="29"/><text x="53.8421%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.21%)</title><rect x="53.5921%" y="613" width="0.2128%" height="15" fill="rgb(221,226,24)" fg:x="7303" fg:w="29"/><text x="53.8421%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29 samples, 0.21%)</title><rect x="53.5921%" y="597" width="0.2128%" height="15" fill="rgb(211,5,48)" fg:x="7303" fg:w="29"/><text x="53.8421%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.21%)</title><rect x="53.5921%" y="581" width="0.2128%" height="15" fill="rgb(219,150,6)" fg:x="7303" fg:w="29"/><text x="53.8421%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.03%)</title><rect x="53.7756%" y="565" width="0.0294%" height="15" fill="rgb(251,46,16)" fg:x="7328" fg:w="4"/><text x="54.0256%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="53.7756%" y="549" width="0.0294%" height="15" fill="rgb(220,204,40)" fg:x="7328" fg:w="4"/><text x="54.0256%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (36 samples, 0.26%)</title><rect x="53.5628%" y="709" width="0.2642%" height="15" fill="rgb(211,85,2)" fg:x="7299" fg:w="36"/><text x="53.8128%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (34 samples, 0.25%)</title><rect x="53.5775%" y="693" width="0.2495%" height="15" fill="rgb(229,17,7)" fg:x="7301" fg:w="34"/><text x="53.8275%" y="703.50"></text></g><g><title>core::fmt::write (34 samples, 0.25%)</title><rect x="53.5775%" y="677" width="0.2495%" height="15" fill="rgb(239,72,28)" fg:x="7301" fg:w="34"/><text x="53.8275%" y="687.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (9 samples, 0.07%)</title><rect x="53.8270%" y="709" width="0.0660%" height="15" fill="rgb(230,47,54)" fg:x="7335" fg:w="9"/><text x="54.0770%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="53.8710%" y="693" width="0.0220%" height="15" fill="rgb(214,50,8)" fg:x="7341" fg:w="3"/><text x="54.1210%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="53.9150%" y="677" width="0.0147%" height="15" fill="rgb(216,198,43)" fg:x="7347" fg:w="2"/><text x="54.1650%" y="687.50"></text></g><g><title>_int_free (8 samples, 0.06%)</title><rect x="54.0765%" y="421" width="0.0587%" height="15" fill="rgb(234,20,35)" fg:x="7369" fg:w="8"/><text x="54.3265%" y="431.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="54.1205%" y="405" width="0.0147%" height="15" fill="rgb(254,45,19)" fg:x="7375" fg:w="2"/><text x="54.3705%" y="415.50"></text></g><g><title>_int_malloc (13 samples, 0.10%)</title><rect x="54.1352%" y="421" width="0.0954%" height="15" fill="rgb(219,14,44)" fg:x="7377" fg:w="13"/><text x="54.3852%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 0.30%)</title><rect x="53.9370%" y="581" width="0.3009%" height="15" fill="rgb(217,220,26)" fg:x="7350" fg:w="41"/><text x="54.1870%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.30%)</title><rect x="53.9370%" y="565" width="0.3009%" height="15" fill="rgb(213,158,28)" fg:x="7350" fg:w="41"/><text x="54.1870%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.30%)</title><rect x="53.9370%" y="549" width="0.3009%" height="15" fill="rgb(252,51,52)" fg:x="7350" fg:w="41"/><text x="54.1870%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.30%)</title><rect x="53.9370%" y="533" width="0.3009%" height="15" fill="rgb(246,89,16)" fg:x="7350" fg:w="41"/><text x="54.1870%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.30%)</title><rect x="53.9370%" y="517" width="0.3009%" height="15" fill="rgb(216,158,49)" fg:x="7350" fg:w="41"/><text x="54.1870%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (40 samples, 0.29%)</title><rect x="53.9444%" y="501" width="0.2935%" height="15" fill="rgb(236,107,19)" fg:x="7351" fg:w="40"/><text x="54.1944%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (40 samples, 0.29%)</title><rect x="53.9444%" y="485" width="0.2935%" height="15" fill="rgb(228,185,30)" fg:x="7351" fg:w="40"/><text x="54.1944%" y="495.50"></text></g><g><title>alloc::alloc::realloc (40 samples, 0.29%)</title><rect x="53.9444%" y="469" width="0.2935%" height="15" fill="rgb(246,134,8)" fg:x="7351" fg:w="40"/><text x="54.1944%" y="479.50"></text></g><g><title>__GI___libc_realloc (40 samples, 0.29%)</title><rect x="53.9444%" y="453" width="0.2935%" height="15" fill="rgb(214,143,50)" fg:x="7351" fg:w="40"/><text x="54.1944%" y="463.50"></text></g><g><title>_int_realloc (30 samples, 0.22%)</title><rect x="54.0178%" y="437" width="0.2202%" height="15" fill="rgb(228,75,8)" fg:x="7361" fg:w="30"/><text x="54.2678%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (49 samples, 0.36%)</title><rect x="53.9297%" y="677" width="0.3596%" height="15" fill="rgb(207,175,4)" fg:x="7349" fg:w="49"/><text x="54.1797%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (48 samples, 0.35%)</title><rect x="53.9370%" y="661" width="0.3522%" height="15" fill="rgb(205,108,24)" fg:x="7350" fg:w="48"/><text x="54.1870%" y="671.50"></text></g><g><title>alloc::string::String::push_str (48 samples, 0.35%)</title><rect x="53.9370%" y="645" width="0.3522%" height="15" fill="rgb(244,120,49)" fg:x="7350" fg:w="48"/><text x="54.1870%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (48 samples, 0.35%)</title><rect x="53.9370%" y="629" width="0.3522%" height="15" fill="rgb(223,47,38)" fg:x="7350" fg:w="48"/><text x="54.1870%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (48 samples, 0.35%)</title><rect x="53.9370%" y="613" width="0.3522%" height="15" fill="rgb(229,179,11)" fg:x="7350" fg:w="48"/><text x="54.1870%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (48 samples, 0.35%)</title><rect x="53.9370%" y="597" width="0.3522%" height="15" fill="rgb(231,122,1)" fg:x="7350" fg:w="48"/><text x="54.1870%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.05%)</title><rect x="54.2379%" y="581" width="0.0514%" height="15" fill="rgb(245,119,9)" fg:x="7391" fg:w="7"/><text x="54.4879%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.04%)</title><rect x="54.2452%" y="565" width="0.0440%" height="15" fill="rgb(241,163,25)" fg:x="7392" fg:w="6"/><text x="54.4952%" y="575.50"></text></g><g><title>core::fmt::Formatter::new (2 samples, 0.01%)</title><rect x="54.2966%" y="677" width="0.0147%" height="15" fill="rgb(217,214,3)" fg:x="7399" fg:w="2"/><text x="54.5466%" y="687.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display::Wrapper as core::fmt::Display&gt;::fmt (130 samples, 0.95%)</title><rect x="53.3720%" y="725" width="0.9540%" height="15" fill="rgb(240,86,28)" fg:x="7273" fg:w="130"/><text x="53.6220%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (59 samples, 0.43%)</title><rect x="53.8930%" y="709" width="0.4330%" height="15" fill="rgb(215,47,9)" fg:x="7344" fg:w="59"/><text x="54.1430%" y="719.50"></text></g><g><title>core::fmt::write (56 samples, 0.41%)</title><rect x="53.9150%" y="693" width="0.4109%" height="15" fill="rgb(252,25,45)" fg:x="7347" fg:w="56"/><text x="54.1650%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.01%)</title><rect x="54.3113%" y="677" width="0.0147%" height="15" fill="rgb(251,164,9)" fg:x="7401" fg:w="2"/><text x="54.5613%" y="687.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="54.3333%" y="709" width="0.0147%" height="15" fill="rgb(233,194,0)" fg:x="7404" fg:w="2"/><text x="54.5833%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.02%)</title><rect x="54.3480%" y="709" width="0.0220%" height="15" fill="rgb(249,111,24)" fg:x="7406" fg:w="3"/><text x="54.5980%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (360 samples, 2.64%)</title><rect x="51.7355%" y="869" width="2.6418%" height="15" fill="rgb(250,223,3)" fg:x="7050" fg:w="360"/><text x="51.9855%" y="879.50">al..</text></g><g><title>core::fmt::Write::write_fmt (360 samples, 2.64%)</title><rect x="51.7355%" y="853" width="2.6418%" height="15" fill="rgb(236,178,37)" fg:x="7050" fg:w="360"/><text x="51.9855%" y="863.50">co..</text></g><g><title>core::fmt::write (360 samples, 2.64%)</title><rect x="51.7355%" y="837" width="2.6418%" height="15" fill="rgb(241,158,50)" fg:x="7050" fg:w="360"/><text x="51.9855%" y="847.50">co..</text></g><g><title>&lt;datafusion_expr::logical_plan::plan::LogicalPlan::display_indent::Wrapper as core::fmt::Display&gt;::fmt (360 samples, 2.64%)</title><rect x="51.7355%" y="821" width="2.6418%" height="15" fill="rgb(213,121,41)" fg:x="7050" fg:w="360"/><text x="51.9855%" y="831.50">&lt;d..</text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (360 samples, 2.64%)</title><rect x="51.7355%" y="805" width="2.6418%" height="15" fill="rgb(240,92,3)" fg:x="7050" fg:w="360"/><text x="51.9855%" y="815.50">da..</text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::accept (151 samples, 1.11%)</title><rect x="53.2692%" y="789" width="1.1081%" height="15" fill="rgb(205,123,3)" fg:x="7259" fg:w="151"/><text x="53.5192%" y="799.50"></text></g><g><title>&lt;datafusion_expr::logical_plan::display::IndentVisitor as datafusion_expr::logical_plan::plan::PlanVisitor&gt;::pre_visit (149 samples, 1.09%)</title><rect x="53.2839%" y="773" width="1.0934%" height="15" fill="rgb(205,97,47)" fg:x="7261" fg:w="149"/><text x="53.5339%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_fmt (148 samples, 1.09%)</title><rect x="53.2913%" y="757" width="1.0861%" height="15" fill="rgb(247,152,14)" fg:x="7262" fg:w="148"/><text x="53.5413%" y="767.50"></text></g><g><title>core::fmt::write (140 samples, 1.03%)</title><rect x="53.3500%" y="741" width="1.0274%" height="15" fill="rgb(248,195,53)" fg:x="7270" fg:w="140"/><text x="53.6000%" y="751.50"></text></g><g><title>core::fmt::run (7 samples, 0.05%)</title><rect x="54.3260%" y="725" width="0.0514%" height="15" fill="rgb(226,201,16)" fg:x="7403" fg:w="7"/><text x="54.5760%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="54.6195%" y="725" width="0.0147%" height="15" fill="rgb(205,98,0)" fg:x="7443" fg:w="2"/><text x="54.8695%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="54.6195%" y="709" width="0.0147%" height="15" fill="rgb(214,191,48)" fg:x="7443" fg:w="2"/><text x="54.8695%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="54.6195%" y="693" width="0.0147%" height="15" fill="rgb(237,112,39)" fg:x="7443" fg:w="2"/><text x="54.8695%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="54.6195%" y="677" width="0.0147%" height="15" fill="rgb(247,203,27)" fg:x="7443" fg:w="2"/><text x="54.8695%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="54.6195%" y="661" width="0.0147%" height="15" fill="rgb(235,124,28)" fg:x="7443" fg:w="2"/><text x="54.8695%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="54.6195%" y="645" width="0.0147%" height="15" fill="rgb(208,207,46)" fg:x="7443" fg:w="2"/><text x="54.8695%" y="655.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="54.5755%" y="821" width="0.0660%" height="15" fill="rgb(234,176,4)" fg:x="7437" fg:w="9"/><text x="54.8255%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="54.6195%" y="805" width="0.0220%" height="15" fill="rgb(230,133,28)" fg:x="7443" fg:w="3"/><text x="54.8695%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="54.6195%" y="789" width="0.0220%" height="15" fill="rgb(211,137,40)" fg:x="7443" fg:w="3"/><text x="54.8695%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="54.6195%" y="773" width="0.0220%" height="15" fill="rgb(254,35,13)" fg:x="7443" fg:w="3"/><text x="54.8695%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="54.6195%" y="757" width="0.0220%" height="15" fill="rgb(225,49,51)" fg:x="7443" fg:w="3"/><text x="54.8695%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="54.6195%" y="741" width="0.0220%" height="15" fill="rgb(251,10,15)" fg:x="7443" fg:w="3"/><text x="54.8695%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.12%)</title><rect x="54.5388%" y="837" width="0.1174%" height="15" fill="rgb(228,207,15)" fg:x="7432" fg:w="16"/><text x="54.7888%" y="847.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new_with_predicate (2 samples, 0.01%)</title><rect x="54.6562%" y="837" width="0.0147%" height="15" fill="rgb(241,99,19)" fg:x="7448" fg:w="2"/><text x="54.9062%" y="847.50"></text></g><g><title>datafusion_expr::expr::Expr::boolean_and (3 samples, 0.02%)</title><rect x="54.7663%" y="805" width="0.0220%" height="15" fill="rgb(207,104,49)" fg:x="7463" fg:w="3"/><text x="55.0163%" y="815.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (3 samples, 0.02%)</title><rect x="54.7663%" y="789" width="0.0220%" height="15" fill="rgb(234,99,18)" fg:x="7463" fg:w="3"/><text x="55.0163%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.08%)</title><rect x="54.7149%" y="821" width="0.0807%" height="15" fill="rgb(213,191,49)" fg:x="7456" fg:w="11"/><text x="54.9649%" y="831.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (20 samples, 0.15%)</title><rect x="54.6709%" y="837" width="0.1468%" height="15" fill="rgb(210,226,19)" fg:x="7450" fg:w="20"/><text x="54.9209%" y="847.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::normalize_predicate (3 samples, 0.02%)</title><rect x="54.7956%" y="821" width="0.0220%" height="15" fill="rgb(229,97,18)" fg:x="7467" fg:w="3"/><text x="55.0456%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="54.8030%" y="805" width="0.0147%" height="15" fill="rgb(211,167,15)" fg:x="7468" fg:w="2"/><text x="55.0530%" y="815.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="54.9204%" y="805" width="0.0660%" height="15" fill="rgb(210,169,34)" fg:x="7484" fg:w="9"/><text x="55.1704%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.06%)</title><rect x="54.9277%" y="789" width="0.0587%" height="15" fill="rgb(241,121,31)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.06%)</title><rect x="54.9277%" y="773" width="0.0587%" height="15" fill="rgb(232,40,11)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.06%)</title><rect x="54.9277%" y="757" width="0.0587%" height="15" fill="rgb(205,86,26)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.06%)</title><rect x="54.9277%" y="741" width="0.0587%" height="15" fill="rgb(231,126,28)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.06%)</title><rect x="54.9277%" y="725" width="0.0587%" height="15" fill="rgb(219,221,18)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.06%)</title><rect x="54.9277%" y="709" width="0.0587%" height="15" fill="rgb(211,40,0)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.06%)</title><rect x="54.9277%" y="693" width="0.0587%" height="15" fill="rgb(239,85,43)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.06%)</title><rect x="54.9277%" y="677" width="0.0587%" height="15" fill="rgb(231,55,21)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.06%)</title><rect x="54.9277%" y="661" width="0.0587%" height="15" fill="rgb(225,184,43)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.06%)</title><rect x="54.9277%" y="645" width="0.0587%" height="15" fill="rgb(251,158,41)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="655.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.06%)</title><rect x="54.9277%" y="629" width="0.0587%" height="15" fill="rgb(234,159,37)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="639.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.06%)</title><rect x="54.9277%" y="613" width="0.0587%" height="15" fill="rgb(216,204,22)" fg:x="7485" fg:w="8"/><text x="55.1777%" y="623.50"></text></g><g><title>_int_malloc (6 samples, 0.04%)</title><rect x="54.9424%" y="597" width="0.0440%" height="15" fill="rgb(214,17,3)" fg:x="7487" fg:w="6"/><text x="55.1924%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="54.9864%" y="805" width="0.0147%" height="15" fill="rgb(212,111,17)" fg:x="7493" fg:w="2"/><text x="55.2364%" y="815.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="54.9864%" y="789" width="0.0147%" height="15" fill="rgb(221,157,24)" fg:x="7493" fg:w="2"/><text x="55.2364%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.05%)</title><rect x="55.0231%" y="693" width="0.0514%" height="15" fill="rgb(252,16,13)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.05%)</title><rect x="55.0231%" y="677" width="0.0514%" height="15" fill="rgb(221,62,2)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.05%)</title><rect x="55.0231%" y="661" width="0.0514%" height="15" fill="rgb(247,87,22)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.05%)</title><rect x="55.0231%" y="645" width="0.0514%" height="15" fill="rgb(215,73,9)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.05%)</title><rect x="55.0231%" y="629" width="0.0514%" height="15" fill="rgb(207,175,33)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="639.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.05%)</title><rect x="55.0231%" y="613" width="0.0514%" height="15" fill="rgb(243,129,54)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="623.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="55.0231%" y="597" width="0.0514%" height="15" fill="rgb(227,119,45)" fg:x="7498" fg:w="7"/><text x="55.2731%" y="607.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="55.0451%" y="581" width="0.0294%" height="15" fill="rgb(205,109,36)" fg:x="7501" fg:w="4"/><text x="55.2951%" y="591.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (10 samples, 0.07%)</title><rect x="55.0084%" y="789" width="0.0734%" height="15" fill="rgb(205,6,39)" fg:x="7496" fg:w="10"/><text x="55.2584%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="55.0158%" y="773" width="0.0660%" height="15" fill="rgb(221,32,16)" fg:x="7497" fg:w="9"/><text x="55.2658%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.06%)</title><rect x="55.0231%" y="757" width="0.0587%" height="15" fill="rgb(228,144,50)" fg:x="7498" fg:w="8"/><text x="55.2731%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.06%)</title><rect x="55.0231%" y="741" width="0.0587%" height="15" fill="rgb(229,201,53)" fg:x="7498" fg:w="8"/><text x="55.2731%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.06%)</title><rect x="55.0231%" y="725" width="0.0587%" height="15" fill="rgb(249,153,27)" fg:x="7498" fg:w="8"/><text x="55.2731%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.06%)</title><rect x="55.0231%" y="709" width="0.0587%" height="15" fill="rgb(227,106,25)" fg:x="7498" fg:w="8"/><text x="55.2731%" y="719.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.10%)</title><rect x="55.0818%" y="789" width="0.0954%" height="15" fill="rgb(230,65,29)" fg:x="7506" fg:w="13"/><text x="55.3318%" y="799.50"></text></g><g><title>_int_malloc (11 samples, 0.08%)</title><rect x="55.0965%" y="773" width="0.0807%" height="15" fill="rgb(221,57,46)" fg:x="7508" fg:w="11"/><text x="55.3465%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="55.1772%" y="773" width="0.0220%" height="15" fill="rgb(229,161,17)" fg:x="7519" fg:w="3"/><text x="55.4272%" y="783.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (53 samples, 0.39%)</title><rect x="54.8176%" y="837" width="0.3889%" height="15" fill="rgb(222,213,11)" fg:x="7470" fg:w="53"/><text x="55.0676%" y="847.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (44 samples, 0.32%)</title><rect x="54.8837%" y="821" width="0.3229%" height="15" fill="rgb(235,35,13)" fg:x="7479" fg:w="44"/><text x="55.1337%" y="831.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (27 samples, 0.20%)</title><rect x="55.0084%" y="805" width="0.1981%" height="15" fill="rgb(233,158,34)" fg:x="7496" fg:w="27"/><text x="55.2584%" y="815.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::predicate (4 samples, 0.03%)</title><rect x="55.1772%" y="789" width="0.0294%" height="15" fill="rgb(215,151,48)" fg:x="7519" fg:w="4"/><text x="55.4272%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="55.2653%" y="757" width="0.0147%" height="15" fill="rgb(229,84,14)" fg:x="7531" fg:w="2"/><text x="55.5153%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="55.2653%" y="773" width="0.0367%" height="15" fill="rgb(229,68,14)" fg:x="7531" fg:w="5"/><text x="55.5153%" y="783.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="55.2800%" y="757" width="0.0220%" height="15" fill="rgb(243,106,26)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="55.2800%" y="741" width="0.0220%" height="15" fill="rgb(206,45,38)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="55.2800%" y="725" width="0.0220%" height="15" fill="rgb(226,6,15)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="55.2800%" y="709" width="0.0220%" height="15" fill="rgb(232,22,54)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="55.2800%" y="693" width="0.0220%" height="15" fill="rgb(229,222,32)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="55.2800%" y="677" width="0.0220%" height="15" fill="rgb(228,62,29)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="55.2800%" y="661" width="0.0220%" height="15" fill="rgb(251,103,34)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="55.2800%" y="645" width="0.0220%" height="15" fill="rgb(233,12,30)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="55.2800%" y="629" width="0.0220%" height="15" fill="rgb(238,52,0)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="55.2800%" y="613" width="0.0220%" height="15" fill="rgb(223,98,5)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="55.2800%" y="597" width="0.0220%" height="15" fill="rgb(228,75,37)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="55.2800%" y="581" width="0.0220%" height="15" fill="rgb(205,115,49)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="591.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="55.2800%" y="565" width="0.0220%" height="15" fill="rgb(250,154,43)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="575.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="55.2800%" y="549" width="0.0220%" height="15" fill="rgb(226,43,29)" fg:x="7533" fg:w="3"/><text x="55.5300%" y="559.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="55.3020%" y="773" width="0.0220%" height="15" fill="rgb(249,228,39)" fg:x="7536" fg:w="3"/><text x="55.5520%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="55.3093%" y="757" width="0.0147%" height="15" fill="rgb(216,79,43)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="55.3093%" y="741" width="0.0147%" height="15" fill="rgb(228,95,12)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="55.3093%" y="725" width="0.0147%" height="15" fill="rgb(249,221,15)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="55.3093%" y="709" width="0.0147%" height="15" fill="rgb(233,34,13)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="55.3093%" y="693" width="0.0147%" height="15" fill="rgb(214,103,39)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="55.3093%" y="677" width="0.0147%" height="15" fill="rgb(251,126,39)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="55.3093%" y="661" width="0.0147%" height="15" fill="rgb(214,216,36)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="55.3093%" y="645" width="0.0147%" height="15" fill="rgb(220,221,8)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="55.3093%" y="629" width="0.0147%" height="15" fill="rgb(240,216,3)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="55.3093%" y="613" width="0.0147%" height="15" fill="rgb(232,218,17)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="55.3093%" y="597" width="0.0147%" height="15" fill="rgb(229,163,45)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="55.3093%" y="581" width="0.0147%" height="15" fill="rgb(231,110,42)" fg:x="7537" fg:w="2"/><text x="55.5593%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="55.2653%" y="789" width="0.0660%" height="15" fill="rgb(208,170,48)" fg:x="7531" fg:w="9"/><text x="55.5153%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.12%)</title><rect x="55.2653%" y="805" width="0.1174%" height="15" fill="rgb(239,116,25)" fg:x="7531" fg:w="16"/><text x="55.5153%" y="815.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (7 samples, 0.05%)</title><rect x="55.3313%" y="789" width="0.0514%" height="15" fill="rgb(219,200,50)" fg:x="7540" fg:w="7"/><text x="55.5813%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="55.3533%" y="773" width="0.0294%" height="15" fill="rgb(245,200,0)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="55.3533%" y="757" width="0.0294%" height="15" fill="rgb(245,119,33)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.03%)</title><rect x="55.3533%" y="741" width="0.0294%" height="15" fill="rgb(231,125,12)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.03%)</title><rect x="55.3533%" y="725" width="0.0294%" height="15" fill="rgb(216,96,41)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.03%)</title><rect x="55.3533%" y="709" width="0.0294%" height="15" fill="rgb(248,43,45)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="55.3533%" y="693" width="0.0294%" height="15" fill="rgb(217,222,7)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="55.3533%" y="677" width="0.0294%" height="15" fill="rgb(233,28,6)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.03%)</title><rect x="55.3533%" y="661" width="0.0294%" height="15" fill="rgb(231,218,15)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="55.3533%" y="645" width="0.0294%" height="15" fill="rgb(226,171,48)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="55.3533%" y="629" width="0.0294%" height="15" fill="rgb(235,201,9)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="55.3533%" y="613" width="0.0294%" height="15" fill="rgb(217,80,15)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="623.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="55.3533%" y="597" width="0.0294%" height="15" fill="rgb(219,152,8)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="607.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="55.3533%" y="581" width="0.0294%" height="15" fill="rgb(243,107,38)" fg:x="7543" fg:w="4"/><text x="55.6033%" y="591.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (23 samples, 0.17%)</title><rect x="55.3827%" y="805" width="0.1688%" height="15" fill="rgb(231,17,5)" fg:x="7547" fg:w="23"/><text x="55.6327%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.16%)</title><rect x="55.3900%" y="789" width="0.1614%" height="15" fill="rgb(209,25,54)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.16%)</title><rect x="55.3900%" y="773" width="0.1614%" height="15" fill="rgb(219,0,2)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.16%)</title><rect x="55.3900%" y="757" width="0.1614%" height="15" fill="rgb(246,9,5)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.16%)</title><rect x="55.3900%" y="741" width="0.1614%" height="15" fill="rgb(226,159,4)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.16%)</title><rect x="55.3900%" y="725" width="0.1614%" height="15" fill="rgb(219,175,34)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.16%)</title><rect x="55.3900%" y="709" width="0.1614%" height="15" fill="rgb(236,10,46)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.16%)</title><rect x="55.3900%" y="693" width="0.1614%" height="15" fill="rgb(240,211,16)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.16%)</title><rect x="55.3900%" y="677" width="0.1614%" height="15" fill="rgb(205,3,43)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.16%)</title><rect x="55.3900%" y="661" width="0.1614%" height="15" fill="rgb(245,7,22)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.16%)</title><rect x="55.3900%" y="645" width="0.1614%" height="15" fill="rgb(239,132,32)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="655.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.16%)</title><rect x="55.3900%" y="629" width="0.1614%" height="15" fill="rgb(228,202,34)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="639.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.16%)</title><rect x="55.3900%" y="613" width="0.1614%" height="15" fill="rgb(254,200,22)" fg:x="7548" fg:w="22"/><text x="55.6400%" y="623.50"></text></g><g><title>_int_malloc (17 samples, 0.12%)</title><rect x="55.4267%" y="597" width="0.1248%" height="15" fill="rgb(219,10,39)" fg:x="7553" fg:w="17"/><text x="55.6767%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.48%)</title><rect x="55.2506%" y="821" width="0.4770%" height="15" fill="rgb(226,210,39)" fg:x="7529" fg:w="65"/><text x="55.5006%" y="831.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.18%)</title><rect x="55.5515%" y="805" width="0.1761%" height="15" fill="rgb(208,219,16)" fg:x="7570" fg:w="24"/><text x="55.8015%" y="815.50"></text></g><g><title>_int_malloc (19 samples, 0.14%)</title><rect x="55.5882%" y="789" width="0.1394%" height="15" fill="rgb(216,158,51)" fg:x="7575" fg:w="19"/><text x="55.8382%" y="799.50"></text></g><g><title>__GI___libc_free (9 samples, 0.07%)</title><rect x="55.7276%" y="821" width="0.0660%" height="15" fill="rgb(233,14,44)" fg:x="7594" fg:w="9"/><text x="55.9776%" y="831.50"></text></g><g><title>_int_free (18 samples, 0.13%)</title><rect x="55.7936%" y="821" width="0.1321%" height="15" fill="rgb(237,97,39)" fg:x="7603" fg:w="18"/><text x="56.0436%" y="831.50"></text></g><g><title>_int_free (8 samples, 0.06%)</title><rect x="55.9551%" y="805" width="0.0587%" height="15" fill="rgb(218,198,43)" fg:x="7625" fg:w="8"/><text x="56.2051%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (13 samples, 0.10%)</title><rect x="55.9331%" y="821" width="0.0954%" height="15" fill="rgb(231,104,20)" fg:x="7622" fg:w="13"/><text x="56.1831%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (2 samples, 0.01%)</title><rect x="56.0138%" y="805" width="0.0147%" height="15" fill="rgb(254,36,13)" fg:x="7633" fg:w="2"/><text x="56.2638%" y="815.50"></text></g><g><title>&lt;datafusion_expr::expr::Expr as core::clone::Clone&gt;::clone (8 samples, 0.06%)</title><rect x="56.0872%" y="789" width="0.0587%" height="15" fill="rgb(248,14,50)" fg:x="7643" fg:w="8"/><text x="56.3372%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="56.1019%" y="773" width="0.0440%" height="15" fill="rgb(217,107,29)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="56.1019%" y="757" width="0.0440%" height="15" fill="rgb(251,169,33)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.04%)</title><rect x="56.1019%" y="741" width="0.0440%" height="15" fill="rgb(217,108,32)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.04%)</title><rect x="56.1019%" y="725" width="0.0440%" height="15" fill="rgb(219,66,42)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.04%)</title><rect x="56.1019%" y="709" width="0.0440%" height="15" fill="rgb(206,180,7)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="56.1019%" y="693" width="0.0440%" height="15" fill="rgb(208,226,31)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="56.1019%" y="677" width="0.0440%" height="15" fill="rgb(218,26,49)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.04%)</title><rect x="56.1019%" y="661" width="0.0440%" height="15" fill="rgb(233,197,48)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.04%)</title><rect x="56.1019%" y="645" width="0.0440%" height="15" fill="rgb(252,181,51)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.04%)</title><rect x="56.1019%" y="629" width="0.0440%" height="15" fill="rgb(253,90,19)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="639.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.04%)</title><rect x="56.1019%" y="613" width="0.0440%" height="15" fill="rgb(215,171,30)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="623.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.04%)</title><rect x="56.1019%" y="597" width="0.0440%" height="15" fill="rgb(214,222,9)" fg:x="7645" fg:w="6"/><text x="56.3519%" y="607.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="56.1165%" y="581" width="0.0294%" height="15" fill="rgb(223,3,22)" fg:x="7647" fg:w="4"/><text x="56.3665%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.15%)</title><rect x="56.0652%" y="805" width="0.1541%" height="15" fill="rgb(225,196,46)" fg:x="7640" fg:w="21"/><text x="56.3152%" y="815.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.07%)</title><rect x="56.1459%" y="789" width="0.0734%" height="15" fill="rgb(209,110,37)" fg:x="7651" fg:w="10"/><text x="56.3959%" y="799.50"></text></g><g><title>_int_malloc (7 samples, 0.05%)</title><rect x="56.1679%" y="773" width="0.0514%" height="15" fill="rgb(249,89,12)" fg:x="7654" fg:w="7"/><text x="56.4179%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::Predicate&gt; (3 samples, 0.02%)</title><rect x="56.2486%" y="805" width="0.0220%" height="15" fill="rgb(226,27,33)" fg:x="7665" fg:w="3"/><text x="56.4986%" y="815.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="56.2560%" y="789" width="0.0147%" height="15" fill="rgb(213,82,22)" fg:x="7666" fg:w="2"/><text x="56.5060%" y="799.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (37 samples, 0.27%)</title><rect x="56.0285%" y="821" width="0.2715%" height="15" fill="rgb(248,140,0)" fg:x="7635" fg:w="37"/><text x="56.2785%" y="831.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (4 samples, 0.03%)</title><rect x="56.2706%" y="805" width="0.0294%" height="15" fill="rgb(228,106,3)" fg:x="7668" fg:w="4"/><text x="56.5206%" y="815.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::flatten_and_predicates (3 samples, 0.02%)</title><rect x="56.2780%" y="789" width="0.0220%" height="15" fill="rgb(209,23,37)" fg:x="7669" fg:w="3"/><text x="56.5280%" y="799.50"></text></g><g><title>&lt;fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::RewriteBooleanPredicate as datafusion_optimizer::optimizer::OptimizerRule&gt;::try_optimize (280 samples, 2.05%)</title><rect x="54.4507%" y="853" width="2.0547%" height="15" fill="rgb(241,93,50)" fg:x="7420" fg:w="280"/><text x="54.7007%" y="863.50">&lt;..</text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (177 samples, 1.30%)</title><rect x="55.2066%" y="837" width="1.2989%" height="15" fill="rgb(253,46,43)" fg:x="7523" fg:w="177"/><text x="55.4566%" y="847.50"></text></g><g><title>fastfull_search::optimizer::logical_optimizer::rewrite_boolean_predicate::rewrite_predicate (28 samples, 0.21%)</title><rect x="56.3000%" y="821" width="0.2055%" height="15" fill="rgb(226,206,43)" fg:x="7672" fg:w="28"/><text x="56.5500%" y="831.50"></text></g><g><title>__GI___libc_malloc (23 samples, 0.17%)</title><rect x="56.3367%" y="805" width="0.1688%" height="15" fill="rgb(217,54,7)" fg:x="7677" fg:w="23"/><text x="56.5867%" y="815.50"></text></g><g><title>_int_malloc (21 samples, 0.15%)</title><rect x="56.3514%" y="789" width="0.1541%" height="15" fill="rgb(223,5,52)" fg:x="7679" fg:w="21"/><text x="56.6014%" y="799.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="56.5275%" y="837" width="0.0147%" height="15" fill="rgb(206,52,46)" fg:x="7703" fg:w="2"/><text x="56.7775%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="56.5275%" y="821" width="0.0147%" height="15" fill="rgb(253,136,11)" fg:x="7703" fg:w="2"/><text x="56.7775%" y="831.50"></text></g><g><title>_int_free (5 samples, 0.04%)</title><rect x="56.5422%" y="837" width="0.0367%" height="15" fill="rgb(208,106,33)" fg:x="7705" fg:w="5"/><text x="56.7922%" y="847.50"></text></g><g><title>malloc_consolidate (129 samples, 0.95%)</title><rect x="57.5182%" y="773" width="0.9467%" height="15" fill="rgb(206,54,4)" fg:x="7838" fg:w="129"/><text x="57.7682%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (24 samples, 0.18%)</title><rect x="58.2887%" y="757" width="0.1761%" height="15" fill="rgb(213,3,15)" fg:x="7943" fg:w="24"/><text x="58.5387%" y="767.50"></text></g><g><title>__GI___libc_malloc (247 samples, 1.81%)</title><rect x="56.6596%" y="805" width="1.8126%" height="15" fill="rgb(252,211,39)" fg:x="7721" fg:w="247"/><text x="56.9096%" y="815.50">_..</text></g><g><title>_int_malloc (245 samples, 1.80%)</title><rect x="56.6742%" y="789" width="1.7979%" height="15" fill="rgb(223,6,36)" fg:x="7723" fg:w="245"/><text x="56.9242%" y="799.50">_..</text></g><g><title>core::iter::adapters::try_process (2 samples, 0.01%)</title><rect x="58.5382%" y="773" width="0.0147%" height="15" fill="rgb(252,169,45)" fg:x="7977" fg:w="2"/><text x="58.7882%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (270 samples, 1.98%)</title><rect x="56.5789%" y="837" width="1.9814%" height="15" fill="rgb(212,48,26)" fg:x="7710" fg:w="270"/><text x="56.8289%" y="847.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (266 samples, 1.95%)</title><rect x="56.6082%" y="821" width="1.9520%" height="15" fill="rgb(251,102,48)" fg:x="7714" fg:w="266"/><text x="56.8582%" y="831.50">&lt;..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (12 samples, 0.09%)</title><rect x="58.4722%" y="805" width="0.0881%" height="15" fill="rgb(243,208,16)" fg:x="7968" fg:w="12"/><text x="58.7222%" y="815.50"></text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (3 samples, 0.02%)</title><rect x="58.5382%" y="789" width="0.0220%" height="15" fill="rgb(219,96,24)" fg:x="7977" fg:w="3"/><text x="58.7882%" y="799.50"></text></g><g><title>do_query::main_inner::{{closure}} (3,503 samples, 25.71%)</title><rect x="32.9126%" y="917" width="25.7063%" height="15" fill="rgb(219,33,29)" fg:x="4485" fg:w="3503"/><text x="33.1626%" y="927.50">do_query::main_inner::{{closure}}</text></g><g><title>datafusion::execution::context::SessionState::optimize (978 samples, 7.18%)</title><rect x="51.4420%" y="901" width="7.1769%" height="15" fill="rgb(223,176,5)" fg:x="7010" fg:w="978"/><text x="51.6920%" y="911.50">datafusion..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize (978 samples, 7.18%)</title><rect x="51.4420%" y="885" width="7.1769%" height="15" fill="rgb(228,140,14)" fg:x="7010" fg:w="978"/><text x="51.6920%" y="895.50">datafusion..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_recursively (578 samples, 4.24%)</title><rect x="54.3773%" y="869" width="4.2416%" height="15" fill="rgb(217,179,31)" fg:x="7410" fg:w="578"/><text x="54.6273%" y="879.50">dataf..</text></g><g><title>datafusion_optimizer::optimizer::Optimizer::optimize_inputs (288 samples, 2.11%)</title><rect x="56.5055%" y="853" width="2.1135%" height="15" fill="rgb(230,9,30)" fg:x="7700" fg:w="288"/><text x="56.7555%" y="863.50">d..</text></g><g><title>datafusion_expr::logical_plan::plan::LogicalPlan::inputs (8 samples, 0.06%)</title><rect x="58.5602%" y="837" width="0.0587%" height="15" fill="rgb(230,136,20)" fg:x="7980" fg:w="8"/><text x="58.8102%" y="847.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="58.5675%" y="821" width="0.0514%" height="15" fill="rgb(215,210,22)" fg:x="7981" fg:w="7"/><text x="58.8175%" y="831.50"></text></g><g><title>_int_malloc (7 samples, 0.05%)</title><rect x="58.5675%" y="805" width="0.0514%" height="15" fill="rgb(218,43,5)" fg:x="7981" fg:w="7"/><text x="58.8175%" y="815.50"></text></g><g><title>fastfull_search::batch::posting_batch::PostingBatch::project_with_predicate (3 samples, 0.02%)</title><rect x="58.6189%" y="917" width="0.0220%" height="15" fill="rgb(216,11,5)" fg:x="7988" fg:w="3"/><text x="58.8689%" y="927.50"></text></g><g><title>fastfull_search::physical_expr::boolean_eval::PhysicalPredicate::eval_avx512 (2 samples, 0.01%)</title><rect x="58.6556%" y="917" width="0.0147%" height="15" fill="rgb(209,82,29)" fg:x="7993" fg:w="2"/><text x="58.9056%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="58.6776%" y="917" width="0.0294%" height="15" fill="rgb(244,115,12)" fg:x="7996" fg:w="4"/><text x="58.9276%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.02%)</title><rect x="58.7070%" y="917" width="0.0220%" height="15" fill="rgb(222,82,18)" fg:x="8000" fg:w="3"/><text x="58.9570%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (27 samples, 0.20%)</title><rect x="58.7363%" y="917" width="0.1981%" height="15" fill="rgb(249,227,8)" fg:x="8004" fg:w="27"/><text x="58.9863%" y="927.50"></text></g><g><title>malloc_consolidate (4 samples, 0.03%)</title><rect x="58.9345%" y="917" width="0.0294%" height="15" fill="rgb(253,141,45)" fg:x="8031" fg:w="4"/><text x="59.1845%" y="927.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (3 samples, 0.02%)</title><rect x="58.9638%" y="917" width="0.0220%" height="15" fill="rgb(234,184,4)" fg:x="8035" fg:w="3"/><text x="59.2138%" y="927.50"></text></g><g><title>std::io::stdio::_print (2 samples, 0.01%)</title><rect x="58.9858%" y="917" width="0.0147%" height="15" fill="rgb(218,194,23)" fg:x="8038" fg:w="2"/><text x="59.2358%" y="927.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.06%)</title><rect x="59.6610%" y="853" width="0.0587%" height="15" fill="rgb(235,66,41)" fg:x="8130" fg:w="8"/><text x="59.9110%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;str&gt;&gt;::from_iter (11 samples, 0.08%)</title><rect x="59.6610%" y="869" width="0.0807%" height="15" fill="rgb(245,217,1)" fg:x="8130" fg:w="11"/><text x="59.9110%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="59.7270%" y="853" width="0.0147%" height="15" fill="rgb(229,91,1)" fg:x="8139" fg:w="2"/><text x="59.9770%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="59.7270%" y="837" width="0.0147%" height="15" fill="rgb(207,101,30)" fg:x="8139" fg:w="2"/><text x="59.9770%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="59.7270%" y="821" width="0.0147%" height="15" fill="rgb(223,82,49)" fg:x="8139" fg:w="2"/><text x="59.9770%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="59.7857%" y="853" width="0.0147%" height="15" fill="rgb(218,167,17)" fg:x="8147" fg:w="2"/><text x="60.0357%" y="863.50"></text></g><g><title>_int_free (62 samples, 0.45%)</title><rect x="59.8151%" y="853" width="0.4550%" height="15" fill="rgb(208,103,14)" fg:x="8151" fg:w="62"/><text x="60.0651%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="60.1893%" y="837" width="0.0807%" height="15" fill="rgb(238,20,8)" fg:x="8202" fg:w="11"/><text x="60.4393%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="60.2260%" y="821" width="0.0440%" height="15" fill="rgb(218,80,54)" fg:x="8207" fg:w="6"/><text x="60.4760%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (6 samples, 0.04%)</title><rect x="60.2260%" y="805" width="0.0440%" height="15" fill="rgb(240,144,17)" fg:x="8207" fg:w="6"/><text x="60.4760%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="60.2407%" y="789" width="0.0294%" height="15" fill="rgb(245,27,50)" fg:x="8209" fg:w="4"/><text x="60.4907%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="60.2407%" y="773" width="0.0294%" height="15" fill="rgb(251,51,7)" fg:x="8209" fg:w="4"/><text x="60.4907%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (4 samples, 0.03%)</title><rect x="60.2407%" y="757" width="0.0294%" height="15" fill="rgb(245,217,29)" fg:x="8209" fg:w="4"/><text x="60.4907%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="60.2994%" y="821" width="0.0147%" height="15" fill="rgb(221,176,29)" fg:x="8217" fg:w="2"/><text x="60.5494%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.13%)</title><rect x="60.2994%" y="837" width="0.1321%" height="15" fill="rgb(212,180,24)" fg:x="8217" fg:w="18"/><text x="60.5494%" y="847.50"></text></g><g><title>_int_free (16 samples, 0.12%)</title><rect x="60.3141%" y="821" width="0.1174%" height="15" fill="rgb(254,24,2)" fg:x="8219" fg:w="16"/><text x="60.5641%" y="831.50"></text></g><g><title>__GI___libc_free (5 samples, 0.04%)</title><rect x="60.4388%" y="837" width="0.0367%" height="15" fill="rgb(230,100,2)" fg:x="8236" fg:w="5"/><text x="60.6888%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (49 samples, 0.36%)</title><rect x="60.2701%" y="853" width="0.3596%" height="15" fill="rgb(219,142,25)" fg:x="8213" fg:w="49"/><text x="60.5201%" y="863.50"></text></g><g><title>_int_free (20 samples, 0.15%)</title><rect x="60.4829%" y="837" width="0.1468%" height="15" fill="rgb(240,73,43)" fg:x="8242" fg:w="20"/><text x="60.7329%" y="847.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="60.6957%" y="837" width="0.0147%" height="15" fill="rgb(214,114,15)" fg:x="8271" fg:w="2"/><text x="60.9457%" y="847.50"></text></g><g><title>_int_free (16 samples, 0.12%)</title><rect x="60.7177%" y="837" width="0.1174%" height="15" fill="rgb(207,130,4)" fg:x="8274" fg:w="16"/><text x="60.9677%" y="847.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="61.0332%" y="805" width="0.0147%" height="15" fill="rgb(221,25,40)" fg:x="8317" fg:w="2"/><text x="61.2832%" y="815.50"></text></g><g><title>_int_free (20 samples, 0.15%)</title><rect x="61.0626%" y="805" width="0.1468%" height="15" fill="rgb(241,184,7)" fg:x="8321" fg:w="20"/><text x="61.3126%" y="815.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="61.2974%" y="789" width="0.0220%" height="15" fill="rgb(235,159,4)" fg:x="8353" fg:w="3"/><text x="61.5474%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (27 samples, 0.20%)</title><rect x="61.2094%" y="805" width="0.1981%" height="15" fill="rgb(214,87,48)" fg:x="8341" fg:w="27"/><text x="61.4594%" y="815.50"></text></g><g><title>_int_free (12 samples, 0.09%)</title><rect x="61.3194%" y="789" width="0.0881%" height="15" fill="rgb(246,198,24)" fg:x="8356" fg:w="12"/><text x="61.5694%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (230 samples, 1.69%)</title><rect x="59.7417%" y="869" width="1.6878%" height="15" fill="rgb(209,66,40)" fg:x="8141" fg:w="230"/><text x="59.9917%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;dyn arrow_array::array::Array&gt;&gt;&gt; (109 samples, 0.80%)</title><rect x="60.6296%" y="853" width="0.7999%" height="15" fill="rgb(233,147,39)" fg:x="8262" fg:w="109"/><text x="60.8796%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (81 samples, 0.59%)</title><rect x="60.8351%" y="837" width="0.5944%" height="15" fill="rgb(231,145,52)" fg:x="8290" fg:w="81"/><text x="61.0851%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (70 samples, 0.51%)</title><rect x="60.9158%" y="821" width="0.5137%" height="15" fill="rgb(206,20,26)" fg:x="8301" fg:w="70"/><text x="61.1658%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_schema::datatype::DataType&gt; (3 samples, 0.02%)</title><rect x="61.4075%" y="805" width="0.0220%" height="15" fill="rgb(238,220,4)" fg:x="8368" fg:w="3"/><text x="61.6575%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (23 samples, 0.17%)</title><rect x="61.6570%" y="821" width="0.1688%" height="15" fill="rgb(252,195,42)" fg:x="8402" fg:w="23"/><text x="61.9070%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.45%)</title><rect x="61.4589%" y="853" width="0.4476%" height="15" fill="rgb(209,10,6)" fg:x="8375" fg:w="61"/><text x="61.7089%" y="863.50"></text></g><g><title>arrow_schema::schema::Schema::index_of (61 samples, 0.45%)</title><rect x="61.4589%" y="837" width="0.4476%" height="15" fill="rgb(229,3,52)" fg:x="8375" fg:w="61"/><text x="61.7089%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.08%)</title><rect x="61.8258%" y="821" width="0.0807%" height="15" fill="rgb(253,49,37)" fg:x="8425" fg:w="11"/><text x="62.0758%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="61.8845%" y="805" width="0.0220%" height="15" fill="rgb(240,103,49)" fg:x="8433" fg:w="3"/><text x="62.1345%" y="815.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.09%)</title><rect x="61.9065%" y="853" width="0.0881%" height="15" fill="rgb(250,182,30)" fg:x="8436" fg:w="12"/><text x="62.1565%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="61.9946%" y="853" width="0.0147%" height="15" fill="rgb(248,8,30)" fg:x="8448" fg:w="2"/><text x="62.2446%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="62.0092%" y="853" width="0.0220%" height="15" fill="rgb(237,120,30)" fg:x="8450" fg:w="3"/><text x="62.2592%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="62.0092%" y="837" width="0.0220%" height="15" fill="rgb(221,146,34)" fg:x="8450" fg:w="3"/><text x="62.2592%" y="847.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="62.0092%" y="821" width="0.0220%" height="15" fill="rgb(242,55,13)" fg:x="8450" fg:w="3"/><text x="62.2592%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.06%)</title><rect x="62.0386%" y="757" width="0.0587%" height="15" fill="rgb(242,112,31)" fg:x="8454" fg:w="8"/><text x="62.2886%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.06%)</title><rect x="62.0386%" y="741" width="0.0587%" height="15" fill="rgb(249,192,27)" fg:x="8454" fg:w="8"/><text x="62.2886%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.06%)</title><rect x="62.0386%" y="725" width="0.0587%" height="15" fill="rgb(208,204,44)" fg:x="8454" fg:w="8"/><text x="62.2886%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.05%)</title><rect x="62.0459%" y="709" width="0.0514%" height="15" fill="rgb(208,93,54)" fg:x="8455" fg:w="7"/><text x="62.2959%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.05%)</title><rect x="62.0459%" y="693" width="0.0514%" height="15" fill="rgb(242,1,31)" fg:x="8455" fg:w="7"/><text x="62.2959%" y="703.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.05%)</title><rect x="62.0459%" y="677" width="0.0514%" height="15" fill="rgb(241,83,25)" fg:x="8455" fg:w="7"/><text x="62.2959%" y="687.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="62.0459%" y="661" width="0.0514%" height="15" fill="rgb(205,169,50)" fg:x="8455" fg:w="7"/><text x="62.2959%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="62.0386%" y="837" width="0.0660%" height="15" fill="rgb(239,186,37)" fg:x="8454" fg:w="9"/><text x="62.2886%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="62.0386%" y="821" width="0.0660%" height="15" fill="rgb(205,221,10)" fg:x="8454" fg:w="9"/><text x="62.2886%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.07%)</title><rect x="62.0386%" y="805" width="0.0660%" height="15" fill="rgb(218,196,15)" fg:x="8454" fg:w="9"/><text x="62.2886%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.07%)</title><rect x="62.0386%" y="789" width="0.0660%" height="15" fill="rgb(218,196,35)" fg:x="8454" fg:w="9"/><text x="62.2886%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.07%)</title><rect x="62.0386%" y="773" width="0.0660%" height="15" fill="rgb(233,63,24)" fg:x="8454" fg:w="9"/><text x="62.2886%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (12 samples, 0.09%)</title><rect x="62.1046%" y="837" width="0.0881%" height="15" fill="rgb(225,8,4)" fg:x="8463" fg:w="12"/><text x="62.3546%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="62.1707%" y="821" width="0.0220%" height="15" fill="rgb(234,105,35)" fg:x="8472" fg:w="3"/><text x="62.4207%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="62.1780%" y="805" width="0.0147%" height="15" fill="rgb(236,21,32)" fg:x="8473" fg:w="2"/><text x="62.4280%" y="815.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="62.1927%" y="837" width="0.0440%" height="15" fill="rgb(228,109,6)" fg:x="8475" fg:w="6"/><text x="62.4427%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="62.2441%" y="821" width="0.0294%" height="15" fill="rgb(229,215,31)" fg:x="8482" fg:w="4"/><text x="62.4941%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream&gt; (9 samples, 0.07%)</title><rect x="62.2367%" y="837" width="0.0660%" height="15" fill="rgb(221,52,54)" fg:x="8481" fg:w="9"/><text x="62.4867%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream&gt; (4 samples, 0.03%)</title><rect x="62.2734%" y="821" width="0.0294%" height="15" fill="rgb(252,129,43)" fg:x="8486" fg:w="4"/><text x="62.5234%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="62.2881%" y="805" width="0.0147%" height="15" fill="rgb(248,183,27)" fg:x="8488" fg:w="2"/><text x="62.5381%" y="815.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaser as tantivy::tokenizer::tokenizer::TokenFilter&gt;::transform (3 samples, 0.02%)</title><rect x="62.3175%" y="821" width="0.0220%" height="15" fill="rgb(250,0,22)" fg:x="8492" fg:w="3"/><text x="62.5675%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="62.3175%" y="805" width="0.0220%" height="15" fill="rgb(213,166,10)" fg:x="8492" fg:w="3"/><text x="62.5675%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="62.3395%" y="805" width="0.0147%" height="15" fill="rgb(207,163,36)" fg:x="8495" fg:w="2"/><text x="62.5895%" y="815.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilter as tantivy::tokenizer::tokenizer::TokenFilter&gt;::transform (4 samples, 0.03%)</title><rect x="62.3395%" y="821" width="0.0294%" height="15" fill="rgb(208,122,22)" fg:x="8495" fg:w="4"/><text x="62.5895%" y="831.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="62.3541%" y="805" width="0.0147%" height="15" fill="rgb(207,104,49)" fg:x="8497" fg:w="2"/><text x="62.6041%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="62.3541%" y="789" width="0.0147%" height="15" fill="rgb(248,211,50)" fg:x="8497" fg:w="2"/><text x="62.6041%" y="799.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TextAnalyzer::token_stream (13 samples, 0.10%)</title><rect x="62.3028%" y="837" width="0.0954%" height="15" fill="rgb(217,13,45)" fg:x="8490" fg:w="13"/><text x="62.5528%" y="847.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenizer as tantivy::tokenizer::tokenizer::Tokenizer&gt;::token_stream (4 samples, 0.03%)</title><rect x="62.3688%" y="821" width="0.0294%" height="15" fill="rgb(211,216,49)" fg:x="8499" fg:w="4"/><text x="62.6188%" y="831.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="62.3688%" y="805" width="0.0294%" height="15" fill="rgb(221,58,53)" fg:x="8499" fg:w="4"/><text x="62.6188%" y="815.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (11 samples, 0.08%)</title><rect x="62.4495%" y="805" width="0.0807%" height="15" fill="rgb(220,112,41)" fg:x="8510" fg:w="11"/><text x="62.6995%" y="815.50"></text></g><g><title>&lt;tantivy::tokenizer::simple_tokenizer::SimpleTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (11 samples, 0.08%)</title><rect x="62.4495%" y="789" width="0.0807%" height="15" fill="rgb(236,38,28)" fg:x="8510" fg:w="11"/><text x="62.6995%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="62.5083%" y="773" width="0.0220%" height="15" fill="rgb(227,195,22)" fg:x="8518" fg:w="3"/><text x="62.7583%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (152 samples, 1.12%)</title><rect x="61.4295%" y="869" width="1.1154%" height="15" fill="rgb(214,55,33)" fg:x="8371" fg:w="152"/><text x="61.6795%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (70 samples, 0.51%)</title><rect x="62.0313%" y="853" width="0.5137%" height="15" fill="rgb(248,80,13)" fg:x="8453" fg:w="70"/><text x="62.2813%" y="863.50"></text></g><g><title>tantivy::tokenizer::tokenizer::TokenStream::next (20 samples, 0.15%)</title><rect x="62.3982%" y="837" width="0.1468%" height="15" fill="rgb(238,52,6)" fg:x="8503" fg:w="20"/><text x="62.6482%" y="847.50"></text></g><g><title>&lt;tantivy::tokenizer::lower_caser::LowerCaserTokenStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::advance (19 samples, 0.14%)</title><rect x="62.4055%" y="821" width="0.1394%" height="15" fill="rgb(224,198,47)" fg:x="8504" fg:w="19"/><text x="62.6555%" y="831.50"></text></g><g><title>&lt;tantivy::tokenizer::remove_long::RemoveLongFilterStream as tantivy::tokenizer::tokenizer::TokenStream&gt;::token_mut (2 samples, 0.01%)</title><rect x="62.5303%" y="805" width="0.0147%" height="15" fill="rgb(233,171,20)" fg:x="8521" fg:w="2"/><text x="62.7803%" y="815.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::schema (5 samples, 0.04%)</title><rect x="62.7578%" y="837" width="0.0367%" height="15" fill="rgb(241,30,25)" fg:x="8552" fg:w="5"/><text x="63.0078%" y="847.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="62.8018%" y="805" width="0.0220%" height="15" fill="rgb(207,171,38)" fg:x="8558" fg:w="3"/><text x="63.0518%" y="815.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::MinOperationRange as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (7 samples, 0.05%)</title><rect x="62.7945%" y="837" width="0.0514%" height="15" fill="rgb(234,70,1)" fg:x="8557" fg:w="7"/><text x="63.0445%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::optimizer::physical_optimizer::min_operation_range::GetMinRange&gt; (7 samples, 0.05%)</title><rect x="62.7945%" y="821" width="0.0514%" height="15" fill="rgb(232,178,18)" fg:x="8557" fg:w="7"/><text x="63.0445%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (3 samples, 0.02%)</title><rect x="62.8238%" y="805" width="0.0220%" height="15" fill="rgb(241,78,40)" fg:x="8561" fg:w="3"/><text x="63.0738%" y="815.50"></text></g><g><title>&lt;fastfull_search::optimizer::physical_optimizer::primitives_combination::PrimitivesCombination as datafusion::physical_optimizer::optimizer::PhysicalOptimizerRule&gt;::optimize (22 samples, 0.16%)</title><rect x="62.8458%" y="837" width="0.1614%" height="15" fill="rgb(222,35,25)" fg:x="8564" fg:w="22"/><text x="63.0958%" y="847.50"></text></g><g><title>datafusion::physical_plan::rewrite::TreeNodeRewritable::transform_down (22 samples, 0.16%)</title><rect x="62.8458%" y="821" width="0.1614%" height="15" fill="rgb(207,92,16)" fg:x="8564" fg:w="22"/><text x="63.0958%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="63.0073%" y="837" width="0.0147%" height="15" fill="rgb(216,59,51)" fg:x="8586" fg:w="2"/><text x="63.2573%" y="847.50"></text></g><g><title>&lt;fastfull_search::optimizer::planner::boolean_planner::BooleanPhysicalPlanner as datafusion::physical_plan::planner::PhysicalPlanner&gt;::create_physical_plan::_{{closure}} (60 samples, 0.44%)</title><rect x="62.6037%" y="853" width="0.4403%" height="15" fill="rgb(213,80,28)" fg:x="8531" fg:w="60"/><text x="62.8537%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="63.0513%" y="853" width="0.0147%" height="15" fill="rgb(220,93,7)" fg:x="8592" fg:w="2"/><text x="63.3013%" y="863.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan::{{closure}} (73 samples, 0.54%)</title><rect x="62.5449%" y="869" width="0.5357%" height="15" fill="rgb(225,24,44)" fg:x="8523" fg:w="73"/><text x="62.7949%" y="879.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="63.0806%" y="853" width="0.0147%" height="15" fill="rgb(243,74,40)" fg:x="8596" fg:w="2"/><text x="63.3306%" y="863.50"></text></g><g><title>&lt;fastfull_search::context::boolean_context::BooleanPlanner as datafusion::execution::context::QueryPlanner&gt;::create_physical_plan (3 samples, 0.02%)</title><rect x="63.0806%" y="869" width="0.0220%" height="15" fill="rgb(228,39,7)" fg:x="8596" fg:w="3"/><text x="63.3306%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.09%)</title><rect x="63.6677%" y="837" width="0.0881%" height="15" fill="rgb(227,79,8)" fg:x="8676" fg:w="12"/><text x="63.9177%" y="847.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="63.7411%" y="821" width="0.0147%" height="15" fill="rgb(236,58,11)" fg:x="8686" fg:w="2"/><text x="63.9911%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="63.7411%" y="805" width="0.0147%" height="15" fill="rgb(249,63,35)" fg:x="8686" fg:w="2"/><text x="63.9911%" y="815.50"></text></g><g><title>&lt;arrow_schema::datatype::DataType as core::cmp::PartialEq&gt;::eq (7 samples, 0.05%)</title><rect x="63.8879%" y="805" width="0.0514%" height="15" fill="rgb(252,114,16)" fg:x="8706" fg:w="7"/><text x="64.1379%" y="815.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;T&gt; as core::convert::From&lt;arrow_data::data::ArrayData&gt;&gt;::from (16 samples, 0.12%)</title><rect x="63.8292%" y="821" width="0.1174%" height="15" fill="rgb(254,151,24)" fg:x="8698" fg:w="16"/><text x="64.0792%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="63.9466%" y="821" width="0.0147%" height="15" fill="rgb(253,54,39)" fg:x="8714" fg:w="2"/><text x="64.1966%" y="831.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="63.9686%" y="821" width="0.0294%" height="15" fill="rgb(243,25,45)" fg:x="8717" fg:w="4"/><text x="64.2186%" y="831.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.07%)</title><rect x="64.0713%" y="805" width="0.0660%" height="15" fill="rgb(234,134,9)" fg:x="8731" fg:w="9"/><text x="64.3213%" y="815.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="64.1154%" y="789" width="0.0220%" height="15" fill="rgb(227,166,31)" fg:x="8737" fg:w="3"/><text x="64.3654%" y="799.50"></text></g><g><title>_int_free (20 samples, 0.15%)</title><rect x="64.4676%" y="709" width="0.1468%" height="15" fill="rgb(245,143,41)" fg:x="8785" fg:w="20"/><text x="64.7176%" y="719.50"></text></g><g><title>__posix_memalign (88 samples, 0.65%)</title><rect x="64.1447%" y="741" width="0.6458%" height="15" fill="rgb(238,181,32)" fg:x="8741" fg:w="88"/><text x="64.3947%" y="751.50"></text></g><g><title>_int_memalign (51 samples, 0.37%)</title><rect x="64.4162%" y="725" width="0.3743%" height="15" fill="rgb(224,113,18)" fg:x="8778" fg:w="51"/><text x="64.6662%" y="735.50"></text></g><g><title>_int_malloc (24 samples, 0.18%)</title><rect x="64.6144%" y="709" width="0.1761%" height="15" fill="rgb(240,229,28)" fg:x="8805" fg:w="24"/><text x="64.8644%" y="719.50"></text></g><g><title>arrow_buffer::alloc::allocate_aligned (89 samples, 0.65%)</title><rect x="64.1447%" y="805" width="0.6531%" height="15" fill="rgb(250,185,3)" fg:x="8741" fg:w="89"/><text x="64.3947%" y="815.50"></text></g><g><title>__rdl_alloc (89 samples, 0.65%)</title><rect x="64.1447%" y="789" width="0.6531%" height="15" fill="rgb(212,59,25)" fg:x="8741" fg:w="89"/><text x="64.3947%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (89 samples, 0.65%)</title><rect x="64.1447%" y="773" width="0.6531%" height="15" fill="rgb(221,87,20)" fg:x="8741" fg:w="89"/><text x="64.3947%" y="783.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (89 samples, 0.65%)</title><rect x="64.1447%" y="757" width="0.6531%" height="15" fill="rgb(213,74,28)" fg:x="8741" fg:w="89"/><text x="64.3947%" y="767.50"></text></g><g><title>arrow_buffer::buffer::immutable::Buffer::from_slice_ref (110 samples, 0.81%)</title><rect x="63.9979%" y="821" width="0.8072%" height="15" fill="rgb(224,132,34)" fg:x="8721" fg:w="110"/><text x="64.2479%" y="831.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::add_buffer (15 samples, 0.11%)</title><rect x="64.8052%" y="821" width="0.1101%" height="15" fill="rgb(222,101,24)" fg:x="8831" fg:w="15"/><text x="65.0552%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.05%)</title><rect x="64.8639%" y="805" width="0.0514%" height="15" fill="rgb(254,142,4)" fg:x="8839" fg:w="7"/><text x="65.1139%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="64.8712%" y="789" width="0.0440%" height="15" fill="rgb(230,229,49)" fg:x="8840" fg:w="6"/><text x="65.1212%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="64.8859%" y="773" width="0.0294%" height="15" fill="rgb(238,70,47)" fg:x="8842" fg:w="4"/><text x="65.1359%" y="783.50"></text></g><g><title>&lt;arrow_array::array::primitive_array::PrimitiveArray&lt;arrow_array::types::UInt64Type&gt; as core::convert::From&lt;alloc::vec::Vec&lt;&lt;arrow_array::types::UInt64Type as arrow_array::array::primitive_array::ArrowPrimitiveType&gt;::Native&gt;&gt;&gt;::from (174 samples, 1.28%)</title><rect x="63.7558%" y="837" width="1.2769%" height="15" fill="rgb(231,160,17)" fg:x="8688" fg:w="174"/><text x="64.0058%" y="847.50"></text></g><g><title>arrow_data::data::ArrayDataBuilder::build_unchecked (16 samples, 0.12%)</title><rect x="64.9152%" y="821" width="0.1174%" height="15" fill="rgb(218,68,53)" fg:x="8846" fg:w="16"/><text x="65.1652%" y="831.50"></text></g><g><title>arrow_data::data::ArrayData::new_unchecked (9 samples, 0.07%)</title><rect x="64.9666%" y="805" width="0.0660%" height="15" fill="rgb(236,111,10)" fg:x="8853" fg:w="9"/><text x="65.2166%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="65.0327%" y="837" width="0.0147%" height="15" fill="rgb(224,34,41)" fg:x="8862" fg:w="2"/><text x="65.2827%" y="847.50"></text></g><g><title>__GI___libc_malloc (361 samples, 2.65%)</title><rect x="65.0473%" y="837" width="2.6492%" height="15" fill="rgb(241,118,19)" fg:x="8864" fg:w="361"/><text x="65.2973%" y="847.50">__..</text></g><g><title>_int_malloc (300 samples, 2.20%)</title><rect x="65.4950%" y="821" width="2.2015%" height="15" fill="rgb(238,129,25)" fg:x="8925" fg:w="300"/><text x="65.7450%" y="831.50">_..</text></g><g><title>[[kernel.kallsyms]] (67 samples, 0.49%)</title><rect x="67.2048%" y="805" width="0.4917%" height="15" fill="rgb(238,22,31)" fg:x="9158" fg:w="67"/><text x="67.4548%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (51 samples, 0.37%)</title><rect x="67.3222%" y="789" width="0.3743%" height="15" fill="rgb(222,174,48)" fg:x="9174" fg:w="51"/><text x="67.5722%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (51 samples, 0.37%)</title><rect x="67.3222%" y="773" width="0.3743%" height="15" fill="rgb(206,152,40)" fg:x="9174" fg:w="51"/><text x="67.5722%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (47 samples, 0.34%)</title><rect x="67.3516%" y="757" width="0.3449%" height="15" fill="rgb(218,99,54)" fg:x="9178" fg:w="47"/><text x="67.6016%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (38 samples, 0.28%)</title><rect x="67.4176%" y="741" width="0.2789%" height="15" fill="rgb(220,174,26)" fg:x="9187" fg:w="38"/><text x="67.6676%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (29 samples, 0.21%)</title><rect x="67.4837%" y="725" width="0.2128%" height="15" fill="rgb(245,116,9)" fg:x="9196" fg:w="29"/><text x="67.7337%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.11%)</title><rect x="67.5864%" y="709" width="0.1101%" height="15" fill="rgb(209,72,35)" fg:x="9210" fg:w="15"/><text x="67.8364%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (5 samples, 0.04%)</title><rect x="67.6598%" y="693" width="0.0367%" height="15" fill="rgb(226,126,21)" fg:x="9220" fg:w="5"/><text x="67.9098%" y="703.50"></text></g><g><title>__rdl_alloc (4 samples, 0.03%)</title><rect x="67.6965%" y="837" width="0.0294%" height="15" fill="rgb(227,192,1)" fg:x="9225" fg:w="4"/><text x="67.9465%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.03%)</title><rect x="67.6965%" y="821" width="0.0294%" height="15" fill="rgb(237,180,29)" fg:x="9225" fg:w="4"/><text x="67.9465%" y="831.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="67.7332%" y="837" width="0.0440%" height="15" fill="rgb(230,197,35)" fg:x="9230" fg:w="6"/><text x="67.9832%" y="847.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new (44 samples, 0.32%)</title><rect x="67.7772%" y="837" width="0.3229%" height="15" fill="rgb(246,193,31)" fg:x="9236" fg:w="44"/><text x="68.0272%" y="847.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (10 samples, 0.07%)</title><rect x="68.0267%" y="821" width="0.0734%" height="15" fill="rgb(241,36,4)" fg:x="9270" fg:w="10"/><text x="68.2767%" y="831.50"></text></g><g><title>arrow_schema::field::Field::new (9 samples, 0.07%)</title><rect x="68.1001%" y="837" width="0.0660%" height="15" fill="rgb(241,130,17)" fg:x="9280" fg:w="9"/><text x="68.3501%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="68.1515%" y="821" width="0.0147%" height="15" fill="rgb(206,137,32)" fg:x="9287" fg:w="2"/><text x="68.4015%" y="831.50"></text></g><g><title>arrow_schema::schema::Schema::new (26 samples, 0.19%)</title><rect x="68.1661%" y="837" width="0.1908%" height="15" fill="rgb(237,228,51)" fg:x="9289" fg:w="26"/><text x="68.4161%" y="847.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="82.8429%" y="805" width="0.0514%" height="15" fill="rgb(243,6,42)" fg:x="11289" fg:w="7"/><text x="83.0929%" y="815.50"></text></g><g><title>_int_malloc (5 samples, 0.04%)</title><rect x="82.8576%" y="789" width="0.0367%" height="15" fill="rgb(251,74,28)" fg:x="11291" fg:w="5"/><text x="83.1076%" y="799.50"></text></g><g><title>__posix_memalign (54 samples, 0.40%)</title><rect x="82.9089%" y="757" width="0.3963%" height="15" fill="rgb(218,20,49)" fg:x="11298" fg:w="54"/><text x="83.1589%" y="767.50"></text></g><g><title>_int_memalign (15 samples, 0.11%)</title><rect x="83.1951%" y="741" width="0.1101%" height="15" fill="rgb(238,28,14)" fg:x="11337" fg:w="15"/><text x="83.4451%" y="751.50"></text></g><g><title>__rdl_alloc (58 samples, 0.43%)</title><rect x="82.8943%" y="805" width="0.4256%" height="15" fill="rgb(229,40,46)" fg:x="11296" fg:w="58"/><text x="83.1443%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (58 samples, 0.43%)</title><rect x="82.8943%" y="789" width="0.4256%" height="15" fill="rgb(244,195,20)" fg:x="11296" fg:w="58"/><text x="83.1443%" y="799.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (56 samples, 0.41%)</title><rect x="82.9089%" y="773" width="0.4109%" height="15" fill="rgb(253,56,35)" fg:x="11298" fg:w="56"/><text x="83.1589%" y="783.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.01%)</title><rect x="83.3052%" y="757" width="0.0147%" height="15" fill="rgb(210,149,44)" fg:x="11352" fg:w="2"/><text x="83.5552%" y="767.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.01%)</title><rect x="83.3052%" y="741" width="0.0147%" height="15" fill="rgb(240,135,12)" fg:x="11352" fg:w="2"/><text x="83.5552%" y="751.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (109 samples, 0.80%)</title><rect x="82.5420%" y="821" width="0.7999%" height="15" fill="rgb(251,24,50)" fg:x="11248" fg:w="109"/><text x="82.7920%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="83.3272%" y="805" width="0.0147%" height="15" fill="rgb(243,200,47)" fg:x="11355" fg:w="2"/><text x="83.5772%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="821" width="0.0807%" height="15" fill="rgb(224,166,26)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="805" width="0.0807%" height="15" fill="rgb(233,0,47)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="789" width="0.0807%" height="15" fill="rgb(253,80,5)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="773" width="0.0807%" height="15" fill="rgb(214,133,25)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="757" width="0.0807%" height="15" fill="rgb(209,27,14)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="741" width="0.0807%" height="15" fill="rgb(219,102,51)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="83.3419%" y="725" width="0.0807%" height="15" fill="rgb(237,18,16)" fg:x="11357" fg:w="11"/><text x="83.5919%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.06%)</title><rect x="83.3639%" y="709" width="0.0587%" height="15" fill="rgb(241,85,17)" fg:x="11360" fg:w="8"/><text x="83.6139%" y="719.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.06%)</title><rect x="83.3639%" y="693" width="0.0587%" height="15" fill="rgb(236,90,42)" fg:x="11360" fg:w="8"/><text x="83.6139%" y="703.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.06%)</title><rect x="83.3639%" y="677" width="0.0587%" height="15" fill="rgb(249,57,21)" fg:x="11360" fg:w="8"/><text x="83.6139%" y="687.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="83.3712%" y="661" width="0.0514%" height="15" fill="rgb(243,12,36)" fg:x="11361" fg:w="7"/><text x="83.6212%" y="671.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="83.3712%" y="645" width="0.0514%" height="15" fill="rgb(253,128,47)" fg:x="11361" fg:w="7"/><text x="83.6212%" y="655.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="83.3712%" y="629" width="0.0514%" height="15" fill="rgb(207,33,20)" fg:x="11361" fg:w="7"/><text x="83.6212%" y="639.50"></text></g><g><title>__GI___libc_free (19 samples, 0.14%)</title><rect x="83.4226%" y="821" width="0.1394%" height="15" fill="rgb(233,215,35)" fg:x="11368" fg:w="19"/><text x="83.6726%" y="831.50"></text></g><g><title>__calloc (273 samples, 2.00%)</title><rect x="83.5620%" y="821" width="2.0034%" height="15" fill="rgb(249,188,52)" fg:x="11387" fg:w="273"/><text x="83.8120%" y="831.50">_..</text></g><g><title>_int_malloc (73 samples, 0.54%)</title><rect x="85.0297%" y="805" width="0.5357%" height="15" fill="rgb(225,12,32)" fg:x="11587" fg:w="73"/><text x="85.2797%" y="815.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.02%)</title><rect x="85.5434%" y="789" width="0.0220%" height="15" fill="rgb(247,98,14)" fg:x="11657" fg:w="3"/><text x="85.7934%" y="799.50"></text></g><g><title>_int_free (14 samples, 0.10%)</title><rect x="85.7856%" y="741" width="0.1027%" height="15" fill="rgb(247,219,48)" fg:x="11690" fg:w="14"/><text x="86.0356%" y="751.50"></text></g><g><title>__posix_memalign (129 samples, 0.95%)</title><rect x="85.5728%" y="773" width="0.9467%" height="15" fill="rgb(253,60,48)" fg:x="11661" fg:w="129"/><text x="85.8228%" y="783.50"></text></g><g><title>_int_memalign (105 samples, 0.77%)</title><rect x="85.7489%" y="757" width="0.7705%" height="15" fill="rgb(245,15,52)" fg:x="11685" fg:w="105"/><text x="85.9989%" y="767.50"></text></g><g><title>_int_malloc (86 samples, 0.63%)</title><rect x="85.8883%" y="741" width="0.6311%" height="15" fill="rgb(220,133,28)" fg:x="11704" fg:w="86"/><text x="86.1383%" y="751.50"></text></g><g><title>unlink_chunk.isra.0 (8 samples, 0.06%)</title><rect x="86.4607%" y="725" width="0.0587%" height="15" fill="rgb(217,180,4)" fg:x="11782" fg:w="8"/><text x="86.7107%" y="735.50"></text></g><g><title>__rdl_alloc (131 samples, 0.96%)</title><rect x="85.5654%" y="821" width="0.9613%" height="15" fill="rgb(251,24,1)" fg:x="11660" fg:w="131"/><text x="85.8154%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (131 samples, 0.96%)</title><rect x="85.5654%" y="805" width="0.9613%" height="15" fill="rgb(212,185,49)" fg:x="11660" fg:w="131"/><text x="85.8154%" y="815.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (130 samples, 0.95%)</title><rect x="85.5728%" y="789" width="0.9540%" height="15" fill="rgb(215,175,22)" fg:x="11661" fg:w="130"/><text x="85.8228%" y="799.50"></text></g><g><title>__rdl_alloc_zeroed (5 samples, 0.04%)</title><rect x="86.5267%" y="821" width="0.0367%" height="15" fill="rgb(250,205,14)" fg:x="11791" fg:w="5"/><text x="86.7767%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (5 samples, 0.04%)</title><rect x="86.5267%" y="805" width="0.0367%" height="15" fill="rgb(225,211,22)" fg:x="11791" fg:w="5"/><text x="86.7767%" y="815.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.03%)</title><rect x="86.5634%" y="821" width="0.0294%" height="15" fill="rgb(251,179,42)" fg:x="11796" fg:w="4"/><text x="86.8134%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.03%)</title><rect x="86.5634%" y="805" width="0.0294%" height="15" fill="rgb(208,216,51)" fg:x="11796" fg:w="4"/><text x="86.8134%" y="815.50"></text></g><g><title>__rust_dealloc (3 samples, 0.02%)</title><rect x="86.5928%" y="821" width="0.0220%" height="15" fill="rgb(235,36,11)" fg:x="11800" fg:w="3"/><text x="86.8428%" y="831.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingStream as futures_core::stream::Stream&gt;::poll_next (3,342 samples, 24.52%)</title><rect x="63.1467%" y="853" width="24.5248%" height="15" fill="rgb(213,189,28)" fg:x="8605" fg:w="3342"/><text x="63.3967%" y="863.50">&lt;fastfull_search::datasources::posting_..</text></g><g><title>fastfull_search::batch::posting_batch::PostingBatch::project_with_predicate (2,632 samples, 19.31%)</title><rect x="68.3569%" y="837" width="19.3146%" height="15" fill="rgb(227,203,42)" fg:x="9315" fg:w="2632"/><text x="68.6069%" y="847.50">fastfull_search::batch::postin..</text></g><g><title>_int_free (144 samples, 1.06%)</title><rect x="86.6148%" y="821" width="1.0567%" height="15" fill="rgb(244,72,36)" fg:x="11803" fg:w="144"/><text x="86.8648%" y="831.50"></text></g><g><title>&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;St,C&gt; as core::future::future::Future&gt;::poll (3,354 samples, 24.61%)</title><rect x="63.1027%" y="869" width="24.6129%" height="15" fill="rgb(213,53,17)" fg:x="8599" fg:w="3354"/><text x="63.3527%" y="879.50">&lt;futures_util::stream::try_stream::try_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.04%)</title><rect x="87.6715%" y="853" width="0.0440%" height="15" fill="rgb(207,167,3)" fg:x="11947" fg:w="6"/><text x="87.9215%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="87.6715%" y="837" width="0.0440%" height="15" fill="rgb(216,98,30)" fg:x="11947" fg:w="6"/><text x="87.9215%" y="847.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.04%)</title><rect x="87.6715%" y="821" width="0.0440%" height="15" fill="rgb(236,123,15)" fg:x="11947" fg:w="6"/><text x="87.9215%" y="831.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="87.7009%" y="805" width="0.0147%" height="15" fill="rgb(248,81,50)" fg:x="11951" fg:w="2"/><text x="87.9509%" y="815.50"></text></g><g><title>core::str::converts::from_utf8 (6 samples, 0.04%)</title><rect x="87.7743%" y="805" width="0.0440%" height="15" fill="rgb(214,120,4)" fg:x="11961" fg:w="6"/><text x="88.0243%" y="815.50"></text></g><g><title>core::str::validations::run_utf8_validation (3 samples, 0.02%)</title><rect x="87.7963%" y="789" width="0.0220%" height="15" fill="rgb(208,179,34)" fg:x="11964" fg:w="3"/><text x="88.0463%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (347 samples, 2.55%)</title><rect x="87.8623%" y="645" width="2.5464%" height="15" fill="rgb(227,140,7)" fg:x="11973" fg:w="347"/><text x="88.1123%" y="655.50">[[..</text></g><g><title>[[kernel.kallsyms]] (340 samples, 2.50%)</title><rect x="87.9137%" y="629" width="2.4950%" height="15" fill="rgb(214,22,6)" fg:x="11980" fg:w="340"/><text x="88.1637%" y="639.50">[[..</text></g><g><title>[[kernel.kallsyms]] (331 samples, 2.43%)</title><rect x="87.9797%" y="613" width="2.4290%" height="15" fill="rgb(207,137,27)" fg:x="11989" fg:w="331"/><text x="88.2297%" y="623.50">[[..</text></g><g><title>[[kernel.kallsyms]] (329 samples, 2.41%)</title><rect x="87.9944%" y="597" width="2.4143%" height="15" fill="rgb(210,8,46)" fg:x="11991" fg:w="329"/><text x="88.2444%" y="607.50">[[..</text></g><g><title>[[kernel.kallsyms]] (325 samples, 2.38%)</title><rect x="88.0238%" y="581" width="2.3850%" height="15" fill="rgb(240,16,54)" fg:x="11995" fg:w="325"/><text x="88.2738%" y="591.50">[[..</text></g><g><title>[[kernel.kallsyms]] (315 samples, 2.31%)</title><rect x="88.0972%" y="565" width="2.3116%" height="15" fill="rgb(211,209,29)" fg:x="12005" fg:w="315"/><text x="88.3472%" y="575.50">[..</text></g><g><title>[[kernel.kallsyms]] (310 samples, 2.27%)</title><rect x="88.1339%" y="549" width="2.2749%" height="15" fill="rgb(226,228,24)" fg:x="12010" fg:w="310"/><text x="88.3839%" y="559.50">[..</text></g><g><title>[[kernel.kallsyms]] (297 samples, 2.18%)</title><rect x="88.2293%" y="533" width="2.1795%" height="15" fill="rgb(222,84,9)" fg:x="12023" fg:w="297"/><text x="88.4793%" y="543.50">[..</text></g><g><title>[[kernel.kallsyms]] (279 samples, 2.05%)</title><rect x="88.3613%" y="517" width="2.0474%" height="15" fill="rgb(234,203,30)" fg:x="12041" fg:w="279"/><text x="88.6113%" y="527.50">[..</text></g><g><title>[[kernel.kallsyms]] (246 samples, 1.81%)</title><rect x="88.6035%" y="501" width="1.8052%" height="15" fill="rgb(238,109,14)" fg:x="12074" fg:w="246"/><text x="88.8535%" y="511.50">[..</text></g><g><title>[[kernel.kallsyms]] (221 samples, 1.62%)</title><rect x="88.7870%" y="485" width="1.6218%" height="15" fill="rgb(233,206,34)" fg:x="12099" fg:w="221"/><text x="89.0370%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (164 samples, 1.20%)</title><rect x="89.2053%" y="469" width="1.2035%" height="15" fill="rgb(220,167,47)" fg:x="12156" fg:w="164"/><text x="89.4553%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (150 samples, 1.10%)</title><rect x="89.3080%" y="453" width="1.1008%" height="15" fill="rgb(238,105,10)" fg:x="12170" fg:w="150"/><text x="89.5580%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (126 samples, 0.92%)</title><rect x="89.4841%" y="437" width="0.9246%" height="15" fill="rgb(213,227,17)" fg:x="12194" fg:w="126"/><text x="89.7341%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (86 samples, 0.63%)</title><rect x="89.7776%" y="421" width="0.6311%" height="15" fill="rgb(217,132,38)" fg:x="12234" fg:w="86"/><text x="90.0276%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (13 samples, 0.10%)</title><rect x="90.3133%" y="405" width="0.0954%" height="15" fill="rgb(242,146,4)" fg:x="12307" fg:w="13"/><text x="90.5633%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (8 samples, 0.06%)</title><rect x="90.3500%" y="389" width="0.0587%" height="15" fill="rgb(212,61,9)" fg:x="12312" fg:w="8"/><text x="90.6000%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.05%)</title><rect x="90.3574%" y="373" width="0.0514%" height="15" fill="rgb(247,126,22)" fg:x="12313" fg:w="7"/><text x="90.6074%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.01%)</title><rect x="90.3941%" y="357" width="0.0147%" height="15" fill="rgb(220,196,2)" fg:x="12318" fg:w="2"/><text x="90.6441%" y="367.50"></text></g><g><title>__libc_read (353 samples, 2.59%)</title><rect x="87.8330%" y="677" width="2.5904%" height="15" fill="rgb(208,46,4)" fg:x="11969" fg:w="353"/><text x="88.0830%" y="687.50">__..</text></g><g><title>__libc_read (353 samples, 2.59%)</title><rect x="87.8330%" y="661" width="2.5904%" height="15" fill="rgb(252,104,46)" fg:x="11969" fg:w="353"/><text x="88.0830%" y="671.50">__..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (359 samples, 2.63%)</title><rect x="87.8183%" y="773" width="2.6345%" height="15" fill="rgb(237,152,48)" fg:x="11967" fg:w="359"/><text x="88.0683%" y="783.50">&lt;s..</text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (359 samples, 2.63%)</title><rect x="87.8183%" y="757" width="2.6345%" height="15" fill="rgb(221,59,37)" fg:x="11967" fg:w="359"/><text x="88.0683%" y="767.50">st..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (357 samples, 2.62%)</title><rect x="87.8330%" y="741" width="2.6198%" height="15" fill="rgb(209,202,51)" fg:x="11969" fg:w="357"/><text x="88.0830%" y="751.50">st..</text></g><g><title>&lt;std::io::stdio::StdinRaw as std::io::Read&gt;::read_buf (357 samples, 2.62%)</title><rect x="87.8330%" y="725" width="2.6198%" height="15" fill="rgb(228,81,30)" fg:x="11969" fg:w="357"/><text x="88.0830%" y="735.50">&lt;s..</text></g><g><title>&lt;std::sys::unix::stdio::Stdin as std::io::Read&gt;::read_buf (357 samples, 2.62%)</title><rect x="87.8330%" y="709" width="2.6198%" height="15" fill="rgb(227,42,39)" fg:x="11969" fg:w="357"/><text x="88.0830%" y="719.50">&lt;s..</text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (357 samples, 2.62%)</title><rect x="87.8330%" y="693" width="2.6198%" height="15" fill="rgb(221,26,2)" fg:x="11969" fg:w="357"/><text x="88.0830%" y="703.50">st..</text></g><g><title>std::sys::unix::cvt (4 samples, 0.03%)</title><rect x="90.4234%" y="677" width="0.0294%" height="15" fill="rgb(254,61,31)" fg:x="12322" fg:w="4"/><text x="90.6734%" y="687.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (4 samples, 0.03%)</title><rect x="90.4234%" y="661" width="0.0294%" height="15" fill="rgb(222,173,38)" fg:x="12322" fg:w="4"/><text x="90.6734%" y="671.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="90.4748%" y="645" width="0.0220%" height="15" fill="rgb(218,50,12)" fg:x="12329" fg:w="3"/><text x="90.7248%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="90.4601%" y="725" width="0.0514%" height="15" fill="rgb(223,88,40)" fg:x="12327" fg:w="7"/><text x="90.7101%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="90.4601%" y="709" width="0.0514%" height="15" fill="rgb(237,54,19)" fg:x="12327" fg:w="7"/><text x="90.7101%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.05%)</title><rect x="90.4601%" y="693" width="0.0514%" height="15" fill="rgb(251,129,25)" fg:x="12327" fg:w="7"/><text x="90.7101%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.05%)</title><rect x="90.4601%" y="677" width="0.0514%" height="15" fill="rgb(238,97,19)" fg:x="12327" fg:w="7"/><text x="90.7101%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="90.4675%" y="661" width="0.0440%" height="15" fill="rgb(240,169,18)" fg:x="12328" fg:w="6"/><text x="90.7175%" y="671.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="90.4968%" y="645" width="0.0147%" height="15" fill="rgb(230,187,49)" fg:x="12332" fg:w="2"/><text x="90.7468%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="90.4968%" y="629" width="0.0147%" height="15" fill="rgb(209,44,26)" fg:x="12332" fg:w="2"/><text x="90.7468%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.07%)</title><rect x="90.4528%" y="773" width="0.0660%" height="15" fill="rgb(244,0,6)" fg:x="12326" fg:w="9"/><text x="90.7028%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.07%)</title><rect x="90.4528%" y="757" width="0.0660%" height="15" fill="rgb(248,18,21)" fg:x="12326" fg:w="9"/><text x="90.7028%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.07%)</title><rect x="90.4528%" y="741" width="0.0660%" height="15" fill="rgb(245,180,19)" fg:x="12326" fg:w="9"/><text x="90.7028%" y="751.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (383 samples, 2.81%)</title><rect x="87.7156%" y="869" width="2.8106%" height="15" fill="rgb(252,118,36)" fg:x="11953" fg:w="383"/><text x="87.9656%" y="879.50">&lt;s..</text></g><g><title>&lt;std::io::stdio::StdinLock as std::io::BufRead&gt;::read_line (379 samples, 2.78%)</title><rect x="87.7449%" y="853" width="2.7812%" height="15" fill="rgb(210,224,19)" fg:x="11957" fg:w="379"/><text x="87.9949%" y="863.50">&lt;s..</text></g><g><title>std::io::BufRead::read_line (379 samples, 2.78%)</title><rect x="87.7449%" y="837" width="2.7812%" height="15" fill="rgb(218,30,24)" fg:x="11957" fg:w="379"/><text x="87.9949%" y="847.50">st..</text></g><g><title>std::io::append_to_string (379 samples, 2.78%)</title><rect x="87.7449%" y="821" width="2.7812%" height="15" fill="rgb(219,75,50)" fg:x="11957" fg:w="379"/><text x="87.9949%" y="831.50">st..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (369 samples, 2.71%)</title><rect x="87.8183%" y="805" width="2.7079%" height="15" fill="rgb(234,72,50)" fg:x="11967" fg:w="369"/><text x="88.0683%" y="815.50">st..</text></g><g><title>std::io::read_until (369 samples, 2.71%)</title><rect x="87.8183%" y="789" width="2.7079%" height="15" fill="rgb(219,100,48)" fg:x="11967" fg:w="369"/><text x="88.0683%" y="799.50">st..</text></g><g><title>__GI___libc_free (10 samples, 0.07%)</title><rect x="90.5262%" y="869" width="0.0734%" height="15" fill="rgb(253,5,41)" fg:x="12336" fg:w="10"/><text x="90.7762%" y="879.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="90.5995%" y="869" width="0.0294%" height="15" fill="rgb(247,181,11)" fg:x="12346" fg:w="4"/><text x="90.8495%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (48 samples, 0.35%)</title><rect x="90.6289%" y="869" width="0.3522%" height="15" fill="rgb(222,223,25)" fg:x="12350" fg:w="48"/><text x="90.8789%" y="879.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.04%)</title><rect x="90.9885%" y="869" width="0.0440%" height="15" fill="rgb(214,198,28)" fg:x="12399" fg:w="6"/><text x="91.2385%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.04%)</title><rect x="90.9885%" y="853" width="0.0440%" height="15" fill="rgb(230,46,43)" fg:x="12399" fg:w="6"/><text x="91.2385%" y="863.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="91.2306%" y="853" width="0.0147%" height="15" fill="rgb(233,65,53)" fg:x="12432" fg:w="2"/><text x="91.4806%" y="863.50"></text></g><g><title>_int_free (33 samples, 0.24%)</title><rect x="91.0325%" y="869" width="0.2422%" height="15" fill="rgb(221,121,27)" fg:x="12405" fg:w="33"/><text x="91.2825%" y="879.50"></text></g><g><title>unlink_chunk.isra.0 (4 samples, 0.03%)</title><rect x="91.2453%" y="853" width="0.0294%" height="15" fill="rgb(247,70,47)" fg:x="12434" fg:w="4"/><text x="91.4953%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.12%)</title><rect x="91.3627%" y="773" width="0.1248%" height="15" fill="rgb(228,85,35)" fg:x="12450" fg:w="17"/><text x="91.6127%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.12%)</title><rect x="91.3627%" y="757" width="0.1248%" height="15" fill="rgb(209,50,18)" fg:x="12450" fg:w="17"/><text x="91.6127%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.12%)</title><rect x="91.3627%" y="741" width="0.1248%" height="15" fill="rgb(250,19,35)" fg:x="12450" fg:w="17"/><text x="91.6127%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.11%)</title><rect x="91.3774%" y="725" width="0.1101%" height="15" fill="rgb(253,107,29)" fg:x="12452" fg:w="15"/><text x="91.6274%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.11%)</title><rect x="91.3774%" y="709" width="0.1101%" height="15" fill="rgb(252,179,29)" fg:x="12452" fg:w="15"/><text x="91.6274%" y="719.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.11%)</title><rect x="91.3774%" y="693" width="0.1101%" height="15" fill="rgb(238,194,6)" fg:x="12452" fg:w="15"/><text x="91.6274%" y="703.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.11%)</title><rect x="91.3774%" y="677" width="0.1101%" height="15" fill="rgb(238,164,29)" fg:x="12452" fg:w="15"/><text x="91.6274%" y="687.50"></text></g><g><title>_int_malloc (9 samples, 0.07%)</title><rect x="91.4214%" y="661" width="0.0660%" height="15" fill="rgb(224,25,9)" fg:x="12458" fg:w="9"/><text x="91.6714%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (18 samples, 0.13%)</title><rect x="91.3627%" y="853" width="0.1321%" height="15" fill="rgb(244,153,23)" fg:x="12450" fg:w="18"/><text x="91.6127%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.13%)</title><rect x="91.3627%" y="837" width="0.1321%" height="15" fill="rgb(212,203,14)" fg:x="12450" fg:w="18"/><text x="91.6127%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.13%)</title><rect x="91.3627%" y="821" width="0.1321%" height="15" fill="rgb(220,164,20)" fg:x="12450" fg:w="18"/><text x="91.6127%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.13%)</title><rect x="91.3627%" y="805" width="0.1321%" height="15" fill="rgb(222,203,48)" fg:x="12450" fg:w="18"/><text x="91.6127%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.13%)</title><rect x="91.3627%" y="789" width="0.1321%" height="15" fill="rgb(215,159,22)" fg:x="12450" fg:w="18"/><text x="91.6127%" y="799.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="91.4948%" y="853" width="0.0147%" height="15" fill="rgb(216,183,47)" fg:x="12468" fg:w="2"/><text x="91.7448%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (34 samples, 0.25%)</title><rect x="91.2747%" y="869" width="0.2495%" height="15" fill="rgb(229,195,25)" fg:x="12438" fg:w="34"/><text x="91.5247%" y="879.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="91.5535%" y="853" width="0.0147%" height="15" fill="rgb(224,132,51)" fg:x="12476" fg:w="2"/><text x="91.8035%" y="863.50"></text></g><g><title>_int_free (11 samples, 0.08%)</title><rect x="91.6049%" y="821" width="0.0807%" height="15" fill="rgb(240,63,7)" fg:x="12483" fg:w="11"/><text x="91.8549%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.17%)</title><rect x="91.5242%" y="869" width="0.1688%" height="15" fill="rgb(249,182,41)" fg:x="12472" fg:w="23"/><text x="91.7742%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.12%)</title><rect x="91.5682%" y="853" width="0.1248%" height="15" fill="rgb(243,47,26)" fg:x="12478" fg:w="17"/><text x="91.8182%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_common::dfschema::DFField&gt; (14 samples, 0.10%)</title><rect x="91.5902%" y="837" width="0.1027%" height="15" fill="rgb(233,48,2)" fg:x="12481" fg:w="14"/><text x="91.8402%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="91.7663%" y="853" width="0.0294%" height="15" fill="rgb(244,165,34)" fg:x="12505" fg:w="4"/><text x="92.0163%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionState&gt; (25 samples, 0.18%)</title><rect x="91.6930%" y="869" width="0.1835%" height="15" fill="rgb(207,89,7)" fg:x="12495" fg:w="25"/><text x="91.9430%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (11 samples, 0.08%)</title><rect x="91.7957%" y="853" width="0.0807%" height="15" fill="rgb(244,117,36)" fg:x="12509" fg:w="11"/><text x="92.0457%" y="863.50"></text></g><g><title>_int_free (8 samples, 0.06%)</title><rect x="91.8177%" y="837" width="0.0587%" height="15" fill="rgb(226,144,34)" fg:x="12512" fg:w="8"/><text x="92.0677%" y="847.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="91.9205%" y="853" width="0.0440%" height="15" fill="rgb(213,23,19)" fg:x="12526" fg:w="6"/><text x="92.1705%" y="863.50"></text></g><g><title>_int_free (8 samples, 0.06%)</title><rect x="91.9718%" y="837" width="0.0587%" height="15" fill="rgb(217,75,12)" fg:x="12533" fg:w="8"/><text x="92.2218%" y="847.50"></text></g><g><title>_int_free (7 samples, 0.05%)</title><rect x="92.0452%" y="821" width="0.0514%" height="15" fill="rgb(224,159,17)" fg:x="12543" fg:w="7"/><text x="92.2952%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_expr::logical_plan::plan::Predicate&gt;&gt; (22 samples, 0.16%)</title><rect x="91.9645%" y="853" width="0.1614%" height="15" fill="rgb(217,118,1)" fg:x="12532" fg:w="22"/><text x="92.2145%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;(datafusion_expr::logical_plan::plan::Predicate,f64,usize,usize)&gt; (13 samples, 0.10%)</title><rect x="92.0305%" y="837" width="0.0954%" height="15" fill="rgb(232,180,48)" fg:x="12541" fg:w="13"/><text x="92.2805%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (4 samples, 0.03%)</title><rect x="92.0966%" y="821" width="0.0294%" height="15" fill="rgb(230,27,33)" fg:x="12550" fg:w="4"/><text x="92.3466%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="92.1406%" y="837" width="0.0147%" height="15" fill="rgb(205,31,21)" fg:x="12556" fg:w="2"/><text x="92.3906%" y="847.50"></text></g><g><title>_int_free (13 samples, 0.10%)</title><rect x="92.1553%" y="837" width="0.0954%" height="15" fill="rgb(253,59,4)" fg:x="12558" fg:w="13"/><text x="92.4053%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="92.2874%" y="821" width="0.0220%" height="15" fill="rgb(224,201,9)" fg:x="12576" fg:w="3"/><text x="92.5374%" y="831.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="92.3167%" y="821" width="0.0220%" height="15" fill="rgb(229,206,30)" fg:x="12580" fg:w="3"/><text x="92.5667%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::logical_plan::plan::LogicalPlan&gt; (66 samples, 0.48%)</title><rect x="91.8764%" y="869" width="0.4843%" height="15" fill="rgb(212,67,47)" fg:x="12520" fg:w="66"/><text x="92.1264%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (32 samples, 0.23%)</title><rect x="92.1259%" y="853" width="0.2348%" height="15" fill="rgb(211,96,50)" fg:x="12554" fg:w="32"/><text x="92.3759%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (15 samples, 0.11%)</title><rect x="92.2507%" y="837" width="0.1101%" height="15" fill="rgb(252,114,18)" fg:x="12571" fg:w="15"/><text x="92.5007%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion_expr::expr::Expr&gt; (3 samples, 0.02%)</title><rect x="92.3387%" y="821" width="0.0220%" height="15" fill="rgb(223,58,37)" fg:x="12583" fg:w="3"/><text x="92.5887%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="92.3608%" y="853" width="0.0147%" height="15" fill="rgb(237,70,4)" fg:x="12586" fg:w="2"/><text x="92.6108%" y="863.50"></text></g><g><title>_int_free (7 samples, 0.05%)</title><rect x="92.3754%" y="853" width="0.0514%" height="15" fill="rgb(244,85,46)" fg:x="12588" fg:w="7"/><text x="92.6254%" y="863.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="92.5075%" y="837" width="0.0147%" height="15" fill="rgb(223,39,52)" fg:x="12606" fg:w="2"/><text x="92.7575%" y="847.50"></text></g><g><title>_int_free (15 samples, 0.11%)</title><rect x="92.5222%" y="837" width="0.1101%" height="15" fill="rgb(218,200,14)" fg:x="12608" fg:w="15"/><text x="92.7722%" y="847.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="92.8671%" y="805" width="0.0147%" height="15" fill="rgb(208,171,16)" fg:x="12655" fg:w="2"/><text x="93.1171%" y="815.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="92.8818%" y="805" width="0.0294%" height="15" fill="rgb(234,200,18)" fg:x="12657" fg:w="4"/><text x="93.1318%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.06%)</title><rect x="92.8598%" y="821" width="0.0587%" height="15" fill="rgb(228,45,11)" fg:x="12654" fg:w="8"/><text x="93.1098%" y="831.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="92.9185%" y="821" width="0.0294%" height="15" fill="rgb(237,182,11)" fg:x="12662" fg:w="4"/><text x="93.1685%" y="831.50"></text></g><g><title>_int_free (19 samples, 0.14%)</title><rect x="92.9478%" y="821" width="0.1394%" height="15" fill="rgb(241,175,49)" fg:x="12666" fg:w="19"/><text x="93.1978%" y="831.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="93.1166%" y="805" width="0.0294%" height="15" fill="rgb(247,38,35)" fg:x="12689" fg:w="4"/><text x="93.3666%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::try_collect::TryCollect&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn datafusion::physical_plan::RecordBatchStream+Item = core::result::Result&lt;arrow_array::record_batch::RecordBatch,datafusion_common::error::DataFusionError&gt;+core::marker::Send&gt;&gt;,alloc::vec::Vec&lt;arrow_array::record_batch::RecordBatch&gt;&gt;&gt; (114 samples, 0.84%)</title><rect x="92.3608%" y="869" width="0.8366%" height="15" fill="rgb(228,39,49)" fg:x="12586" fg:w="114"/><text x="92.6108%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingStream&gt; (105 samples, 0.77%)</title><rect x="92.4268%" y="853" width="0.7705%" height="15" fill="rgb(226,101,26)" fg:x="12595" fg:w="105"/><text x="92.6768%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (77 samples, 0.57%)</title><rect x="92.6323%" y="837" width="0.5651%" height="15" fill="rgb(206,141,19)" fg:x="12623" fg:w="77"/><text x="92.8823%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;arrow_data::data::ArrayData&gt; (15 samples, 0.11%)</title><rect x="93.0873%" y="821" width="0.1101%" height="15" fill="rgb(211,200,13)" fg:x="12685" fg:w="15"/><text x="93.3373%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.05%)</title><rect x="93.1460%" y="805" width="0.0514%" height="15" fill="rgb(241,121,6)" fg:x="12693" fg:w="7"/><text x="93.3960%" y="815.50"></text></g><g><title>_int_free (7 samples, 0.05%)</title><rect x="93.1460%" y="789" width="0.0514%" height="15" fill="rgb(234,221,29)" fg:x="12693" fg:w="7"/><text x="93.3960%" y="799.50"></text></g><g><title>core::str::pattern::StrSearcher::new (12 samples, 0.09%)</title><rect x="93.1973%" y="869" width="0.0881%" height="15" fill="rgb(229,136,5)" fg:x="12700" fg:w="12"/><text x="93.4473%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (6 samples, 0.04%)</title><rect x="93.2414%" y="853" width="0.0440%" height="15" fill="rgb(238,36,11)" fg:x="12706" fg:w="6"/><text x="93.4914%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.19%)</title><rect x="93.3808%" y="821" width="0.1908%" height="15" fill="rgb(251,55,41)" fg:x="12725" fg:w="26"/><text x="93.6308%" y="831.50"></text></g><g><title>dashmap::set::DashSet&lt;K,S&gt;::contains (19 samples, 0.14%)</title><rect x="93.4322%" y="805" width="0.1394%" height="15" fill="rgb(242,34,40)" fg:x="12732" fg:w="19"/><text x="93.6822%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.01%)</title><rect x="93.5569%" y="789" width="0.0147%" height="15" fill="rgb(215,42,17)" fg:x="12749" fg:w="2"/><text x="93.8069%" y="799.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (30 samples, 0.22%)</title><rect x="93.3808%" y="837" width="0.2202%" height="15" fill="rgb(207,44,46)" fg:x="12725" fg:w="30"/><text x="93.6308%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="93.5716%" y="821" width="0.0294%" height="15" fill="rgb(211,206,28)" fg:x="12751" fg:w="4"/><text x="93.8216%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="93.5863%" y="805" width="0.0147%" height="15" fill="rgb(237,167,16)" fg:x="12753" fg:w="2"/><text x="93.8363%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="93.6376%" y="821" width="0.0147%" height="15" fill="rgb(233,66,6)" fg:x="12760" fg:w="2"/><text x="93.8876%" y="831.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="93.6670%" y="805" width="0.0147%" height="15" fill="rgb(246,123,29)" fg:x="12764" fg:w="2"/><text x="93.9170%" y="815.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="93.6817%" y="805" width="0.0147%" height="15" fill="rgb(209,62,40)" fg:x="12766" fg:w="2"/><text x="93.9317%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="93.6817%" y="789" width="0.0147%" height="15" fill="rgb(218,4,25)" fg:x="12766" fg:w="2"/><text x="93.9317%" y="799.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingExec as datafusion::physical_plan::ExecutionPlan&gt;::execute (58 samples, 0.43%)</title><rect x="93.3147%" y="853" width="0.4256%" height="15" fill="rgb(253,91,49)" fg:x="12716" fg:w="58"/><text x="93.5647%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.12%)</title><rect x="93.6156%" y="837" width="0.1248%" height="15" fill="rgb(228,155,29)" fg:x="12757" fg:w="17"/><text x="93.8656%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;datafusion::execution::context::SessionConfig&gt; (11 samples, 0.08%)</title><rect x="93.6596%" y="821" width="0.0807%" height="15" fill="rgb(243,57,37)" fg:x="12763" fg:w="11"/><text x="93.9096%" y="831.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="93.6963%" y="805" width="0.0440%" height="15" fill="rgb(244,167,17)" fg:x="12768" fg:w="6"/><text x="93.9463%" y="815.50"></text></g><g><title>_int_free (10 samples, 0.07%)</title><rect x="93.8211%" y="821" width="0.0734%" height="15" fill="rgb(207,181,38)" fg:x="12785" fg:w="10"/><text x="94.0711%" y="831.50"></text></g><g><title>datafusion::physical_plan::execute_stream (89 samples, 0.65%)</title><rect x="93.2927%" y="869" width="0.6531%" height="15" fill="rgb(211,8,23)" fg:x="12713" fg:w="89"/><text x="93.5427%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (26 samples, 0.19%)</title><rect x="93.7550%" y="853" width="0.1908%" height="15" fill="rgb(235,11,44)" fg:x="12776" fg:w="26"/><text x="94.0050%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (24 samples, 0.18%)</title><rect x="93.7697%" y="837" width="0.1761%" height="15" fill="rgb(248,18,52)" fg:x="12778" fg:w="24"/><text x="94.0197%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;datafusion_common::stats::TermMeta&gt;&gt; (7 samples, 0.05%)</title><rect x="93.8945%" y="821" width="0.0514%" height="15" fill="rgb(208,4,7)" fg:x="12795" fg:w="7"/><text x="94.1445%" y="831.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::boolean (14 samples, 0.10%)</title><rect x="93.9458%" y="869" width="0.1027%" height="15" fill="rgb(240,17,39)" fg:x="12802" fg:w="14"/><text x="94.1958%" y="879.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new (5 samples, 0.04%)</title><rect x="94.0119%" y="853" width="0.0367%" height="15" fill="rgb(207,170,3)" fg:x="12811" fg:w="5"/><text x="94.2619%" y="863.50"></text></g><g><title>datafusion_expr::logical_plan::plan::Boolean::try_new_with_predicate (5 samples, 0.04%)</title><rect x="94.0119%" y="837" width="0.0367%" height="15" fill="rgb(236,100,52)" fg:x="12811" fg:w="5"/><text x="94.2619%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (55 samples, 0.40%)</title><rect x="94.1807%" y="821" width="0.4036%" height="15" fill="rgb(246,78,51)" fg:x="12834" fg:w="55"/><text x="94.4307%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.23%)</title><rect x="94.3495%" y="805" width="0.2348%" height="15" fill="rgb(211,17,15)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.23%)</title><rect x="94.3495%" y="789" width="0.2348%" height="15" fill="rgb(209,59,46)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.23%)</title><rect x="94.3495%" y="773" width="0.2348%" height="15" fill="rgb(210,92,25)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.23%)</title><rect x="94.3495%" y="757" width="0.2348%" height="15" fill="rgb(238,174,52)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.23%)</title><rect x="94.3495%" y="741" width="0.2348%" height="15" fill="rgb(230,73,7)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.23%)</title><rect x="94.3495%" y="725" width="0.2348%" height="15" fill="rgb(243,124,40)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.23%)</title><rect x="94.3495%" y="709" width="0.2348%" height="15" fill="rgb(244,170,11)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.23%)</title><rect x="94.3495%" y="693" width="0.2348%" height="15" fill="rgb(207,114,54)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.23%)</title><rect x="94.3495%" y="677" width="0.2348%" height="15" fill="rgb(205,42,20)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="687.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.23%)</title><rect x="94.3495%" y="661" width="0.2348%" height="15" fill="rgb(230,30,28)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="671.50"></text></g><g><title>__GI___libc_malloc (32 samples, 0.23%)</title><rect x="94.3495%" y="645" width="0.2348%" height="15" fill="rgb(205,73,54)" fg:x="12857" fg:w="32"/><text x="94.5995%" y="655.50"></text></g><g><title>_int_malloc (24 samples, 0.18%)</title><rect x="94.4082%" y="629" width="0.1761%" height="15" fill="rgb(254,227,23)" fg:x="12865" fg:w="24"/><text x="94.6582%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="94.5916%" y="821" width="0.0147%" height="15" fill="rgb(228,202,34)" fg:x="12890" fg:w="2"/><text x="94.8416%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (70 samples, 0.51%)</title><rect x="94.1073%" y="837" width="0.5137%" height="15" fill="rgb(222,225,37)" fg:x="12824" fg:w="70"/><text x="94.3573%" y="847.50"></text></g><g><title>datafusion_common::dfschema::DFField::from_qualified (2 samples, 0.01%)</title><rect x="94.6063%" y="821" width="0.0147%" height="15" fill="rgb(221,14,54)" fg:x="12892" fg:w="2"/><text x="94.8563%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (75 samples, 0.55%)</title><rect x="94.1073%" y="853" width="0.5504%" height="15" fill="rgb(254,102,2)" fg:x="12824" fg:w="75"/><text x="94.3573%" y="863.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.04%)</title><rect x="94.6210%" y="837" width="0.0367%" height="15" fill="rgb(232,104,17)" fg:x="12894" fg:w="5"/><text x="94.8710%" y="847.50"></text></g><g><title>_int_malloc (5 samples, 0.04%)</title><rect x="94.6210%" y="821" width="0.0367%" height="15" fill="rgb(250,220,14)" fg:x="12894" fg:w="5"/><text x="94.8710%" y="831.50"></text></g><g><title>malloc_consolidate (4 samples, 0.03%)</title><rect x="94.6283%" y="805" width="0.0294%" height="15" fill="rgb(241,158,9)" fg:x="12895" fg:w="4"/><text x="94.8783%" y="815.50"></text></g><g><title>&lt;fastfull_search::datasources::posting_table::PostingTable as datafusion::datasource::datasource::TableProvider&gt;::schema (7 samples, 0.05%)</title><rect x="94.6577%" y="853" width="0.0514%" height="15" fill="rgb(246,9,43)" fg:x="12899" fg:w="7"/><text x="94.9077%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="94.7090%" y="853" width="0.0220%" height="15" fill="rgb(206,73,33)" fg:x="12906" fg:w="3"/><text x="94.9590%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.04%)</title><rect x="94.8191%" y="837" width="0.0367%" height="15" fill="rgb(222,79,8)" fg:x="12921" fg:w="5"/><text x="95.0691%" y="847.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="94.8558%" y="837" width="0.0294%" height="15" fill="rgb(234,8,54)" fg:x="12926" fg:w="4"/><text x="95.1058%" y="847.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="94.9439%" y="821" width="0.0294%" height="15" fill="rgb(209,134,38)" fg:x="12938" fg:w="4"/><text x="95.1939%" y="831.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="94.9806%" y="821" width="0.0220%" height="15" fill="rgb(230,127,29)" fg:x="12943" fg:w="3"/><text x="95.2306%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="95.0319%" y="773" width="0.0147%" height="15" fill="rgb(242,44,41)" fg:x="12950" fg:w="2"/><text x="95.2819%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="95.0319%" y="757" width="0.0147%" height="15" fill="rgb(222,56,43)" fg:x="12950" fg:w="2"/><text x="95.2819%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (8 samples, 0.06%)</title><rect x="95.0026%" y="821" width="0.0587%" height="15" fill="rgb(238,39,47)" fg:x="12946" fg:w="8"/><text x="95.2526%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.06%)</title><rect x="95.0026%" y="805" width="0.0587%" height="15" fill="rgb(226,79,43)" fg:x="12946" fg:w="8"/><text x="95.2526%" y="815.50"></text></g><g><title>core::fmt::write (6 samples, 0.04%)</title><rect x="95.0172%" y="789" width="0.0440%" height="15" fill="rgb(242,105,53)" fg:x="12948" fg:w="6"/><text x="95.2672%" y="799.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="95.0686%" y="805" width="0.0294%" height="15" fill="rgb(251,132,46)" fg:x="12955" fg:w="4"/><text x="95.3186%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="95.0980%" y="805" width="0.0147%" height="15" fill="rgb(231,77,14)" fg:x="12959" fg:w="2"/><text x="95.3480%" y="815.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (30 samples, 0.22%)</title><rect x="94.8998%" y="837" width="0.2202%" height="15" fill="rgb(240,135,9)" fg:x="12932" fg:w="30"/><text x="95.1498%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (8 samples, 0.06%)</title><rect x="95.0613%" y="821" width="0.0587%" height="15" fill="rgb(248,109,14)" fg:x="12954" fg:w="8"/><text x="95.3113%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.21%)</title><rect x="95.1420%" y="821" width="0.2055%" height="15" fill="rgb(227,146,52)" fg:x="12965" fg:w="28"/><text x="95.3920%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.14%)</title><rect x="95.2080%" y="805" width="0.1394%" height="15" fill="rgb(232,54,3)" fg:x="12974" fg:w="19"/><text x="95.4580%" y="815.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="95.4209%" y="789" width="0.0147%" height="15" fill="rgb(229,201,43)" fg:x="13003" fg:w="2"/><text x="95.6709%" y="799.50"></text></g><g><title>datafusion_common::dfschema::DFSchema::new_with_metadata (106 samples, 0.78%)</title><rect x="94.7310%" y="853" width="0.7779%" height="15" fill="rgb(252,161,33)" fg:x="12909" fg:w="106"/><text x="94.9810%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (53 samples, 0.39%)</title><rect x="95.1200%" y="837" width="0.3889%" height="15" fill="rgb(226,146,40)" fg:x="12962" fg:w="53"/><text x="95.3700%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (22 samples, 0.16%)</title><rect x="95.3475%" y="821" width="0.1614%" height="15" fill="rgb(219,47,25)" fg:x="12993" fg:w="22"/><text x="95.5975%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.11%)</title><rect x="95.3988%" y="805" width="0.1101%" height="15" fill="rgb(250,135,13)" fg:x="13000" fg:w="15"/><text x="95.6488%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.07%)</title><rect x="95.4355%" y="789" width="0.0734%" height="15" fill="rgb(219,229,18)" fg:x="13005" fg:w="10"/><text x="95.6855%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.07%)</title><rect x="95.4429%" y="773" width="0.0660%" height="15" fill="rgb(217,152,27)" fg:x="13006" fg:w="9"/><text x="95.6929%" y="783.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::scan (201 samples, 1.48%)</title><rect x="94.0559%" y="869" width="1.4750%" height="15" fill="rgb(225,71,47)" fg:x="12817" fg:w="201"/><text x="94.3059%" y="879.50"></text></g><g><title>datafusion_expr::logical_plan::builder::LogicalPlanBuilder::from (3 samples, 0.02%)</title><rect x="95.5089%" y="853" width="0.0220%" height="15" fill="rgb(220,139,14)" fg:x="13015" fg:w="3"/><text x="95.7589%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="95.6410%" y="677" width="0.0220%" height="15" fill="rgb(247,54,32)" fg:x="13033" fg:w="3"/><text x="95.8910%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="95.6410%" y="853" width="0.0294%" height="15" fill="rgb(252,131,39)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="95.6410%" y="837" width="0.0294%" height="15" fill="rgb(210,108,39)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.03%)</title><rect x="95.6410%" y="821" width="0.0294%" height="15" fill="rgb(205,23,29)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.03%)</title><rect x="95.6410%" y="805" width="0.0294%" height="15" fill="rgb(246,139,46)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.03%)</title><rect x="95.6410%" y="789" width="0.0294%" height="15" fill="rgb(250,81,26)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="95.6410%" y="773" width="0.0294%" height="15" fill="rgb(214,104,7)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.03%)</title><rect x="95.6410%" y="757" width="0.0294%" height="15" fill="rgb(233,189,8)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.03%)</title><rect x="95.6410%" y="741" width="0.0294%" height="15" fill="rgb(228,141,17)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="95.6410%" y="725" width="0.0294%" height="15" fill="rgb(247,157,1)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="95.6410%" y="709" width="0.0294%" height="15" fill="rgb(249,225,5)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="719.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="95.6410%" y="693" width="0.0294%" height="15" fill="rgb(242,55,13)" fg:x="13033" fg:w="4"/><text x="95.8910%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.04%)</title><rect x="95.6704%" y="853" width="0.0367%" height="15" fill="rgb(230,49,50)" fg:x="13037" fg:w="5"/><text x="95.9204%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="95.6924%" y="837" width="0.0147%" height="15" fill="rgb(241,111,38)" fg:x="13040" fg:w="2"/><text x="95.9424%" y="847.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (2 samples, 0.01%)</title><rect x="95.7071%" y="821" width="0.0147%" height="15" fill="rgb(252,155,4)" fg:x="13042" fg:w="2"/><text x="95.9571%" y="831.50"></text></g><g><title>fastfull_search::context::boolean_context::BooleanContext::state (27 samples, 0.20%)</title><rect x="95.5383%" y="869" width="0.1981%" height="15" fill="rgb(212,69,32)" fg:x="13019" fg:w="27"/><text x="95.7883%" y="879.50"></text></g><g><title>datafusion_physical_expr::execution_props::ExecutionProps::start_execution (4 samples, 0.03%)</title><rect x="95.7071%" y="853" width="0.0294%" height="15" fill="rgb(243,107,47)" fg:x="13042" fg:w="4"/><text x="95.9571%" y="863.50"></text></g><g><title>chrono::offset::utc::Utc::now (4 samples, 0.03%)</title><rect x="95.7071%" y="837" width="0.0294%" height="15" fill="rgb(247,130,12)" fg:x="13042" fg:w="4"/><text x="95.9571%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.01%)</title><rect x="95.7217%" y="821" width="0.0147%" height="15" fill="rgb(233,74,16)" fg:x="13044" fg:w="2"/><text x="95.9717%" y="831.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.01%)</title><rect x="95.7217%" y="805" width="0.0147%" height="15" fill="rgb(208,58,18)" fg:x="13044" fg:w="2"/><text x="95.9717%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="95.7437%" y="853" width="0.0147%" height="15" fill="rgb(242,225,1)" fg:x="13047" fg:w="2"/><text x="95.9937%" y="863.50"></text></g><g><title>_int_free (5 samples, 0.04%)</title><rect x="95.8171%" y="789" width="0.0367%" height="15" fill="rgb(249,39,40)" fg:x="13057" fg:w="5"/><text x="96.0671%" y="799.50"></text></g><g><title>malloc_consolidate (4 samples, 0.03%)</title><rect x="95.8245%" y="773" width="0.0294%" height="15" fill="rgb(207,72,44)" fg:x="13058" fg:w="4"/><text x="96.0745%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.27%)</title><rect x="95.7731%" y="853" width="0.2715%" height="15" fill="rgb(215,193,12)" fg:x="13051" fg:w="37"/><text x="96.0231%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.27%)</title><rect x="95.7731%" y="837" width="0.2715%" height="15" fill="rgb(248,41,39)" fg:x="13051" fg:w="37"/><text x="96.0231%" y="847.50"></text></g><g><title>__GI___libc_realloc (37 samples, 0.27%)</title><rect x="95.7731%" y="821" width="0.2715%" height="15" fill="rgb(253,85,4)" fg:x="13051" fg:w="37"/><text x="96.0231%" y="831.50"></text></g><g><title>_int_realloc (34 samples, 0.25%)</title><rect x="95.7951%" y="805" width="0.2495%" height="15" fill="rgb(243,70,31)" fg:x="13054" fg:w="34"/><text x="96.0451%" y="815.50"></text></g><g><title>_int_malloc (26 samples, 0.19%)</title><rect x="95.8538%" y="789" width="0.1908%" height="15" fill="rgb(253,195,26)" fg:x="13062" fg:w="26"/><text x="96.1038%" y="799.50"></text></g><g><title>unlink_chunk.isra.0 (3 samples, 0.02%)</title><rect x="96.0226%" y="773" width="0.0220%" height="15" fill="rgb(243,42,11)" fg:x="13085" fg:w="3"/><text x="96.2726%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="96.0740%" y="837" width="0.0147%" height="15" fill="rgb(239,66,17)" fg:x="13092" fg:w="2"/><text x="96.3240%" y="847.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="96.0886%" y="837" width="0.0220%" height="15" fill="rgb(217,132,21)" fg:x="13094" fg:w="3"/><text x="96.3386%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.07%)</title><rect x="96.1107%" y="837" width="0.0734%" height="15" fill="rgb(252,202,21)" fg:x="13097" fg:w="10"/><text x="96.3607%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.07%)</title><rect x="96.1107%" y="821" width="0.0734%" height="15" fill="rgb(233,98,36)" fg:x="13097" fg:w="10"/><text x="96.3607%" y="831.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.07%)</title><rect x="96.1107%" y="805" width="0.0734%" height="15" fill="rgb(216,153,54)" fg:x="13097" fg:w="10"/><text x="96.3607%" y="815.50"></text></g><g><title>_int_realloc (10 samples, 0.07%)</title><rect x="96.1107%" y="789" width="0.0734%" height="15" fill="rgb(250,99,7)" fg:x="13097" fg:w="10"/><text x="96.3607%" y="799.50"></text></g><g><title>_int_malloc (10 samples, 0.07%)</title><rect x="96.1107%" y="773" width="0.0734%" height="15" fill="rgb(207,56,50)" fg:x="13097" fg:w="10"/><text x="96.3607%" y="783.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.01%)</title><rect x="96.1694%" y="757" width="0.0147%" height="15" fill="rgb(244,61,34)" fg:x="13105" fg:w="2"/><text x="96.4194%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="96.1987%" y="821" width="0.0147%" height="15" fill="rgb(241,50,38)" fg:x="13109" fg:w="2"/><text x="96.4487%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="96.1987%" y="805" width="0.0147%" height="15" fill="rgb(212,166,30)" fg:x="13109" fg:w="2"/><text x="96.4487%" y="815.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="96.1987%" y="789" width="0.0147%" height="15" fill="rgb(249,127,32)" fg:x="13109" fg:w="2"/><text x="96.4487%" y="799.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (66 samples, 0.48%)</title><rect x="95.7364%" y="869" width="0.4843%" height="15" fill="rgb(209,103,0)" fg:x="13046" fg:w="66"/><text x="95.9864%" y="879.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (24 samples, 0.18%)</title><rect x="96.0446%" y="853" width="0.1761%" height="15" fill="rgb(238,209,51)" fg:x="13088" fg:w="24"/><text x="96.2946%" y="863.50"></text></g><g><title>fastfull_search::context::boolean_context::binary_expr_columns (5 samples, 0.04%)</title><rect x="96.1840%" y="837" width="0.0367%" height="15" fill="rgb(237,56,23)" fg:x="13107" fg:w="5"/><text x="96.4340%" y="847.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::build (4 samples, 0.03%)</title><rect x="96.2207%" y="869" width="0.0294%" height="15" fill="rgb(215,153,46)" fg:x="13112" fg:w="4"/><text x="96.4707%" y="879.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="96.3308%" y="837" width="0.0147%" height="15" fill="rgb(224,49,31)" fg:x="13127" fg:w="2"/><text x="96.5808%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="96.3455%" y="837" width="0.0147%" height="15" fill="rgb(250,18,42)" fg:x="13129" fg:w="2"/><text x="96.5955%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="96.3602%" y="837" width="0.0147%" height="15" fill="rgb(215,176,39)" fg:x="13131" fg:w="2"/><text x="96.6102%" y="847.50"></text></g><g><title>_int_free (5 samples, 0.04%)</title><rect x="96.3748%" y="837" width="0.0367%" height="15" fill="rgb(223,77,29)" fg:x="13133" fg:w="5"/><text x="96.6248%" y="847.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="96.4702%" y="821" width="0.0220%" height="15" fill="rgb(234,94,52)" fg:x="13146" fg:w="3"/><text x="96.7202%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="96.4996%" y="821" width="0.0294%" height="15" fill="rgb(220,154,50)" fg:x="13150" fg:w="4"/><text x="96.7496%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="96.5069%" y="805" width="0.0220%" height="15" fill="rgb(212,11,10)" fg:x="13151" fg:w="3"/><text x="96.7569%" y="815.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="96.5143%" y="789" width="0.0147%" height="15" fill="rgb(205,166,19)" fg:x="13152" fg:w="2"/><text x="96.7643%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.04%)</title><rect x="96.5730%" y="805" width="0.0440%" height="15" fill="rgb(244,198,16)" fg:x="13160" fg:w="6"/><text x="96.8230%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="96.5877%" y="789" width="0.0294%" height="15" fill="rgb(219,69,12)" fg:x="13162" fg:w="4"/><text x="96.8377%" y="799.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="96.5877%" y="773" width="0.0294%" height="15" fill="rgb(245,30,7)" fg:x="13162" fg:w="4"/><text x="96.8377%" y="783.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="96.7491%" y="789" width="0.0294%" height="15" fill="rgb(218,221,48)" fg:x="13184" fg:w="4"/><text x="96.9991%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.04%)</title><rect x="96.7858%" y="789" width="0.0367%" height="15" fill="rgb(216,66,15)" fg:x="13189" fg:w="5"/><text x="97.0358%" y="799.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="96.8225%" y="789" width="0.0147%" height="15" fill="rgb(226,122,50)" fg:x="13194" fg:w="2"/><text x="97.0725%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="96.8225%" y="773" width="0.0147%" height="15" fill="rgb(239,156,16)" fg:x="13194" fg:w="2"/><text x="97.0725%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="96.8372%" y="789" width="0.0294%" height="15" fill="rgb(224,27,38)" fg:x="13196" fg:w="4"/><text x="97.0872%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (8 samples, 0.06%)</title><rect x="96.8665%" y="789" width="0.0587%" height="15" fill="rgb(224,39,27)" fg:x="13200" fg:w="8"/><text x="97.1165%" y="799.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="96.8739%" y="773" width="0.0514%" height="15" fill="rgb(215,92,29)" fg:x="13201" fg:w="7"/><text x="97.1239%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="96.9326%" y="773" width="0.0220%" height="15" fill="rgb(207,159,16)" fg:x="13209" fg:w="3"/><text x="97.1826%" y="783.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.02%)</title><rect x="96.9326%" y="757" width="0.0220%" height="15" fill="rgb(238,163,47)" fg:x="13209" fg:w="3"/><text x="97.1826%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="96.9399%" y="741" width="0.0147%" height="15" fill="rgb(219,91,49)" fg:x="13210" fg:w="2"/><text x="97.1899%" y="751.50"></text></g><g><title>alloc::str::convert_while_ascii (2 samples, 0.01%)</title><rect x="96.9546%" y="773" width="0.0147%" height="15" fill="rgb(227,167,31)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="96.9546%" y="757" width="0.0147%" height="15" fill="rgb(234,80,54)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="96.9546%" y="741" width="0.0147%" height="15" fill="rgb(212,114,2)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="96.9546%" y="725" width="0.0147%" height="15" fill="rgb(234,50,24)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="96.9546%" y="709" width="0.0147%" height="15" fill="rgb(221,68,8)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="96.9546%" y="693" width="0.0147%" height="15" fill="rgb(254,180,31)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="96.9546%" y="677" width="0.0147%" height="15" fill="rgb(247,130,50)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="96.9546%" y="661" width="0.0147%" height="15" fill="rgb(211,109,4)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="96.9546%" y="645" width="0.0147%" height="15" fill="rgb(238,50,21)" fg:x="13212" fg:w="2"/><text x="97.2046%" y="655.50"></text></g><g><title>alloc::string::String::push (3 samples, 0.02%)</title><rect x="96.9766%" y="773" width="0.0220%" height="15" fill="rgb(225,57,45)" fg:x="13215" fg:w="3"/><text x="97.2266%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="96.9839%" y="757" width="0.0147%" height="15" fill="rgb(209,196,50)" fg:x="13216" fg:w="2"/><text x="97.2339%" y="767.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (11 samples, 0.08%)</title><rect x="96.9252%" y="789" width="0.0807%" height="15" fill="rgb(242,140,13)" fg:x="13208" fg:w="11"/><text x="97.1752%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (60 samples, 0.44%)</title><rect x="97.0059%" y="789" width="0.4403%" height="15" fill="rgb(217,111,7)" fg:x="13219" fg:w="60"/><text x="97.2559%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (17 samples, 0.12%)</title><rect x="97.3215%" y="773" width="0.1248%" height="15" fill="rgb(253,193,51)" fg:x="13262" fg:w="17"/><text x="97.5715%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="97.6444%" y="773" width="0.0147%" height="15" fill="rgb(252,70,29)" fg:x="13306" fg:w="2"/><text x="97.8944%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="97.6591%" y="773" width="0.0147%" height="15" fill="rgb(232,127,12)" fg:x="13308" fg:w="2"/><text x="97.9091%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="97.6737%" y="773" width="0.0147%" height="15" fill="rgb(211,180,21)" fg:x="13310" fg:w="2"/><text x="97.9237%" y="783.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (191 samples, 1.40%)</title><rect x="96.3015%" y="853" width="1.4016%" height="15" fill="rgb(229,72,13)" fg:x="13123" fg:w="191"/><text x="96.5515%" y="863.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize (174 samples, 1.28%)</title><rect x="96.4262%" y="837" width="1.2769%" height="15" fill="rgb(240,211,49)" fg:x="13140" fg:w="174"/><text x="96.6762%" y="847.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_with_location (160 samples, 1.17%)</title><rect x="96.5289%" y="821" width="1.1741%" height="15" fill="rgb(219,149,40)" fg:x="13154" fg:w="160"/><text x="96.7789%" y="831.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (148 samples, 1.09%)</title><rect x="96.6170%" y="805" width="1.0861%" height="15" fill="rgb(210,127,46)" fg:x="13166" fg:w="148"/><text x="96.8670%" y="815.50"></text></g><g><title>sqlparser::tokenizer::Tokenizer::tokenize_word (35 samples, 0.26%)</title><rect x="97.4462%" y="789" width="0.2568%" height="15" fill="rgb(220,106,7)" fg:x="13279" fg:w="35"/><text x="97.6962%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="97.6884%" y="773" width="0.0147%" height="15" fill="rgb(249,31,22)" fg:x="13312" fg:w="2"/><text x="97.9384%" y="783.50"></text></g><g><title>datafusion_common::column::Column::normalize_with_schemas (2 samples, 0.01%)</title><rect x="97.7031%" y="853" width="0.0147%" height="15" fill="rgb(253,1,49)" fg:x="13314" fg:w="2"/><text x="97.9531%" y="863.50"></text></g><g><title>&lt;datafusion_common::column::Column as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.01%)</title><rect x="97.7031%" y="837" width="0.0147%" height="15" fill="rgb(227,144,33)" fg:x="13314" fg:w="2"/><text x="97.9531%" y="847.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanPredicateBuilder::must (209 samples, 1.53%)</title><rect x="96.2501%" y="869" width="1.5337%" height="15" fill="rgb(249,163,44)" fg:x="13116" fg:w="209"/><text x="96.5001%" y="879.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_and (9 samples, 0.07%)</title><rect x="97.7178%" y="853" width="0.0660%" height="15" fill="rgb(234,15,39)" fg:x="13316" fg:w="9"/><text x="97.9678%" y="863.50"></text></g><g><title>datafusion_expr::expr_fn::boolean_query_expr (9 samples, 0.07%)</title><rect x="97.7178%" y="837" width="0.0660%" height="15" fill="rgb(207,66,16)" fg:x="13316" fg:w="9"/><text x="97.9678%" y="847.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="97.7691%" y="821" width="0.0147%" height="15" fill="rgb(233,112,24)" fg:x="13323" fg:w="2"/><text x="98.0191%" y="831.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::collect (2 samples, 0.01%)</title><rect x="97.7838%" y="869" width="0.0147%" height="15" fill="rgb(230,90,22)" fg:x="13325" fg:w="2"/><text x="98.0338%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="97.7838%" y="853" width="0.0147%" height="15" fill="rgb(229,61,13)" fg:x="13325" fg:w="2"/><text x="98.0338%" y="863.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::create_physical_plan (4 samples, 0.03%)</title><rect x="97.7985%" y="869" width="0.0294%" height="15" fill="rgb(225,57,24)" fg:x="13327" fg:w="4"/><text x="98.0485%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.03%)</title><rect x="97.7985%" y="853" width="0.0294%" height="15" fill="rgb(208,169,48)" fg:x="13327" fg:w="4"/><text x="98.0485%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="97.8645%" y="661" width="0.0147%" height="15" fill="rgb(244,218,51)" fg:x="13336" fg:w="2"/><text x="98.1145%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="97.8645%" y="837" width="0.0220%" height="15" fill="rgb(214,148,10)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="97.8645%" y="821" width="0.0220%" height="15" fill="rgb(225,174,27)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="97.8645%" y="805" width="0.0220%" height="15" fill="rgb(230,96,26)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="97.8645%" y="789" width="0.0220%" height="15" fill="rgb(232,10,30)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="97.8645%" y="773" width="0.0220%" height="15" fill="rgb(222,8,50)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="97.8645%" y="757" width="0.0220%" height="15" fill="rgb(213,81,27)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="97.8645%" y="741" width="0.0220%" height="15" fill="rgb(245,50,10)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="97.8645%" y="725" width="0.0220%" height="15" fill="rgb(216,100,18)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="97.8645%" y="709" width="0.0220%" height="15" fill="rgb(236,147,54)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="97.8645%" y="693" width="0.0220%" height="15" fill="rgb(205,143,26)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="703.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="97.8645%" y="677" width="0.0220%" height="15" fill="rgb(236,26,9)" fg:x="13336" fg:w="3"/><text x="98.1145%" y="687.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="97.9379%" y="645" width="0.0294%" height="15" fill="rgb(221,165,53)" fg:x="13346" fg:w="4"/><text x="98.1879%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="97.9232%" y="821" width="0.0660%" height="15" fill="rgb(214,110,17)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.07%)</title><rect x="97.9232%" y="805" width="0.0660%" height="15" fill="rgb(237,197,12)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.07%)</title><rect x="97.9232%" y="789" width="0.0660%" height="15" fill="rgb(205,84,17)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.07%)</title><rect x="97.9232%" y="773" width="0.0660%" height="15" fill="rgb(237,18,45)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.07%)</title><rect x="97.9232%" y="757" width="0.0660%" height="15" fill="rgb(221,87,14)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.07%)</title><rect x="97.9232%" y="741" width="0.0660%" height="15" fill="rgb(238,186,15)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.07%)</title><rect x="97.9232%" y="725" width="0.0660%" height="15" fill="rgb(208,115,11)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.07%)</title><rect x="97.9232%" y="709" width="0.0660%" height="15" fill="rgb(254,175,0)" fg:x="13344" fg:w="9"/><text x="98.1732%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.05%)</title><rect x="97.9379%" y="693" width="0.0514%" height="15" fill="rgb(227,24,42)" fg:x="13346" fg:w="7"/><text x="98.1879%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.05%)</title><rect x="97.9379%" y="677" width="0.0514%" height="15" fill="rgb(223,211,37)" fg:x="13346" fg:w="7"/><text x="98.1879%" y="687.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.05%)</title><rect x="97.9379%" y="661" width="0.0514%" height="15" fill="rgb(235,49,27)" fg:x="13346" fg:w="7"/><text x="98.1879%" y="671.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="97.9673%" y="645" width="0.0220%" height="15" fill="rgb(254,97,51)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="97.9673%" y="629" width="0.0220%" height="15" fill="rgb(249,51,40)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="639.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="613" width="0.0220%" height="15" fill="rgb(210,128,45)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="597" width="0.0220%" height="15" fill="rgb(224,137,50)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="581" width="0.0220%" height="15" fill="rgb(242,15,9)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="565" width="0.0220%" height="15" fill="rgb(233,187,41)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="549" width="0.0220%" height="15" fill="rgb(227,2,29)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="533" width="0.0220%" height="15" fill="rgb(222,70,3)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="517" width="0.0220%" height="15" fill="rgb(213,11,42)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="501" width="0.0220%" height="15" fill="rgb(225,150,9)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="485" width="0.0220%" height="15" fill="rgb(230,162,45)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="469" width="0.0220%" height="15" fill="rgb(222,14,52)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (3 samples, 0.02%)</title><rect x="97.9673%" y="453" width="0.0220%" height="15" fill="rgb(254,198,14)" fg:x="13350" fg:w="3"/><text x="98.2173%" y="463.50"></text></g><g><title>fastfull_search::query::boolean_query::BooleanQuery::task_ctx (22 samples, 0.16%)</title><rect x="97.8352%" y="869" width="0.1614%" height="15" fill="rgb(220,217,30)" fg:x="13332" fg:w="22"/><text x="98.0852%" y="879.50"></text></g><g><title>&lt;datafusion::execution::context::TaskContext as core::convert::From&lt;&amp;datafusion::execution::context::SessionState&gt;&gt;::from (22 samples, 0.16%)</title><rect x="97.8352%" y="853" width="0.1614%" height="15" fill="rgb(215,146,41)" fg:x="13332" fg:w="22"/><text x="98.0852%" y="863.50"></text></g><g><title>&lt;datafusion::execution::context::SessionConfig as core::clone::Clone&gt;::clone (15 samples, 0.11%)</title><rect x="97.8865%" y="837" width="0.1101%" height="15" fill="rgb(217,27,36)" fg:x="13339" fg:w="15"/><text x="98.1365%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (2 samples, 0.01%)</title><rect x="98.0186%" y="805" width="0.0147%" height="15" fill="rgb(219,218,39)" fg:x="13357" fg:w="2"/><text x="98.2686%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="98.0186%" y="789" width="0.0147%" height="15" fill="rgb(219,4,42)" fg:x="13357" fg:w="2"/><text x="98.2686%" y="799.50"></text></g><g><title>&lt;std::sync::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="98.0186%" y="773" width="0.0147%" height="15" fill="rgb(249,119,36)" fg:x="13357" fg:w="2"/><text x="98.2686%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.01%)</title><rect x="98.0186%" y="757" width="0.0147%" height="15" fill="rgb(209,23,33)" fg:x="13357" fg:w="2"/><text x="98.2686%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (185 samples, 1.36%)</title><rect x="98.0700%" y="613" width="1.3576%" height="15" fill="rgb(211,10,0)" fg:x="13364" fg:w="185"/><text x="98.3200%" y="623.50"></text></g><g><title>[[kernel.kallsyms]] (181 samples, 1.33%)</title><rect x="98.0994%" y="597" width="1.3282%" height="15" fill="rgb(208,99,37)" fg:x="13368" fg:w="181"/><text x="98.3494%" y="607.50"></text></g><g><title>[[kernel.kallsyms]] (179 samples, 1.31%)</title><rect x="98.1140%" y="581" width="1.3136%" height="15" fill="rgb(213,132,31)" fg:x="13370" fg:w="179"/><text x="98.3640%" y="591.50"></text></g><g><title>[[kernel.kallsyms]] (177 samples, 1.30%)</title><rect x="98.1287%" y="565" width="1.2989%" height="15" fill="rgb(243,129,40)" fg:x="13372" fg:w="177"/><text x="98.3787%" y="575.50"></text></g><g><title>[[kernel.kallsyms]] (174 samples, 1.28%)</title><rect x="98.1507%" y="549" width="1.2769%" height="15" fill="rgb(210,66,33)" fg:x="13375" fg:w="174"/><text x="98.4007%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (168 samples, 1.23%)</title><rect x="98.1948%" y="533" width="1.2328%" height="15" fill="rgb(209,189,4)" fg:x="13381" fg:w="168"/><text x="98.4448%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (152 samples, 1.12%)</title><rect x="98.3122%" y="517" width="1.1154%" height="15" fill="rgb(214,107,37)" fg:x="13397" fg:w="152"/><text x="98.5622%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (135 samples, 0.99%)</title><rect x="98.4369%" y="501" width="0.9907%" height="15" fill="rgb(245,88,54)" fg:x="13414" fg:w="135"/><text x="98.6869%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (113 samples, 0.83%)</title><rect x="98.5984%" y="485" width="0.8292%" height="15" fill="rgb(205,146,20)" fg:x="13436" fg:w="113"/><text x="98.8484%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (98 samples, 0.72%)</title><rect x="98.7084%" y="469" width="0.7192%" height="15" fill="rgb(220,161,25)" fg:x="13451" fg:w="98"/><text x="98.9584%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (80 samples, 0.59%)</title><rect x="98.8405%" y="453" width="0.5871%" height="15" fill="rgb(215,152,15)" fg:x="13469" fg:w="80"/><text x="99.0905%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (77 samples, 0.57%)</title><rect x="98.8626%" y="437" width="0.5651%" height="15" fill="rgb(233,192,44)" fg:x="13472" fg:w="77"/><text x="99.1126%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (76 samples, 0.56%)</title><rect x="98.8699%" y="421" width="0.5577%" height="15" fill="rgb(240,170,46)" fg:x="13473" fg:w="76"/><text x="99.1199%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (53 samples, 0.39%)</title><rect x="99.0387%" y="405" width="0.3889%" height="15" fill="rgb(207,104,33)" fg:x="13496" fg:w="53"/><text x="99.2887%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (35 samples, 0.26%)</title><rect x="99.1708%" y="389" width="0.2568%" height="15" fill="rgb(219,21,39)" fg:x="13514" fg:w="35"/><text x="99.4208%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (31 samples, 0.23%)</title><rect x="99.2001%" y="373" width="0.2275%" height="15" fill="rgb(214,133,29)" fg:x="13518" fg:w="31"/><text x="99.4501%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.11%)</title><rect x="99.3175%" y="357" width="0.1101%" height="15" fill="rgb(226,93,6)" fg:x="13534" fg:w="15"/><text x="99.5675%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (15 samples, 0.11%)</title><rect x="99.3175%" y="341" width="0.1101%" height="15" fill="rgb(252,222,34)" fg:x="13534" fg:w="15"/><text x="99.5675%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (11 samples, 0.08%)</title><rect x="99.3469%" y="325" width="0.0807%" height="15" fill="rgb(252,92,48)" fg:x="13538" fg:w="11"/><text x="99.5969%" y="335.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (188 samples, 1.38%)</title><rect x="98.0627%" y="709" width="1.3796%" height="15" fill="rgb(245,223,24)" fg:x="13363" fg:w="188"/><text x="98.3127%" y="719.50"></text></g><g><title>std::io::Write::write_all (188 samples, 1.38%)</title><rect x="98.0627%" y="693" width="1.3796%" height="15" fill="rgb(205,176,3)" fg:x="13363" fg:w="188"/><text x="98.3127%" y="703.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (188 samples, 1.38%)</title><rect x="98.0627%" y="677" width="1.3796%" height="15" fill="rgb(235,151,15)" fg:x="13363" fg:w="188"/><text x="98.3127%" y="687.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (188 samples, 1.38%)</title><rect x="98.0627%" y="661" width="1.3796%" height="15" fill="rgb(237,209,11)" fg:x="13363" fg:w="188"/><text x="98.3127%" y="671.50"></text></g><g><title>__libc_write (188 samples, 1.38%)</title><rect x="98.0627%" y="645" width="1.3796%" height="15" fill="rgb(243,227,24)" fg:x="13363" fg:w="188"/><text x="98.3127%" y="655.50"></text></g><g><title>__libc_write (188 samples, 1.38%)</title><rect x="98.0627%" y="629" width="1.3796%" height="15" fill="rgb(239,193,16)" fg:x="13363" fg:w="188"/><text x="98.3127%" y="639.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.01%)</title><rect x="99.4276%" y="613" width="0.0147%" height="15" fill="rgb(231,27,9)" fg:x="13549" fg:w="2"/><text x="99.6776%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="99.4423%" y="709" width="0.0147%" height="15" fill="rgb(219,169,10)" fg:x="13551" fg:w="2"/><text x="99.6923%" y="719.50"></text></g><g><title>core::fmt::write (195 samples, 1.43%)</title><rect x="98.0480%" y="789" width="1.4310%" height="15" fill="rgb(244,229,43)" fg:x="13361" fg:w="195"/><text x="98.2980%" y="799.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (194 samples, 1.42%)</title><rect x="98.0553%" y="773" width="1.4236%" height="15" fill="rgb(254,38,20)" fg:x="13362" fg:w="194"/><text x="98.3053%" y="783.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (193 samples, 1.42%)</title><rect x="98.0627%" y="757" width="1.4163%" height="15" fill="rgb(250,47,30)" fg:x="13363" fg:w="193"/><text x="98.3127%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (193 samples, 1.42%)</title><rect x="98.0627%" y="741" width="1.4163%" height="15" fill="rgb(224,124,36)" fg:x="13363" fg:w="193"/><text x="98.3127%" y="751.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (193 samples, 1.42%)</title><rect x="98.0627%" y="725" width="1.4163%" height="15" fill="rgb(246,68,51)" fg:x="13363" fg:w="193"/><text x="98.3127%" y="735.50"></text></g><g><title>std::sys_common::memchr::memrchr (3 samples, 0.02%)</title><rect x="99.4570%" y="709" width="0.0220%" height="15" fill="rgb(253,43,49)" fg:x="13553" fg:w="3"/><text x="99.7070%" y="719.50"></text></g><g><title>std::sys::unix::memchr::memrchr (3 samples, 0.02%)</title><rect x="99.4570%" y="693" width="0.0220%" height="15" fill="rgb(219,54,36)" fg:x="13553" fg:w="3"/><text x="99.7070%" y="703.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (3 samples, 0.02%)</title><rect x="99.4570%" y="677" width="0.0220%" height="15" fill="rgb(227,133,34)" fg:x="13553" fg:w="3"/><text x="99.7070%" y="687.50"></text></g><g><title>__memrchr_avx2 (2 samples, 0.01%)</title><rect x="99.4643%" y="661" width="0.0147%" height="15" fill="rgb(247,227,15)" fg:x="13554" fg:w="2"/><text x="99.7143%" y="671.50"></text></g><g><title>std::io::Write::write_fmt (198 samples, 1.45%)</title><rect x="98.0333%" y="805" width="1.4530%" height="15" fill="rgb(229,96,14)" fg:x="13359" fg:w="198"/><text x="98.2833%" y="815.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (202 samples, 1.48%)</title><rect x="98.0113%" y="837" width="1.4824%" height="15" fill="rgb(220,79,17)" fg:x="13356" fg:w="202"/><text x="98.2613%" y="847.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (202 samples, 1.48%)</title><rect x="98.0113%" y="821" width="1.4824%" height="15" fill="rgb(205,131,53)" fg:x="13356" fg:w="202"/><text x="98.2613%" y="831.50"></text></g><g><title>std::io::stdio::_print (205 samples, 1.50%)</title><rect x="97.9966%" y="869" width="1.5044%" height="15" fill="rgb(209,50,29)" fg:x="13354" fg:w="205"/><text x="98.2466%" y="879.50"></text></g><g><title>std::io::stdio::print_to (203 samples, 1.49%)</title><rect x="98.0113%" y="853" width="1.4897%" height="15" fill="rgb(245,86,46)" fg:x="13356" fg:w="203"/><text x="98.2613%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.01%)</title><rect x="99.5010%" y="869" width="0.0147%" height="15" fill="rgb(235,66,46)" fg:x="13559" fg:w="2"/><text x="99.7510%" y="879.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5,520 samples, 40.51%)</title><rect x="59.0152%" y="917" width="40.5078%" height="15" fill="rgb(232,148,31)" fg:x="8042" fg:w="5520"/><text x="59.2652%" y="927.50">tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>do_query::main::_{{closure}} (5,520 samples, 40.51%)</title><rect x="59.0152%" y="901" width="40.5078%" height="15" fill="rgb(217,149,8)" fg:x="8042" fg:w="5520"/><text x="59.2652%" y="911.50">do_query::main::_{{closure}}</text></g><g><title>do_query::main_inner::{{closure}} (5,520 samples, 40.51%)</title><rect x="59.0152%" y="885" width="40.5078%" height="15" fill="rgb(209,183,11)" fg:x="8042" fg:w="5520"/><text x="59.2652%" y="895.50">do_query::main_inner::{{closure}}</text></g><g><title>[unknown] (11,710 samples, 85.93%)</title><rect x="13.6274%" y="933" width="85.9323%" height="15" fill="rgb(208,55,20)" fg:x="1857" fg:w="11710"/><text x="13.8774%" y="943.50">[unknown]</text></g><g><title>unlink_chunk.isra.0 (5 samples, 0.04%)</title><rect x="99.5230%" y="917" width="0.0367%" height="15" fill="rgb(218,39,14)" fg:x="13562" fg:w="5"/><text x="99.7730%" y="927.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="99.5597%" y="933" width="0.0514%" height="15" fill="rgb(216,169,33)" fg:x="13567" fg:w="7"/><text x="99.8097%" y="943.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="99.6111%" y="933" width="0.0220%" height="15" fill="rgb(233,80,24)" fg:x="13574" fg:w="3"/><text x="99.8611%" y="943.50"></text></g><g><title>__calloc (2 samples, 0.01%)</title><rect x="99.6331%" y="933" width="0.0147%" height="15" fill="rgb(213,179,31)" fg:x="13577" fg:w="2"/><text x="99.8831%" y="943.50"></text></g><g><title>__rdl_alloc_zeroed (2 samples, 0.01%)</title><rect x="99.6624%" y="933" width="0.0147%" height="15" fill="rgb(209,19,5)" fg:x="13581" fg:w="2"/><text x="99.9124%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (2 samples, 0.01%)</title><rect x="99.6624%" y="917" width="0.0147%" height="15" fill="rgb(219,18,35)" fg:x="13581" fg:w="2"/><text x="99.9124%" y="927.50"></text></g><g><title>_int_free (10 samples, 0.07%)</title><rect x="99.6771%" y="933" width="0.0734%" height="15" fill="rgb(209,169,16)" fg:x="13583" fg:w="10"/><text x="99.9271%" y="943.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="99.7505%" y="933" width="0.0220%" height="15" fill="rgb(245,90,51)" fg:x="13593" fg:w="3"/><text x="100.0005%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="99.7798%" y="933" width="0.0294%" height="15" fill="rgb(220,99,45)" fg:x="13597" fg:w="4"/><text x="100.0298%" y="943.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.01%)</title><rect x="99.8165%" y="933" width="0.0147%" height="15" fill="rgb(249,89,25)" fg:x="13602" fg:w="2"/><text x="100.0665%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="99.8312%" y="933" width="0.0220%" height="15" fill="rgb(239,193,0)" fg:x="13604" fg:w="3"/><text x="100.0812%" y="943.50"></text></g><g><title>arrow_array::record_batch::RecordBatch::try_new_impl (3 samples, 0.02%)</title><rect x="99.8752%" y="933" width="0.0220%" height="15" fill="rgb(231,126,1)" fg:x="13610" fg:w="3"/><text x="100.1252%" y="943.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (2 samples, 0.01%)</title><rect x="99.9119%" y="933" width="0.0147%" height="15" fill="rgb(243,166,3)" fg:x="13615" fg:w="2"/><text x="100.1619%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastfull_search::datasources::posting_table::PostingExec&gt; (2 samples, 0.01%)</title><rect x="99.9340%" y="933" width="0.0147%" height="15" fill="rgb(223,22,34)" fg:x="13618" fg:w="2"/><text x="100.1840%" y="943.50"></text></g><g><title>all (13,627 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(251,52,51)" fg:x="0" fg:w="13627"/><text x="0.2500%" y="975.50"></text></g><g><title>do_query (13,627 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(221,165,28)" fg:x="0" fg:w="13627"/><text x="0.2500%" y="959.50">do_query</text></g><g><title>sqlparser::tokenizer::Tokenizer::next_token (5 samples, 0.04%)</title><rect x="99.9633%" y="933" width="0.0367%" height="15" fill="rgb(218,121,47)" fg:x="13622" fg:w="5"/><text x="100.2133%" y="943.50"></text></g></svg></svg>